{"version":3,"file":"desktop.umd.min.js","sources":["../node_modules/@glue42/core/dist/core.es.js","../src/activity/entities/activityEntity.ts","../src/activity/helpers/util.ts","../src/activity/entities/activityType.ts","../src/activity/entities/windowType.ts","../src/activity/contracts/entityEvent.ts","../src/activity/core/activityAGM.ts","../src/activity/entities/attachedActivityDescriptor.ts","../src/activity/helpers/promiseExtensions.ts","../src/activity/entities/activity.ts","../src/activity/helpers/logger.ts","../src/activity/entities/activityWindow.ts","../src/activity/contracts/activityStatus.ts","../src/activity/bridges/gw3Bridge.ts","../src/activity/helpers/readyMarker.ts","../src/activity/bridges/hcBridge.ts","../src/activity/API/activityMyAPI.ts","../src/activity/helpers/entityObservableCollection.ts","../src/activity/core/activityManager.ts","../src/activity/API/activityManagementAPI.ts","../src/activity/API/activityAPI.ts","../src/activity/activityModule.ts","../node_modules/callback-registry/lib/index.js","../src/app-manager/helper.ts","../src/app-manager/application.ts","../src/app-manager/const/agm-names.ts","../src/app-manager/instance.ts","../src/app-manager/app-manager.ts","../src/app-manager/entitlements.ts","../src/app-manager/main.ts","../src/app-manager/snapshot.ts","../src/app-manager/data-subscription.ts","../src/windows/store.ts","../src/utils.ts","../src/windows/window.ts","../src/windows/environment/gd/executor.ts","../src/windows/environment/helpers.ts","../src/windows/environment/gd/gd.ts","../src/windows/environment/hc/executor.ts","../src/windows/environment/hc/hc.ts","../src/windows/group.ts","../src/windows/groups.ts","../src/windows/main.ts","../src/windows/environment/detector.ts","../src/layouts/store.ts","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/alphabet.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/shortid/lib/encode.js","../node_modules/shortid/lib/decode.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/index.js","../src/layouts/contextProvider.ts","../src/layouts/transform.ts","../src/layouts/layout.ts","../src/layouts/layouts.ts","../src/layouts/stream/acsStream.ts","../src/layouts/main.ts","../src/displays/displayManager.ts","../src/channels/contexts.ts","../src/channels/channels.ts","../src/channels/main.ts","../src/channels/agm.ts","../src/hotkeys/hotkeys.ts","../src/intents/main.ts","../src/config.ts","../src/glue.ts","../src/hotkeys/main.ts","../src/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\n\nvar MetricTypes = {\r\n    DEFAULT: 0,\r\n    STRING: 1,\r\n    NUMBER: 2,\r\n    COUNT: 3,\r\n    RATE: 4,\r\n    STATISTICS: 6,\r\n    TIMESTAMP: 7,\r\n    ADDRESS: 8,\r\n    TIMESPAN: 10,\r\n    OBJECT: 11\r\n};\n\nfunction getMetricTypeByValue(metric) {\r\n    if ((metric.value && metric.value.constructor === Date) || metric.type === MetricTypes.TIMESPAN || metric.type === MetricTypes.TIMESTAMP) {\r\n        return \"timestamp\";\r\n    }\r\n    else if (typeof metric.value === \"number\") {\r\n        return \"number\";\r\n    }\r\n    else if (typeof metric.value === \"string\" || metric.type === MetricTypes.STRING || metric.type === MetricTypes.RATE) {\r\n        return \"string\";\r\n    }\r\n    else if (typeof metric.value === \"object\") {\r\n        return \"object\";\r\n    }\r\n}\r\nfunction getTypeByValue(value) {\r\n    if (value.constructor === Date) {\r\n        return \"timestamp\";\r\n    }\r\n    else if (typeof value === \"number\") {\r\n        return \"number\";\r\n    }\r\n    else if (typeof value === \"string\") {\r\n        return \"string\";\r\n    }\r\n    else if (typeof value === \"object\") {\r\n        return \"object\";\r\n    }\r\n    else {\r\n        return \"string\";\r\n    }\r\n}\r\nfunction serializeMetric(metric) {\r\n    var serializedMetrics = {};\r\n    var type = getMetricTypeByValue(metric);\r\n    if (type === \"object\") {\r\n        var values = Object.keys(metric.value).reduce(function (memo, key) {\r\n            var innerType = getTypeByValue(metric.value[key]);\r\n            if (innerType === \"object\") {\r\n                var composite = defineNestedComposite(metric.value[key]);\r\n                memo[key] = {\r\n                    type: \"object\",\r\n                    description: \"\",\r\n                    context: {},\r\n                    composite: composite,\r\n                };\r\n            }\r\n            else {\r\n                memo[key] = {\r\n                    type: innerType,\r\n                    description: \"\",\r\n                    context: {},\r\n                };\r\n            }\r\n            return memo;\r\n        }, {});\r\n        serializedMetrics.composite = values;\r\n    }\r\n    serializedMetrics.name = normalizeMetricName(metric.path.join(\"/\") + \"/\" + metric.name);\r\n    serializedMetrics.type = type;\r\n    serializedMetrics.description = metric.description;\r\n    serializedMetrics.context = {};\r\n    return serializedMetrics;\r\n}\r\nfunction defineNestedComposite(values) {\r\n    return Object.keys(values).reduce(function (memo, key) {\r\n        var type = getTypeByValue(values[key]);\r\n        if (type === \"object\") {\r\n            memo[key] = {\r\n                type: \"object\",\r\n                description: \"\",\r\n                context: {},\r\n                composite: defineNestedComposite(values[key]),\r\n            };\r\n        }\r\n        else {\r\n            memo[key] = {\r\n                type: type,\r\n                description: \"\",\r\n                context: {},\r\n            };\r\n        }\r\n        return memo;\r\n    }, {});\r\n}\r\nfunction normalizeMetricName(name) {\r\n    if (typeof name !== \"undefined\" && name.length > 0 && name[0] !== \"/\") {\r\n        return \"/\" + name;\r\n    }\r\n    else {\r\n        return name;\r\n    }\r\n}\r\nfunction getMetricValueByType(metric) {\r\n    var type = getMetricTypeByValue(metric);\r\n    if (type === \"timestamp\") {\r\n        return Date.now();\r\n    }\r\n    else {\r\n        return publishNestedComposite(metric.value);\r\n    }\r\n}\r\nfunction publishNestedComposite(values) {\r\n    if (typeof values !== \"object\") {\r\n        return values;\r\n    }\r\n    return Object.keys(values).reduce(function (memo, key) {\r\n        var value = values[key];\r\n        if (typeof value === \"object\" && value.constructor !== Date) {\r\n            memo[key] = publishNestedComposite(value);\r\n        }\r\n        else if (value.constructor === Date) {\r\n            memo[key] = new Date(value).getTime();\r\n        }\r\n        else if (value.constructor === Boolean) {\r\n            memo[key] = value.toString();\r\n        }\r\n        else {\r\n            memo[key] = value;\r\n        }\r\n        return memo;\r\n    }, {});\r\n}\r\nfunction flatten(arr) {\r\n    return arr.reduce(function (flat, toFlatten) {\r\n        return flat.concat(Array.isArray(toFlatten) ? flatten(toFlatten) : toFlatten);\r\n    }, []);\r\n}\r\nfunction getHighestState(arr) {\r\n    return arr.sort(function (a, b) {\r\n        return b.state - a.state;\r\n    })[0];\r\n}\r\nfunction aggregateDescription(arr) {\r\n    var msg = \"\";\r\n    arr.forEach(function (m, idx, a) {\r\n        var path = m.path.join(\".\");\r\n        if (idx === a.length - 1) {\r\n            msg += path + \".\" + m.name + \": \" + m.description;\r\n        }\r\n        else {\r\n            msg += path + \".\" + m.name + \": \" + m.description + \",\";\r\n        }\r\n    });\r\n    if (msg.length > 100) {\r\n        return msg.slice(0, 100) + \"...\";\r\n    }\r\n    else {\r\n        return msg;\r\n    }\r\n}\r\nfunction composeMsgForRootStateMetric(system) {\r\n    var aggregatedState = system.root.getAggregateState();\r\n    var merged = flatten(aggregatedState);\r\n    var highestState = getHighestState(merged);\r\n    var aggregateDesc = aggregateDescription(merged);\r\n    return {\r\n        description: aggregateDesc,\r\n        value: highestState.state,\r\n    };\r\n}\n\nfunction gw3 (connection, config) {\r\n    if (!connection || typeof connection !== \"object\") {\r\n        throw new Error(\"Connection is required parameter\");\r\n    }\r\n    var joinPromise;\r\n    var session;\r\n    var init = function (repo) {\r\n        var resolveReadyPromise;\r\n        joinPromise = new Promise(function (resolve) {\r\n            resolveReadyPromise = resolve;\r\n        });\r\n        session = connection.domain(\"metrics\", config.logger);\r\n        session.onJoined(function (reconnect) {\r\n            if (!reconnect) {\r\n                resolveReadyPromise();\r\n                resolveReadyPromise = undefined;\r\n            }\r\n            var rootStateMetric = {\r\n                name: \"/State\",\r\n                type: \"object\",\r\n                composite: {\r\n                    Description: {\r\n                        type: \"string\",\r\n                        description: \"\",\r\n                    },\r\n                    Value: {\r\n                        type: \"number\",\r\n                        description: \"\",\r\n                    },\r\n                },\r\n                description: \"System state\",\r\n                context: {},\r\n            };\r\n            var defineRootMetricsMsg = {\r\n                type: \"define\",\r\n                metrics: [rootStateMetric],\r\n            };\r\n            session.send(defineRootMetricsMsg);\r\n            if (reconnect) {\r\n                replayRepo(repo);\r\n            }\r\n        });\r\n        session.join(config.identity);\r\n    };\r\n    var replayRepo = function (repo) {\r\n        replaySystem(repo.root);\r\n    };\r\n    var replaySystem = function (system) {\r\n        createSystem(system);\r\n        system.metrics.forEach(function (m) {\r\n            createMetric(m);\r\n        });\r\n        system.subSystems.forEach(function (ss) {\r\n            replaySystem(ss);\r\n        });\r\n    };\r\n    var createSystem = function (system) {\r\n        if (system.parent === undefined) {\r\n            return;\r\n        }\r\n        joinPromise.then(function () {\r\n            var metric = {\r\n                name: normalizeMetricName(system.path.join(\"/\") + \"/\" + system.name + \"/State\"),\r\n                type: \"object\",\r\n                composite: {\r\n                    Description: {\r\n                        type: \"string\",\r\n                        description: \"\",\r\n                    },\r\n                    Value: {\r\n                        type: \"number\",\r\n                        description: \"\",\r\n                    },\r\n                },\r\n                description: \"System state\",\r\n                context: {},\r\n            };\r\n            var createMetricsMsg = {\r\n                type: \"define\",\r\n                metrics: [metric],\r\n            };\r\n            session.send(createMetricsMsg);\r\n        });\r\n    };\r\n    var updateSystem = function (system, state) {\r\n        joinPromise.then(function () {\r\n            var shadowedUpdateMetric = {\r\n                type: \"publish\",\r\n                values: [{\r\n                        name: normalizeMetricName(system.path.join(\"/\") + \"/\" + system.name + \"/State\"),\r\n                        value: {\r\n                            Description: state.description,\r\n                            Value: state.state,\r\n                        },\r\n                        timestamp: Date.now(),\r\n                    }],\r\n            };\r\n            session.send(shadowedUpdateMetric);\r\n            var stateObj = composeMsgForRootStateMetric(system);\r\n            var rootMetric = {\r\n                type: \"publish\",\r\n                peer_id: connection.peerId,\r\n                values: [{\r\n                        name: \"/State\",\r\n                        value: {\r\n                            Description: stateObj.description,\r\n                            Value: stateObj.value,\r\n                        },\r\n                        timestamp: Date.now(),\r\n                    }],\r\n            };\r\n            session.send(rootMetric);\r\n        });\r\n    };\r\n    var createMetric = function (metric) {\r\n        joinPromise.then(function () {\r\n            var m = serializeMetric(metric);\r\n            var createMetricsMsg = {\r\n                type: \"define\",\r\n                metrics: [m],\r\n            };\r\n            session.send(createMetricsMsg);\r\n            if (typeof metric.value !== \"undefined\") {\r\n                updateMetric(metric);\r\n            }\r\n        });\r\n    };\r\n    var updateMetric = function (metric) {\r\n        var metricClone = __assign({}, metric);\r\n        if (typeof metric.value === \"object\" && metric.value !== null) {\r\n            metricClone.value = __assign({}, metric.value);\r\n        }\r\n        joinPromise.then(function () {\r\n            var value = getMetricValueByType(metricClone);\r\n            var publishMetricsMsg = {\r\n                type: \"publish\",\r\n                values: [{\r\n                        name: normalizeMetricName(metricClone.path.join(\"/\") + \"/\" + metricClone.name),\r\n                        value: value,\r\n                        timestamp: Date.now(),\r\n                    }],\r\n            };\r\n            session.send(publishMetricsMsg);\r\n        });\r\n    };\r\n    return {\r\n        init: init,\r\n        createSystem: createSystem,\r\n        updateSystem: updateSystem,\r\n        createMetric: createMetric,\r\n        updateMetric: updateMetric,\r\n    };\r\n}\n\nfunction metricToMessage(metric) {\r\n    var definition = getMetricDefinition(metric.name, metric.value, metric.path, metric.type, metric.description, metric.period, metric.resolution, metric.conflation);\r\n    function getMetricDefinition(name, value, path, type, description, period, resolution, conflation) {\r\n        var _definition = {\r\n            name: name,\r\n            description: description,\r\n            type: type ? type : getTypeFromValue(value),\r\n            path: path,\r\n            resolution: resolution,\r\n            period: period,\r\n            conflation: conflation,\r\n        };\r\n        if (_definition.type === MetricTypes.OBJECT) {\r\n            _definition.Composite = Object.keys(value).reduce(function (arr, key) {\r\n                var val = value[key];\r\n                arr.push(getMetricDefinition(key, val, path));\r\n                return arr;\r\n            }, []);\r\n        }\r\n        return _definition;\r\n    }\r\n    function serializeValue(value, _metric) {\r\n        if (value && value.constructor === Date) {\r\n            return {\r\n                value: {\r\n                    type: _valueTypes.indexOf(\"date\"),\r\n                    value: value.valueOf(),\r\n                    isArray: false,\r\n                },\r\n            };\r\n        }\r\n        if (typeof value === \"object\") {\r\n            return {\r\n                CompositeValue: Object.keys(value).reduce(function (arr, key) {\r\n                    var val = serializeValue(value[key]);\r\n                    val.InnerMetricName = key;\r\n                    arr.push(val);\r\n                    return arr;\r\n                }, []),\r\n            };\r\n        }\r\n        var valueType = _metric ? _metric.getValueType() : undefined;\r\n        valueType = valueType || _valueTypes.indexOf(typeof value);\r\n        return {\r\n            value: {\r\n                type: valueType,\r\n                value: value,\r\n                isArray: false,\r\n            },\r\n        };\r\n    }\r\n    function getTypeFromValue(value) {\r\n        var typeAsString = value.constructor === Date ? \"timestamp\" : typeof value;\r\n        switch (typeAsString) {\r\n            case \"string\":\r\n                return MetricTypes.STRING;\r\n            case \"number\":\r\n                return MetricTypes.NUMBER;\r\n            case \"timestamp\":\r\n                return MetricTypes.TIMESTAMP;\r\n            case \"object\":\r\n                return MetricTypes.OBJECT;\r\n        }\r\n        return 0;\r\n    }\r\n    var _valueTypes = [\r\n        \"boolean\",\r\n        \"int\",\r\n        \"number\",\r\n        \"long\",\r\n        \"string\",\r\n        \"date\",\r\n        \"object\",\r\n    ];\r\n    return {\r\n        id: metric.id,\r\n        instance: metric.repo.instance,\r\n        definition: definition,\r\n        value: serializeValue(metric.value, metric),\r\n    };\r\n}\n\nfunction gw1 (connection, config) {\r\n    var DEFAULT_HEARTBEAT_INTERVAL = 3000;\r\n    var heartbeatTimer;\r\n    if (!connection || typeof connection !== \"object\") {\r\n        throw new Error(\"Connection is required parameter\");\r\n    }\r\n    var _connection = connection;\r\n    var heartbeatInterval = config.heartbeatInterval || DEFAULT_HEARTBEAT_INTERVAL;\r\n    var send = function (type, message) {\r\n        _connection.send(\"metrics\", type, message);\r\n    };\r\n    function sendFull(repo) {\r\n        if (!repo.root) {\r\n            return;\r\n        }\r\n        if (repo.root.subSystems.length === 0) {\r\n            return;\r\n        }\r\n        sendFullSystem(repo.root);\r\n    }\r\n    function sendFullSystem(system) {\r\n        createSystem(system);\r\n        system.subSystems.forEach(function (sub) {\r\n            sendFullSystem(sub);\r\n        });\r\n        system.metrics.forEach(function (metric) {\r\n            createMetric(metric);\r\n        });\r\n    }\r\n    function heartbeat(repo) {\r\n        send(\"HeartbeatMetrics\", {\r\n            publishingInterval: heartbeatInterval,\r\n            instance: repo.instance,\r\n        });\r\n    }\r\n    function createSystem(system) {\r\n        if (system.parent !== undefined) {\r\n            send(\"CreateMetricSystem\", {\r\n                id: system.id,\r\n                instance: system.repo.instance,\r\n                definition: {\r\n                    name: system.name,\r\n                    description: system.description,\r\n                    path: system.path,\r\n                },\r\n            });\r\n        }\r\n    }\r\n    function updateSystem(system, state) {\r\n        send(\"UpdateMetricSystem\", {\r\n            id: system.id,\r\n            instance: system.repo.instance,\r\n            state: state,\r\n        });\r\n    }\r\n    function createMetric(metric) {\r\n        send(\"CreateMetric\", metricToMessage(metric));\r\n    }\r\n    function updateMetric(metric) {\r\n        send(\"UpdateMetric\", metricToMessage(metric));\r\n    }\r\n    function init(repo) {\r\n        heartbeat(repo);\r\n        _connection.on(\"metrics\", \"MetricsSnapshotRequest\", function (instanceInfo) {\r\n            if (instanceInfo.Instance !== repo.instance) {\r\n                return;\r\n            }\r\n            sendFull(repo);\r\n        });\r\n        _connection.disconnected(function () { return clearInterval(heartbeatTimer); });\r\n        if (typeof window !== \"undefined\" && typeof window.htmlContainer === \"undefined\") {\r\n            heartbeatTimer = setInterval(function () {\r\n                heartbeat(repo);\r\n            }, heartbeatInterval);\r\n        }\r\n    }\r\n    var me = {\r\n        createSystem: createSystem,\r\n        updateSystem: updateSystem,\r\n        createMetric: createMetric,\r\n        updateMetric: updateMetric,\r\n        init: init,\r\n    };\r\n    return me;\r\n}\n\nvar Helpers = {\r\n    validate: function (definition, parent, transport) {\r\n        if (definition === null || typeof definition !== \"object\") {\r\n            throw new Error(\"Missing definition\");\r\n        }\r\n        if (parent === null || typeof parent !== \"object\") {\r\n            throw new Error(\"Missing parent\");\r\n        }\r\n        if (transport === null || typeof transport !== \"object\") {\r\n            throw new Error(\"Missing transport\");\r\n        }\r\n    },\r\n};\n\nfunction addressMetric(definition, parent, transport, value) {\r\n    Helpers.validate(definition, parent, transport);\r\n    var _transport = transport;\r\n    var _value = value || \"\";\r\n    var _path = parent.path.slice(0);\r\n    _path.push(parent.name);\r\n    var name = definition.name;\r\n    var description = definition.description;\r\n    var period = definition.period;\r\n    var resolution = definition.resolution;\r\n    var system = parent;\r\n    var repo = parent.repo;\r\n    var conflation = definition.conflation;\r\n    var id = parent.path + \"/\" + name;\r\n    var type = MetricTypes.ADDRESS;\r\n    function update(newValue) {\r\n        _value = newValue;\r\n        _transport.updateMetric(me);\r\n    }\r\n    function getValueType() {\r\n        return undefined;\r\n    }\r\n    var me = {\r\n        name: name,\r\n        description: description,\r\n        period: period,\r\n        resolution: resolution,\r\n        system: system,\r\n        repo: repo,\r\n        id: id,\r\n        type: type,\r\n        conflation: conflation,\r\n        get value() {\r\n            return _value;\r\n        },\r\n        get path() {\r\n            return _path;\r\n        },\r\n        update: update,\r\n        getValueType: getValueType,\r\n    };\r\n    _transport.createMetric(me);\r\n    return me;\r\n}\n\nfunction countMetric(definition, parent, transport, value) {\r\n    Helpers.validate(definition, parent, transport);\r\n    var _transport = transport;\r\n    var _value = value || 0;\r\n    var _path = parent.path.slice(0);\r\n    _path.push(parent.name);\r\n    var name = definition.name;\r\n    var description = definition.description;\r\n    var period = definition.period;\r\n    var resolution = definition.resolution;\r\n    var conflation = definition.conflation;\r\n    var system = parent;\r\n    var repo = parent.repo;\r\n    var id = parent.path + \"/\" + name;\r\n    var type = MetricTypes.COUNT;\r\n    function update(newValue) {\r\n        _value = newValue;\r\n        _transport.updateMetric(me);\r\n    }\r\n    function getValueType() {\r\n        return undefined;\r\n    }\r\n    function incrementBy(num) {\r\n        update(_value + num);\r\n    }\r\n    function increment() {\r\n        incrementBy(1);\r\n    }\r\n    function decrement() {\r\n        incrementBy(-1);\r\n    }\r\n    function decrementBy(num) {\r\n        incrementBy(num * -1);\r\n    }\r\n    var me = {\r\n        name: name,\r\n        description: description,\r\n        period: period,\r\n        resolution: resolution,\r\n        system: system,\r\n        repo: repo,\r\n        id: id,\r\n        type: type,\r\n        conflation: conflation,\r\n        get path() {\r\n            return _path;\r\n        },\r\n        get value() {\r\n            return _value;\r\n        },\r\n        update: update,\r\n        getValueType: getValueType,\r\n        incrementBy: incrementBy,\r\n        increment: increment,\r\n        decrement: decrement,\r\n        decrementBy: decrementBy,\r\n    };\r\n    _transport.createMetric(me);\r\n    return me;\r\n}\n\nfunction numberMetric(definition, parent, transport, value) {\r\n    Helpers.validate(definition, parent, transport);\r\n    var _transport = transport;\r\n    var _path = parent.path.slice(0);\r\n    var _value = value || 0;\r\n    var name = definition.name;\r\n    var description = definition.description;\r\n    var period = definition.period;\r\n    var resolution = definition.resolution;\r\n    var conflation = definition.conflation;\r\n    var system = parent;\r\n    var repo = parent.repo;\r\n    var id = parent.path + \"/\" + name;\r\n    var type = MetricTypes.NUMBER;\r\n    _path.push(parent.name);\r\n    function update(newValue) {\r\n        _value = newValue;\r\n        _transport.updateMetric(me);\r\n    }\r\n    function getValueType() {\r\n        return undefined;\r\n    }\r\n    function incrementBy(num) {\r\n        update(_value + num);\r\n    }\r\n    function increment() {\r\n        incrementBy(1);\r\n    }\r\n    function decrement() {\r\n        incrementBy(-1);\r\n    }\r\n    function decrementBy(num) {\r\n        incrementBy(num * -1);\r\n    }\r\n    var me = {\r\n        name: name,\r\n        description: description,\r\n        period: period,\r\n        resolution: resolution,\r\n        system: system,\r\n        repo: repo,\r\n        id: id,\r\n        conflation: conflation,\r\n        get value() {\r\n            return _value;\r\n        },\r\n        type: type,\r\n        get path() {\r\n            return _path;\r\n        },\r\n        update: update,\r\n        getValueType: getValueType,\r\n        incrementBy: incrementBy,\r\n        increment: increment,\r\n        decrement: decrement,\r\n        decrementBy: decrementBy,\r\n    };\r\n    _transport.createMetric(me);\r\n    return me;\r\n}\n\nfunction objectMetric(definition, parent, transport, value) {\r\n    Helpers.validate(definition, parent, transport);\r\n    var _transport = transport;\r\n    var _value = value || \"\";\r\n    var _path = parent.path.slice(0);\r\n    _path.push(parent.name);\r\n    var name = definition.name;\r\n    var description = definition.description;\r\n    var period = definition.period;\r\n    var resolution = definition.resolution;\r\n    var conflation = definition.conflation;\r\n    var system = parent;\r\n    var repo = parent.repo;\r\n    var id = parent.path + \"/\" + name;\r\n    var type = MetricTypes.OBJECT;\r\n    function update(newValue) {\r\n        mergeValues(newValue);\r\n        _transport.updateMetric(me);\r\n    }\r\n    function getValueType() {\r\n        return undefined;\r\n    }\r\n    function mergeValues(values) {\r\n        return Object.keys(_value).forEach(function (k) {\r\n            if (typeof values[k] !== \"undefined\") {\r\n                _value[k] = values[k];\r\n            }\r\n        });\r\n    }\r\n    var me = {\r\n        name: name,\r\n        description: description,\r\n        period: period,\r\n        resolution: resolution,\r\n        system: system,\r\n        repo: repo,\r\n        id: id,\r\n        type: type,\r\n        conflation: conflation,\r\n        get value() {\r\n            return _value;\r\n        },\r\n        get path() {\r\n            return _path;\r\n        },\r\n        update: update,\r\n        getValueType: getValueType,\r\n    };\r\n    _transport.createMetric(me);\r\n    return me;\r\n}\n\nfunction rateMetric(definition, parent, transport, value) {\r\n    Helpers.validate(definition, parent, transport);\r\n    var _transport = transport;\r\n    var _value = value || \"\";\r\n    var _path = parent.path.slice(0);\r\n    _path.push(parent.name);\r\n    var name = definition.name;\r\n    var description = definition.description;\r\n    var period = definition.period;\r\n    var resolution = definition.resolution;\r\n    var conflation = definition.conflation;\r\n    var system = parent;\r\n    var repo = parent.repo;\r\n    var id = parent.path + \"/\" + name;\r\n    var type = MetricTypes.RATE;\r\n    function update(newValue) {\r\n        _value = newValue;\r\n        _transport.updateMetric(me);\r\n    }\r\n    function getValueType() {\r\n        return undefined;\r\n    }\r\n    var me = {\r\n        name: name,\r\n        description: description,\r\n        period: period,\r\n        resolution: resolution,\r\n        system: system,\r\n        repo: repo,\r\n        id: id,\r\n        type: type,\r\n        conflation: conflation,\r\n        get value() {\r\n            return _value;\r\n        },\r\n        get path() {\r\n            return _path;\r\n        },\r\n        update: update,\r\n        getValueType: getValueType,\r\n    };\r\n    _transport.createMetric(me);\r\n    return me;\r\n}\n\nfunction statisticsMetric(definition, parent, transport, value) {\r\n    Helpers.validate(definition, parent, transport);\r\n    var _transport = transport;\r\n    var _value = value || \"\";\r\n    var _path = parent.path.slice(0);\r\n    _path.push(parent.name);\r\n    var name = definition.name;\r\n    var description = definition.description;\r\n    var period = definition.period;\r\n    var resolution = definition.resolution;\r\n    var conflation = definition.conflation;\r\n    var system = parent;\r\n    var repo = parent.repo;\r\n    var id = parent.path + \"/\" + name;\r\n    var type = MetricTypes.STATISTICS;\r\n    function update(newValue) {\r\n        _value = newValue;\r\n        _transport.updateMetric(me);\r\n    }\r\n    function getValueType() {\r\n        return undefined;\r\n    }\r\n    var me = {\r\n        name: name,\r\n        description: description,\r\n        period: period,\r\n        resolution: resolution,\r\n        system: system,\r\n        repo: repo,\r\n        id: id,\r\n        type: type,\r\n        conflation: conflation,\r\n        get value() {\r\n            return _value;\r\n        },\r\n        get path() {\r\n            return _path;\r\n        },\r\n        update: update,\r\n        getValueType: getValueType,\r\n    };\r\n    _transport.createMetric(me);\r\n    return me;\r\n}\n\nfunction stringMetric(definition, parent, transport, value) {\r\n    Helpers.validate(definition, parent, transport);\r\n    var _transport = transport;\r\n    var _value = value || \"\";\r\n    var _path = parent.path.slice(0);\r\n    _path.push(parent.name);\r\n    var name = definition.name;\r\n    var description = definition.description;\r\n    var period = definition.period;\r\n    var resolution = definition.resolution;\r\n    var conflation = definition.conflation;\r\n    var system = parent;\r\n    var repo = parent.repo;\r\n    var id = parent.path + \"/\" + name;\r\n    var type = MetricTypes.STRING;\r\n    function update(newValue) {\r\n        _value = newValue;\r\n        _transport.updateMetric(me);\r\n    }\r\n    function getValueType() {\r\n        return undefined;\r\n    }\r\n    var me = {\r\n        name: name,\r\n        description: description,\r\n        period: period,\r\n        resolution: resolution,\r\n        system: system,\r\n        repo: repo,\r\n        id: id,\r\n        conflation: conflation,\r\n        get value() {\r\n            return _value;\r\n        },\r\n        get path() {\r\n            return _path;\r\n        },\r\n        type: type,\r\n        update: update,\r\n        getValueType: getValueType,\r\n    };\r\n    _transport.createMetric(me);\r\n    return me;\r\n}\n\nfunction timespanMetric(definition, parent, transport, value) {\r\n    Helpers.validate(definition, parent, transport);\r\n    var _transport = transport;\r\n    var _value = value || \"\";\r\n    var _path = parent.path.slice(0);\r\n    _path.push(parent.name);\r\n    var name = definition.name;\r\n    var description = definition.description;\r\n    var period = definition.period;\r\n    var resolution = definition.resolution;\r\n    var conflation = definition.conflation;\r\n    var system = parent;\r\n    var repo = parent.repo;\r\n    var id = parent.path + \"/\" + name;\r\n    var type = MetricTypes.TIMESPAN;\r\n    function update(newValue) {\r\n        _value = newValue;\r\n        _transport.updateMetric(me);\r\n    }\r\n    function start() {\r\n        update(true);\r\n    }\r\n    function stop() {\r\n        update(false);\r\n    }\r\n    function getValueType() {\r\n        return undefined;\r\n    }\r\n    var me = {\r\n        name: name,\r\n        description: description,\r\n        period: period,\r\n        resolution: resolution,\r\n        system: system,\r\n        repo: repo,\r\n        id: id,\r\n        type: type,\r\n        conflation: conflation,\r\n        get value() {\r\n            return _value;\r\n        },\r\n        get path() {\r\n            return _path;\r\n        },\r\n        update: update,\r\n        start: start,\r\n        stop: stop,\r\n        getValueType: getValueType,\r\n    };\r\n    _transport.createMetric(me);\r\n    return me;\r\n}\n\nfunction timestampMetric(definition, parent, transport, value) {\r\n    Helpers.validate(definition, parent, transport);\r\n    var _transport = transport;\r\n    var _value = value || \"\";\r\n    var _path = parent.path.slice(0);\r\n    _path.push(parent.name);\r\n    var name = definition.name;\r\n    var description = definition.description;\r\n    var period = definition.period;\r\n    var resolution = definition.resolution;\r\n    var conflation = definition.conflation;\r\n    var system = parent;\r\n    var repo = parent.repo;\r\n    var id = parent.path + \"/\" + name;\r\n    var type = MetricTypes.TIMESTAMP;\r\n    function update(newValue) {\r\n        _value = newValue;\r\n        _transport.updateMetric(me);\r\n    }\r\n    function now() {\r\n        update(new Date());\r\n    }\r\n    function getValueType() {\r\n        return undefined;\r\n    }\r\n    var me = {\r\n        name: name,\r\n        description: description,\r\n        period: period,\r\n        resolution: resolution,\r\n        system: system,\r\n        repo: repo,\r\n        id: id,\r\n        type: type,\r\n        conflation: conflation,\r\n        get value() {\r\n            return _value;\r\n        },\r\n        get path() {\r\n            return _path;\r\n        },\r\n        update: update,\r\n        now: now,\r\n        getValueType: getValueType,\r\n    };\r\n    _transport.createMetric(me);\r\n    return me;\r\n}\n\nfunction system(name, repo, protocol, parent, description) {\r\n    if (!repo) {\r\n        throw new Error(\"Repository is required\");\r\n    }\r\n    if (!protocol) {\r\n        throw new Error(\"Transport is required\");\r\n    }\r\n    var _transport = protocol;\r\n    var _name = name;\r\n    var _description = description || \"\";\r\n    var _repo = repo;\r\n    var _parent = parent;\r\n    var _path = _buildPath(parent);\r\n    var _state = {};\r\n    var id = _arrayToString(_path, \"/\") + name;\r\n    var identity = repo.identity;\r\n    var root = repo.root;\r\n    var _subSystems = [];\r\n    var _metrics = [];\r\n    function subSystem(nameSystem, descriptionSystem) {\r\n        if (!nameSystem || nameSystem.length === 0) {\r\n            throw new Error(\"name is required\");\r\n        }\r\n        var match = _subSystems.filter(function (s) { return s.name === nameSystem; });\r\n        if (match.length > 0) {\r\n            return match[0];\r\n        }\r\n        var _system = system(nameSystem, _repo, _transport, me, descriptionSystem);\r\n        _subSystems.push(_system);\r\n        return _system;\r\n    }\r\n    function setState(state, stateDescription) {\r\n        _state = { state: state, description: stateDescription };\r\n        _transport.updateSystem(me, _state);\r\n    }\r\n    function stringMetric$1(definition, value) {\r\n        return _getOrCreateMetric.call(me, definition, MetricTypes.STRING, value, function (metricDef) { return stringMetric(metricDef, me, _transport, value); });\r\n    }\r\n    function numberMetric$1(definition, value) {\r\n        return _getOrCreateMetric.call(me, definition, MetricTypes.NUMBER, value, function (metricDef) { return numberMetric(metricDef, me, _transport, value); });\r\n    }\r\n    function countMetric$1(definition, value) {\r\n        return _getOrCreateMetric.call(this, definition, MetricTypes.COUNT, value, function (metricDef) { return countMetric(metricDef, me, _transport, value); });\r\n    }\r\n    function addressMetric$1(definition, value) {\r\n        return _getOrCreateMetric.call(this, definition, MetricTypes.ADDRESS, value, function (metricDef) { return addressMetric(metricDef, me, _transport, value); });\r\n    }\r\n    function objectMetric$1(definition, value) {\r\n        return _getOrCreateMetric.call(this, definition, MetricTypes.OBJECT, value, function (metricDef) { return objectMetric(metricDef, me, _transport, value); });\r\n    }\r\n    function timespanMetric$1(definition, value) {\r\n        return _getOrCreateMetric.call(this, definition, MetricTypes.TIMESPAN, value, function (metricDef) { return timespanMetric(metricDef, me, _transport, value); });\r\n    }\r\n    function timestampMetric$1(definition, value) {\r\n        return _getOrCreateMetric.call(this, definition, MetricTypes.TIMESTAMP, value, function (metricDef) { return timestampMetric(metricDef, me, _transport, value); });\r\n    }\r\n    function rateMetric$1(definition, value) {\r\n        return _getOrCreateMetric.call(this, definition, MetricTypes.RATE, value, function (metricDef) { return rateMetric(metricDef, me, _transport, value); });\r\n    }\r\n    function statisticsMetric$1(definition, value) {\r\n        return _getOrCreateMetric.call(this, definition, MetricTypes.STATISTICS, value, function (metricDef) { return statisticsMetric(metricDef, me, _transport, value); });\r\n    }\r\n    function _unionToMetricDef(def) {\r\n        var metricDefinition = {};\r\n        if (typeof def === \"string\") {\r\n            metricDefinition.name = def;\r\n        }\r\n        else {\r\n            metricDefinition = def;\r\n        }\r\n        if (metricDefinition.name === undefined) {\r\n            throw new Error(\"Metric name is required\");\r\n        }\r\n        return metricDefinition;\r\n    }\r\n    function _getOrCreateMetric(definition, expectedType, value, createMetric) {\r\n        var metricDefinition = _unionToMetricDef(definition);\r\n        var matching = _metrics.filter(function (shadowedMetric) { return shadowedMetric.name === metricDefinition.name; });\r\n        if (matching.length > 0) {\r\n            var existing = matching[0];\r\n            if (existing.type !== expectedType) {\r\n                throw new Error(\"A metric named \" + metricDefinition.name + \" is already defined with different type.\");\r\n            }\r\n            if (typeof value !== \"undefined\") {\r\n                existing.update(value);\r\n            }\r\n            return existing;\r\n        }\r\n        var metric = createMetric(metricDefinition);\r\n        _metrics.push(metric);\r\n        return metric;\r\n    }\r\n    function _buildPath(shadowedSystem) {\r\n        if (!shadowedSystem || !shadowedSystem.parent) {\r\n            return [];\r\n        }\r\n        var path = _buildPath(shadowedSystem.parent);\r\n        path.push(shadowedSystem.name);\r\n        return path;\r\n    }\r\n    function _arrayToString(path, separator) {\r\n        return ((path && path.length > 0) ? path.join(separator) : \"\");\r\n    }\r\n    function getAggregateState() {\r\n        var aggState = [];\r\n        if (Object.keys(_state).length > 0) {\r\n            aggState.push({\r\n                name: _name,\r\n                path: _path,\r\n                state: _state.state,\r\n                description: _state.description,\r\n            });\r\n        }\r\n        _subSystems.forEach(function (shadowedSubSystem) {\r\n            var result = shadowedSubSystem.getAggregateState();\r\n            if (result.length > 0) {\r\n                aggState.push.apply(aggState, result);\r\n            }\r\n        });\r\n        return aggState;\r\n    }\r\n    var me = {\r\n        get name() {\r\n            return _name;\r\n        },\r\n        get description() {\r\n            return _description;\r\n        },\r\n        get repo() {\r\n            return _repo;\r\n        },\r\n        get parent() {\r\n            return _parent;\r\n        },\r\n        path: _path,\r\n        id: id,\r\n        identity: identity,\r\n        root: root,\r\n        get subSystems() {\r\n            return _subSystems;\r\n        },\r\n        get metrics() {\r\n            return _metrics;\r\n        },\r\n        subSystem: subSystem,\r\n        getState: function () {\r\n            return _state;\r\n        },\r\n        setState: setState,\r\n        stringMetric: stringMetric$1,\r\n        statisticsMetric: statisticsMetric$1,\r\n        rateMetric: rateMetric$1,\r\n        timestampMetric: timestampMetric$1,\r\n        timespanMetric: timespanMetric$1,\r\n        objectMetric: objectMetric$1,\r\n        addressMetric: addressMetric$1,\r\n        countMetric: countMetric$1,\r\n        numberMetric: numberMetric$1,\r\n        getAggregateState: getAggregateState,\r\n    };\r\n    _transport.createSystem(me);\r\n    return me;\r\n}\n\nfunction repository(options, protocol) {\r\n    if (!options.identity) {\r\n        throw new Error(\"Identity missing from metrics configuration\");\r\n    }\r\n    if (!options.identity.service || typeof options.identity.service !== \"string\") {\r\n        throw new Error(\"Service missing or invalid in metrics identity configuration\");\r\n    }\r\n    if (!options.identity.system || typeof options.identity.system !== \"string\") {\r\n        throw new Error(\"System missing or invalid in metrics identity configuration\");\r\n    }\r\n    if (!options.identity.instance || typeof options.identity.instance !== \"string\") {\r\n        throw new Error(\"Instance missing or invalid in metrics identity configuration\");\r\n    }\r\n    var identity = options.identity;\r\n    var instance = options.identity.system + \"/\" + options.identity.service + \"/\" + options.identity.instance;\r\n    function _initSystemMetrics(rootSystem, useClickStream) {\r\n        if (typeof navigator !== \"undefined\") {\r\n            rootSystem.stringMetric(\"UserAgent\", navigator.userAgent);\r\n        }\r\n        if (useClickStream && typeof document !== \"undefined\") {\r\n            var clickStream_1 = rootSystem.subSystem(\"ClickStream\");\r\n            var documentClickHandler = function (e) {\r\n                if (!e.target) {\r\n                    return;\r\n                }\r\n                var target = e.target;\r\n                clickStream_1.objectMetric(\"LastBrowserEvent\", {\r\n                    type: \"click\",\r\n                    timestamp: new Date(),\r\n                    target: {\r\n                        className: e.target ? target.className : \"\",\r\n                        id: target.id,\r\n                        type: \"<\" + target.tagName.toLowerCase() + \">\",\r\n                        href: target.href || \"\",\r\n                    },\r\n                });\r\n            };\r\n            clickStream_1.objectMetric(\"Page\", {\r\n                title: document.title,\r\n                page: window.location.href,\r\n            });\r\n            if (document.addEventListener) {\r\n                document.addEventListener(\"click\", documentClickHandler);\r\n            }\r\n            else {\r\n                document.attachEvent(\"onclick\", documentClickHandler);\r\n            }\r\n        }\r\n        var startTime = rootSystem.stringMetric(\"StartTime\", (new Date()).toString());\r\n        var urlMetric = rootSystem.stringMetric(\"StartURL\", \"\");\r\n        var appNameMetric = rootSystem.stringMetric(\"AppName\", \"\");\r\n        if (typeof window !== \"undefined\") {\r\n            if (typeof window.location !== \"undefined\") {\r\n                var startUrl = window.location.href;\r\n                urlMetric.update(startUrl);\r\n            }\r\n            if (typeof window.glue42gd !== \"undefined\") {\r\n                appNameMetric.update(window.glue42gd.appName);\r\n            }\r\n        }\r\n    }\r\n    var _root;\r\n    var me = {\r\n        identity: identity,\r\n        instance: instance,\r\n        get root() {\r\n            return _root;\r\n        },\r\n    };\r\n    protocol.init(me);\r\n    _root = system(\"\", me, protocol);\r\n    _initSystemMetrics(_root, options.clickStream || options.clickStream === undefined);\r\n    return me;\r\n}\n\nvar metrics = (function (settings) {\r\n    var options = {\r\n        connection: settings.connection,\r\n        identity: settings.identity,\r\n        logger: settings.logger,\r\n        heartbeatInterval: settings.heartbeatInterval,\r\n        settings: {},\r\n        clickStream: settings.clickStream,\r\n    };\r\n    if (!options.connection || typeof options.connection !== \"object\") {\r\n        throw new Error(\"Connection is required parameter\");\r\n    }\r\n    var _protocol;\r\n    if (options.connection.protocolVersion === 3) {\r\n        _protocol = gw3(options.connection, settings);\r\n    }\r\n    else {\r\n        _protocol = gw1(options.connection, settings);\r\n    }\r\n    var repo = repository(options, _protocol);\r\n    var rootSystem = repo.root;\r\n    return rootSystem;\r\n});\n\nfunction createRegistry(options) {\r\n    if (options && options.errorHandling\r\n        && typeof options.errorHandling !== \"function\"\r\n        && options.errorHandling !== \"log\"\r\n        && options.errorHandling !== \"silent\"\r\n        && options.errorHandling !== \"throw\") {\r\n        throw new Error(\"Invalid options passed to createRegistry. Prop errorHandling should be [\\\"log\\\" | \\\"silent\\\" | \\\"throw\\\" | (err) => void], but \" + typeof options.errorHandling + \" was passed\");\r\n    }\r\n    var _userErrorHandler = options && typeof options.errorHandling === \"function\" && options.errorHandling;\r\n    var callbacks = {};\r\n    function add(key, callback) {\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey) {\r\n            callbacksForKey = [];\r\n            callbacks[key] = callbacksForKey;\r\n        }\r\n        callbacksForKey.push(callback);\r\n        return function () {\r\n            var allForKey = callbacks[key];\r\n            if (!allForKey) {\r\n                return;\r\n            }\r\n            allForKey = allForKey.reduce(function (acc, element, index) {\r\n                if (!(element === callback && acc.length === index)) {\r\n                    acc.push(element);\r\n                }\r\n                return acc;\r\n            }, []);\r\n            callbacks[key] = allForKey;\r\n        };\r\n    }\r\n    function execute(key) {\r\n        var argumentsArr = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            argumentsArr[_i - 1] = arguments[_i];\r\n        }\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey || callbacksForKey.length === 0) {\r\n            return [];\r\n        }\r\n        var results = [];\r\n        callbacksForKey.forEach(function (callback) {\r\n            try {\r\n                var result = callback.apply(undefined, argumentsArr);\r\n                results.push(result);\r\n            }\r\n            catch (err) {\r\n                results.push(undefined);\r\n                _handleError(err, key);\r\n            }\r\n        });\r\n        return results;\r\n    }\r\n    function _handleError(exceptionArtifact, key) {\r\n        var errParam = exceptionArtifact instanceof Error ? exceptionArtifact : new Error(exceptionArtifact);\r\n        if (_userErrorHandler) {\r\n            _userErrorHandler(errParam);\r\n            return;\r\n        }\r\n        var msg = \"[ERROR] callback-registry: User callback for key \\\"\" + key + \"\\\" failed: \" + errParam.stack;\r\n        if (options) {\r\n            switch (options.errorHandling) {\r\n                case \"log\":\r\n                    return console.error(msg);\r\n                case \"silent\":\r\n                    return;\r\n                case \"throw\":\r\n                    throw new Error(msg);\r\n            }\r\n        }\r\n        console.error(msg);\r\n    }\r\n    function clear() {\r\n        callbacks = {};\r\n    }\r\n    function clearKey(key) {\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey) {\r\n            return;\r\n        }\r\n        delete callbacks[key];\r\n    }\r\n    return {\r\n        add: add,\r\n        execute: execute,\r\n        clear: clear,\r\n        clearKey: clearKey\r\n    };\r\n}\r\ncreateRegistry.default = createRegistry;\r\nvar lib = createRegistry;\n\nvar ConnectionImpl = (function () {\r\n    function ConnectionImpl(settings) {\r\n        this.messageHandlers = {};\r\n        this.ids = 1;\r\n        this.registry = lib();\r\n        this._connected = false;\r\n        this.isTrace = false;\r\n        this._settings = settings;\r\n        this.logger = settings.logger;\r\n        this.isTrace = this.logger.canPublish(\"trace\");\r\n    }\r\n    ConnectionImpl.prototype.init = function (transport, protocol) {\r\n        this._protocol = protocol;\r\n        this._transport = transport;\r\n        this._transport.onConnectedChanged(this.handleConnectionChanged.bind(this));\r\n        this._transport.onMessage(this.handleTransportMessage.bind(this));\r\n    };\r\n    ConnectionImpl.prototype.send = function (product, type, message, id, options) {\r\n        if (this._transport.isObjectBasedTransport) {\r\n            var msg = this._protocol.createObjectMessage(product, type, message, id);\r\n            if (this.isTrace) {\r\n                this.logger.trace(\">> \" + JSON.stringify(msg));\r\n            }\r\n            return this._transport.sendObject(msg, product, type, options);\r\n        }\r\n        else {\r\n            var strMessage = this._protocol.createStringMessage(product, type, message, id);\r\n            if (this.isTrace) {\r\n                this.logger.trace(\">> \" + strMessage + \"}\");\r\n            }\r\n            return this._transport.send(strMessage, product, type, options);\r\n        }\r\n    };\r\n    ConnectionImpl.prototype.on = function (product, type, messageHandler) {\r\n        type = type.toLowerCase();\r\n        if (this.messageHandlers[type] === undefined) {\r\n            this.messageHandlers[type] = {};\r\n        }\r\n        var id = this.ids++;\r\n        this.messageHandlers[type][id] = messageHandler;\r\n        return {\r\n            type: type,\r\n            id: id,\r\n        };\r\n    };\r\n    ConnectionImpl.prototype.off = function (info) {\r\n        delete this.messageHandlers[info.type.toLowerCase()][info.id];\r\n    };\r\n    Object.defineProperty(ConnectionImpl.prototype, \"isConnected\", {\r\n        get: function () {\r\n            return this._connected;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ConnectionImpl.prototype.connected = function (callback) {\r\n        if (this._connected) {\r\n            callback(this._settings.ws || this._settings.http);\r\n        }\r\n        return this.registry.add(\"connected\", callback);\r\n    };\r\n    ConnectionImpl.prototype.disconnected = function (callback) {\r\n        return this.registry.add(\"disconnected\", callback);\r\n    };\r\n    ConnectionImpl.prototype.login = function (authRequest) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4, this._transport.open()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2, this._protocol.login(authRequest)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ConnectionImpl.prototype.reconnect = function () {\r\n        return this._transport.reconnect();\r\n    };\r\n    ConnectionImpl.prototype.logout = function () {\r\n        this._protocol.logout();\r\n        this._transport.close();\r\n    };\r\n    ConnectionImpl.prototype.loggedIn = function (callback) {\r\n        return this._protocol.loggedIn(callback);\r\n    };\r\n    Object.defineProperty(ConnectionImpl.prototype, \"protocolVersion\", {\r\n        get: function () {\r\n            return this._settings.protocolVersion || 1;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ConnectionImpl.prototype.toAPI = function () {\r\n        var that = this;\r\n        return {\r\n            send: that.send.bind(that),\r\n            on: that.on.bind(that),\r\n            off: that.off.bind(that),\r\n            login: that.login.bind(that),\r\n            logout: that.logout.bind(that),\r\n            loggedIn: that.loggedIn.bind(that),\r\n            connected: that.connected.bind(that),\r\n            disconnected: that.disconnected.bind(that),\r\n            get protocolVersion() {\r\n                return that.protocolVersion;\r\n            },\r\n            reconnect: that.reconnect.bind(that)\r\n        };\r\n    };\r\n    ConnectionImpl.prototype.distributeMessage = function (message, type) {\r\n        var _this = this;\r\n        var handlers = this.messageHandlers[type.toLowerCase()];\r\n        if (handlers !== undefined) {\r\n            Object.keys(handlers).forEach(function (handlerId) {\r\n                var handler = handlers[handlerId];\r\n                if (handler !== undefined) {\r\n                    try {\r\n                        handler(message);\r\n                    }\r\n                    catch (error) {\r\n                        _this.logger.error(\"Message handler failed with \" + error.stack);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    ConnectionImpl.prototype.handleConnectionChanged = function (connected) {\r\n        if (this._connected === connected) {\r\n            return;\r\n        }\r\n        this._connected = connected;\r\n        if (connected) {\r\n            this.registry.execute(\"connected\");\r\n        }\r\n        else {\r\n            this.registry.execute(\"disconnected\");\r\n        }\r\n    };\r\n    ConnectionImpl.prototype.handleTransportMessage = function (msg) {\r\n        var msgObj;\r\n        if (typeof msg === \"string\") {\r\n            msgObj = this._protocol.processStringMessage(msg);\r\n        }\r\n        else {\r\n            msgObj = this._protocol.processObjectMessage(msg);\r\n        }\r\n        if (this.isTrace) {\r\n            this.logger.trace(\"<< \" + JSON.stringify(msgObj));\r\n        }\r\n        this.distributeMessage(msgObj.msg, msgObj.msgType);\r\n    };\r\n    return ConnectionImpl;\r\n}());\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nvar randomFromSeed = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed$1(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nvar alphabet_1 = {\n    characters: characters,\n    seed: setSeed$1,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nfunction randomByte() {\n    if (!crypto || !crypto.getRandomValues) {\n        return Math.floor(Math.random() * 256) & 0x30;\n    }\n    var dest = new Uint8Array(1);\n    crypto.getRandomValues(dest);\n    return dest[0] & 0x30;\n}\n\nvar randomByteBrowser = randomByte;\n\nfunction encode(lookup, number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + lookup( ( (number >> (4 * loopCounter)) & 0x0f ) | randomByteBrowser() );\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nvar encode_1 = encode;\n\n/**\n * Decode the id to get the version and worker\n * Mainly for debugging and testing.\n * @param id - the shortid-generated id.\n */\nfunction decode(id) {\n    var characters = alphabet_1.shuffled();\n    return {\n        version: characters.indexOf(id.substr(0, 1)) & 0x0f,\n        worker: characters.indexOf(id.substr(1, 1)) & 0x0f\n    };\n}\n\nvar decode_1 = decode;\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var characters = alphabet_1.characters();\n    var len = id.length;\n    for(var i = 0; i < len;i++) {\n        if (characters.indexOf(id[i]) === -1) {\n            return false;\n        }\n    }\n    return true;\n}\n\nvar isValid = isShortId;\n\nvar lib$1 = createCommonjsModule(function (module) {\n\n\n\n\n\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1459707606518;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 6;\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId =  0;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + encode_1(alphabet_1.lookup, version);\n    str = str + encode_1(alphabet_1.lookup, clusterWorkerId);\n    if (counter > 0) {\n        str = str + encode_1(alphabet_1.lookup, counter);\n    }\n    str = str + encode_1(alphabet_1.lookup, seconds);\n\n    return str;\n}\n\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet_1.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet_1.characters(newCharacters);\n    }\n\n    return alphabet_1.shuffled();\n}\n\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.decode = decode_1;\nmodule.exports.isValid = isValid;\n});\nvar lib_1 = lib$1.generate;\nvar lib_2 = lib$1.seed;\nvar lib_3 = lib$1.worker;\nvar lib_4 = lib$1.characters;\nvar lib_5 = lib$1.decode;\nvar lib_6 = lib$1.isValid;\n\nvar shortid = lib$1;\n\nfunction domainSession (domain, connection, logger, successMessages, errorMessages) {\r\n    if (domain == null) {\r\n        domain = \"global\";\r\n    }\r\n    successMessages = successMessages || [\"success\"];\r\n    errorMessages = errorMessages || [\"error\"];\r\n    var isJoined = false;\r\n    var tryReconnecting = false;\r\n    var _latestOptions;\r\n    var _connectionOn = false;\r\n    var callbacks = lib();\r\n    connection.disconnected(handleConnectionDisconnected);\r\n    connection.loggedIn(handleConnectionLoggedIn);\r\n    connection.on(domain, \"success\", function (msg) { return handleSuccessMessage(msg); });\r\n    connection.on(domain, \"error\", function (msg) { return handleErrorMessage(msg); });\r\n    connection.on(domain, \"result\", function (msg) { return handleSuccessMessage(msg); });\r\n    if (successMessages) {\r\n        successMessages.forEach(function (sm) {\r\n            connection.on(domain, sm, function (msg) { return handleSuccessMessage(msg); });\r\n        });\r\n    }\r\n    if (errorMessages) {\r\n        errorMessages.forEach(function (sm) {\r\n            connection.on(domain, sm, function (msg) { return handleErrorMessage(msg); });\r\n        });\r\n    }\r\n    var requestsMap = {};\r\n    function join(options) {\r\n        _latestOptions = options;\r\n        return new Promise(function (resolve, reject) {\r\n            if (isJoined) {\r\n                resolve();\r\n                return;\r\n            }\r\n            var joinPromise;\r\n            if (domain === \"global\") {\r\n                joinPromise = _connectionOn ? Promise.resolve({}) : Promise.reject(\"not connected to gateway\");\r\n            }\r\n            else {\r\n                logger.debug(\"joining \" + domain);\r\n                var joinMsg = {\r\n                    type: \"join\",\r\n                    destination: domain,\r\n                    domain: \"global\",\r\n                    options: options,\r\n                };\r\n                joinPromise = send(joinMsg);\r\n            }\r\n            joinPromise\r\n                .then(function () {\r\n                handleJoined();\r\n                resolve();\r\n            })\r\n                .catch(function (err) {\r\n                logger.debug(\"error joining \" + domain + \" domain: \" + JSON.stringify(err));\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n    function leave() {\r\n        if (domain === \"global\") {\r\n            return;\r\n        }\r\n        logger.debug(\"stopping session \" + domain + \"...\");\r\n        var leaveMsg = {\r\n            type: \"leave\",\r\n            destination: domain,\r\n            domain: \"global\",\r\n        };\r\n        send(leaveMsg).then(function () {\r\n            isJoined = false;\r\n            callbacks.execute(\"onLeft\");\r\n        });\r\n    }\r\n    function handleJoined() {\r\n        logger.debug(\"did join \" + domain);\r\n        isJoined = true;\r\n        var wasReconnect = tryReconnecting;\r\n        tryReconnecting = false;\r\n        callbacks.execute(\"onJoined\", wasReconnect);\r\n    }\r\n    function handleConnectionDisconnected() {\r\n        _connectionOn = false;\r\n        logger.warn(\"connection is down\");\r\n        isJoined = false;\r\n        tryReconnecting = true;\r\n        callbacks.execute(\"onLeft\", { disconnected: true });\r\n    }\r\n    function handleConnectionLoggedIn() {\r\n        _connectionOn = true;\r\n        if (tryReconnecting) {\r\n            logger.debug(\"connection is now up - trying to reconnect...\");\r\n            join(_latestOptions);\r\n        }\r\n    }\r\n    function onJoined(callback) {\r\n        if (isJoined) {\r\n            callback(false);\r\n        }\r\n        return callbacks.add(\"onJoined\", callback);\r\n    }\r\n    function onLeft(callback) {\r\n        if (!isJoined) {\r\n            callback();\r\n        }\r\n        return callbacks.add(\"onLeft\", callback);\r\n    }\r\n    function handleErrorMessage(msg) {\r\n        if (domain !== msg.domain) {\r\n            return;\r\n        }\r\n        var requestId = msg.request_id;\r\n        var entry = requestsMap[requestId];\r\n        if (!entry) {\r\n            return;\r\n        }\r\n        entry.error(msg);\r\n    }\r\n    function handleSuccessMessage(msg) {\r\n        if (msg.domain !== domain) {\r\n            return;\r\n        }\r\n        var requestId = msg.request_id;\r\n        var entry = requestsMap[requestId];\r\n        if (!entry) {\r\n            return;\r\n        }\r\n        entry.success(msg);\r\n    }\r\n    function getNextRequestId() {\r\n        return shortid();\r\n    }\r\n    function send(msg, tag, options) {\r\n        options = options || {};\r\n        msg.request_id = msg.request_id || getNextRequestId();\r\n        msg.domain = msg.domain || domain;\r\n        if (!options.skipPeerId) {\r\n            msg.peer_id = connection.peerId;\r\n        }\r\n        var requestId = msg.request_id;\r\n        return new Promise(function (resolve, reject) {\r\n            requestsMap[requestId] = {\r\n                success: function (successMsg) {\r\n                    delete requestsMap[requestId];\r\n                    successMsg._tag = tag;\r\n                    resolve(successMsg);\r\n                },\r\n                error: function (errorMsg) {\r\n                    logger.warn(\"GW error - \" + JSON.stringify(errorMsg) + \" for request \" + JSON.stringify(msg));\r\n                    delete requestsMap[requestId];\r\n                    errorMsg._tag = tag;\r\n                    reject(errorMsg);\r\n                },\r\n            };\r\n            connection\r\n                .send(domain, domain, msg, undefined, options)\r\n                .catch(function (err) {\r\n                requestsMap[requestId].error({ err: err });\r\n            });\r\n        });\r\n    }\r\n    function sendFireAndForget(msg) {\r\n        msg.request_id = msg.request_id ? msg.request_id : getNextRequestId();\r\n        msg.domain = msg.domain || domain;\r\n        msg.peer_id = connection.peerId;\r\n        connection.send(domain, domain, msg);\r\n    }\r\n    return {\r\n        join: join,\r\n        leave: leave,\r\n        onJoined: onJoined,\r\n        onLeft: onLeft,\r\n        send: send,\r\n        sendFireAndForget: sendFireAndForget,\r\n        on: function (type, callback) {\r\n            connection.on(domain, type, function (msg) {\r\n                if (msg.domain !== domain) {\r\n                    return;\r\n                }\r\n                try {\r\n                    callback(msg);\r\n                }\r\n                catch (e) {\r\n                    logger.error(\"Callback  failed: \" + e + \" \\n msg was: \" + JSON.stringify(msg));\r\n                }\r\n            });\r\n        },\r\n        loggedIn: function (callback) { return connection.loggedIn(callback); },\r\n        connected: function (callback) { return connection.connected(callback); },\r\n        disconnected: function (callback) { return connection.disconnected(callback); },\r\n        get peerId() {\r\n            return connection.peerId;\r\n        },\r\n        get domain() {\r\n            return domain;\r\n        },\r\n    };\r\n}\n\nfunction gw3Protocol (connection, settings, logger) {\r\n    var datePrefix = \"#T42_DATE#\";\r\n    var datePrefixLen = datePrefix.length;\r\n    var dateMinLen = datePrefixLen + 1;\r\n    var datePrefixFirstChar = datePrefix[0];\r\n    var registry = lib();\r\n    var globalDomain;\r\n    var isLoggedIn = false;\r\n    var shouldTryLogin = true;\r\n    var initialLogin = true;\r\n    var initialLoginAttempts = 3;\r\n    var pingTimer;\r\n    var sessions = [];\r\n    var loginConfig;\r\n    connection.disconnected(handleDisconnected.bind(this));\r\n    ping();\r\n    function processStringMessage(message) {\r\n        var msg = JSON.parse(message, function (key, value) {\r\n            if (typeof value !== \"string\") {\r\n                return value;\r\n            }\r\n            if (value.length < dateMinLen) {\r\n                return value;\r\n            }\r\n            if (value[0] !== datePrefixFirstChar) {\r\n                return value;\r\n            }\r\n            if (value.substring(0, datePrefixLen) !== datePrefix) {\r\n                return value;\r\n            }\r\n            try {\r\n                var milliseconds = parseInt(value.substring(datePrefixLen, value.length), 10);\r\n                if (isNaN(milliseconds)) {\r\n                    return value;\r\n                }\r\n                return new Date(milliseconds);\r\n            }\r\n            catch (ex) {\r\n                return value;\r\n            }\r\n        });\r\n        return {\r\n            msg: msg,\r\n            msgType: msg.type,\r\n        };\r\n    }\r\n    function createStringMessage(product, type, message, id) {\r\n        var oldToJson = Date.prototype.toJSON;\r\n        try {\r\n            Date.prototype.toJSON = function () {\r\n                return datePrefix + this.getTime();\r\n            };\r\n            var result = JSON.stringify(message);\r\n            return result;\r\n        }\r\n        finally {\r\n            Date.prototype.toJSON = oldToJson;\r\n        }\r\n    }\r\n    function processObjectMessage(message) {\r\n        if (!message.type) {\r\n            throw new Error(\"Object should have type property\");\r\n        }\r\n        return {\r\n            msg: message,\r\n            msgType: message.type,\r\n        };\r\n    }\r\n    function createObjectMessage(product, type, message, id) {\r\n        return message;\r\n    }\r\n    function login(config) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var authentication, _a, helloMsg, sendOptions, welcomeMsg, msg, token, _b, err_1;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        logger.debug(\"logging in...\");\r\n                        loginConfig = config;\r\n                        if (!loginConfig) {\r\n                            loginConfig = { username: \"\", password: \"\" };\r\n                        }\r\n                        shouldTryLogin = true;\r\n                        authentication = {};\r\n                        connection.gatewayToken = config.gatewayToken;\r\n                        if (!connection.gatewayToken) return [3, 1];\r\n                        authentication.method = \"gateway-token\";\r\n                        authentication.token = connection.gatewayToken;\r\n                        return [3, 4];\r\n                    case 1:\r\n                        if (!(config.flowName === \"sspi\")) return [3, 3];\r\n                        authentication.provider = \"win\";\r\n                        authentication.method = \"access-token\";\r\n                        _a = authentication;\r\n                        return [4, config.flowCallback(config.sessionId, null)];\r\n                    case 2:\r\n                        _a.token =\r\n                            (_c.sent())\r\n                                .data\r\n                                .toString(\"base64\");\r\n                        return [3, 4];\r\n                    case 3:\r\n                        if (config.token) {\r\n                            authentication.method = \"access-token\";\r\n                            authentication.token = config.token;\r\n                        }\r\n                        else if (config.username) {\r\n                            authentication.method = \"secret\";\r\n                            authentication.login = config.username;\r\n                            authentication.secret = config.password;\r\n                        }\r\n                        else {\r\n                            throw new Error(\"invalid auth message\" + JSON.stringify(config));\r\n                        }\r\n                        _c.label = 4;\r\n                    case 4:\r\n                        helloMsg = {\r\n                            type: \"hello\",\r\n                            identity: settings.identity,\r\n                            authentication: authentication\r\n                        };\r\n                        if (config.sessionId) {\r\n                            helloMsg.request_id = config.sessionId;\r\n                        }\r\n                        globalDomain = domainSession(\"global\", connection, logger, [\r\n                            \"welcome\",\r\n                            \"token\",\r\n                            \"authentication-request\"\r\n                        ]);\r\n                        sendOptions = { skipPeerId: true };\r\n                        if (initialLogin) {\r\n                            sendOptions.retryInterval = settings.reconnectInterval;\r\n                            sendOptions.maxRetries = settings.reconnectAttempts;\r\n                        }\r\n                        _c.label = 5;\r\n                    case 5:\r\n                        _c.trys.push([5, 12, 13, 14]);\r\n                        welcomeMsg = void 0;\r\n                        _c.label = 6;\r\n                    case 6:\r\n                        return [4, globalDomain.send(helloMsg, undefined, sendOptions)];\r\n                    case 7:\r\n                        msg = _c.sent();\r\n                        if (!(msg.type === \"authentication-request\")) return [3, 9];\r\n                        token = Buffer.from(msg.authentication.token, \"base64\");\r\n                        _b = helloMsg.authentication;\r\n                        return [4, config.flowCallback(config.sessionId, token)];\r\n                    case 8:\r\n                        _b.token =\r\n                            (_c.sent())\r\n                                .data\r\n                                .toString(\"base64\");\r\n                        helloMsg.request_id = config.sessionId;\r\n                        return [3, 6];\r\n                    case 9:\r\n                        if (msg.type === \"welcome\") {\r\n                            welcomeMsg = msg;\r\n                            return [3, 11];\r\n                        }\r\n                        else if (msg.type === \"error\") {\r\n                            throw new Error(\"Authentication failed: \" + msg.reason);\r\n                        }\r\n                        else {\r\n                            throw new Error(\"Unexpected message type during authentication: \" + msg.type);\r\n                        }\r\n                    case 10: return [3, 6];\r\n                    case 11:\r\n                        initialLogin = false;\r\n                        logger.debug(\"login successful with PeerId \" + welcomeMsg.peer_id);\r\n                        connection.peerId = welcomeMsg.peer_id;\r\n                        connection.resolvedIdentity = welcomeMsg.resolved_identity;\r\n                        connection.availableDomains = welcomeMsg.available_domains;\r\n                        if (welcomeMsg.options) {\r\n                            connection.token = welcomeMsg.options.access_token;\r\n                            connection.info = welcomeMsg.options.info;\r\n                        }\r\n                        setLoggedIn(true);\r\n                        return [2, welcomeMsg.resolved_identity];\r\n                    case 12:\r\n                        err_1 = _c.sent();\r\n                        logger.error(\"error sending hello message - \" + (err_1.message || err_1.msg || err_1.reason || err_1));\r\n                        throw err_1;\r\n                    case 13:\r\n                        if (config && config.flowCallback && config.sessionId) {\r\n                            config.flowCallback(config.sessionId, null);\r\n                        }\r\n                        return [7];\r\n                    case 14: return [2];\r\n                }\r\n            });\r\n        });\r\n    }\r\n    function logout() {\r\n        logger.debug(\"logging out...\");\r\n        shouldTryLogin = false;\r\n        if (pingTimer) {\r\n            clearTimeout(pingTimer);\r\n        }\r\n        sessions.forEach(function (session) {\r\n            session.leave();\r\n        });\r\n    }\r\n    function loggedIn(callback) {\r\n        if (isLoggedIn) {\r\n            callback();\r\n        }\r\n        return registry.add(\"onLoggedIn\", callback);\r\n    }\r\n    function domain(domainName, domainLogger, successMessages, errorMessages) {\r\n        var session = sessions.filter(function (s) { return s.domain === domainName; })[0];\r\n        if (!session) {\r\n            session = domainSession(domainName, connection, domainLogger, successMessages, errorMessages);\r\n            sessions.push(session);\r\n        }\r\n        return session;\r\n    }\r\n    function handleDisconnected() {\r\n        setLoggedIn(false);\r\n        var tryToLogin = shouldTryLogin;\r\n        if (tryToLogin && initialLogin) {\r\n            if (initialLoginAttempts <= 0) {\r\n                return;\r\n            }\r\n            initialLoginAttempts--;\r\n        }\r\n        logger.debug(\"disconnected - will try new login?\" + shouldTryLogin);\r\n        if (shouldTryLogin) {\r\n            var tokenRefreshPromise = Promise.resolve();\r\n            if (typeof window !== undefined && loginConfig.gatewayToken) {\r\n                var glue42gd = window.glue42gd;\r\n                if (glue42gd) {\r\n                    tokenRefreshPromise = glue42gd.getGWToken().then(function (token) {\r\n                        loginConfig.gatewayToken = token;\r\n                    });\r\n                }\r\n            }\r\n            tokenRefreshPromise.then(function () {\r\n                connection.login(loginConfig)\r\n                    .catch(function () {\r\n                    setTimeout(handleDisconnected, 1000);\r\n                });\r\n            });\r\n        }\r\n    }\r\n    function setLoggedIn(value) {\r\n        isLoggedIn = value;\r\n        if (isLoggedIn) {\r\n            registry.execute(\"onLoggedIn\");\r\n        }\r\n    }\r\n    function ping() {\r\n        if (!shouldTryLogin) {\r\n            return;\r\n        }\r\n        if (isLoggedIn) {\r\n            connection.send(\"\", \"\", { type: \"ping\" });\r\n        }\r\n        pingTimer = setTimeout(ping, 30 * 1000);\r\n    }\r\n    function authToken() {\r\n        var createTokenReq = {\r\n            type: \"create-token\"\r\n        };\r\n        return globalDomain.send(createTokenReq)\r\n            .then(function (res) {\r\n            return res.token;\r\n        });\r\n    }\r\n    return {\r\n        processStringMessage: processStringMessage,\r\n        createStringMessage: createStringMessage,\r\n        createObjectMessage: createObjectMessage,\r\n        processObjectMessage: processObjectMessage,\r\n        login: login,\r\n        logout: logout,\r\n        loggedIn: loggedIn,\r\n        domain: domain,\r\n        authToken: authToken,\r\n        get isLoggedIn() {\r\n            return isLoggedIn;\r\n        }\r\n    };\r\n}\n\nvar HCProtocol = (function () {\r\n    function HCProtocol() {\r\n    }\r\n    HCProtocol.prototype.processStringMessage = function (message) {\r\n        var messageObj = JSON.parse(message);\r\n        return {\r\n            msg: messageObj,\r\n            msgType: messageObj.type,\r\n        };\r\n    };\r\n    HCProtocol.prototype.createStringMessage = function (product, type, message, id) {\r\n        return JSON.stringify(message);\r\n    };\r\n    HCProtocol.prototype.login = function (message) {\r\n        return Promise.resolve({ application: undefined });\r\n    };\r\n    HCProtocol.prototype.logout = function () {\r\n    };\r\n    HCProtocol.prototype.loggedIn = function (callback) {\r\n        callback();\r\n        return function () {\r\n        };\r\n    };\r\n    HCProtocol.prototype.processObjectMessage = function (message) {\r\n        throw new Error(\"not supported\");\r\n    };\r\n    HCProtocol.prototype.createObjectMessage = function (product, type, message, id) {\r\n        throw new Error(\"not supported\");\r\n    };\r\n    Object.defineProperty(HCProtocol.prototype, \"isLoggedIn\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return HCProtocol;\r\n}());\n\nvar Utils = (function () {\r\n    function Utils() {\r\n    }\r\n    Utils.getGDMajorVersion = function () {\r\n        if (typeof window === \"undefined\") {\r\n            return -1;\r\n        }\r\n        if (!window.glueDesktop) {\r\n            return -1;\r\n        }\r\n        if (!window.glueDesktop.version) {\r\n            return -1;\r\n        }\r\n        var ver = Number(window.glueDesktop.version.substr(0, 1));\r\n        return isNaN(ver) ? -1 : ver;\r\n    };\r\n    Utils.isNode = function () {\r\n        if (typeof Utils._isNode !== \"undefined\") {\r\n            return Utils._isNode;\r\n        }\r\n        try {\r\n            Utils._isNode = Object.prototype.toString.call(global.process) === \"[object process]\";\r\n        }\r\n        catch (e) {\r\n            Utils._isNode = false;\r\n        }\r\n        return Utils._isNode;\r\n    };\r\n    return Utils;\r\n}());\n\nvar PromiseWrapper = (function () {\r\n    function PromiseWrapper() {\r\n        var _this = this;\r\n        this.rejected = false;\r\n        this.resolved = false;\r\n        this.promise = new Promise(function (resolve, reject) {\r\n            _this.resolve = function (t) {\r\n                _this.resolved = true;\r\n                resolve(t);\r\n            };\r\n            _this.reject = function (err) {\r\n                _this.rejected = true;\r\n                reject(err);\r\n            };\r\n        });\r\n    }\r\n    PromiseWrapper.delay = function (time) {\r\n        return new Promise(function (resolve) { return setTimeout(resolve, time); });\r\n    };\r\n    Object.defineProperty(PromiseWrapper.prototype, \"ended\", {\r\n        get: function () {\r\n            return this.rejected || this.resolved;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return PromiseWrapper;\r\n}());\n\nvar WebSocketConstructor = Utils.isNode() ? require(\"ws\") : window.WebSocket;\r\nvar WS = (function () {\r\n    function WS(settings, logger) {\r\n        this._running = true;\r\n        this._registry = lib();\r\n        this.settings = settings;\r\n        this.logger = logger;\r\n    }\r\n    WS.prototype.onMessage = function (callback) {\r\n        return this._registry.add(\"onMessage\", callback);\r\n    };\r\n    WS.prototype.send = function (msg, product, type, options) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            options = options || {};\r\n            _this.waitForSocketConnection(function () {\r\n                try {\r\n                    _this.ws.send(msg);\r\n                    resolve();\r\n                }\r\n                catch (e) {\r\n                    reject(e);\r\n                }\r\n            }, reject, options.maxRetries, options.retryInterval);\r\n        });\r\n    };\r\n    WS.prototype.open = function () {\r\n        var _this = this;\r\n        this.logger.info(\"opening ws...\");\r\n        this._running = true;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.waitForSocketConnection(resolve, reject);\r\n        });\r\n    };\r\n    WS.prototype.close = function () {\r\n        this._running = false;\r\n        if (this.ws) {\r\n            this.ws.close();\r\n        }\r\n    };\r\n    WS.prototype.reconnect = function () {\r\n        this.ws.close();\r\n        var pw = new PromiseWrapper();\r\n        this.waitForSocketConnection(function () {\r\n            pw.resolve();\r\n        });\r\n        return pw.promise;\r\n    };\r\n    WS.prototype.onConnectedChanged = function (callback) {\r\n        return this._registry.add(\"onConnectedChanged\", callback);\r\n    };\r\n    WS.prototype.initiateSocket = function () {\r\n        var _this = this;\r\n        this.logger.debug(\"initiating ws to \" + this.settings.ws + \"...\");\r\n        var pw = new PromiseWrapper();\r\n        this.ws = new WebSocketConstructor(this.settings.ws);\r\n        this.ws.onerror = function (err) {\r\n            var reason = \"\";\r\n            try {\r\n                reason = JSON.stringify(err);\r\n            }\r\n            catch (error) {\r\n                var seen_1 = new WeakSet();\r\n                var replacer = function (key, value) {\r\n                    if (typeof value === \"object\" && value !== null) {\r\n                        if (seen_1.has(value)) {\r\n                            return;\r\n                        }\r\n                        seen_1.add(value);\r\n                    }\r\n                    return value;\r\n                };\r\n                reason = JSON.stringify(err, replacer);\r\n            }\r\n            _this.notifyStatusChanged(false, reason);\r\n        };\r\n        this.ws.onclose = function () {\r\n            _this.logger.info(\"ws closed\");\r\n            _this.notifyStatusChanged(false);\r\n        };\r\n        this.ws.onopen = function () {\r\n            _this.logger.debug(\"ws opened\");\r\n            _this.notifyStatusChanged(true);\r\n            pw.resolve();\r\n        };\r\n        this.ws.onmessage = function (message) {\r\n            _this._registry.execute(\"onMessage\", message.data);\r\n        };\r\n        return pw.promise;\r\n    };\r\n    WS.prototype.waitForSocketConnection = function (callback, failed, retriesLeft, retryInterval) {\r\n        var _this = this;\r\n        if (!callback) {\r\n            callback = function () { };\r\n        }\r\n        if (!failed) {\r\n            failed = function () { };\r\n        }\r\n        if (retryInterval === undefined) {\r\n            retryInterval = this.settings.reconnectInterval;\r\n        }\r\n        if (retriesLeft !== undefined) {\r\n            if (retriesLeft === 0) {\r\n                failed(\"wait for socket on \" + this.settings.ws + \" failed - no more retries left\");\r\n                return;\r\n            }\r\n            this.logger.debug(\"will retry \" + retriesLeft + \" more times (every \" + retryInterval + \" ms)\");\r\n        }\r\n        if (!this._running) {\r\n            failed(\"wait for socket on \" + this.settings.ws + \" failed - socket closed by user\");\r\n            return;\r\n        }\r\n        var initiated = false;\r\n        if (!this.ws || this.ws.readyState > 1) {\r\n            this.initiateSocket()\r\n                .then(function () {\r\n                if (initiated) {\r\n                    return;\r\n                }\r\n                initiated = true;\r\n                callback();\r\n            });\r\n        }\r\n        else if (this.ws.readyState === 1) {\r\n            return callback();\r\n        }\r\n        setTimeout(function () {\r\n            if (initiated) {\r\n                return;\r\n            }\r\n            initiated = true;\r\n            var retries = retriesLeft === undefined ? undefined : retriesLeft - 1;\r\n            _this.waitForSocketConnection(callback, failed, retries, retryInterval);\r\n        }, retryInterval);\r\n    };\r\n    WS.prototype.notifyStatusChanged = function (status, reason) {\r\n        this._registry.execute(\"onConnectedChanged\", status, reason);\r\n    };\r\n    return WS;\r\n}());\n\nvar MessageReplayerImpl = (function () {\r\n    function MessageReplayerImpl(specs) {\r\n        this.specsNames = [];\r\n        this.messages = {};\r\n        this.subs = {};\r\n        this.subsRefCount = {};\r\n        this.specs = {};\r\n        for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {\r\n            var spec = specs_1[_i];\r\n            this.specs[spec.name] = spec;\r\n            this.specsNames.push(spec.name);\r\n        }\r\n    }\r\n    MessageReplayerImpl.prototype.init = function (connection) {\r\n        var _this = this;\r\n        this.connection = connection;\r\n        for (var _i = 0, _a = this.specsNames; _i < _a.length; _i++) {\r\n            var name_1 = _a[_i];\r\n            var _loop_1 = function (type) {\r\n                var refCount = this_1.subsRefCount[type];\r\n                if (!refCount) {\r\n                    refCount = 0;\r\n                }\r\n                refCount += 1;\r\n                this_1.subsRefCount[type] = refCount;\r\n                if (refCount > 1) {\r\n                    return \"continue\";\r\n                }\r\n                var sub = connection.on(\"glue-core\", type, function (msg) { return _this.processMessage(type, msg); });\r\n                this_1.subs[type] = sub;\r\n            };\r\n            var this_1 = this;\r\n            for (var _b = 0, _c = this.specs[name_1].types; _b < _c.length; _b++) {\r\n                var type = _c[_b];\r\n                _loop_1(type);\r\n            }\r\n        }\r\n    };\r\n    MessageReplayerImpl.prototype.processMessage = function (type, msg) {\r\n        if (this.isDone || !msg) {\r\n            return;\r\n        }\r\n        for (var _i = 0, _a = this.specsNames; _i < _a.length; _i++) {\r\n            var name_2 = _a[_i];\r\n            if (this.specs[name_2].types.indexOf(type) !== -1) {\r\n                var messages = this.messages[name_2] || [];\r\n                this.messages[name_2] = messages;\r\n                messages.push(msg);\r\n            }\r\n        }\r\n    };\r\n    MessageReplayerImpl.prototype.drain = function (name, callback) {\r\n        if (callback) {\r\n            (this.messages[name] || []).forEach(callback);\r\n        }\r\n        delete this.messages[name];\r\n        for (var _i = 0, _a = this.specs[name].types; _i < _a.length; _i++) {\r\n            var type = _a[_i];\r\n            this.subsRefCount[type] -= 1;\r\n            if (this.subsRefCount[type] <= 0) {\r\n                this.connection.off(this.subs[type]);\r\n                delete this.subs[type];\r\n                delete this.subsRefCount[type];\r\n            }\r\n        }\r\n        delete this.specs[name];\r\n        if (!this.specs.length) {\r\n            this.isDone = true;\r\n        }\r\n    };\r\n    return MessageReplayerImpl;\r\n}());\n\nvar GW3ConnectionImpl = (function (_super) {\r\n    __extends(GW3ConnectionImpl, _super);\r\n    function GW3ConnectionImpl(settings) {\r\n        var _this = _super.call(this, settings) || this;\r\n        if (settings.replaySpecs &&\r\n            settings.replaySpecs.length) {\r\n            _this.replayer = new MessageReplayerImpl(settings.replaySpecs);\r\n        }\r\n        return _this;\r\n    }\r\n    GW3ConnectionImpl.prototype.init = function (transport, protocol) {\r\n        _super.prototype.init.call(this, transport, protocol);\r\n        if (this.replayer) {\r\n            this.replayer.init(this);\r\n        }\r\n        this.gw3Protocol = protocol;\r\n    };\r\n    GW3ConnectionImpl.prototype.toAPI = function () {\r\n        var that = this;\r\n        var superAPI = _super.prototype.toAPI.call(this);\r\n        return {\r\n            domain: that.domain.bind(that),\r\n            get peerId() { return that.peerId; },\r\n            get token() { return that.token; },\r\n            get info() { return that.info; },\r\n            get resolvedIdentity() { return that.resolvedIdentity; },\r\n            get availableDomains() { return that.availableDomains; },\r\n            get gatewayToken() { return that.gatewayToken; },\r\n            get replayer() { return that.replayer; },\r\n            on: superAPI.on,\r\n            send: superAPI.send,\r\n            off: superAPI.off,\r\n            login: superAPI.login,\r\n            logout: superAPI.logout,\r\n            loggedIn: superAPI.loggedIn,\r\n            connected: superAPI.connected,\r\n            disconnected: superAPI.disconnected,\r\n            authToken: that.authToken.bind(that),\r\n            reconnect: superAPI.reconnect,\r\n            get protocolVersion() { return superAPI.protocolVersion; },\r\n        };\r\n    };\r\n    GW3ConnectionImpl.prototype.domain = function (domain, logger, successMessages, errorMessages) {\r\n        return this.gw3Protocol.domain(domain, logger, successMessages, errorMessages);\r\n    };\r\n    GW3ConnectionImpl.prototype.authToken = function () {\r\n        return this.gw3Protocol.authToken();\r\n    };\r\n    Object.defineProperty(GW3ConnectionImpl.prototype, \"isConnected\", {\r\n        get: function () {\r\n            return this._protocol.isLoggedIn;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    GW3ConnectionImpl.prototype.connected = function (callback) {\r\n        var _this = this;\r\n        return this._protocol.loggedIn(function () {\r\n            callback(_this._settings.ws);\r\n        });\r\n    };\r\n    return GW3ConnectionImpl;\r\n}(ConnectionImpl));\n\nvar GW1Protocol = (function () {\r\n    function GW1Protocol(connection, settings) {\r\n        this._connection = connection;\r\n        this._settings = settings;\r\n    }\r\n    Object.defineProperty(GW1Protocol.prototype, \"isLoggedIn\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    GW1Protocol.prototype.processStringMessage = function (message) {\r\n        var messageObj = JSON.parse(message);\r\n        return {\r\n            msg: messageObj.message,\r\n            msgType: messageObj.type,\r\n        };\r\n    };\r\n    GW1Protocol.prototype.createStringMessage = function (product, type, message, id) {\r\n        return JSON.stringify({\r\n            type: type,\r\n            message: message,\r\n            id: id,\r\n        });\r\n    };\r\n    GW1Protocol.prototype.login = function (message) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var sendOptions = {\r\n                retryInterval: _this._settings.reconnectInterval,\r\n                maxRetries: _this._settings.reconnectAttempts\r\n            };\r\n            _this._connection.send(\"hello\", \"hello\", {}, null, sendOptions)\r\n                .then(function () { return resolve({ application: undefined }); })\r\n                .catch(reject);\r\n        });\r\n    };\r\n    GW1Protocol.prototype.logout = function () {\r\n    };\r\n    GW1Protocol.prototype.loggedIn = function (callback) {\r\n        callback();\r\n        return function () {\r\n        };\r\n    };\r\n    GW1Protocol.prototype.processObjectMessage = function (message) {\r\n        throw new Error(\"not supported\");\r\n    };\r\n    GW1Protocol.prototype.createObjectMessage = function (product, type, message, id) {\r\n        throw new Error(\"not supported\");\r\n    };\r\n    return GW1Protocol;\r\n}());\n\nvar HCTransport = (function () {\r\n    function HCTransport() {\r\n        this.connectionId = Math.floor(1e10 * Math.random()).toString();\r\n    }\r\n    HCTransport.prototype.send = function (message, product, type) {\r\n        if (product === \"metrics\") {\r\n            window.htmlContainer.metricsFacade.send(type, message);\r\n        }\r\n        else if (product === \"log\") {\r\n            window.htmlContainer.loggingFacade.send(type, message);\r\n        }\r\n        return Promise.resolve(undefined);\r\n    };\r\n    HCTransport.prototype.onConnectedChanged = function (callback) {\r\n        callback(true);\r\n    };\r\n    HCTransport.prototype.onMessage = function (callback) {\r\n    };\r\n    HCTransport.prototype.close = function () {\r\n    };\r\n    HCTransport.prototype.open = function () {\r\n        return Promise.resolve();\r\n    };\r\n    HCTransport.prototype.reconnect = function () {\r\n        return Promise.resolve();\r\n    };\r\n    return HCTransport;\r\n}());\n\nvar Inproc = (function () {\r\n    function Inproc(gw, logger) {\r\n        var _this = this;\r\n        this.registry = lib();\r\n        this.gw = gw;\r\n        this.logger = logger;\r\n        this.gw.connect(function (_client, message) {\r\n            _this.messageHandler(message);\r\n        }).then(function (client) {\r\n            _this.client = client;\r\n        });\r\n    }\r\n    Object.defineProperty(Inproc.prototype, \"isObjectBasedTransport\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Inproc.prototype.sendObject = function (msg) {\r\n        if (this.client) {\r\n            this.client.send(msg);\r\n            return Promise.resolve(undefined);\r\n        }\r\n        else {\r\n            return Promise.reject(\"not connected\");\r\n        }\r\n    };\r\n    Inproc.prototype.send = function (msg, product, type) {\r\n        return Promise.reject(\"not supported\");\r\n    };\r\n    Inproc.prototype.onMessage = function (callback) {\r\n        return this.registry.add(\"onMessage\", callback);\r\n    };\r\n    Inproc.prototype.onConnectedChanged = function (callback) {\r\n        callback(true);\r\n    };\r\n    Inproc.prototype.close = function () {\r\n    };\r\n    Inproc.prototype.open = function () {\r\n        return Promise.resolve();\r\n    };\r\n    Inproc.prototype.reconnect = function () {\r\n        return Promise.resolve();\r\n    };\r\n    Inproc.prototype.messageHandler = function (msg) {\r\n        this.registry.execute(\"onMessage\", msg);\r\n    };\r\n    return Inproc;\r\n}());\n\nvar gatewayConnection = (function (settings) {\r\n    settings = settings || {};\r\n    settings.reconnectAttempts = settings.reconnectAttempts || 10;\r\n    settings.reconnectInterval = settings.reconnectInterval || 500;\r\n    var connection = new ConnectionImpl(settings);\r\n    var logger = settings.logger;\r\n    if (!logger) {\r\n        throw new Error(\"please pass a logger object\");\r\n    }\r\n    var protocol = new HCProtocol();\r\n    var transport = new HCTransport();\r\n    var outsideHC = settings.gdVersion !== 2 || settings.force;\r\n    if (outsideHC) {\r\n        if (settings.gw && settings.gw.facade && settings.protocolVersion === 3) {\r\n            transport = new Inproc(settings.gw.facade, logger.subLogger(\"inproc\"));\r\n        }\r\n        else if (settings.ws !== undefined) {\r\n            transport = new WS(settings, logger.subLogger(\"ws\"));\r\n        }\r\n        else {\r\n            throw new Error(\"No connection information specified\");\r\n        }\r\n        if (settings.protocolVersion === 3) {\r\n            var gw3Connection = new GW3ConnectionImpl(settings);\r\n            var gw3Port = gw3Protocol(gw3Connection, settings, logger.subLogger(\"gw3\"));\r\n            gw3Connection.init(transport, gw3Port);\r\n            return gw3Connection.toAPI();\r\n        }\r\n        else {\r\n            protocol = new GW1Protocol(connection, settings);\r\n        }\r\n    }\r\n    connection.init(transport, protocol);\r\n    return connection.toAPI();\r\n});\n\nvar LogLevel = (function () {\r\n    function LogLevel() {\r\n    }\r\n    LogLevel.canPublish = function (level, restriction) {\r\n        var levelIdx = LogLevel.order.indexOf(level);\r\n        var restrictionIdx = LogLevel.order.indexOf(restriction);\r\n        return levelIdx >= restrictionIdx;\r\n    };\r\n    LogLevel.off = \"off\";\r\n    LogLevel.trace = \"trace\";\r\n    LogLevel.debug = \"debug\";\r\n    LogLevel.info = \"info\";\r\n    LogLevel.warn = \"warn\";\r\n    LogLevel.error = \"error\";\r\n    LogLevel.order = [LogLevel.trace, LogLevel.debug, LogLevel.info, LogLevel.warn, LogLevel.error, LogLevel.off];\r\n    return LogLevel;\r\n}());\n\nvar Logger = (function () {\r\n    function Logger(name, parent, metricSystem, logFn) {\r\n        this.logFn = logFn;\r\n        this._subloggers = [];\r\n        this._name = name;\r\n        this._parent = parent;\r\n        if (parent) {\r\n            this._path = parent.path + \".\" + name;\r\n        }\r\n        else {\r\n            this._path = name;\r\n        }\r\n        this._loggerFullName = \"[\" + this._path + \"]\";\r\n        if (typeof metricSystem !== \"undefined\" && metricSystem) {\r\n            this.metricsLevel(\"warn\", metricSystem.subSystem(name));\r\n        }\r\n        this.includeTimeAndLevel = !logFn;\r\n        this.logFn = (logFn !== null && logFn !== void 0 ? logFn : console);\r\n    }\r\n    Object.defineProperty(Logger.prototype, \"name\", {\r\n        get: function () {\r\n            return this._name;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Logger.prototype, \"path\", {\r\n        get: function () {\r\n            return this._path;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Logger.prototype.subLogger = function (name) {\r\n        var existingSub = this._subloggers.filter(function (subLogger) {\r\n            return subLogger.name === name;\r\n        })[0];\r\n        if (existingSub !== undefined) {\r\n            return existingSub;\r\n        }\r\n        Object.keys(this).forEach(function (key) {\r\n            if (key === name) {\r\n                throw new Error(\"This sub logger name is not allowed.\");\r\n            }\r\n        });\r\n        var sub = new Logger(name, this, undefined, this.logFn);\r\n        this._subloggers.push(sub);\r\n        return sub;\r\n    };\r\n    Logger.prototype.publishLevel = function (level) {\r\n        var _a;\r\n        if (level !== null && level !== undefined) {\r\n            this._publishLevel = level;\r\n        }\r\n        return this._publishLevel || ((_a = this._parent) === null || _a === void 0 ? void 0 : _a.publishLevel());\r\n    };\r\n    Logger.prototype.consoleLevel = function (level) {\r\n        var _a;\r\n        if (level !== null && level !== undefined) {\r\n            this._consoleLevel = level;\r\n        }\r\n        return this._consoleLevel || ((_a = this._parent) === null || _a === void 0 ? void 0 : _a.consoleLevel());\r\n    };\r\n    Logger.prototype.metricsLevel = function (level, metricsSystem) {\r\n        var _a;\r\n        if (level !== null && level !== undefined) {\r\n            this._metricLevel = level;\r\n        }\r\n        if (metricsSystem !== undefined) {\r\n            if (typeof metricsSystem === \"object\" && typeof metricsSystem.objectMetric === \"function\") {\r\n                this._metricSystem = metricsSystem;\r\n            }\r\n            else {\r\n                throw new Error(\"Please specify metric system\");\r\n            }\r\n        }\r\n        return this._metricLevel || ((_a = this._parent) === null || _a === void 0 ? void 0 : _a.metricsLevel());\r\n    };\r\n    Logger.prototype.log = function (message, level) {\r\n        this.publishMessage(level || LogLevel.info, message);\r\n    };\r\n    Logger.prototype.trace = function (message) {\r\n        this.log(message, LogLevel.trace);\r\n    };\r\n    Logger.prototype.debug = function (message) {\r\n        this.log(message, LogLevel.debug);\r\n    };\r\n    Logger.prototype.info = function (message) {\r\n        this.log(message, LogLevel.info);\r\n    };\r\n    Logger.prototype.warn = function (message) {\r\n        this.log(message, LogLevel.warn);\r\n    };\r\n    Logger.prototype.error = function (message) {\r\n        this.log(message, LogLevel.error);\r\n    };\r\n    Logger.prototype.toAPIObject = function () {\r\n        var that = this;\r\n        return {\r\n            name: this.name,\r\n            subLogger: this.subLogger.bind(that),\r\n            publishLevel: this.publishLevel.bind(that),\r\n            consoleLevel: this.consoleLevel.bind(that),\r\n            metricsLevel: this.metricsLevel.bind(that),\r\n            log: this.log.bind(that),\r\n            trace: this.trace.bind(that),\r\n            debug: this.debug.bind(that),\r\n            info: this.info.bind(that),\r\n            warn: this.warn.bind(that),\r\n            error: this.error.bind(that),\r\n            canPublish: this.canPublish.bind(that)\r\n        };\r\n    };\r\n    Logger.prototype.canPublish = function (level) {\r\n        return LogLevel.canPublish(level, this.consoleLevel());\r\n    };\r\n    Logger.prototype.publishMessage = function (level, message) {\r\n        var _a, _b;\r\n        var loggerName = this._loggerFullName;\r\n        if (level === LogLevel.error) {\r\n            var e = new Error();\r\n            if (e.stack) {\r\n                message = message + \"\\n\" +\r\n                    (e.stack.split(\"\\n\").slice(3).join(\"\\n\"));\r\n            }\r\n        }\r\n        if (LogLevel.canPublish(level, this.consoleLevel())) {\r\n            var prefix = \"\";\r\n            if (this.includeTimeAndLevel) {\r\n                var date = new Date();\r\n                var time = date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds() + \":\" + date.getMilliseconds();\r\n                prefix = \"[\" + time + \"] [\" + level + \"] \";\r\n            }\r\n            var toPrint = \"\" + prefix + loggerName + \": \" + message;\r\n            switch (level) {\r\n                case LogLevel.trace:\r\n                    this.logFn.debug(toPrint);\r\n                    break;\r\n                case LogLevel.debug:\r\n                    if (this.logFn.debug) {\r\n                        this.logFn.debug(toPrint);\r\n                    }\r\n                    else {\r\n                        this.logFn.log(toPrint);\r\n                    }\r\n                    break;\r\n                case LogLevel.info:\r\n                    this.logFn.info(toPrint);\r\n                    break;\r\n                case LogLevel.warn:\r\n                    this.logFn.warn(toPrint);\r\n                    break;\r\n                case LogLevel.error:\r\n                    this.logFn.error(toPrint);\r\n                    break;\r\n            }\r\n        }\r\n        if (LogLevel.canPublish(level, this.publishLevel())) {\r\n            var isInGd3 = Logger.GetConnection && Logger.GetConnection() && Logger.GetConnection().protocolVersion >= 3;\r\n            if ((_a = Logger.Interop) === null || _a === void 0 ? void 0 : _a.methods({ name: Logger.InteropMethodName })) {\r\n                (_b = Logger.Interop) === null || _b === void 0 ? void 0 : _b.invoke(Logger.InteropMethodName, {\r\n                    msg: \"\" + message,\r\n                    logger: loggerName,\r\n                    level: level\r\n                });\r\n            }\r\n            if (Logger.GetConnection && !isInGd3) {\r\n                Logger.GetConnection().send(\"log\", \"LogMessage\", {\r\n                    instance: Logger.Instance,\r\n                    level: LogLevel.order.indexOf(level),\r\n                    logger: loggerName,\r\n                    message: message,\r\n                });\r\n            }\r\n        }\r\n        if (LogLevel.canPublish(level, this.metricsLevel())) {\r\n            if (this._metricSystem !== undefined) {\r\n                this._metricSystem.objectMetric(\"LogMessage\", {\r\n                    Level: level,\r\n                    Logger: loggerName,\r\n                    Message: message,\r\n                    Time: new Date(),\r\n                });\r\n                if (level === LogLevel.error) {\r\n                    this._metricSystem.setState(100, message);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Logger.InteropMethodName = \"T42.AppLogger.Log\";\r\n    return Logger;\r\n}());\n\nvar logger = (function (settings, rootLoggerName, logFn) {\r\n    var identity = settings.identity;\r\n    if (!identity) {\r\n        throw new Error(\"identity is missing\");\r\n    }\r\n    var identityStr = identity.system + \"\\\\\" + identity.service + \"\\\\\" + identity.instance;\r\n    Logger.Instance = identityStr;\r\n    Logger.GetConnection = settings.getConnection;\r\n    var mainLogger = new Logger(\"\" + rootLoggerName, undefined, undefined, logFn);\r\n    mainLogger.publishLevel(settings.publish || \"off\");\r\n    mainLogger.consoleLevel(settings.console || \"info\");\r\n    mainLogger.metricsLevel(settings.metrics || \"off\");\r\n    var apiLogger = mainLogger.toAPIObject();\r\n    return apiLogger;\r\n});\n\nvar InstanceWrapper = (function () {\r\n    function InstanceWrapper(instance, connection) {\r\n        var _this = this;\r\n        this.wrapped = {\r\n            getMethods: getMethods,\r\n            getStreams: getStreams,\r\n        };\r\n        this.refreshWrappedObject(instance);\r\n        if (connection) {\r\n            connection.loggedIn(function () {\r\n                _this.refresh(connection);\r\n            });\r\n            this.refresh(connection);\r\n        }\r\n    }\r\n    InstanceWrapper.prototype.unwrap = function () {\r\n        return this.wrapped;\r\n    };\r\n    InstanceWrapper.prototype.refresh = function (connection) {\r\n        var _a, _b;\r\n        if (!connection) {\r\n            return;\r\n        }\r\n        var resolvedIdentity = (_a = connection) === null || _a === void 0 ? void 0 : _a.resolvedIdentity;\r\n        var instance = Object.assign({}, (resolvedIdentity !== null && resolvedIdentity !== void 0 ? resolvedIdentity : {}), { peerId: (_b = connection) === null || _b === void 0 ? void 0 : _b.peerId });\r\n        this.refreshWrappedObject(instance);\r\n    };\r\n    InstanceWrapper.prototype.refreshWrappedObject = function (resolvedIdentity) {\r\n        var _a, _b, _c;\r\n        this.wrapped.user = resolvedIdentity.user;\r\n        this.wrapped.instance = resolvedIdentity.instance;\r\n        this.wrapped.application = (_a = resolvedIdentity.application, (_a !== null && _a !== void 0 ? _a : shortid()));\r\n        this.wrapped.applicationName = resolvedIdentity.applicationName;\r\n        this.wrapped.pid = (_c = (_b = resolvedIdentity.pid, (_b !== null && _b !== void 0 ? _b : resolvedIdentity.process)), (_c !== null && _c !== void 0 ? _c : Math.floor(Math.random() * 10000000000)));\r\n        this.wrapped.machine = resolvedIdentity.machine;\r\n        this.wrapped.environment = resolvedIdentity.environment;\r\n        this.wrapped.region = resolvedIdentity.region;\r\n        this.wrapped.windowId = resolvedIdentity.windowId;\r\n        this.wrapped.isLocal = true;\r\n        this.wrapped.api = resolvedIdentity.api;\r\n        this.wrapped.service = resolvedIdentity.service;\r\n        this.wrapped.peerId = resolvedIdentity.peerId;\r\n    };\r\n    return InstanceWrapper;\r\n}());\r\nfunction getMethods() {\r\n    var _a;\r\n    return (_a = InstanceWrapper.API) === null || _a === void 0 ? void 0 : _a.methodsForInstance(this);\r\n}\r\nfunction getStreams() {\r\n    var _a;\r\n    return (_a = InstanceWrapper.API) === null || _a === void 0 ? void 0 : _a.methodsForInstance(this).filter(function (m) { return m.supportsStreaming; });\r\n}\n\nfunction promisify (promise, successCallback, errorCallback) {\r\n    if (typeof successCallback !== \"function\" && typeof errorCallback !== \"function\") {\r\n        return promise;\r\n    }\r\n    if (typeof successCallback !== \"function\") {\r\n        successCallback = function () { };\r\n    }\r\n    else if (typeof errorCallback !== \"function\") {\r\n        errorCallback = function () { };\r\n    }\r\n    promise.then(successCallback, errorCallback);\r\n}\n\nvar NativeAGM = (function () {\r\n    function NativeAGM(instance, helpers, agmFacade) {\r\n        this.instance = instance;\r\n        this.helpers = helpers;\r\n        this.agmFacade = agmFacade;\r\n        this.protocolVersion = this.agmFacade.protocolVersion;\r\n    }\r\n    NativeAGM.prototype.register = function (name, handler) {\r\n        var methodInfoAsObject = this.helpers.stringToObject(name, \"name\");\r\n        this.helpers.validateMethodInfo(methodInfoAsObject);\r\n        if (this.protocolVersion && this.protocolVersion >= 3) {\r\n            this.agmFacade.register(JSON.stringify(methodInfoAsObject), handler, true);\r\n        }\r\n        else {\r\n            this.agmFacade.register(JSON.stringify(methodInfoAsObject), function (arg, caller) {\r\n                var methodResult = handler(JSON.parse(arg), caller);\r\n                return JSON.stringify(methodResult);\r\n            });\r\n        }\r\n        return Promise.resolve();\r\n    };\r\n    NativeAGM.prototype.registerAsync = function (name, handler) {\r\n        if (!this.agmFacade.registerAsync) {\r\n            throw new Error(\"not supported in that version of HtmlContainer\");\r\n        }\r\n        var methodInfoAsObject = this.helpers.stringToObject(name, \"name\");\r\n        this.helpers.validateMethodInfo(methodInfoAsObject);\r\n        this.agmFacade.registerAsync(methodInfoAsObject, function (args, instance, tracker) {\r\n            handler(args, instance, function (successArgs) {\r\n                tracker.success(successArgs);\r\n            }, function (error) {\r\n                tracker.error(error);\r\n            });\r\n        });\r\n        return Promise.resolve();\r\n    };\r\n    NativeAGM.prototype.unregister = function (definition) {\r\n        this.agmFacade.unregister(JSON.stringify(this.helpers.stringToObject(definition, \"name\")));\r\n    };\r\n    NativeAGM.prototype.invoke = function (method, argumentObj, target, options, success, error) {\r\n        var _this = this;\r\n        var promise = new Promise(function (resolve, reject) {\r\n            if (argumentObj === undefined) {\r\n                argumentObj = {};\r\n            }\r\n            if (typeof argumentObj !== \"object\") {\r\n                reject({ message: \"The method arguments must be an object.\" });\r\n            }\r\n            if (options === undefined) {\r\n                options = {};\r\n            }\r\n            target = _this.helpers.targetArgToObject(target);\r\n            if (_this.agmFacade.invoke2) {\r\n                _this.agmFacade.invoke2(JSON.stringify(_this.helpers.stringToObject(method, \"name\")), argumentObj, JSON.stringify(target), JSON.stringify(options), function (a) {\r\n                    resolve(a);\r\n                }, function (err) {\r\n                    reject(err);\r\n                });\r\n            }\r\n            else {\r\n                var successProxy = void 0;\r\n                var errorProxy = void 0;\r\n                successProxy = function (args) {\r\n                    var parsed = JSON.parse(args);\r\n                    resolve(parsed);\r\n                };\r\n                errorProxy = function (args) {\r\n                    var parsed = JSON.parse(args);\r\n                    reject(parsed);\r\n                };\r\n                _this.agmFacade.invoke(JSON.stringify(_this.helpers.stringToObject(method, \"name\")), JSON.stringify(argumentObj), JSON.stringify(target), JSON.stringify(options), successProxy, errorProxy);\r\n            }\r\n        });\r\n        return promisify(promise, success, error);\r\n    };\r\n    NativeAGM.prototype.createStream = function (methodDefinition, options, successCallback, errorCallback) {\r\n        var _this = this;\r\n        var promise = new Promise(function (resolve, reject) {\r\n            if (typeof methodDefinition === \"string\") {\r\n                methodDefinition = {\r\n                    name: methodDefinition,\r\n                    getServers: function () { return []; },\r\n                };\r\n            }\r\n            if (!options) {\r\n                options = {\r\n                    subscriptionRequestHandler: undefined,\r\n                    subscriptionAddedHandler: undefined,\r\n                    subscriptionRemovedHandler: undefined,\r\n                };\r\n            }\r\n            _this.agmFacade.createStream2(JSON.stringify(methodDefinition), options.subscriptionRequestHandler, options.subscriptionAddedHandler, options.subscriptionRemovedHandler, function (stream) {\r\n                resolve(stream);\r\n            }, function (error) {\r\n                reject(error);\r\n            });\r\n        });\r\n        return promisify(promise, successCallback, errorCallback);\r\n    };\r\n    NativeAGM.prototype.subscribe = function (methodDefinition, parameters, successCallback, errorCallback) {\r\n        var _this = this;\r\n        var promise = new Promise(function (resolve, reject) {\r\n            if (typeof methodDefinition === \"undefined\") {\r\n                reject(\"method definition param is required\");\r\n            }\r\n            if (parameters === undefined) {\r\n                parameters = {};\r\n            }\r\n            parameters.args = JSON.stringify(parameters.arguments || {});\r\n            parameters.target = _this.helpers.targetArgToObject(parameters.target);\r\n            var name;\r\n            if (typeof methodDefinition === \"string\") {\r\n                name = methodDefinition;\r\n            }\r\n            else {\r\n                name = methodDefinition.name;\r\n            }\r\n            _this.agmFacade.subscribe2(name, JSON.stringify(parameters), function (sub) {\r\n                resolve(sub);\r\n            }, function (error) {\r\n                reject(error);\r\n            });\r\n        });\r\n        return promisify(promise, successCallback, errorCallback);\r\n    };\r\n    NativeAGM.prototype.servers = function (filter) {\r\n        var _this = this;\r\n        var jsonResult = this.agmFacade.servers(JSON.stringify(this.helpers.stringToObject(filter, \"name\")));\r\n        var parsedResult = this.helpers.agmParse(jsonResult);\r\n        return parsedResult.map(function (server) {\r\n            return _this.transformServerObject(server);\r\n        });\r\n    };\r\n    NativeAGM.prototype.methods = function (filter) {\r\n        var _this = this;\r\n        var jsonResult = this.agmFacade.methods(JSON.stringify(this.helpers.stringToObject(filter, \"name\")));\r\n        var parsedResult = this.helpers.agmParse(jsonResult);\r\n        return parsedResult.map(function (method) {\r\n            return _this.transformMethodObject(method);\r\n        });\r\n    };\r\n    NativeAGM.prototype.methodAdded = function (callback) {\r\n        var _this = this;\r\n        var subscribed = true;\r\n        this.agmFacade.methodAdded(function (method) {\r\n            if (subscribed) {\r\n                callback(_this.transformMethodObject(method));\r\n            }\r\n        });\r\n        return function () {\r\n            subscribed = false;\r\n        };\r\n    };\r\n    NativeAGM.prototype.methodRemoved = function (callback) {\r\n        var _this = this;\r\n        var subscribed = true;\r\n        this.agmFacade.methodRemoved(function (method) {\r\n            if (subscribed) {\r\n                callback(_this.transformMethodObject(method));\r\n            }\r\n        });\r\n        return function () {\r\n            subscribed = false;\r\n        };\r\n    };\r\n    NativeAGM.prototype.serverAdded = function (callback) {\r\n        var _this = this;\r\n        var subscribed = true;\r\n        this.agmFacade.serverAdded(function (server) {\r\n            if (subscribed) {\r\n                callback(_this.transformServerObject(server));\r\n            }\r\n        });\r\n        return function () {\r\n            subscribed = false;\r\n        };\r\n    };\r\n    NativeAGM.prototype.serverRemoved = function (callback) {\r\n        var _this = this;\r\n        var subscribed = true;\r\n        this.agmFacade.serverRemoved(function (server) {\r\n            if (subscribed) {\r\n                callback(_this.transformServerObject(server));\r\n            }\r\n        });\r\n        return function () {\r\n            subscribed = false;\r\n        };\r\n    };\r\n    NativeAGM.prototype.serverMethodAdded = function (callback) {\r\n        var _this = this;\r\n        var subscribed = true;\r\n        this.agmFacade.serverMethodAdded(function (info) {\r\n            if (subscribed) {\r\n                callback({\r\n                    server: _this.transformServerObject(info.server),\r\n                    method: _this.transformMethodObject(info.method),\r\n                });\r\n            }\r\n        });\r\n        return function () {\r\n            subscribed = false;\r\n        };\r\n    };\r\n    NativeAGM.prototype.serverMethodRemoved = function (callback) {\r\n        var _this = this;\r\n        var subscribed = true;\r\n        this.agmFacade.serverMethodRemoved(function (info) {\r\n            if (subscribed) {\r\n                callback({\r\n                    server: _this.transformServerObject(info.server),\r\n                    method: _this.transformMethodObject(info.method),\r\n                });\r\n            }\r\n        });\r\n        return function () {\r\n            subscribed = false;\r\n        };\r\n    };\r\n    NativeAGM.prototype.methodsForInstance = function (server) {\r\n        var jsonResult = this.agmFacade.methodsForInstance(JSON.stringify(server));\r\n        var methods = this.helpers.agmParse(jsonResult);\r\n        return methods.map(this.transformMethodObject);\r\n    };\r\n    NativeAGM.prototype.transformMethodObject = function (method) {\r\n        var _this = this;\r\n        if (!method) {\r\n            return undefined;\r\n        }\r\n        if (!method.displayName) {\r\n            method.displayName = method.display_name;\r\n        }\r\n        if (!method.objectTypes) {\r\n            method.objectTypes = method.object_types;\r\n        }\r\n        method.getServers = function () {\r\n            return _this.servers(method.name);\r\n        };\r\n        return method;\r\n    };\r\n    NativeAGM.prototype.transformServerObject = function (server) {\r\n        var _this = this;\r\n        if (!server) {\r\n            return undefined;\r\n        }\r\n        server.getMethods = function () {\r\n            return _this.methodsForInstance(server);\r\n        };\r\n        server.getStreams = function () {\r\n            return _this.methodsForInstance(server).filter(function (method) {\r\n                return method.supportsStreaming;\r\n            });\r\n        };\r\n        return server;\r\n    };\r\n    return NativeAGM;\r\n}());\n\nvar Helpers$1 = (function () {\r\n    function Helpers(facade) {\r\n        this.facade = facade;\r\n        this.dateTimeIdentifier = facade.jsonValueDatePrefix;\r\n        this.lenOfIdentifier = this.dateTimeIdentifier.length;\r\n    }\r\n    Helpers.prototype.agmParse = function (str) {\r\n        var _this = this;\r\n        return JSON.parse(str, function (k, v) {\r\n            if (typeof v !== \"string\") {\r\n                return v;\r\n            }\r\n            if (v[0] !== _this.dateTimeIdentifier[0]) {\r\n                return v;\r\n            }\r\n            if (v.indexOf(_this.dateTimeIdentifier) !== 0) {\r\n                return v;\r\n            }\r\n            var unixTimestampMs = v.substr(_this.lenOfIdentifier);\r\n            return new Date(parseFloat(unixTimestampMs));\r\n        });\r\n    };\r\n    Helpers.prototype.targetArgToObject = function (target) {\r\n        var _this = this;\r\n        target = target || \"best\";\r\n        if (typeof target === \"string\") {\r\n            if (target !== \"all\" && target !== \"best\") {\r\n                throw new Error(target + \" is not a valid target. Valid targets are 'all' and 'best'\");\r\n            }\r\n            return { target: target };\r\n        }\r\n        else {\r\n            if (!Array.isArray(target)) {\r\n                target = [target];\r\n            }\r\n            target = target.map(function (e) {\r\n                return _this.convertInstanceToRegex(e);\r\n            });\r\n            return { serverFilter: target };\r\n        }\r\n    };\r\n    Helpers.prototype.convertInstanceToRegex = function (instance) {\r\n        var instanceConverted = {};\r\n        Object.keys(instance).forEach(function (key) {\r\n            var propValue = instance[key];\r\n            instanceConverted[key] = propValue;\r\n            if (typeof propValue === \"undefined\" || propValue === null) {\r\n                return;\r\n            }\r\n            if (typeof propValue === \"string\" && propValue !== \"\") {\r\n                instanceConverted[key] = \"^\" + instance[key] + \"$\";\r\n            }\r\n            else if (instance[key].constructor === RegExp) {\r\n                instanceConverted[key] = instance[key].source;\r\n            }\r\n            else {\r\n                instanceConverted[key] = instance[key];\r\n            }\r\n        });\r\n        return instanceConverted;\r\n    };\r\n    Helpers.prototype.validateMethodInfo = function (methodInfo) {\r\n        if (typeof methodInfo === \"undefined\") {\r\n            throw Error(\"methodInfo is required argument\");\r\n        }\r\n        if (!methodInfo.name) {\r\n            throw Error(\"methodInfo object must contain name property\");\r\n        }\r\n        if (methodInfo.objectTypes) {\r\n            methodInfo.object_types = methodInfo.objectTypes;\r\n        }\r\n        if (methodInfo.displayName) {\r\n            methodInfo.display_name = methodInfo.displayName;\r\n        }\r\n    };\r\n    Helpers.prototype.stringToObject = function (param, stringPropName) {\r\n        if (typeof param === \"string\") {\r\n            var obj = {};\r\n            obj[stringPropName] = param;\r\n            return obj;\r\n        }\r\n        return param;\r\n    };\r\n    return Helpers;\r\n}());\n\nfunction nativeAgm (configuration) {\r\n    var facade = window.htmlContainer.jsAgmFacade;\r\n    var cfgAsString = createConfig(configuration);\r\n    return new Promise(function (resolve, reject) {\r\n        var successInit = function (instance) {\r\n            var nativeAGM = new NativeAGM(instance, new Helpers$1(facade), facade);\r\n            nativeAGM.create_stream = nativeAGM.createStream;\r\n            nativeAGM.methods_for_instance = nativeAGM.methodsForInstance;\r\n            nativeAGM.method_added = nativeAGM.methodAdded;\r\n            nativeAGM.method_removed = nativeAGM.methodRemoved;\r\n            nativeAGM.server_added = nativeAGM.serverAdded;\r\n            nativeAGM.server_removed = nativeAGM.serverRemoved;\r\n            nativeAGM.server_method_added = nativeAGM.serverMethodAdded;\r\n            nativeAGM.server_method_removed = nativeAGM.serverMethodRemoved;\r\n            resolve(nativeAGM);\r\n        };\r\n        if (facade.protocolVersion && facade.protocolVersion >= 5 && facade.initAsync) {\r\n            facade.initAsync(cfgAsString, successInit, function (err) {\r\n                reject(err);\r\n            });\r\n        }\r\n        else {\r\n            var instance = facade.init(cfgAsString);\r\n            successInit(instance);\r\n        }\r\n    });\r\n}\r\nvar createConfig = function (configuration) {\r\n    if (configuration !== undefined && configuration.metrics !== undefined) {\r\n        configuration.metrics.metricsIdentity = configuration.metrics.identity;\r\n        var metricsConfig = {\r\n            metricsIdentity: configuration.metrics.metricsIdentity,\r\n            path: configuration.metrics.path,\r\n        };\r\n        configuration.metrics = metricsConfig;\r\n    }\r\n    delete configuration.logger;\r\n    return JSON.stringify(configuration);\r\n};\n\nfunction convertInfoToInstance(info) {\r\n    if (typeof info !== \"object\") {\r\n        info = {};\r\n    }\r\n    return {\r\n        application: info.ApplicationName,\r\n        environment: info.Environment,\r\n        machine: info.MachineName,\r\n        pid: info.ProcessId,\r\n        region: info.Region,\r\n        service: info.ServiceName,\r\n        user: info.UserName,\r\n        started: info.ProcessStartTime,\r\n    };\r\n}\r\nfunction isStreamingFlagSet(flags) {\r\n    if (typeof flags !== \"number\" || isNaN(flags)) {\r\n        return false;\r\n    }\r\n    var mask = 32;\r\n    var result = flags & mask;\r\n    return result === mask;\r\n}\r\nfunction convertInstance(instance) {\r\n    return {\r\n        ApplicationName: instance.application,\r\n        ProcessId: instance.pid,\r\n        MachineName: instance.machine,\r\n        UserName: instance.user,\r\n        Environment: instance.environment,\r\n        Region: instance.region,\r\n    };\r\n}\n\nvar ServerStreaming = (function () {\r\n    function ServerStreaming(connection, instance) {\r\n        this.connection = connection;\r\n        this.instance = instance;\r\n    }\r\n    ServerStreaming.prototype.isStreamMsg = function (msg, method) {\r\n        return (msg &&\r\n            msg.EventStreamAction &&\r\n            msg.EventStreamAction !== 0 &&\r\n            typeof method === \"object\" &&\r\n            method.definition.supportsStreaming === true);\r\n    };\r\n    ServerStreaming.prototype.pushData = function (streamingMethod, data, branches) {\r\n        var _this = this;\r\n        if (typeof streamingMethod !== \"object\" || !Array.isArray(streamingMethod.protocolState.branchKeyToStreamIdMap)) {\r\n            return;\r\n        }\r\n        if (typeof data !== \"object\") {\r\n            throw new Error(\"Invalid arguments. Data must be an object.\");\r\n        }\r\n        if (typeof branches === \"string\") {\r\n            branches = [branches];\r\n        }\r\n        else if (!Array.isArray(branches) || branches.length <= 0) {\r\n            branches = null;\r\n        }\r\n        var streamIdList = streamingMethod.protocolState.branchKeyToStreamIdMap\r\n            .filter(function (br) {\r\n            return (branches === null || (Boolean(br) && typeof br.key === \"string\" && branches.indexOf(br.key) >= 0));\r\n        }).map(function (br) {\r\n            return br.streamId;\r\n        });\r\n        var server = convertInstance(this.instance);\r\n        streamIdList.forEach(function (streamId) {\r\n            _this.sendResult({\r\n                EventStreamAction: 5,\r\n                EventStreamSubject: streamingMethod.protocolState.globalEventStreamSubject,\r\n                MethodName: streamingMethod.protocolState.method.Method.Name,\r\n                MethodRequestSubject: streamingMethod.protocolState.method.MethodRequestSubject,\r\n                ResultContextJson: data,\r\n                Server: server,\r\n                StreamId: streamId,\r\n            });\r\n        });\r\n    };\r\n    ServerStreaming.prototype.closeAllSubscriptions = function (streamingMethod, branchKey) {\r\n        var _this = this;\r\n        if (typeof streamingMethod !== \"object\" || !Array.isArray(streamingMethod.protocolState.branchKeyToStreamIdMap)) {\r\n            return;\r\n        }\r\n        var streamList = streamingMethod.protocolState.branchKeyToStreamIdMap;\r\n        if (typeof branchKey === \"string\") {\r\n            streamList = streamingMethod.protocolState.branchKeyToStreamIdMap.filter(function (br) {\r\n                return (typeof br === \"object\" && br.key === branchKey);\r\n            });\r\n        }\r\n        streamList.forEach(function (br) {\r\n            var streamId = br.streamId;\r\n            _this.sendResult({\r\n                EventStreamAction: 2,\r\n                EventStreamSubject: streamingMethod.protocolState.globalEventStreamSubject,\r\n                MethodName: streamingMethod.protocolState.method.Method.Name,\r\n                MethodRequestSubject: streamingMethod.protocolState.method.MethodRequestSubject,\r\n                Server: convertInstance(_this.instance),\r\n                StreamId: streamId,\r\n                Status: 0,\r\n            });\r\n        });\r\n    };\r\n    ServerStreaming.prototype.getBranchList = function (streamingMethod) {\r\n        if (typeof streamingMethod !== \"object\") {\r\n            return [];\r\n        }\r\n        return this.getUniqueBranchNames(streamingMethod);\r\n    };\r\n    ServerStreaming.prototype.getSubscriptionList = function (streamingMethod, branchKey) {\r\n        if (typeof streamingMethod !== \"object\") {\r\n            return [];\r\n        }\r\n        var subscriptions = [];\r\n        if (typeof branchKey !== \"string\") {\r\n            subscriptions = streamingMethod.protocolState.subscriptions;\r\n        }\r\n        else {\r\n            subscriptions = streamingMethod.protocolState.subscriptions.filter(function (sub) {\r\n                return sub.branchKey === branchKey;\r\n            });\r\n        }\r\n        return subscriptions;\r\n    };\r\n    ServerStreaming.prototype.onSubAdded = function (handlerFunc) {\r\n        if (typeof handlerFunc !== \"function\") {\r\n            return;\r\n        }\r\n        this.subAddedHandler = handlerFunc;\r\n    };\r\n    ServerStreaming.prototype.onSubRemoved = function (handlerFunc) {\r\n        if (typeof handlerFunc !== \"function\") {\r\n            return;\r\n        }\r\n        this.subRemovedHandler = handlerFunc;\r\n    };\r\n    ServerStreaming.prototype.onSubRequest = function (handlerFunc) {\r\n        if (typeof handlerFunc !== \"function\") {\r\n            return;\r\n        }\r\n        this.requestHandler = handlerFunc;\r\n    };\r\n    ServerStreaming.prototype.generateNewStreamId = function (streamingMethodName) {\r\n        var appInfo = convertInstance(this.instance);\r\n        return \"streamId-jsb_of_\" +\r\n            streamingMethodName +\r\n            \"__by_\" +\r\n            appInfo.ApplicationName +\r\n            \"_\" +\r\n            shortid();\r\n    };\r\n    ServerStreaming.prototype.rejectRequest = function (requestContext, streamingMethod, reason) {\r\n        if (typeof reason !== \"string\") {\r\n            reason = \"\";\r\n        }\r\n        var msg = requestContext.msg;\r\n        this.sendResult({\r\n            EventStreamAction: 2,\r\n            EventStreamSubject: streamingMethod.protocolState.globalEventStreamSubject,\r\n            MethodName: streamingMethod.protocolState.method.Method.Name,\r\n            MethodRequestSubject: streamingMethod.protocolState.method.MethodRequestSubject,\r\n            MethodResponseSubject: msg.MethodResponseSubject,\r\n            MethodVersion: streamingMethod.protocolState.method.Method.Version,\r\n            ResultMessage: reason,\r\n            Server: convertInstance(this.instance),\r\n            StreamId: \"default_rejection_streamId\",\r\n        });\r\n    };\r\n    ServerStreaming.prototype.pushDataToSingle = function (streamingMethod, subscription, data) {\r\n        if (typeof data !== \"object\") {\r\n            throw new Error(\"Invalid arguments. Data must be an object.\");\r\n        }\r\n        this.sendResult({\r\n            EventStreamAction: 5,\r\n            EventStreamSubject: subscription.privateEventStreamSubject,\r\n            MethodName: streamingMethod.protocolState.method.Method.Name,\r\n            MethodRequestSubject: streamingMethod.protocolState.method.MethodRequestSubject,\r\n            ResultContextJson: data,\r\n            Server: convertInstance(this.instance),\r\n            StreamId: subscription.streamId,\r\n        });\r\n    };\r\n    ServerStreaming.prototype.closeSingleSubscription = function (streamingMethod, subscription) {\r\n        this.closeIndividualSubscription(streamingMethod, subscription.streamId, subscription.privateEventStreamSubject, true);\r\n    };\r\n    ServerStreaming.prototype.acceptRequestOnBranch = function (requestContext, streamingMethod, branch) {\r\n        if (typeof branch !== \"string\") {\r\n            branch = \"\";\r\n        }\r\n        var streamId = this.getStreamId(streamingMethod, branch);\r\n        var msg = requestContext.msg;\r\n        this.sendResult({\r\n            EventStreamAction: 3,\r\n            EventStreamSubject: streamingMethod.protocolState.globalEventStreamSubject,\r\n            InvocationId: msg.Context.InvocationId,\r\n            MethodName: streamingMethod.protocolState.method.Method.Name,\r\n            MethodRequestSubject: streamingMethod.protocolState.method.MethodRequestSubject,\r\n            MethodResponseSubject: msg.MethodResponseSubject,\r\n            MethodVersion: streamingMethod.protocolState.method.Method.Version,\r\n            ResultMessage: \"Accepted\",\r\n            Server: convertInstance(this.instance),\r\n            StreamId: streamId,\r\n        });\r\n    };\r\n    ServerStreaming.prototype.processSubscriberMsg = function (msg, streamingMethod) {\r\n        if (!(msg && msg.EventStreamAction && msg.EventStreamAction !== 0)) {\r\n            return;\r\n        }\r\n        if (msg.EventStreamAction === 1) {\r\n            this.clientWishesToSubscribe(msg, streamingMethod);\r\n        }\r\n        else if (msg.EventStreamAction === 2) {\r\n            this.clientWishesToUnsubscribe(msg, streamingMethod);\r\n        }\r\n        else if (msg.EventStreamAction === 3) {\r\n            this.clientAcknowledgesItDidSubscribe(msg, streamingMethod);\r\n        }\r\n        else if (msg.EventStreamAction === 4) {\r\n            this.clientPerSubHeartbeat(msg);\r\n        }\r\n    };\r\n    ServerStreaming.prototype.sendResult = function (message) {\r\n        if (typeof message !== \"object\") {\r\n            throw new Error(\"Invalid message.\");\r\n        }\r\n        if (typeof message.Status !== \"number\") {\r\n            message.Status = 0;\r\n        }\r\n        this.connection.send(\"agm\", \"MethodInvocationResultMessage\", message);\r\n    };\r\n    ServerStreaming.prototype.clientWishesToSubscribe = function (msg, streamingMethod) {\r\n        var requestContext = {\r\n            msg: msg,\r\n            arguments: msg.Context.ArgumentsJson || {},\r\n            instance: convertInfoToInstance(msg.Client),\r\n        };\r\n        if (typeof this.requestHandler === \"function\") {\r\n            this.requestHandler(requestContext, streamingMethod);\r\n        }\r\n    };\r\n    ServerStreaming.prototype.clientWishesToUnsubscribe = function (msg, streamingMethod) {\r\n        if (!(streamingMethod &&\r\n            Array.isArray(streamingMethod.protocolState.subscriptions) &&\r\n            streamingMethod.protocolState.subscriptions.length > 0)) {\r\n            return;\r\n        }\r\n        this.closeIndividualSubscription(streamingMethod, msg.StreamId, msg.EventStreamSubject, false);\r\n    };\r\n    ServerStreaming.prototype.clientAcknowledgesItDidSubscribe = function (msg, streamingMethod) {\r\n        if (typeof msg.StreamId !== \"string\" || msg.StreamId === \"\") {\r\n            return;\r\n        }\r\n        var branchKey = this.getBranchKey(streamingMethod, msg.StreamId);\r\n        if (typeof branchKey !== \"string\") {\r\n            return;\r\n        }\r\n        if (!Array.isArray(streamingMethod.protocolState.subscriptions)) {\r\n            return;\r\n        }\r\n        var subscription = {\r\n            branchKey: branchKey,\r\n            instance: convertInfoToInstance(msg.Client),\r\n            arguments: msg.Context.ArgumentsJson,\r\n            streamId: msg.StreamId,\r\n            privateEventStreamSubject: msg.EventStreamSubject,\r\n            methodResponseSubject: msg.MethodResponseSubject,\r\n        };\r\n        streamingMethod.protocolState.subscriptions.push(subscription);\r\n        if (typeof this.subAddedHandler === \"function\") {\r\n            this.subAddedHandler(subscription, streamingMethod);\r\n        }\r\n    };\r\n    ServerStreaming.prototype.clientPerSubHeartbeat = function (msg) {\r\n    };\r\n    ServerStreaming.prototype.getBranchKey = function (streamingMethod, streamId) {\r\n        if (typeof streamId !== \"string\" || typeof streamingMethod !== \"object\") {\r\n            return;\r\n        }\r\n        var needle = streamingMethod.protocolState.branchKeyToStreamIdMap.filter(function (branch) {\r\n            return branch.streamId === streamId;\r\n        })[0];\r\n        if (typeof needle !== \"object\" || typeof needle.key !== \"string\") {\r\n            return;\r\n        }\r\n        return needle.key;\r\n    };\r\n    ServerStreaming.prototype.getStreamId = function (streamingMethod, branchKey) {\r\n        if (typeof branchKey !== \"string\") {\r\n            branchKey = \"\";\r\n        }\r\n        var needleBranch = streamingMethod.protocolState.branchKeyToStreamIdMap.filter(function (branch) {\r\n            return branch.key === branchKey;\r\n        })[0];\r\n        var streamId = (needleBranch ? needleBranch.streamId : undefined);\r\n        if (typeof streamId !== \"string\" || streamId === \"\") {\r\n            streamId = this.generateNewStreamId(streamingMethod.protocolState.method.Method.Name);\r\n            streamingMethod.protocolState.branchKeyToStreamIdMap.push({ key: branchKey, streamId: streamId });\r\n        }\r\n        return streamId;\r\n    };\r\n    ServerStreaming.prototype.closeIndividualSubscription = function (streamingMethod, streamId, privateEventStreamSubject, sendKickMessage) {\r\n        var subscription = streamingMethod.protocolState.subscriptions.filter(function (subItem) {\r\n            return (subItem.privateEventStreamSubject === privateEventStreamSubject &&\r\n                subItem.streamId === streamId);\r\n        })[0];\r\n        if (typeof subscription !== \"object\") {\r\n            return;\r\n        }\r\n        var initialLength = streamingMethod.protocolState.subscriptions.length;\r\n        streamingMethod.protocolState.subscriptions = streamingMethod.protocolState.subscriptions.filter(function (subItem) {\r\n            return !(subItem.privateEventStreamSubject === subscription.privateEventStreamSubject &&\r\n                subItem.streamId === subscription.streamId);\r\n        });\r\n        var filteredLength = streamingMethod.protocolState.subscriptions.length;\r\n        if (filteredLength !== (initialLength - 1)) {\r\n            return;\r\n        }\r\n        if (sendKickMessage === true) {\r\n            this.sendResult({\r\n                EventStreamAction: 2,\r\n                EventStreamSubject: privateEventStreamSubject,\r\n                MethodName: streamingMethod.protocolState.method.Method.Name,\r\n                MethodRequestSubject: streamingMethod.protocolState.method.MethodRequestSubject,\r\n                MethodResponseSubject: subscription.methodResponseSubject,\r\n                MethodVersion: streamingMethod.protocolState.method.Method.Version,\r\n                ResponseContextJson: {},\r\n                Server: convertInstance(this.instance),\r\n                StreamId: subscription.streamId,\r\n                Status: 0,\r\n            });\r\n        }\r\n        if (typeof this.subRemovedHandler === \"function\") {\r\n            this.subRemovedHandler(subscription, streamingMethod);\r\n        }\r\n    };\r\n    ServerStreaming.prototype.getUniqueBranchNames = function (streamingMethod) {\r\n        var keysWithDuplicates = streamingMethod.protocolState.subscriptions.map(function (sub) {\r\n            var result = null;\r\n            if (typeof sub === \"object\" && typeof sub.branchKey === \"string\") {\r\n                result = sub.branchKey;\r\n            }\r\n            return result;\r\n        });\r\n        var seen = [];\r\n        var branchArray = keysWithDuplicates.filter(function (bKey) {\r\n            if (bKey === null || seen.indexOf(bKey) >= 0) {\r\n                return false;\r\n            }\r\n            seen.push(bKey);\r\n            return true;\r\n        });\r\n        return branchArray;\r\n    };\r\n    return ServerStreaming;\r\n}());\n\nvar HeartbeatInterval = 5000;\r\nvar PresenceInterval = 10000;\r\nvar ServerProtocol = (function () {\r\n    function ServerProtocol(connection, instance, configuration, serverRepository) {\r\n        var _this = this;\r\n        this.connection = connection;\r\n        this.instance = instance;\r\n        this.serverRepository = serverRepository;\r\n        this.invocationMessagesMap = {};\r\n        this.reqCounter = 0;\r\n        this.callbacks = lib();\r\n        this.streaming = new ServerStreaming(connection, instance);\r\n        connection.on(\"agm\", \"MethodInvocationRequestMessage\", function (msg) { return _this.handleMethodInvocationMessage(msg); });\r\n        connection.disconnected(this.stopTimers.bind(this));\r\n        this.sendHeartbeat();\r\n        if (this.heartbeatTimer === undefined) {\r\n            this.heartbeatTimer = setInterval(function () { return _this.sendHeartbeat(); }, HeartbeatInterval);\r\n        }\r\n        this.getBranchList = this.streaming.getBranchList;\r\n        this.getSubscriptionList = this.streaming.getSubscriptionList;\r\n        this.closeAllSubscriptions = this.streaming.closeAllSubscriptions;\r\n        this.closeSingleSubscription = this.streaming.closeSingleSubscription;\r\n        this.pushDataToSingle = this.streaming.pushDataToSingle;\r\n        this.pushData = this.streaming.pushData;\r\n        this.onSubRequest = this.streaming.onSubRequest;\r\n        this.acceptRequestOnBranch = this.streaming.acceptRequestOnBranch;\r\n        this.rejectRequest = this.streaming.rejectRequest;\r\n        this.onSubAdded = this.streaming.onSubAdded;\r\n        this.onSubRemoved = this.streaming.onSubRemoved;\r\n    }\r\n    ServerProtocol.prototype.stopTimers = function () {\r\n        clearInterval(this.presenceTimer);\r\n        clearInterval(this.heartbeatTimer);\r\n    };\r\n    ServerProtocol.prototype.unregister = function (info) {\r\n        this.sendPresence();\r\n        return Promise.resolve();\r\n    };\r\n    ServerProtocol.prototype.register = function (repoMethod) {\r\n        var reqSubj = this.nextRequestSubject();\r\n        repoMethod.protocolState.method = this.createNewMethodMessage(repoMethod.definition, reqSubj, false);\r\n        this.announceNewMethod();\r\n        return Promise.resolve();\r\n    };\r\n    ServerProtocol.prototype.createStream = function (repoMethod) {\r\n        var reqSubj = this.nextRequestSubject();\r\n        var streamConverted = this.createNewMethodMessage(repoMethod.definition, reqSubj, true);\r\n        repoMethod.protocolState.method = streamConverted;\r\n        repoMethod.protocolState.globalEventStreamSubject = repoMethod.definition.name + \".jsStream.\" + shortid();\r\n        repoMethod.protocolState.subscriptions = [];\r\n        repoMethod.protocolState.branchKeyToStreamIdMap = [];\r\n        this.announceNewMethod();\r\n        return Promise.resolve();\r\n    };\r\n    ServerProtocol.prototype.onInvoked = function (callback) {\r\n        this.callbacks.add(\"onInvoked\", callback);\r\n    };\r\n    ServerProtocol.prototype.methodInvocationResult = function (executedMethod, invocationId, err, result) {\r\n        var message = this.invocationMessagesMap[invocationId];\r\n        if (!message) {\r\n            return;\r\n        }\r\n        if (message.MethodResponseSubject === \"null\") {\r\n            return;\r\n        }\r\n        if (executedMethod === undefined) {\r\n            return;\r\n        }\r\n        var resultMessage = {\r\n            MethodRequestSubject: message.MethodRequestSubject,\r\n            MethodResponseSubject: message.MethodResponseSubject,\r\n            MethodName: executedMethod.protocolState.method.Method.Name,\r\n            InvocationId: invocationId,\r\n            ResultContextJson: result,\r\n            Server: convertInstance(this.instance),\r\n            ResultMessage: err,\r\n            Status: err ? 1 : 0,\r\n        };\r\n        this.connection.send(\"agm\", \"MethodInvocationResultMessage\", resultMessage);\r\n        delete this.invocationMessagesMap[invocationId];\r\n    };\r\n    ServerProtocol.prototype.nextRequestSubject = function () {\r\n        return \"req_\" + (this.reqCounter++) + \"_\" + shortid();\r\n    };\r\n    ServerProtocol.prototype.sendHeartbeat = function () {\r\n        this.connection.send(\"agm\", \"ServerHeartbeatMessage\", this.constructHeartbeat());\r\n    };\r\n    ServerProtocol.prototype.constructHeartbeat = function () {\r\n        return {\r\n            PublishingInterval: HeartbeatInterval,\r\n            Instance: convertInstance(this.instance),\r\n        };\r\n    };\r\n    ServerProtocol.prototype.constructPresence = function () {\r\n        var methods = this.serverRepository.getList();\r\n        return {\r\n            PublishingInterval: PresenceInterval,\r\n            Instance: convertInstance(this.instance),\r\n            MethodDefinitions: methods.map(function (m) { return m.protocolState.method; }),\r\n        };\r\n    };\r\n    ServerProtocol.prototype.sendPresence = function () {\r\n        this.connection.send(\"agm\", \"ServerPresenceMessage\", this.constructPresence());\r\n    };\r\n    ServerProtocol.prototype.announceNewMethod = function () {\r\n        var _this = this;\r\n        this.sendPresence();\r\n        if (this.presenceTimer === undefined) {\r\n            this.presenceTimer = setInterval(function () { return _this.sendPresence(); }, PresenceInterval);\r\n        }\r\n    };\r\n    ServerProtocol.prototype.handleMethodInvocationMessage = function (message) {\r\n        var subject = message.MethodRequestSubject;\r\n        var methodList = this.serverRepository.getList();\r\n        var method = methodList.filter(function (m) {\r\n            return m.protocolState.method.MethodRequestSubject === subject;\r\n        })[0];\r\n        if (method === undefined) {\r\n            return;\r\n        }\r\n        if (this.streaming.isStreamMsg(message, method)) {\r\n            this.streaming.processSubscriberMsg(message, method);\r\n            return;\r\n        }\r\n        var invocationId = message.Context.InvocationId;\r\n        this.invocationMessagesMap[invocationId] = message;\r\n        var invocationArgs = {\r\n            args: message.Context.ArgumentsJson,\r\n            instance: convertInfoToInstance(message.Client),\r\n        };\r\n        this.callbacks.execute(\"onInvoked\", method, invocationId, invocationArgs);\r\n    };\r\n    ServerProtocol.prototype.createNewMethodMessage = function (methodIdentifier, subject, stream) {\r\n        if (typeof methodIdentifier === \"string\") {\r\n            methodIdentifier = { name: methodIdentifier };\r\n        }\r\n        if (typeof methodIdentifier.version !== \"number\") {\r\n            methodIdentifier.version = 0;\r\n        }\r\n        return {\r\n            Method: {\r\n                Name: methodIdentifier.name,\r\n                InputSignature: methodIdentifier.accepts,\r\n                ResultSignature: methodIdentifier.returns,\r\n                Description: methodIdentifier.description,\r\n                DisplayName: methodIdentifier.displayName,\r\n                Version: methodIdentifier.version,\r\n                ObjectTypeRestrictions: methodIdentifier.objectTypes,\r\n                Flags: stream ? 32 : undefined,\r\n            },\r\n            MethodRequestSubject: subject,\r\n        };\r\n    };\r\n    return ServerProtocol;\r\n}());\n\nvar STATUS_AWAITING_ACCEPT = \"awaitingAccept\";\r\nvar STATUS_SUBSCRIBED = \"subscribed\";\r\nvar ERR_MSG_SUB_FAILED = \"Subscription failed.\";\r\nvar ERR_MSG_SUB_REJECTED = \"Subscription rejected.\";\r\nvar ON_CLOSE_MSG_SERVER_INIT = \"ServerInitiated\";\r\nvar ON_CLOSE_MSG_CLIENT_INIT = \"ClientInitiated\";\r\nvar ClientStreaming = (function () {\r\n    function ClientStreaming(configuration, instance, sendRequest, nextResponseSubject) {\r\n        this.configuration = configuration;\r\n        this.instance = instance;\r\n        this.sendRequest = sendRequest;\r\n        this.nextResponseSubject = nextResponseSubject;\r\n        this.subscriptionsList = {};\r\n    }\r\n    ClientStreaming.prototype.subscribe = function (stream, params, targetServers, options, success, error) {\r\n        var _this = this;\r\n        if (targetServers.length === 0) {\r\n            error({\r\n                method: stream.getInfoForUser(),\r\n                message: ERR_MSG_SUB_FAILED + \" No available servers matched the target params.\",\r\n                called_with: params.arguments,\r\n            });\r\n            return;\r\n        }\r\n        var subscriptionId = \"subscriptionId_\" + shortid();\r\n        var pendingSub = this.registerSubscription(subscriptionId, stream, params, success, error, options.methodResponseTimeout);\r\n        if (typeof pendingSub !== \"object\") {\r\n            error({\r\n                method: stream.getInfoForUser(),\r\n                message: ERR_MSG_SUB_FAILED + \" Unable to register the user callbacks.\",\r\n                called_with: params.arguments,\r\n            });\r\n            return;\r\n        }\r\n        targetServers.forEach(function (target) {\r\n            var responseSubject = _this.nextResponseSubject();\r\n            var requestSubject = stream.info.requestSubject;\r\n            pendingSub.trackedServers.push({\r\n                server: undefined,\r\n                streamId: undefined,\r\n                streamSubjects: {\r\n                    global: undefined,\r\n                    private: undefined,\r\n                },\r\n                methodRequestSubject: requestSubject,\r\n                methodResponseSubject: responseSubject,\r\n            });\r\n            var message = {\r\n                EventStreamAction: 1,\r\n                MethodRequestSubject: requestSubject,\r\n                MethodResponseSubject: responseSubject,\r\n                Client: convertInstance(_this.instance),\r\n                Context: {\r\n                    ArgumentsJson: params.arguments,\r\n                    InvocationId: subscriptionId,\r\n                    MethodName: stream.info.name,\r\n                    ExecutionServer: target.server.info,\r\n                    Timeout: options.methodResponseTimeout,\r\n                },\r\n            };\r\n            _this.sendRequest(message);\r\n        });\r\n    };\r\n    ClientStreaming.prototype.processPublisherMsg = function (msg) {\r\n        if (!(msg && msg.EventStreamAction && msg.EventStreamAction !== 0)) {\r\n            return;\r\n        }\r\n        if (msg.EventStreamAction === 2) {\r\n            this.serverIsKickingASubscriber(msg);\r\n        }\r\n        else if (msg.EventStreamAction === 3) {\r\n            this.serverAcknowledgesGoodSubscription(msg);\r\n        }\r\n        else if (msg.EventStreamAction === 5) {\r\n            this.serverHasPushedSomeDataIntoTheStream(msg);\r\n        }\r\n    };\r\n    ClientStreaming.prototype.registerSubscription = function (subscriptionId, method, params, success, error, timeout) {\r\n        var _this = this;\r\n        this.subscriptionsList[subscriptionId] = {\r\n            status: STATUS_AWAITING_ACCEPT,\r\n            method: method,\r\n            params: params,\r\n            success: success,\r\n            error: error,\r\n            trackedServers: [],\r\n            handlers: {\r\n                onData: [],\r\n                onClosed: [],\r\n            },\r\n            queued: {\r\n                data: [],\r\n                closers: [],\r\n            },\r\n            timeoutId: undefined,\r\n        };\r\n        this.subscriptionsList[subscriptionId].timeoutId = setTimeout(function () {\r\n            if (_this.subscriptionsList[subscriptionId] === undefined) {\r\n                return;\r\n            }\r\n            var subscription = _this.subscriptionsList[subscriptionId];\r\n            if (subscription.status === STATUS_AWAITING_ACCEPT) {\r\n                error({\r\n                    method: method,\r\n                    called_with: params.arguments,\r\n                    message: ERR_MSG_SUB_FAILED + \" Subscription attempt timed out after \" + timeout + \"ms.\",\r\n                });\r\n                delete _this.subscriptionsList[subscriptionId];\r\n            }\r\n            else if (subscription.status === STATUS_SUBSCRIBED &&\r\n                subscription.trackedServers.length > 0) {\r\n                subscription.trackedServers = subscription.trackedServers.filter(function (server) {\r\n                    return (typeof server.streamId === \"string\" && server.streamId !== \"\");\r\n                });\r\n                subscription.timeoutId = undefined;\r\n                if (subscription.trackedServers.length === 0) {\r\n                    var closersCount = subscription.queued.closers.length;\r\n                    var closingServer_1 = (closersCount > 0) ? subscription.queued.closers[closersCount - 1] : null;\r\n                    subscription.handlers.onClosed.forEach(function (callback) {\r\n                        if (typeof callback === \"function\") {\r\n                            callback({\r\n                                message: ON_CLOSE_MSG_SERVER_INIT,\r\n                                requestArguments: subscription.params.arguments,\r\n                                server: closingServer_1,\r\n                                stream: subscription.method,\r\n                            });\r\n                        }\r\n                    });\r\n                    delete _this.subscriptionsList[subscriptionId];\r\n                }\r\n            }\r\n        }, timeout);\r\n        return this.subscriptionsList[subscriptionId];\r\n    };\r\n    ClientStreaming.prototype.serverIsKickingASubscriber = function (msg) {\r\n        var _this = this;\r\n        var keys = Object.keys(this.subscriptionsList);\r\n        if (typeof msg.InvocationId === \"string\" && msg.InvocationId !== \"\") {\r\n            keys = keys.filter(function (k) { return k === msg.InvocationId; });\r\n        }\r\n        var deletionsList = [];\r\n        keys.forEach(function (key) {\r\n            if (typeof _this.subscriptionsList[key] !== \"object\") {\r\n                return;\r\n            }\r\n            _this.subscriptionsList[key].trackedServers = _this.subscriptionsList[key].trackedServers.filter(function (server) {\r\n                var isRejecting = (server.methodRequestSubject === msg.MethodRequestSubject && server.methodResponseSubject === msg.MethodResponseSubject);\r\n                var isKicking = (server.streamId === msg.StreamId &&\r\n                    (server.streamSubjects.global === msg.EventStreamSubject || server.streamSubjects.private === msg.EventStreamSubject));\r\n                var isRejectingOrKicking = isRejecting || isKicking;\r\n                return !isRejectingOrKicking;\r\n            });\r\n            if (_this.subscriptionsList[key].trackedServers.length === 0) {\r\n                deletionsList.push(key);\r\n            }\r\n        });\r\n        deletionsList.forEach(function (key) {\r\n            if (typeof _this.subscriptionsList[key] !== \"object\") {\r\n                return;\r\n            }\r\n            if (_this.subscriptionsList[key].status === STATUS_AWAITING_ACCEPT &&\r\n                typeof _this.subscriptionsList[key].timeoutId === \"number\") {\r\n                var reason = (typeof msg.ResultMessage === \"string\" && msg.ResultMessage !== \"\") ?\r\n                    ' Publisher said \"' + msg.ResultMessage + '\".' :\r\n                    \" No reason given.\";\r\n                var callArgs = typeof _this.subscriptionsList[key].params.arguments === \"object\" ?\r\n                    JSON.stringify(_this.subscriptionsList[key].params.arguments) :\r\n                    \"{}\";\r\n                _this.subscriptionsList[key].error(ERR_MSG_SUB_REJECTED + reason + \" Called with:\" + callArgs);\r\n                clearTimeout(_this.subscriptionsList[key].timeoutId);\r\n            }\r\n            else {\r\n                _this.subscriptionsList[key].handlers.onClosed.forEach(function (callback) {\r\n                    if (typeof callback !== \"function\") {\r\n                        return;\r\n                    }\r\n                    callback({\r\n                        message: ON_CLOSE_MSG_SERVER_INIT,\r\n                        requestArguments: _this.subscriptionsList[key].params.arguments,\r\n                        server: convertInfoToInstance(msg.Server),\r\n                        stream: _this.subscriptionsList[key].method,\r\n                    });\r\n                });\r\n            }\r\n            delete _this.subscriptionsList[key];\r\n        });\r\n    };\r\n    ClientStreaming.prototype.serverAcknowledgesGoodSubscription = function (msg) {\r\n        var _this = this;\r\n        var subscriptionId = msg.InvocationId;\r\n        var subscription = this.subscriptionsList[subscriptionId];\r\n        if (typeof subscription !== \"object\") {\r\n            return;\r\n        }\r\n        var acceptingServer = subscription.trackedServers.filter(function (server) {\r\n            return (server.methodRequestSubject === msg.MethodRequestSubject &&\r\n                server.methodResponseSubject === msg.MethodResponseSubject);\r\n        })[0];\r\n        if (typeof acceptingServer !== \"object\") {\r\n            return;\r\n        }\r\n        var isFirstResponse = (subscription.status === STATUS_AWAITING_ACCEPT);\r\n        subscription.status = STATUS_SUBSCRIBED;\r\n        var privateStreamSubject = this.generatePrivateStreamSubject(subscription.method.name);\r\n        if (typeof acceptingServer.streamId === \"string\" && acceptingServer.streamId !== \"\") {\r\n            return;\r\n        }\r\n        acceptingServer.server = convertInfoToInstance(msg.Server);\r\n        acceptingServer.streamId = msg.StreamId;\r\n        acceptingServer.streamSubjects.global = msg.EventStreamSubject;\r\n        acceptingServer.streamSubjects.private = privateStreamSubject;\r\n        var confirmatoryRequest = {\r\n            EventStreamAction: 3,\r\n            EventStreamSubject: privateStreamSubject,\r\n            StreamId: msg.StreamId,\r\n            MethodRequestSubject: msg.MethodRequestSubject,\r\n            MethodResponseSubject: acceptingServer.methodResponseSubject,\r\n            Client: convertInstance(this.instance),\r\n            Context: {\r\n                ArgumentsJson: subscription.params.arguments,\r\n                MethodName: subscription.method.name,\r\n            },\r\n        };\r\n        this.sendRequest(confirmatoryRequest);\r\n        if (isFirstResponse) {\r\n            subscription.success({\r\n                onData: function (dataCallback) {\r\n                    if (typeof dataCallback !== \"function\") {\r\n                        throw new TypeError(\"The data callback must be a function.\");\r\n                    }\r\n                    this.handlers.onData.push(dataCallback);\r\n                    if (this.handlers.onData.length === 1 && this.queued.data.length > 0) {\r\n                        this.queued.data.forEach(function (dataItem) {\r\n                            dataCallback(dataItem);\r\n                        });\r\n                    }\r\n                }.bind(subscription),\r\n                onClosed: function (closedCallback) {\r\n                    if (typeof closedCallback !== \"function\") {\r\n                        throw new TypeError(\"The callback must be a function.\");\r\n                    }\r\n                    this.handlers.onClosed.push(closedCallback);\r\n                }.bind(subscription),\r\n                onFailed: function () { },\r\n                close: function () { return _this.closeSubscription(subscription, subscriptionId); },\r\n                requestArguments: subscription.params.arguments,\r\n                serverInstance: convertInfoToInstance(msg.Server),\r\n                stream: subscription.method,\r\n            });\r\n        }\r\n    };\r\n    ClientStreaming.prototype.serverHasPushedSomeDataIntoTheStream = function (msg) {\r\n        var _loop_1 = function (key) {\r\n            if (this_1.subscriptionsList.hasOwnProperty(key) && typeof this_1.subscriptionsList[key] === \"object\") {\r\n                var isPrivateData = void 0;\r\n                var trackedServersFound = this_1.subscriptionsList[key].trackedServers.filter(function (ls) {\r\n                    return (ls.streamId === msg.StreamId &&\r\n                        (ls.streamSubjects.global === msg.EventStreamSubject ||\r\n                            ls.streamSubjects.private === msg.EventStreamSubject));\r\n                });\r\n                if (trackedServersFound.length === 0) {\r\n                    isPrivateData = undefined;\r\n                }\r\n                else if (trackedServersFound[0].streamSubjects.global === msg.EventStreamSubject) {\r\n                    isPrivateData = false;\r\n                }\r\n                else if (trackedServersFound[0].streamSubjects.private === msg.EventStreamSubject) {\r\n                    isPrivateData = true;\r\n                }\r\n                if (isPrivateData !== undefined) {\r\n                    var receivedStreamData_1 = {\r\n                        data: msg.ResultContextJson,\r\n                        server: convertInfoToInstance(msg.Server),\r\n                        requestArguments: this_1.subscriptionsList[key].params.arguments || {},\r\n                        message: msg.ResultMessage,\r\n                        private: isPrivateData,\r\n                    };\r\n                    var onDataHandlers = this_1.subscriptionsList[key].handlers.onData;\r\n                    var queuedData = this_1.subscriptionsList[key].queued.data;\r\n                    if (Array.isArray(onDataHandlers)) {\r\n                        if (onDataHandlers.length > 0) {\r\n                            onDataHandlers.forEach(function (callback) {\r\n                                if (typeof callback === \"function\") {\r\n                                    callback(receivedStreamData_1);\r\n                                }\r\n                            });\r\n                        }\r\n                        else {\r\n                            queuedData.push(receivedStreamData_1);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        var this_1 = this;\r\n        for (var key in this.subscriptionsList) {\r\n            _loop_1(key);\r\n        }\r\n    };\r\n    ClientStreaming.prototype.closeSubscription = function (sub, subId) {\r\n        var _this = this;\r\n        var responseSubject = this.nextResponseSubject();\r\n        sub.trackedServers.forEach(function (server) {\r\n            _this.sendRequest({\r\n                EventStreamAction: 2,\r\n                Client: convertInstance(_this.instance),\r\n                MethodRequestSubject: server.methodRequestSubject,\r\n                MethodResponseSubject: responseSubject,\r\n                StreamId: server.streamId,\r\n                EventStreamSubject: server.streamSubjects.private,\r\n            });\r\n        });\r\n        sub.handlers.onClosed.forEach(function (callback) {\r\n            if (typeof callback === \"function\") {\r\n                callback({\r\n                    message: ON_CLOSE_MSG_CLIENT_INIT,\r\n                    requestArguments: sub.arguments || {},\r\n                    server: sub.trackedServers[sub.trackedServers.length - 1].server,\r\n                    stream: sub.method,\r\n                });\r\n            }\r\n        });\r\n        delete this.subscriptionsList[subId];\r\n    };\r\n    ClientStreaming.prototype.generatePrivateStreamSubject = function (methodName) {\r\n        var appInfo = convertInstance(this.instance);\r\n        return \"ESSpriv-jsb_\" +\r\n            appInfo.ApplicationName +\r\n            \"_on_\" +\r\n            methodName +\r\n            \"_\" +\r\n            shortid();\r\n    };\r\n    return ClientStreaming;\r\n}());\n\nfunction rejectAfter(ms, error) {\r\n    if (ms === void 0) { ms = 0; }\r\n    return new Promise(function (resolve, reject) { return setTimeout(function () { return reject(error); }, ms); });\r\n}\n\nvar InvokeStatus;\r\n(function (InvokeStatus) {\r\n    InvokeStatus[InvokeStatus[\"Success\"] = 0] = \"Success\";\r\n    InvokeStatus[InvokeStatus[\"Error\"] = 1] = \"Error\";\r\n})(InvokeStatus || (InvokeStatus = {}));\r\nvar Client = (function () {\r\n    function Client(protocol, repo, instance, configuration) {\r\n        this.protocol = protocol;\r\n        this.repo = repo;\r\n        this.instance = instance;\r\n        this.configuration = configuration;\r\n    }\r\n    Client.prototype.subscribe = function (method, options, successCallback, errorCallback, existingSub) {\r\n        var _this = this;\r\n        var callProtocolSubscribe = function (targetServers, stream, successProxy, errorProxy) {\r\n            var _a;\r\n            options.methodResponseTimeout = (_a = options.methodResponseTimeout, (_a !== null && _a !== void 0 ? _a : options.waitTimeoutMs));\r\n            _this.protocol.client.subscribe(stream, options, targetServers, { methodResponseTimeout: options.waitTimeoutMs }, successProxy, errorProxy, existingSub);\r\n        };\r\n        var promise = new Promise(function (resolve, reject) {\r\n            var successProxy = function (sub) {\r\n                resolve(sub);\r\n            };\r\n            var errorProxy = function (err) {\r\n                reject(err);\r\n            };\r\n            if (!method) {\r\n                reject(\"Method definition is required. Please, provide either a unique string for a method name or a \\u201CmethodDefinition\\u201D object with a required \\u201Cname\\u201D property.\");\r\n            }\r\n            var methodDef;\r\n            if (typeof method === \"string\") {\r\n                methodDef = { name: method };\r\n            }\r\n            else {\r\n                methodDef = method;\r\n            }\r\n            if (!methodDef.name) {\r\n                reject(\"Method definition is required. Please, provide either a unique string for a method name or a \\u201CmethodDefinition\\u201D object with a required \\u201Cname\\u201D property.\");\r\n            }\r\n            if (options === undefined) {\r\n                options = {};\r\n            }\r\n            var target = options.target;\r\n            if (target === undefined) {\r\n                target = \"best\";\r\n            }\r\n            if (typeof target === \"string\" && target !== \"all\" && target !== \"best\") {\r\n                reject({ message: '\"' + target + '\" is not a valid target. Valid targets are \"all\", \"best\", or an instance.' });\r\n            }\r\n            if (options.methodResponseTimeout === undefined) {\r\n                options.methodResponseTimeout = options.method_response_timeout;\r\n                if (options.methodResponseTimeout === undefined) {\r\n                    options.methodResponseTimeout = _this.configuration.methodResponseTimeout;\r\n                }\r\n            }\r\n            if (options.waitTimeoutMs === undefined) {\r\n                options.waitTimeoutMs = options.wait_for_method_timeout;\r\n                if (options.waitTimeoutMs === undefined) {\r\n                    options.waitTimeoutMs = _this.configuration.waitTimeoutMs;\r\n                }\r\n            }\r\n            var delayStep = 500;\r\n            var delayTillNow = 0;\r\n            var currentServers = _this.getServerMethodsByFilterAndTarget(methodDef, target);\r\n            if (currentServers.length > 0) {\r\n                callProtocolSubscribe(currentServers, currentServers[0].methods[0], successProxy, errorProxy);\r\n            }\r\n            else {\r\n                var retry_1 = function () {\r\n                    delayTillNow += delayStep;\r\n                    currentServers = _this.getServerMethodsByFilterAndTarget(methodDef, target);\r\n                    if (currentServers.length > 0) {\r\n                        var streamInfo = currentServers[0].methods[0];\r\n                        callProtocolSubscribe(currentServers, streamInfo, successProxy, errorProxy);\r\n                    }\r\n                    else if (delayTillNow >= options.waitTimeoutMs) {\r\n                        var def = typeof method === \"string\" ? { name: method } : method;\r\n                        var info = {\r\n                            id: undefined,\r\n                            info: def,\r\n                            getInfoForUser: function () {\r\n                                return methodDef;\r\n                            },\r\n                            protocolState: undefined,\r\n                        };\r\n                        callProtocolSubscribe(currentServers, info, successProxy, errorProxy);\r\n                    }\r\n                    else {\r\n                        setTimeout(retry_1, delayStep);\r\n                    }\r\n                };\r\n                setTimeout(retry_1, delayStep);\r\n            }\r\n        });\r\n        return promisify(promise, successCallback, errorCallback);\r\n    };\r\n    Client.prototype.servers = function (methodFilter) {\r\n        var filterCopy = methodFilter === undefined\r\n            ? undefined\r\n            : __assign({}, methodFilter);\r\n        return this.getServers(filterCopy).map(function (serverMethodMap) {\r\n            return serverMethodMap.server.getInfoForUser();\r\n        });\r\n    };\r\n    Client.prototype.methods = function (methodFilter) {\r\n        var filterCopy = __assign({}, methodFilter);\r\n        return this.getMethods(filterCopy).map(function (m) {\r\n            return m.getInfoForUser();\r\n        });\r\n    };\r\n    Client.prototype.methodsForInstance = function (instance) {\r\n        return this.getMethodsForInstance(instance).map(function (m) {\r\n            return m.getInfoForUser();\r\n        });\r\n    };\r\n    Client.prototype.methodAdded = function (callback) {\r\n        return this.repo.onMethodAdded(function (method) {\r\n            callback(method.getInfoForUser());\r\n        });\r\n    };\r\n    Client.prototype.methodRemoved = function (callback) {\r\n        return this.repo.onMethodRemoved(function (method) {\r\n            callback(method.getInfoForUser());\r\n        });\r\n    };\r\n    Client.prototype.serverAdded = function (callback) {\r\n        return this.repo.onServerAdded(function (server) {\r\n            callback(server.getInfoForUser());\r\n        });\r\n    };\r\n    Client.prototype.serverRemoved = function (callback) {\r\n        return this.repo.onServerRemoved(function (server, reason) {\r\n            callback(server.getInfoForUser(), reason);\r\n        });\r\n    };\r\n    Client.prototype.serverMethodAdded = function (callback) {\r\n        return this.repo.onServerMethodAdded(function (server, method) {\r\n            callback({ server: server.getInfoForUser(), method: method.getInfoForUser() });\r\n        });\r\n    };\r\n    Client.prototype.serverMethodRemoved = function (callback) {\r\n        return this.repo.onServerMethodRemoved(function (server, method) {\r\n            callback({ server: server.getInfoForUser(), method: method.getInfoForUser() });\r\n        });\r\n    };\r\n    Client.prototype.invoke = function (methodFilter, argumentObj, target, additionalOptions, success, error) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var getInvokePromise;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                getInvokePromise = function () { return __awaiter(_this, void 0, void 0, function () {\r\n                    var methodDefinition, serversMethodMap, err_1, errorObj, timeout, invokePromises, invocationMessages, results, allRejected;\r\n                    var _this = this;\r\n                    return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0:\r\n                                if (typeof methodFilter === \"string\") {\r\n                                    methodDefinition = { name: methodFilter };\r\n                                }\r\n                                else {\r\n                                    methodDefinition = __assign({}, methodFilter);\r\n                                }\r\n                                if (!methodDefinition.name) {\r\n                                    return [2, Promise.reject(\"Method definition is required. Please, provide either a unique string for a method name or a \\u201CmethodDefinition\\u201D object with a required \\u201Cname\\u201D property.\")];\r\n                                }\r\n                                if (!argumentObj) {\r\n                                    argumentObj = {};\r\n                                }\r\n                                if (!target) {\r\n                                    target = \"best\";\r\n                                }\r\n                                if (typeof target === \"string\" && target !== \"all\" && target !== \"best\" && target !== \"skipMine\") {\r\n                                    return [2, Promise.reject({ message: '\"' + target + '\" is not a valid target. Valid targets are \"all\" and \"best\".' })];\r\n                                }\r\n                                if (!additionalOptions) {\r\n                                    additionalOptions = {};\r\n                                }\r\n                                if (additionalOptions.methodResponseTimeoutMs === undefined) {\r\n                                    additionalOptions.methodResponseTimeoutMs = additionalOptions.method_response_timeout;\r\n                                    if (additionalOptions.methodResponseTimeoutMs === undefined) {\r\n                                        additionalOptions.methodResponseTimeoutMs = this.configuration.methodResponseTimeout;\r\n                                    }\r\n                                }\r\n                                if (additionalOptions.waitTimeoutMs === undefined) {\r\n                                    additionalOptions.waitTimeoutMs = additionalOptions.wait_for_method_timeout;\r\n                                    if (additionalOptions.waitTimeoutMs === undefined) {\r\n                                        additionalOptions.waitTimeoutMs = this.configuration.waitTimeoutMs;\r\n                                    }\r\n                                }\r\n                                if (additionalOptions.waitTimeoutMs !== undefined && typeof additionalOptions.waitTimeoutMs !== \"number\") {\r\n                                    return [2, Promise.reject({ message: '\"' + additionalOptions.waitTimeoutMs + '\" is not a valid number for \\'waitTimeoutMs\\'' })];\r\n                                }\r\n                                if (typeof argumentObj !== \"object\") {\r\n                                    return [2, Promise.reject({ message: \"The method arguments must be an object. method: \" + methodDefinition.name })];\r\n                                }\r\n                                serversMethodMap = this.getServerMethodsByFilterAndTarget(methodDefinition, target);\r\n                                if (!(serversMethodMap.length === 0)) return [3, 4];\r\n                                _a.label = 1;\r\n                            case 1:\r\n                                _a.trys.push([1, 3, , 4]);\r\n                                return [4, this.tryToAwaitForMethods(methodDefinition, target, additionalOptions)];\r\n                            case 2:\r\n                                serversMethodMap = _a.sent();\r\n                                return [3, 4];\r\n                            case 3:\r\n                                err_1 = _a.sent();\r\n                                errorObj = {\r\n                                    method: methodDefinition,\r\n                                    called_with: argumentObj,\r\n                                    message: \"Can not find a method matching \" + JSON.stringify(methodFilter) + \" with server filter \" + JSON.stringify(target) + \". Is the object a valid instance ?\",\r\n                                    executed_by: undefined,\r\n                                    returned: undefined,\r\n                                    status: undefined,\r\n                                };\r\n                                return [2, Promise.reject(errorObj)];\r\n                            case 4:\r\n                                timeout = additionalOptions.methodResponseTimeoutMs;\r\n                                invokePromises = serversMethodMap.map(function (serversMethodPair) {\r\n                                    var invId = shortid();\r\n                                    return Promise.race([\r\n                                        _this.protocol.client.invoke(invId, serversMethodPair.methods[0], argumentObj, serversMethodPair.server, additionalOptions),\r\n                                        rejectAfter(timeout, {\r\n                                            invocationId: invId,\r\n                                            message: \"Invocation timeout (\" + timeout + \" ms) reached\",\r\n                                            status: InvokeStatus.Error,\r\n                                        })\r\n                                    ]);\r\n                                });\r\n                                return [4, Promise.all(invokePromises)];\r\n                            case 5:\r\n                                invocationMessages = _a.sent();\r\n                                results = this.getInvocationResultObj(invocationMessages, methodDefinition, argumentObj);\r\n                                allRejected = invocationMessages.every(function (result) { return result.status === InvokeStatus.Error; });\r\n                                if (allRejected) {\r\n                                    return [2, Promise.reject(results)];\r\n                                }\r\n                                return [2, results];\r\n                        }\r\n                    });\r\n                }); };\r\n                return [2, promisify(getInvokePromise(), success, error)];\r\n            });\r\n        });\r\n    };\r\n    Client.prototype.getInvocationResultObj = function (invocationResults, method, calledWith) {\r\n        var all_return_values = invocationResults\r\n            .filter(function (invokeMessage) { return invokeMessage.status === InvokeStatus.Success; })\r\n            .reduce(function (allValues, currentValue) {\r\n            allValues = __spreadArrays(allValues, [\r\n                {\r\n                    executed_by: currentValue.instance,\r\n                    returned: currentValue.result,\r\n                    called_with: calledWith,\r\n                    method: method,\r\n                    message: currentValue.message,\r\n                    status: currentValue.status,\r\n                }\r\n            ]);\r\n            return allValues;\r\n        }, []);\r\n        var all_errors = invocationResults\r\n            .filter(function (invokeMessage) { return invokeMessage.status === InvokeStatus.Error; })\r\n            .reduce(function (allErrors, currError) {\r\n            allErrors = __spreadArrays(allErrors, [\r\n                {\r\n                    executed_by: currError.instance,\r\n                    called_with: calledWith,\r\n                    name: method.name,\r\n                    message: currError.message,\r\n                }\r\n            ]);\r\n            return allErrors;\r\n        }, []);\r\n        var invResult = invocationResults[0];\r\n        var result = {\r\n            method: method,\r\n            called_with: calledWith,\r\n            returned: invResult.result,\r\n            executed_by: invResult.instance,\r\n            all_return_values: all_return_values,\r\n            all_errors: all_errors,\r\n            message: invResult.message,\r\n            status: invResult.status\r\n        };\r\n        return result;\r\n    };\r\n    Client.prototype.tryToAwaitForMethods = function (methodDefinition, target, additionalOptions) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (additionalOptions.waitTimeoutMs === 0) {\r\n                reject();\r\n            }\r\n            var delayStep = 500;\r\n            var delayTillNow = 0;\r\n            var retry = function () {\r\n                delayTillNow += delayStep;\r\n                var serversMethodMap = _this.getServerMethodsByFilterAndTarget(methodDefinition, target);\r\n                if (serversMethodMap.length > 0) {\r\n                    clearInterval(interval);\r\n                    resolve(serversMethodMap);\r\n                }\r\n                else if (delayTillNow >= additionalOptions.waitTimeoutMs) {\r\n                    clearInterval(interval);\r\n                    reject();\r\n                }\r\n            };\r\n            var interval = setInterval(retry, delayStep);\r\n        });\r\n    };\r\n    Client.prototype.filterByTarget = function (target, serverMethodMap) {\r\n        var _this = this;\r\n        if (typeof target === \"string\") {\r\n            if (target === \"all\") {\r\n                return __spreadArrays(serverMethodMap);\r\n            }\r\n            else if (target === \"best\") {\r\n                var localMachine = serverMethodMap\r\n                    .find(function (s) { return s.server.info.isLocal; });\r\n                if (localMachine) {\r\n                    return [localMachine];\r\n                }\r\n                if (serverMethodMap[0] !== undefined) {\r\n                    return [serverMethodMap[0]];\r\n                }\r\n            }\r\n            else if (target === \"skipMine\") {\r\n                return serverMethodMap.filter(function (_a) {\r\n                    var server = _a.server;\r\n                    return server.getInfoForUser().peerId !== _this.instance.peerId;\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            var targetArray = void 0;\r\n            if (!Array.isArray(target)) {\r\n                targetArray = [target];\r\n            }\r\n            else {\r\n                targetArray = target;\r\n            }\r\n            var allServersMatching = targetArray.reduce(function (matches, filter) {\r\n                var myMatches = serverMethodMap.filter(function (serverMethodPair) {\r\n                    return _this.instanceMatch(filter, serverMethodPair.server.info);\r\n                });\r\n                return matches.concat(myMatches);\r\n            }, []);\r\n            return allServersMatching;\r\n        }\r\n        return [];\r\n    };\r\n    Client.prototype.instanceMatch = function (instanceFilter, instanceDefinition) {\r\n        return this.containsProps(instanceFilter, instanceDefinition);\r\n    };\r\n    Client.prototype.methodMatch = function (methodFilter, methodDefinition) {\r\n        return this.containsProps(methodFilter, methodDefinition);\r\n    };\r\n    Client.prototype.containsProps = function (filter, repoMethod) {\r\n        var filterProps = Object.keys(filter)\r\n            .filter(function (prop) {\r\n            return filter[prop] !== undefined\r\n                && typeof filter[prop] !== \"function\"\r\n                && prop !== \"object_types\"\r\n                && prop !== \"display_name\"\r\n                && prop[0] !== \"_\";\r\n        });\r\n        return filterProps.reduce(function (isMatch, prop) {\r\n            var filterValue = filter[prop];\r\n            var repoMethodValue = repoMethod[prop];\r\n            if (prop === \"objectTypes\") {\r\n                var containsAllFromFilter = function (filterObjTypes, repoObjectTypes) {\r\n                    var objTypeToContains = filterObjTypes.reduce(function (object, objType) {\r\n                        object[objType] = false;\r\n                        return object;\r\n                    }, {});\r\n                    repoObjectTypes.forEach(function (repoObjType) {\r\n                        if (objTypeToContains[repoObjType] !== undefined) {\r\n                            objTypeToContains[repoObjType] = true;\r\n                        }\r\n                    });\r\n                    var filterIsFullfilled = function () { return Object.keys(objTypeToContains).reduce(function (isFullfiled, objType) {\r\n                        if (!objTypeToContains[objType]) {\r\n                            isFullfiled = false;\r\n                        }\r\n                        return isFullfiled;\r\n                    }, true); };\r\n                    return filterIsFullfilled();\r\n                };\r\n                if (filterValue.length > repoMethodValue.length\r\n                    || containsAllFromFilter(filterValue, repoMethodValue) === false) {\r\n                    isMatch = false;\r\n                }\r\n            }\r\n            else if (String(filterValue).toLowerCase() !== String(repoMethodValue).toLowerCase()) {\r\n                isMatch = false;\r\n            }\r\n            return isMatch;\r\n        }, true);\r\n    };\r\n    Client.prototype.getMethods = function (methodFilter) {\r\n        var _this = this;\r\n        if (methodFilter === undefined) {\r\n            return this.repo.getMethods();\r\n        }\r\n        if (typeof methodFilter === \"string\") {\r\n            methodFilter = { name: methodFilter };\r\n        }\r\n        var methods = this.repo.getMethods().filter(function (method) {\r\n            return _this.methodMatch(methodFilter, method.info);\r\n        });\r\n        return methods;\r\n    };\r\n    Client.prototype.getMethodsForInstance = function (instanceFilter) {\r\n        var _this = this;\r\n        var allServers = this.repo.getServers();\r\n        var matchingServers = allServers.filter(function (server) {\r\n            return _this.instanceMatch(instanceFilter, server.info);\r\n        });\r\n        if (matchingServers.length === 0) {\r\n            return [];\r\n        }\r\n        var resultMethodsObject = {};\r\n        if (matchingServers.length === 1) {\r\n            resultMethodsObject = matchingServers[0].methods;\r\n        }\r\n        else {\r\n            matchingServers.forEach(function (server) {\r\n                Object.keys(server.methods).forEach(function (methodKey) {\r\n                    var method = server.methods[methodKey];\r\n                    resultMethodsObject[method.id] = method;\r\n                });\r\n            });\r\n        }\r\n        return Object.keys(resultMethodsObject)\r\n            .map(function (key) {\r\n            return resultMethodsObject[key];\r\n        });\r\n    };\r\n    Client.prototype.getServers = function (methodFilter) {\r\n        var _this = this;\r\n        var servers = this.repo.getServers();\r\n        if (methodFilter === undefined) {\r\n            return servers.map(function (server) {\r\n                return { server: server };\r\n            });\r\n        }\r\n        return servers.reduce(function (prev, current) {\r\n            var methodsForServer = _this.repo.getServerMethodsById(current.id);\r\n            var matchingMethods = methodsForServer.filter(function (method) {\r\n                return _this.methodMatch(methodFilter, method.info);\r\n            });\r\n            if (matchingMethods.length > 0) {\r\n                prev.push({ server: current, methods: matchingMethods });\r\n            }\r\n            return prev;\r\n        }, []);\r\n    };\r\n    Client.prototype.getServerMethodsByFilterAndTarget = function (methodFilter, target) {\r\n        var serversMethodMap = this.getServers(methodFilter);\r\n        return this.filterByTarget(target, serversMethodMap);\r\n    };\r\n    return Client;\r\n}());\n\nvar numberMissingHeartbeatsToRemove = 3;\r\nvar ClientProtocol = (function () {\r\n    function ClientProtocol(connection, instance, configuration, repository) {\r\n        var _this = this;\r\n        this.connection = connection;\r\n        this.instance = instance;\r\n        this.configuration = configuration;\r\n        this.repository = repository;\r\n        this.respCounter = 0;\r\n        this.callbacks = lib();\r\n        this.timers = {};\r\n        this._pendingCallbacks = {};\r\n        this.timers = {};\r\n        this.streaming = new ClientStreaming(configuration, instance, function (msg) {\r\n            connection.send(\"agm\", \"MethodInvocationRequestMessage\", msg);\r\n        }, function () { return _this.nextResponseSubject(); });\r\n        this.listenForEvents();\r\n    }\r\n    ClientProtocol.prototype.subscribe = function (stream, args, targetServers, options, success, error) {\r\n        this.streaming.subscribe(stream, args, targetServers, options, success, error);\r\n    };\r\n    ClientProtocol.prototype.onInvocationResult = function (callback) {\r\n        this.callbacks.add(\"onResult\", callback);\r\n    };\r\n    ClientProtocol.prototype.invoke = function (_, method, args, target, stuff) {\r\n        var _this = this;\r\n        var id = shortid();\r\n        var methodInfo = method.info;\r\n        var message = {\r\n            MethodRequestSubject: methodInfo.requestSubject,\r\n            MethodResponseSubject: this.nextResponseSubject(),\r\n            Client: convertInstance(this.instance),\r\n            Context: {\r\n                ArgumentsJson: args,\r\n                InvocationId: id,\r\n                MethodName: methodInfo.name,\r\n                ExecutionServer: target.info,\r\n                Timeout: stuff.methodResponseTimeoutMs,\r\n            },\r\n        };\r\n        this.onInvocationResult(function (invocationId, executedBy, status, result, resultMessage) {\r\n            return _this.processInvocationResult(invocationId, executedBy, status, result, resultMessage);\r\n        });\r\n        return new Promise(function (resolve, reject) {\r\n            _this._pendingCallbacks[id] = {\r\n                invocationInfo: {\r\n                    method: method,\r\n                    calledWith: args,\r\n                },\r\n                success: function (data) { return resolve(data); },\r\n                error: function (e) { return reject(e); }\r\n            };\r\n            _this.connection.send(\"agm\", \"MethodInvocationRequestMessage\", message);\r\n        });\r\n    };\r\n    ClientProtocol.prototype.drainSubscriptions = function () {\r\n        return [];\r\n    };\r\n    ClientProtocol.prototype.nextResponseSubject = function () {\r\n        return \"resp_\" + (this.respCounter++) + \"_\" + shortid();\r\n    };\r\n    ClientProtocol.prototype.createServerInfo = function (instance) {\r\n        return {\r\n            machine: instance.MachineName,\r\n            pid: instance.ProcessId,\r\n            user: instance.UserName,\r\n            application: instance.ApplicationName,\r\n            environment: instance.Environment,\r\n            region: instance.Region,\r\n        };\r\n    };\r\n    ClientProtocol.prototype.createMethod = function (methodInfo) {\r\n        var method = methodInfo.Method;\r\n        return {\r\n            name: method.Name,\r\n            accepts: method.InputSignature,\r\n            returns: method.ResultSignature,\r\n            requestSubject: methodInfo.MethodRequestSubject,\r\n            description: method.Description,\r\n            displayName: method.DisplayName,\r\n            version: method.Version,\r\n            objectTypes: method.ObjectTypeRestrictions,\r\n            supportsStreaming: isStreamingFlagSet(method.Flags),\r\n        };\r\n    };\r\n    ClientProtocol.prototype.createServerId = function (serverInfo) {\r\n        if (serverInfo === undefined) {\r\n            return undefined;\r\n        }\r\n        return [serverInfo.application,\r\n            serverInfo.user,\r\n            serverInfo.machine,\r\n            serverInfo.started,\r\n            serverInfo.pid].join(\"/\").toLowerCase();\r\n    };\r\n    ClientProtocol.prototype.processServerPresence = function (presence, isPresence) {\r\n        var instance = presence.Instance;\r\n        var serverInfo = this.createServerInfo(instance);\r\n        var serverId = this.createServerId(serverInfo);\r\n        if (isPresence) {\r\n            serverId = this.repository.addServer(serverInfo, serverId);\r\n            if (presence.PublishingInterval) {\r\n                this.scheduleTimeout(serverId, presence.PublishingInterval);\r\n            }\r\n        }\r\n        else if (presence.PublishingInterval === 0) {\r\n            var server = this.repository.getServerById(serverId);\r\n            if (typeof server !== \"undefined\") {\r\n                this.repository.removeServerById(serverId);\r\n            }\r\n        }\r\n        if (presence.MethodDefinitions !== undefined) {\r\n            this.updateServerMethods(serverId, presence.MethodDefinitions);\r\n        }\r\n    };\r\n    ClientProtocol.prototype.scheduleTimeout = function (serverId, duration) {\r\n        var _this = this;\r\n        if (duration === -1) {\r\n            return;\r\n        }\r\n        var timer = this.timers[serverId];\r\n        if (timer !== undefined) {\r\n            clearTimeout(timer);\r\n        }\r\n        this.timers[serverId] = setTimeout(function () {\r\n            _this.repository.removeServerById(serverId);\r\n        }, duration * (numberMissingHeartbeatsToRemove + 1));\r\n    };\r\n    ClientProtocol.prototype.updateServerMethods = function (serverId, newMethods) {\r\n        var _this = this;\r\n        var oldMethods = this.repository.getServerMethodsById(serverId);\r\n        var newMethodsReduced = newMethods\r\n            .map(function (nm) { return _this.createMethod(nm); })\r\n            .reduce(function (obj, method) {\r\n            var methodId = _this.repository.createMethodId(method);\r\n            obj[methodId] = method;\r\n            return obj;\r\n        }, {});\r\n        oldMethods.forEach(function (method) {\r\n            if (newMethodsReduced[method.id] === undefined) {\r\n                _this.repository.removeServerMethod(serverId, method.id);\r\n            }\r\n            else {\r\n                delete newMethodsReduced[method.id];\r\n            }\r\n        });\r\n        Object.keys(newMethodsReduced).forEach(function (key) {\r\n            var method = newMethodsReduced[key];\r\n            _this.repository.addServerMethod(serverId, method);\r\n        });\r\n    };\r\n    ClientProtocol.prototype.handleInvokeResultMessage = function (message) {\r\n        if (message && message.EventStreamAction && message.EventStreamAction !== 0) {\r\n            this.streaming.processPublisherMsg(message);\r\n            return;\r\n        }\r\n        var server = message.Server ? this.createServerInfo(message.Server) : undefined;\r\n        var result = message.ResultContextJson;\r\n        if (result && Object.keys(result).length === 0) {\r\n            result = undefined;\r\n        }\r\n        this.callbacks.execute(\"onResult\", message.InvocationId, server, message.Status, result, message.ResultMessage);\r\n    };\r\n    ClientProtocol.prototype.listenForEvents = function () {\r\n        var _this = this;\r\n        this.connection.on(\"agm\", \"ServerPresenceMessage\", function (msg) {\r\n            _this.processServerPresence(msg, true);\r\n        });\r\n        this.connection.on(\"agm\", \"ServerHeartbeatMessage\", function (msg) {\r\n            _this.processServerPresence(msg, false);\r\n        });\r\n        this.connection.on(\"agm\", \"MethodInvocationResultMessage\", function (msg) {\r\n            _this.handleInvokeResultMessage(msg);\r\n        });\r\n    };\r\n    ClientProtocol.prototype.processInvocationResult = function (invocationId, executedBy, status, result, resultMessage) {\r\n        var callback = this._pendingCallbacks[invocationId];\r\n        if (callback === undefined) {\r\n            return;\r\n        }\r\n        if (status === InvokeStatus.Success && typeof callback.success === \"function\") {\r\n            callback.success({\r\n                invocationId: invocationId,\r\n                instance: executedBy,\r\n                result: result,\r\n                message: resultMessage,\r\n                status: InvokeStatus.Success,\r\n            });\r\n        }\r\n        else if (typeof callback.error === \"function\") {\r\n            callback.error({\r\n                invocationId: invocationId,\r\n                instance: executedBy,\r\n                result: result,\r\n                message: resultMessage,\r\n                status: InvokeStatus.Error,\r\n            });\r\n        }\r\n        delete this._pendingCallbacks[invocationId];\r\n    };\r\n    return ClientProtocol;\r\n}());\n\nfunction gW1ProtocolFactory (instance, connection, clientRepository, serverRepository, configuration, getAGM) {\r\n    var unsubscribe = connection.on(\"agm\", \"Instance\", function (newInstance) {\r\n        getAGM().updateInstance(newInstance);\r\n        connection.off(unsubscribe);\r\n    });\r\n    var server = new ServerProtocol(connection, instance, configuration, serverRepository);\r\n    var client = new ClientProtocol(connection, instance, configuration, clientRepository);\r\n    return new Promise(function (resolve) {\r\n        resolve({\r\n            server: server,\r\n            client: client,\r\n        });\r\n    });\r\n}\n\nvar SUBSCRIPTION_REQUEST = \"onSubscriptionRequest\";\r\nvar SUBSCRIPTION_ADDED = \"onSubscriptionAdded\";\r\nvar SUBSCRIPTION_REMOVED = \"onSubscriptionRemoved\";\r\nvar ServerStreaming$1 = (function () {\r\n    function ServerStreaming(session, repository, serverRepository, logger) {\r\n        var _this = this;\r\n        this.session = session;\r\n        this.repository = repository;\r\n        this.serverRepository = serverRepository;\r\n        this.logger = logger;\r\n        this.ERR_URI_SUBSCRIPTION_FAILED = \"com.tick42.agm.errors.subscription.failure\";\r\n        this.callbacks = lib();\r\n        this.nextStreamId = 0;\r\n        session.on(\"add-interest\", function (msg) {\r\n            _this.handleAddInterest(msg);\r\n        });\r\n        session.on(\"remove-interest\", function (msg) {\r\n            _this.handleRemoveInterest(msg);\r\n        });\r\n    }\r\n    ServerStreaming.prototype.acceptRequestOnBranch = function (requestContext, streamingMethod, branch) {\r\n        if (typeof branch !== \"string\") {\r\n            branch = \"\";\r\n        }\r\n        if (typeof streamingMethod.protocolState.subscriptionsMap !== \"object\") {\r\n            throw new TypeError(\"The streaming method is missing its subscriptions.\");\r\n        }\r\n        if (!Array.isArray(streamingMethod.protocolState.branchKeyToStreamIdMap)) {\r\n            throw new TypeError(\"The streaming method is missing its branches.\");\r\n        }\r\n        var streamId = this.getStreamId(streamingMethod, branch);\r\n        var key = requestContext.msg.subscription_id;\r\n        var subscription = {\r\n            id: key,\r\n            arguments: requestContext.arguments,\r\n            instance: requestContext.instance,\r\n            branchKey: branch,\r\n            streamId: streamId,\r\n            subscribeMsg: requestContext.msg,\r\n        };\r\n        streamingMethod.protocolState.subscriptionsMap[key] = subscription;\r\n        this.session.sendFireAndForget({\r\n            type: \"accepted\",\r\n            subscription_id: key,\r\n            stream_id: streamId,\r\n        });\r\n        this.callbacks.execute(SUBSCRIPTION_ADDED, subscription, streamingMethod);\r\n    };\r\n    ServerStreaming.prototype.rejectRequest = function (requestContext, streamingMethod, reason) {\r\n        if (typeof reason !== \"string\") {\r\n            reason = \"\";\r\n        }\r\n        this.sendSubscriptionFailed(\"Subscription rejected by user. \" + reason, requestContext.msg.subscription_id);\r\n    };\r\n    ServerStreaming.prototype.pushData = function (streamingMethod, data, branches) {\r\n        var _this = this;\r\n        if (typeof streamingMethod !== \"object\" || !Array.isArray(streamingMethod.protocolState.branchKeyToStreamIdMap)) {\r\n            return;\r\n        }\r\n        if (typeof data !== \"object\") {\r\n            throw new Error(\"Invalid arguments. Data must be an object.\");\r\n        }\r\n        if (typeof branches === \"string\") {\r\n            branches = [branches];\r\n        }\r\n        else if (!Array.isArray(branches) || branches.length <= 0) {\r\n            branches = null;\r\n        }\r\n        var streamIdList = streamingMethod.protocolState.branchKeyToStreamIdMap\r\n            .filter(function (br) {\r\n            return (branches === null || (Boolean(br) && typeof br.key === \"string\" && branches.indexOf(br.key) >= 0));\r\n        }).map(function (br) {\r\n            return br.streamId;\r\n        });\r\n        streamIdList.forEach(function (streamId) {\r\n            var publishMessage = {\r\n                type: \"publish\",\r\n                stream_id: streamId,\r\n                data: data,\r\n            };\r\n            _this.session.sendFireAndForget(publishMessage);\r\n        });\r\n    };\r\n    ServerStreaming.prototype.pushDataToSingle = function (method, subscription, data) {\r\n        if (typeof data !== \"object\") {\r\n            throw new Error(\"Invalid arguments. Data must be an object.\");\r\n        }\r\n        var postMessage = {\r\n            type: \"post\",\r\n            subscription_id: subscription.id,\r\n            data: data,\r\n        };\r\n        this.session.sendFireAndForget(postMessage);\r\n    };\r\n    ServerStreaming.prototype.closeSingleSubscription = function (streamingMethod, subscription) {\r\n        delete streamingMethod.protocolState.subscriptionsMap[subscription.id];\r\n        var dropSubscriptionMessage = {\r\n            type: \"drop-subscription\",\r\n            subscription_id: subscription.id,\r\n            reason: \"Server dropping a single subscription\",\r\n        };\r\n        this.session.sendFireAndForget(dropSubscriptionMessage);\r\n        var subscriber = subscription.instance;\r\n        this.callbacks.execute(SUBSCRIPTION_REMOVED, subscription, streamingMethod);\r\n    };\r\n    ServerStreaming.prototype.closeMultipleSubscriptions = function (streamingMethod, branchKey) {\r\n        var _this = this;\r\n        if (typeof streamingMethod !== \"object\" || typeof streamingMethod.protocolState.subscriptionsMap !== \"object\") {\r\n            return;\r\n        }\r\n        var subscriptionsToClose = Object.keys(streamingMethod.protocolState.subscriptionsMap)\r\n            .map(function (key) {\r\n            return streamingMethod.protocolState.subscriptionsMap[key];\r\n        });\r\n        if (typeof branchKey === \"string\") {\r\n            subscriptionsToClose = subscriptionsToClose.filter(function (sub) {\r\n                return sub.branchKey === branchKey;\r\n            });\r\n        }\r\n        subscriptionsToClose.forEach(function (subscription) {\r\n            delete streamingMethod.protocolState.subscriptionsMap[subscription.id];\r\n            var drop = {\r\n                type: \"drop-subscription\",\r\n                subscription_id: subscription.id,\r\n                reason: \"Server dropping all subscriptions on stream_id: \" + subscription.streamId,\r\n            };\r\n            _this.session.sendFireAndForget(drop);\r\n        });\r\n    };\r\n    ServerStreaming.prototype.getSubscriptionList = function (streamingMethod, branchKey) {\r\n        if (typeof streamingMethod !== \"object\") {\r\n            return [];\r\n        }\r\n        var subscriptions = [];\r\n        var allSubscriptions = Object.keys(streamingMethod.protocolState.subscriptionsMap)\r\n            .map(function (key) {\r\n            return streamingMethod.protocolState.subscriptionsMap[key];\r\n        });\r\n        if (typeof branchKey !== \"string\") {\r\n            subscriptions = allSubscriptions;\r\n        }\r\n        else {\r\n            subscriptions = allSubscriptions.filter(function (sub) {\r\n                return sub.branchKey === branchKey;\r\n            });\r\n        }\r\n        return subscriptions;\r\n    };\r\n    ServerStreaming.prototype.getBranchList = function (streamingMethod) {\r\n        if (typeof streamingMethod !== \"object\") {\r\n            return [];\r\n        }\r\n        var allSubscriptions = Object.keys(streamingMethod.protocolState.subscriptionsMap)\r\n            .map(function (key) {\r\n            return streamingMethod.protocolState.subscriptionsMap[key];\r\n        });\r\n        var keysWithDuplicates = allSubscriptions.map(function (sub) {\r\n            var result = null;\r\n            if (typeof sub === \"object\" && typeof sub.branchKey === \"string\") {\r\n                result = sub.branchKey;\r\n            }\r\n            return result;\r\n        });\r\n        var seen = [];\r\n        var branchArray = keysWithDuplicates.filter(function (bKey) {\r\n            if (bKey === null || seen.indexOf(bKey) >= 0) {\r\n                return false;\r\n            }\r\n            seen.push(bKey);\r\n            return true;\r\n        });\r\n        return branchArray;\r\n    };\r\n    ServerStreaming.prototype.onSubAdded = function (callback) {\r\n        this.onSubscriptionLifetimeEvent(SUBSCRIPTION_ADDED, callback);\r\n    };\r\n    ServerStreaming.prototype.onSubRequest = function (callback) {\r\n        this.onSubscriptionLifetimeEvent(SUBSCRIPTION_REQUEST, callback);\r\n    };\r\n    ServerStreaming.prototype.onSubRemoved = function (callback) {\r\n        this.onSubscriptionLifetimeEvent(SUBSCRIPTION_REMOVED, callback);\r\n    };\r\n    ServerStreaming.prototype.handleRemoveInterest = function (msg) {\r\n        var streamingMethod = this.serverRepository.getById(msg.method_id);\r\n        if (typeof msg.subscription_id !== \"string\" ||\r\n            typeof streamingMethod !== \"object\" ||\r\n            typeof streamingMethod.protocolState.subscriptionsMap[msg.subscription_id] !== \"object\") {\r\n            return;\r\n        }\r\n        var subscription = streamingMethod.protocolState.subscriptionsMap[msg.subscription_id];\r\n        delete streamingMethod.protocolState.subscriptionsMap[msg.subscription_id];\r\n        this.callbacks.execute(SUBSCRIPTION_REMOVED, subscription, streamingMethod);\r\n    };\r\n    ServerStreaming.prototype.onSubscriptionLifetimeEvent = function (eventName, handlerFunc) {\r\n        this.callbacks.add(eventName, handlerFunc);\r\n    };\r\n    ServerStreaming.prototype.getNextStreamId = function () {\r\n        return this.nextStreamId++ + \"\";\r\n    };\r\n    ServerStreaming.prototype.handleAddInterest = function (msg) {\r\n        var caller = this.repository.getServerById(msg.caller_id);\r\n        var instance = (typeof caller.getInfoForUser === \"function\") ? caller.getInfoForUser() : null;\r\n        var requestContext = {\r\n            msg: msg,\r\n            arguments: msg.arguments_kv || {},\r\n            instance: instance,\r\n        };\r\n        var streamingMethod = this.serverRepository.getById(msg.method_id);\r\n        if (streamingMethod === undefined) {\r\n            var errorMsg = \"No method with id \" + msg.method_id + \" on this server.\";\r\n            this.sendSubscriptionFailed(errorMsg, msg.subscription_id);\r\n            return;\r\n        }\r\n        if (streamingMethod.protocolState.subscriptionsMap &&\r\n            streamingMethod.protocolState.subscriptionsMap[msg.subscription_id]) {\r\n            this.sendSubscriptionFailed(\"A subscription with id \" + msg.subscription_id + \" already exists.\", msg.subscription_id);\r\n            return;\r\n        }\r\n        this.callbacks.execute(SUBSCRIPTION_REQUEST, requestContext, streamingMethod);\r\n    };\r\n    ServerStreaming.prototype.sendSubscriptionFailed = function (reason, subscriptionId) {\r\n        var errorMessage = {\r\n            type: \"error\",\r\n            reason_uri: this.ERR_URI_SUBSCRIPTION_FAILED,\r\n            reason: reason,\r\n            request_id: subscriptionId,\r\n        };\r\n        this.session.sendFireAndForget(errorMessage);\r\n    };\r\n    ServerStreaming.prototype.getStreamId = function (streamingMethod, branchKey) {\r\n        if (typeof branchKey !== \"string\") {\r\n            branchKey = \"\";\r\n        }\r\n        var needleBranch = streamingMethod.protocolState.branchKeyToStreamIdMap.filter(function (branch) {\r\n            return branch.key === branchKey;\r\n        })[0];\r\n        var streamId = (needleBranch ? needleBranch.streamId : undefined);\r\n        if (typeof streamId !== \"string\" || streamId === \"\") {\r\n            streamId = this.getNextStreamId();\r\n            streamingMethod.protocolState.branchKeyToStreamIdMap.push({ key: branchKey, streamId: streamId });\r\n        }\r\n        return streamId;\r\n    };\r\n    return ServerStreaming;\r\n}());\n\nvar ServerProtocol$1 = (function () {\r\n    function ServerProtocol(session, clientRepository, serverRepository, logger) {\r\n        var _this = this;\r\n        this.session = session;\r\n        this.clientRepository = clientRepository;\r\n        this.serverRepository = serverRepository;\r\n        this.logger = logger;\r\n        this.callbacks = lib();\r\n        this.streaming = new ServerStreaming$1(session, clientRepository, serverRepository, logger);\r\n        this.session.on(\"invoke\", function (msg) { return _this.handleInvokeMessage(msg); });\r\n    }\r\n    ServerProtocol.prototype.createStream = function (repoMethod) {\r\n        repoMethod.protocolState.subscriptionsMap = {};\r\n        repoMethod.protocolState.branchKeyToStreamIdMap = [];\r\n        return this.register(repoMethod, true);\r\n    };\r\n    ServerProtocol.prototype.register = function (repoMethod, isStreaming) {\r\n        var _this = this;\r\n        var methodDef = repoMethod.definition;\r\n        var flags = { streaming: isStreaming || false };\r\n        var registerMsg = {\r\n            type: \"register\",\r\n            methods: [{\r\n                    id: repoMethod.repoId,\r\n                    name: methodDef.name,\r\n                    display_name: methodDef.displayName,\r\n                    description: methodDef.description,\r\n                    version: methodDef.version,\r\n                    flags: flags,\r\n                    object_types: methodDef.objectTypes || methodDef.object_types,\r\n                    input_signature: methodDef.accepts,\r\n                    result_signature: methodDef.returns,\r\n                    restrictions: undefined,\r\n                }],\r\n        };\r\n        return this.session.send(registerMsg, { methodId: repoMethod.repoId })\r\n            .then(function () {\r\n            _this.logger.debug(\"registered method \" + repoMethod.definition.name + \" with id \" + repoMethod.repoId);\r\n        })\r\n            .catch(function (msg) {\r\n            _this.logger.warn(\"failed to register method \" + repoMethod.definition.name + \" with id \" + repoMethod.repoId + \" - \" + JSON.stringify(msg));\r\n            throw msg;\r\n        });\r\n    };\r\n    ServerProtocol.prototype.onInvoked = function (callback) {\r\n        this.callbacks.add(\"onInvoked\", callback);\r\n    };\r\n    ServerProtocol.prototype.methodInvocationResult = function (method, invocationId, err, result) {\r\n        var msg;\r\n        if (err || err === \"\") {\r\n            msg = {\r\n                type: \"error\",\r\n                request_id: invocationId,\r\n                reason_uri: \"agm.errors.client_error\",\r\n                reason: err,\r\n                context: result,\r\n                peer_id: undefined,\r\n            };\r\n        }\r\n        else {\r\n            msg = {\r\n                type: \"yield\",\r\n                invocation_id: invocationId,\r\n                peer_id: this.session.peerId,\r\n                result: result,\r\n                request_id: undefined,\r\n            };\r\n        }\r\n        this.session.sendFireAndForget(msg);\r\n    };\r\n    ServerProtocol.prototype.unregister = function (method) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var msg;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        msg = {\r\n                            type: \"unregister\",\r\n                            methods: [method.repoId],\r\n                        };\r\n                        return [4, this.session.send(msg)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ServerProtocol.prototype.getBranchList = function (method) {\r\n        return this.streaming.getBranchList(method);\r\n    };\r\n    ServerProtocol.prototype.getSubscriptionList = function (method, branchKey) {\r\n        return this.streaming.getSubscriptionList(method, branchKey);\r\n    };\r\n    ServerProtocol.prototype.closeAllSubscriptions = function (method, branchKey) {\r\n        this.streaming.closeMultipleSubscriptions(method, branchKey);\r\n    };\r\n    ServerProtocol.prototype.pushData = function (method, data, branches) {\r\n        this.streaming.pushData(method, data, branches);\r\n    };\r\n    ServerProtocol.prototype.pushDataToSingle = function (method, subscription, data) {\r\n        this.streaming.pushDataToSingle(method, subscription, data);\r\n    };\r\n    ServerProtocol.prototype.closeSingleSubscription = function (method, subscription) {\r\n        this.streaming.closeSingleSubscription(method, subscription);\r\n    };\r\n    ServerProtocol.prototype.acceptRequestOnBranch = function (requestContext, method, branch) {\r\n        this.streaming.acceptRequestOnBranch(requestContext, method, branch);\r\n    };\r\n    ServerProtocol.prototype.rejectRequest = function (requestContext, method, reason) {\r\n        this.streaming.rejectRequest(requestContext, method, reason);\r\n    };\r\n    ServerProtocol.prototype.onSubRequest = function (callback) {\r\n        this.streaming.onSubRequest(callback);\r\n    };\r\n    ServerProtocol.prototype.onSubAdded = function (callback) {\r\n        this.streaming.onSubAdded(callback);\r\n    };\r\n    ServerProtocol.prototype.onSubRemoved = function (callback) {\r\n        this.streaming.onSubRemoved(callback);\r\n    };\r\n    ServerProtocol.prototype.handleInvokeMessage = function (msg) {\r\n        var invocationId = msg.invocation_id;\r\n        var callerId = msg.caller_id;\r\n        var methodId = msg.method_id;\r\n        var args = msg.arguments_kv;\r\n        var methodList = this.serverRepository.getList();\r\n        var method = methodList.filter(function (m) {\r\n            return m.repoId === methodId;\r\n        })[0];\r\n        if (method === undefined) {\r\n            return;\r\n        }\r\n        var client = this.clientRepository.getServerById(callerId);\r\n        var invocationArgs = { args: args, instance: client.getInfoForUser() };\r\n        this.callbacks.execute(\"onInvoked\", method, invocationId, invocationArgs);\r\n    };\r\n    return ServerProtocol;\r\n}());\n\nvar UserSubscription = (function () {\r\n    function UserSubscription(repository, subscriptionData) {\r\n        this.repository = repository;\r\n        this.subscriptionData = subscriptionData;\r\n    }\r\n    Object.defineProperty(UserSubscription.prototype, \"requestArguments\", {\r\n        get: function () {\r\n            return this.subscriptionData.params.arguments;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserSubscription.prototype, \"servers\", {\r\n        get: function () {\r\n            var _this = this;\r\n            return this.subscriptionData.trackedServers\r\n                .filter(function (pair) { return pair.subscriptionId; })\r\n                .map(function (pair) { return _this.repository.getServerById(pair.serverId).getInfoForUser(); });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserSubscription.prototype, \"serverInstance\", {\r\n        get: function () {\r\n            return this.servers[0];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserSubscription.prototype, \"stream\", {\r\n        get: function () {\r\n            return this.subscriptionData.method.info;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    UserSubscription.prototype.onData = function (dataCallback) {\r\n        if (typeof dataCallback !== \"function\") {\r\n            throw new TypeError(\"The data callback must be a function.\");\r\n        }\r\n        this.subscriptionData.handlers.onData.push(dataCallback);\r\n        if (this.subscriptionData.handlers.onData.length === 1 && this.subscriptionData.queued.data.length > 0) {\r\n            this.subscriptionData.queued.data.forEach(function (dataItem) {\r\n                dataCallback(dataItem);\r\n            });\r\n        }\r\n    };\r\n    UserSubscription.prototype.onClosed = function (closedCallback) {\r\n        if (typeof closedCallback !== \"function\") {\r\n            throw new TypeError(\"The callback must be a function.\");\r\n        }\r\n        this.subscriptionData.handlers.onClosed.push(closedCallback);\r\n    };\r\n    UserSubscription.prototype.onFailed = function (callback) {\r\n    };\r\n    UserSubscription.prototype.onConnected = function (callback) {\r\n        if (typeof callback !== \"function\") {\r\n            throw new TypeError(\"The callback must be a function.\");\r\n        }\r\n        this.subscriptionData.handlers.onConnected.push(callback);\r\n    };\r\n    UserSubscription.prototype.close = function () {\r\n        this.subscriptionData.close();\r\n    };\r\n    UserSubscription.prototype.setNewSubscription = function (newSub) {\r\n        this.subscriptionData = newSub;\r\n    };\r\n    return UserSubscription;\r\n}());\n\nvar STATUS_AWAITING_ACCEPT$1 = \"awaitingAccept\";\r\nvar STATUS_SUBSCRIBED$1 = \"subscribed\";\r\nvar ERR_MSG_SUB_FAILED$1 = \"Subscription failed.\";\r\nvar ERR_MSG_SUB_REJECTED$1 = \"Subscription rejected.\";\r\nvar ON_CLOSE_MSG_SERVER_INIT$1 = \"ServerInitiated\";\r\nvar ON_CLOSE_MSG_CLIENT_INIT$1 = \"ClientInitiated\";\r\nvar ClientStreaming$1 = (function () {\r\n    function ClientStreaming(session, repository, logger) {\r\n        var _this = this;\r\n        this.session = session;\r\n        this.repository = repository;\r\n        this.logger = logger;\r\n        this.subscriptionsList = {};\r\n        this.subscriptionIdToLocalKeyMap = {};\r\n        this.nextSubLocalKey = 0;\r\n        this.handleErrorSubscribing = function (errorResponse) {\r\n            var tag = errorResponse._tag;\r\n            var subLocalKey = tag.subLocalKey;\r\n            var pendingSub = _this.subscriptionsList[subLocalKey];\r\n            if (typeof pendingSub !== \"object\") {\r\n                return;\r\n            }\r\n            pendingSub.trackedServers = pendingSub.trackedServers.filter(function (server) {\r\n                return server.serverId !== tag.serverId;\r\n            });\r\n            if (pendingSub.trackedServers.length <= 0) {\r\n                clearTimeout(pendingSub.timeoutId);\r\n                if (pendingSub.status === STATUS_AWAITING_ACCEPT$1) {\r\n                    var reason = (typeof errorResponse.reason === \"string\" && errorResponse.reason !== \"\") ?\r\n                        ' Publisher said \"' + errorResponse.reason + '\".' :\r\n                        \" No reason given.\";\r\n                    var callArgs = typeof pendingSub.params.arguments === \"object\" ?\r\n                        JSON.stringify(pendingSub.params.arguments) :\r\n                        \"{}\";\r\n                    pendingSub.error({\r\n                        message: ERR_MSG_SUB_REJECTED$1 + reason + \" Called with:\" + callArgs,\r\n                        called_with: pendingSub.params.arguments,\r\n                        method: pendingSub.method.getInfoForUser(),\r\n                    });\r\n                }\r\n                else if (pendingSub.status === STATUS_SUBSCRIBED$1) {\r\n                    _this.callOnClosedHandlers(pendingSub);\r\n                }\r\n                delete _this.subscriptionsList[subLocalKey];\r\n            }\r\n        };\r\n        this.handleSubscribed = function (msg) {\r\n            var subLocalKey = msg._tag.subLocalKey;\r\n            var pendingSub = _this.subscriptionsList[subLocalKey];\r\n            if (typeof pendingSub !== \"object\") {\r\n                return;\r\n            }\r\n            var serverId = msg._tag.serverId;\r\n            var acceptingServer = pendingSub.trackedServers\r\n                .filter(function (server) {\r\n                return server.serverId === serverId;\r\n            })[0];\r\n            if (typeof acceptingServer !== \"object\") {\r\n                return;\r\n            }\r\n            acceptingServer.subscriptionId = msg.subscription_id;\r\n            _this.subscriptionIdToLocalKeyMap[msg.subscription_id] = subLocalKey;\r\n            var isFirstResponse = (pendingSub.status === STATUS_AWAITING_ACCEPT$1);\r\n            pendingSub.status = STATUS_SUBSCRIBED$1;\r\n            if (isFirstResponse) {\r\n                var reconnect_1 = !!pendingSub.subscription;\r\n                if (reconnect_1) {\r\n                    pendingSub.subscription.setNewSubscription(pendingSub);\r\n                    pendingSub.success(pendingSub.subscription);\r\n                }\r\n                else {\r\n                    var subsObject = new UserSubscription(_this.repository, pendingSub);\r\n                    pendingSub.subscription = subsObject;\r\n                    pendingSub.success(subsObject);\r\n                }\r\n                pendingSub.handlers.onConnected.forEach(function (handler) {\r\n                    var _a;\r\n                    try {\r\n                        handler((_a = pendingSub.subscription) === null || _a === void 0 ? void 0 : _a.serverInstance, reconnect_1);\r\n                    }\r\n                    catch (e) {\r\n                    }\r\n                });\r\n            }\r\n        };\r\n        this.handleEventData = function (msg) {\r\n            var subLocalKey = _this.subscriptionIdToLocalKeyMap[msg.subscription_id];\r\n            if (typeof subLocalKey === \"undefined\") {\r\n                return;\r\n            }\r\n            var subscription = _this.subscriptionsList[subLocalKey];\r\n            if (typeof subscription !== \"object\") {\r\n                return;\r\n            }\r\n            var trackedServersFound = subscription.trackedServers.filter(function (server) {\r\n                return server.subscriptionId === msg.subscription_id;\r\n            });\r\n            if (trackedServersFound.length !== 1) {\r\n                return;\r\n            }\r\n            var isPrivateData = msg.oob;\r\n            var sendingServerId = trackedServersFound[0].serverId;\r\n            var receivedStreamData = function () {\r\n                return {\r\n                    data: msg.data,\r\n                    server: _this.repository.getServerById(sendingServerId).getInfoForUser(),\r\n                    requestArguments: subscription.params.arguments,\r\n                    message: null,\r\n                    private: isPrivateData,\r\n                };\r\n            };\r\n            var onDataHandlers = subscription.handlers.onData;\r\n            var queuedData = subscription.queued.data;\r\n            if (onDataHandlers.length > 0) {\r\n                onDataHandlers.forEach(function (callback) {\r\n                    if (typeof callback === \"function\") {\r\n                        callback(receivedStreamData());\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                queuedData.push(receivedStreamData());\r\n            }\r\n        };\r\n        this.handleSubscriptionCancelled = function (msg) {\r\n            var subLocalKey = _this.subscriptionIdToLocalKeyMap[msg.subscription_id];\r\n            if (typeof subLocalKey === \"undefined\") {\r\n                return;\r\n            }\r\n            var subscription = _this.subscriptionsList[subLocalKey];\r\n            if (typeof subscription !== \"object\") {\r\n                return;\r\n            }\r\n            var expectedNewLength = subscription.trackedServers.length - 1;\r\n            subscription.trackedServers = subscription.trackedServers.filter(function (server) {\r\n                if (server.subscriptionId === msg.subscription_id) {\r\n                    subscription.queued.closers.push(server.serverId);\r\n                    return false;\r\n                }\r\n                else {\r\n                    return true;\r\n                }\r\n            });\r\n            if (subscription.trackedServers.length !== expectedNewLength) {\r\n                return;\r\n            }\r\n            if (subscription.trackedServers.length <= 0) {\r\n                clearTimeout(subscription.timeoutId);\r\n                _this.callOnClosedHandlers(subscription);\r\n                delete _this.subscriptionsList[subLocalKey];\r\n            }\r\n            delete _this.subscriptionIdToLocalKeyMap[msg.subscription_id];\r\n        };\r\n        session.on(\"subscribed\", this.handleSubscribed);\r\n        session.on(\"event\", this.handleEventData);\r\n        session.on(\"subscription-cancelled\", this.handleSubscriptionCancelled);\r\n    }\r\n    ClientStreaming.prototype.subscribe = function (streamingMethod, params, targetServers, stuff, success, error, existingSub) {\r\n        var _this = this;\r\n        if (targetServers.length === 0) {\r\n            error({\r\n                method: streamingMethod.getInfoForUser(),\r\n                called_with: params.arguments,\r\n                message: ERR_MSG_SUB_FAILED$1 + \" No available servers matched the target params.\",\r\n            });\r\n            return;\r\n        }\r\n        var subLocalKey = this.getNextSubscriptionLocalKey();\r\n        var pendingSub = this.registerSubscription(subLocalKey, streamingMethod, params, success, error, stuff.methodResponseTimeout, existingSub);\r\n        if (typeof pendingSub !== \"object\") {\r\n            error({\r\n                method: streamingMethod.getInfoForUser(),\r\n                called_with: params.arguments,\r\n                message: ERR_MSG_SUB_FAILED$1 + \" Unable to register the user callbacks.\",\r\n            });\r\n            return;\r\n        }\r\n        targetServers.forEach(function (target) {\r\n            var serverId = target.server.id;\r\n            var method = target.methods.find(function (m) { return m.info.name === streamingMethod.info.name; });\r\n            pendingSub.trackedServers.push({\r\n                serverId: serverId,\r\n                subscriptionId: undefined,\r\n            });\r\n            var msg = {\r\n                type: \"subscribe\",\r\n                server_id: serverId,\r\n                method_id: method.protocolState.id,\r\n                arguments_kv: params.arguments,\r\n            };\r\n            _this.session.send(msg, { serverId: serverId, subLocalKey: subLocalKey })\r\n                .then(function (m) { return _this.handleSubscribed(m); })\r\n                .catch(function (err) { return _this.handleErrorSubscribing(err); });\r\n        });\r\n    };\r\n    ClientStreaming.prototype.drainSubscriptions = function () {\r\n        var existing = Object.values(this.subscriptionsList);\r\n        this.subscriptionsList = {};\r\n        this.subscriptionIdToLocalKeyMap = {};\r\n        return existing;\r\n    };\r\n    ClientStreaming.prototype.getNextSubscriptionLocalKey = function () {\r\n        var current = this.nextSubLocalKey;\r\n        this.nextSubLocalKey += 1;\r\n        return current;\r\n    };\r\n    ClientStreaming.prototype.registerSubscription = function (subLocalKey, method, params, success, error, timeout, existingSub) {\r\n        var _this = this;\r\n        var _a, _b, _c, _d;\r\n        var subsInfo = {\r\n            localKey: subLocalKey,\r\n            status: STATUS_AWAITING_ACCEPT$1,\r\n            method: method,\r\n            params: params,\r\n            success: success,\r\n            error: error,\r\n            trackedServers: [],\r\n            handlers: {\r\n                onData: ((_a = existingSub) === null || _a === void 0 ? void 0 : _a.handlers.onData) || [],\r\n                onClosed: ((_b = existingSub) === null || _b === void 0 ? void 0 : _b.handlers.onClosed) || [],\r\n                onConnected: ((_c = existingSub) === null || _c === void 0 ? void 0 : _c.handlers.onConnected) || []\r\n            },\r\n            queued: {\r\n                data: [],\r\n                closers: [],\r\n            },\r\n            timeoutId: undefined,\r\n            close: function () { return _this.closeSubscription(subLocalKey); },\r\n            subscription: (_d = existingSub) === null || _d === void 0 ? void 0 : _d.subscription\r\n        };\r\n        if (!existingSub) {\r\n            if (params.onData) {\r\n                subsInfo.handlers.onData.push(params.onData);\r\n            }\r\n            if (params.onClosed) {\r\n                subsInfo.handlers.onClosed.push(params.onClosed);\r\n            }\r\n            if (params.onConnected) {\r\n                subsInfo.handlers.onConnected.push(params.onConnected);\r\n            }\r\n        }\r\n        this.subscriptionsList[subLocalKey] = subsInfo;\r\n        subsInfo.timeoutId = setTimeout(function () {\r\n            if (_this.subscriptionsList[subLocalKey] === undefined) {\r\n                return;\r\n            }\r\n            var pendingSub = _this.subscriptionsList[subLocalKey];\r\n            if (pendingSub.status === STATUS_AWAITING_ACCEPT$1) {\r\n                error({\r\n                    method: method.getInfoForUser(),\r\n                    called_with: params.arguments,\r\n                    message: ERR_MSG_SUB_FAILED$1 + \" Subscription attempt timed out after \" + timeout + \" ms.\",\r\n                });\r\n                delete _this.subscriptionsList[subLocalKey];\r\n            }\r\n            else if (pendingSub.status === STATUS_SUBSCRIBED$1 && pendingSub.trackedServers.length > 0) {\r\n                pendingSub.trackedServers = pendingSub.trackedServers.filter(function (server) {\r\n                    return (typeof server.subscriptionId !== \"undefined\");\r\n                });\r\n                delete pendingSub.timeoutId;\r\n                if (pendingSub.trackedServers.length <= 0) {\r\n                    _this.callOnClosedHandlers(pendingSub);\r\n                    delete _this.subscriptionsList[subLocalKey];\r\n                }\r\n            }\r\n        }, timeout);\r\n        return subsInfo;\r\n    };\r\n    ClientStreaming.prototype.callOnClosedHandlers = function (subscription, reason) {\r\n        var closersCount = subscription.queued.closers.length;\r\n        var closingServerId = (closersCount > 0) ? subscription.queued.closers[closersCount - 1] : null;\r\n        var closingServer = null;\r\n        if (closingServerId !== undefined && typeof closingServerId === \"string\") {\r\n            closingServer = this.repository.getServerById(closingServerId).getInfoForUser();\r\n        }\r\n        subscription.handlers.onClosed.forEach(function (callback) {\r\n            if (typeof callback !== \"function\") {\r\n                return;\r\n            }\r\n            callback({\r\n                message: reason || ON_CLOSE_MSG_SERVER_INIT$1,\r\n                requestArguments: subscription.params.arguments,\r\n                server: closingServer,\r\n                stream: subscription.method,\r\n            });\r\n        });\r\n    };\r\n    ClientStreaming.prototype.closeSubscription = function (subLocalKey) {\r\n        var _this = this;\r\n        var subscription = this.subscriptionsList[subLocalKey];\r\n        if (typeof subscription !== \"object\") {\r\n            return;\r\n        }\r\n        subscription.trackedServers.forEach(function (server) {\r\n            if (typeof server.subscriptionId === \"undefined\") {\r\n                return;\r\n            }\r\n            subscription.queued.closers.push(server.serverId);\r\n            _this.session.sendFireAndForget({\r\n                type: \"unsubscribe\",\r\n                subscription_id: server.subscriptionId,\r\n                reason_uri: \"\",\r\n                reason: ON_CLOSE_MSG_CLIENT_INIT$1,\r\n            });\r\n            delete _this.subscriptionIdToLocalKeyMap[server.subscriptionId];\r\n        });\r\n        subscription.trackedServers = [];\r\n        this.callOnClosedHandlers(subscription, ON_CLOSE_MSG_CLIENT_INIT$1);\r\n        delete this.subscriptionsList[subLocalKey];\r\n    };\r\n    return ClientStreaming;\r\n}());\n\nvar ClientProtocol$1 = (function () {\r\n    function ClientProtocol(session, repository, logger) {\r\n        var _this = this;\r\n        this.session = session;\r\n        this.repository = repository;\r\n        this.logger = logger;\r\n        this.callbacks = lib();\r\n        session.on(\"peer-added\", function (msg) { return _this.handlePeerAdded(msg); });\r\n        session.on(\"peer-removed\", function (msg) { return _this.handlePeerRemoved(msg); });\r\n        session.on(\"methods-added\", function (msg) { return _this.handleMethodsAddedMessage(msg); });\r\n        session.on(\"methods-removed\", function (msg) { return _this.handleMethodsRemovedMessage(msg); });\r\n        this.streaming = new ClientStreaming$1(session, repository, logger);\r\n    }\r\n    ClientProtocol.prototype.subscribe = function (stream, args, targetServers, options, success, error, existingSub) {\r\n        this.streaming.subscribe(stream, args, targetServers, options, success, error, existingSub);\r\n    };\r\n    ClientProtocol.prototype.invoke = function (id, method, args, target) {\r\n        var _this = this;\r\n        var serverId = target.id;\r\n        var methodId = method.protocolState.id;\r\n        var msg = {\r\n            type: \"call\",\r\n            server_id: serverId,\r\n            method_id: methodId,\r\n            arguments_kv: args,\r\n        };\r\n        return this.session.send(msg, { invocationId: id, serverId: serverId })\r\n            .then(function (m) { return _this.handleResultMessage(m); })\r\n            .catch(function (err) { return _this.handleInvocationError(err); });\r\n    };\r\n    ClientProtocol.prototype.drainSubscriptions = function () {\r\n        return this.streaming.drainSubscriptions();\r\n    };\r\n    ClientProtocol.prototype.handlePeerAdded = function (msg) {\r\n        var newPeerId = msg.new_peer_id;\r\n        var remoteId = msg.identity;\r\n        var isLocal = msg.meta ? msg.meta.local : true;\r\n        var pid = Number(remoteId.process);\r\n        var serverInfo = {\r\n            machine: remoteId.machine,\r\n            pid: isNaN(pid) ? remoteId.process : pid,\r\n            instance: remoteId.instance,\r\n            application: remoteId.application,\r\n            applicationName: remoteId.applicationName,\r\n            environment: remoteId.environment,\r\n            region: remoteId.region,\r\n            user: remoteId.user,\r\n            windowId: remoteId.windowId,\r\n            peerId: newPeerId,\r\n            api: remoteId.api,\r\n            isLocal: isLocal\r\n        };\r\n        this.repository.addServer(serverInfo, newPeerId);\r\n    };\r\n    ClientProtocol.prototype.handlePeerRemoved = function (msg) {\r\n        var removedPeerId = msg.removed_id;\r\n        var reason = msg.reason;\r\n        this.repository.removeServerById(removedPeerId, reason);\r\n    };\r\n    ClientProtocol.prototype.handleMethodsAddedMessage = function (msg) {\r\n        var _this = this;\r\n        var serverId = msg.server_id;\r\n        var methods = msg.methods;\r\n        methods.forEach(function (method) {\r\n            var methodInfo = {\r\n                name: method.name,\r\n                displayName: method.display_name,\r\n                description: method.description,\r\n                version: method.version,\r\n                objectTypes: method.object_types || [],\r\n                accepts: method.input_signature,\r\n                returns: method.result_signature,\r\n                supportsStreaming: typeof method.flags !== \"undefined\" ? method.flags.streaming : false,\r\n            };\r\n            _this.repository.addServerMethod(serverId, methodInfo, { id: method.id });\r\n        });\r\n    };\r\n    ClientProtocol.prototype.handleMethodsRemovedMessage = function (msg) {\r\n        var _this = this;\r\n        var serverId = msg.server_id;\r\n        var methodIdList = msg.methods;\r\n        var server = this.repository.getServerById(serverId);\r\n        var serverMethodKeys = Object.keys(server.methods);\r\n        serverMethodKeys.forEach(function (methodKey) {\r\n            var method = server.methods[methodKey];\r\n            if (methodIdList.indexOf(method.protocolState.id) > -1) {\r\n                _this.repository.removeServerMethod(serverId, methodKey);\r\n            }\r\n        });\r\n    };\r\n    ClientProtocol.prototype.handleResultMessage = function (msg) {\r\n        var invocationId = msg._tag.invocationId;\r\n        var result = msg.result;\r\n        var serverId = msg._tag.serverId;\r\n        var server = this.repository.getServerById(serverId);\r\n        return {\r\n            invocationId: invocationId,\r\n            result: result,\r\n            instance: server.getInfoForUser(),\r\n            status: InvokeStatus.Success,\r\n            message: \"\"\r\n        };\r\n    };\r\n    ClientProtocol.prototype.handleInvocationError = function (msg) {\r\n        this.logger.debug(\"handle invocation error \" + JSON.stringify(msg));\r\n        var invocationId = msg._tag.invocationId;\r\n        var serverId = msg._tag.serverId;\r\n        var server = this.repository.getServerById(serverId);\r\n        var message = msg.reason;\r\n        var context = msg.context;\r\n        return {\r\n            invocationId: invocationId,\r\n            result: context,\r\n            instance: server.getInfoForUser(),\r\n            status: InvokeStatus.Error,\r\n            message: message\r\n        };\r\n    };\r\n    return ClientProtocol;\r\n}());\n\nfunction gW3ProtocolFactory (instance, connection, clientRepository, serverRepository, libConfig, getAGM) {\r\n    var logger = libConfig.logger.subLogger(\"gw3-protocol\");\r\n    var resolveReadyPromise;\r\n    var readyPromise = new Promise(function (resolve) {\r\n        resolveReadyPromise = resolve;\r\n    });\r\n    var session = connection.domain(\"agm\", logger.subLogger(\"domain\"), [\"subscribed\"]);\r\n    var server = new ServerProtocol$1(session, clientRepository, serverRepository, logger.subLogger(\"server\"));\r\n    var client = new ClientProtocol$1(session, clientRepository, logger.subLogger(\"client\"));\r\n    function handleReconnect() {\r\n        logger.info(\"reconnected - will replay registered methods and subscriptions\");\r\n        var existingSubscriptions = client.drainSubscriptions();\r\n        existingSubscriptions.forEach(function (sub) {\r\n            var methodInfo = sub.method.info;\r\n            var params = Object.assign({}, sub.params);\r\n            getAGM().client.subscribe(methodInfo, params, undefined, undefined, sub);\r\n        });\r\n        var registeredMethods = serverRepository.getList();\r\n        serverRepository.reset();\r\n        for (var _i = 0, registeredMethods_1 = registeredMethods; _i < registeredMethods_1.length; _i++) {\r\n            var method = registeredMethods_1[_i];\r\n            var def = method.definition;\r\n            if (method.stream) {\r\n                getAGM().server.createStream(def, method.streamCallbacks, undefined, undefined, method.stream);\r\n            }\r\n            else if (method.theFunction.userCallback) {\r\n                getAGM().register(def, method.theFunction.userCallback);\r\n            }\r\n            else if (method.theFunction.userCallbackAsync) {\r\n                getAGM().registerAsync(def, method.theFunction.userCallbackAsync);\r\n            }\r\n        }\r\n    }\r\n    function handleInitialJoin() {\r\n        resolveReadyPromise({\r\n            client: client,\r\n            server: server,\r\n        });\r\n        resolveReadyPromise = undefined;\r\n    }\r\n    session.onLeft(function () {\r\n        clientRepository.reset();\r\n    });\r\n    session.onJoined(function (reconnect) {\r\n        clientRepository.addServer(instance, connection.peerId);\r\n        if (reconnect) {\r\n            handleReconnect();\r\n        }\r\n        else {\r\n            handleInitialJoin();\r\n        }\r\n    });\r\n    session.join();\r\n    return readyPromise;\r\n}\n\nvar ServerSubscription = (function () {\r\n    function ServerSubscription(protocol, repoMethod, subscription) {\r\n        this.protocol = protocol;\r\n        this.repoMethod = repoMethod;\r\n        this.subscription = subscription;\r\n    }\r\n    Object.defineProperty(ServerSubscription.prototype, \"stream\", {\r\n        get: function () { return this.repoMethod.stream; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ServerSubscription.prototype, \"arguments\", {\r\n        get: function () { return this.subscription.arguments || {}; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ServerSubscription.prototype, \"branchKey\", {\r\n        get: function () { return this.subscription.branchKey; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ServerSubscription.prototype, \"instance\", {\r\n        get: function () { return this.subscription.instance; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ServerSubscription.prototype.close = function () {\r\n        this.protocol.server.closeSingleSubscription(this.repoMethod, this.subscription);\r\n    };\r\n    ServerSubscription.prototype.push = function (data) {\r\n        this.protocol.server.pushDataToSingle(this.repoMethod, this.subscription, data);\r\n    };\r\n    return ServerSubscription;\r\n}());\n\nvar Request = (function () {\r\n    function Request(protocol, repoMethod, requestContext) {\r\n        this.protocol = protocol;\r\n        this.repoMethod = repoMethod;\r\n        this.requestContext = requestContext;\r\n        this.arguments = requestContext.arguments;\r\n        this.instance = requestContext.instance;\r\n    }\r\n    Request.prototype.accept = function () {\r\n        this.protocol.server.acceptRequestOnBranch(this.requestContext, this.repoMethod, \"\");\r\n    };\r\n    Request.prototype.acceptOnBranch = function (branch) {\r\n        this.protocol.server.acceptRequestOnBranch(this.requestContext, this.repoMethod, branch);\r\n    };\r\n    Request.prototype.reject = function (reason) {\r\n        this.protocol.server.rejectRequest(this.requestContext, this.repoMethod, reason);\r\n    };\r\n    return Request;\r\n}());\n\nvar ServerStreaming$2 = (function () {\r\n    function ServerStreaming(protocol, server) {\r\n        var _this = this;\r\n        this.protocol = protocol;\r\n        this.server = server;\r\n        protocol.server.onSubRequest(function (rc, rm) { return _this.handleSubRequest(rc, rm); });\r\n        protocol.server.onSubAdded(function (sub, rm) { return _this.handleSubAdded(sub, rm); });\r\n        protocol.server.onSubRemoved(function (sub, rm) { return _this.handleSubRemoved(sub, rm); });\r\n    }\r\n    ServerStreaming.prototype.handleSubRequest = function (requestContext, repoMethod) {\r\n        if (!(repoMethod &&\r\n            repoMethod.streamCallbacks &&\r\n            typeof repoMethod.streamCallbacks.subscriptionRequestHandler === \"function\")) {\r\n            return;\r\n        }\r\n        var request = new Request(this.protocol, repoMethod, requestContext);\r\n        repoMethod.streamCallbacks.subscriptionRequestHandler(request);\r\n    };\r\n    ServerStreaming.prototype.handleSubAdded = function (subscription, repoMethod) {\r\n        if (!(repoMethod &&\r\n            repoMethod.streamCallbacks &&\r\n            typeof repoMethod.streamCallbacks.subscriptionAddedHandler === \"function\")) {\r\n            return;\r\n        }\r\n        var sub = new ServerSubscription(this.protocol, repoMethod, subscription);\r\n        repoMethod.streamCallbacks.subscriptionAddedHandler(sub);\r\n    };\r\n    ServerStreaming.prototype.handleSubRemoved = function (subscription, repoMethod) {\r\n        if (!(repoMethod &&\r\n            repoMethod.streamCallbacks &&\r\n            typeof repoMethod.streamCallbacks.subscriptionRemovedHandler === \"function\")) {\r\n            return;\r\n        }\r\n        var sub = new ServerSubscription(this.protocol, repoMethod, subscription);\r\n        repoMethod.streamCallbacks.subscriptionRemovedHandler(sub);\r\n    };\r\n    return ServerStreaming;\r\n}());\n\nvar ServerBranch = (function () {\r\n    function ServerBranch(key, protocol, repoMethod) {\r\n        this.key = key;\r\n        this.protocol = protocol;\r\n        this.repoMethod = repoMethod;\r\n    }\r\n    ServerBranch.prototype.subscriptions = function () {\r\n        var _this = this;\r\n        var subList = this.protocol.server.getSubscriptionList(this.repoMethod, this.key);\r\n        return subList.map(function (sub) {\r\n            return new ServerSubscription(_this.protocol, _this.repoMethod, sub);\r\n        });\r\n    };\r\n    ServerBranch.prototype.close = function () {\r\n        this.protocol.server.closeAllSubscriptions(this.repoMethod, this.key);\r\n    };\r\n    ServerBranch.prototype.push = function (data) {\r\n        this.protocol.server.pushData(this.repoMethod, data, [this.key]);\r\n    };\r\n    return ServerBranch;\r\n}());\n\nvar ServerStream = (function () {\r\n    function ServerStream(_protocol, _repoMethod, _server) {\r\n        this._protocol = _protocol;\r\n        this._repoMethod = _repoMethod;\r\n        this._server = _server;\r\n        this.name = this._repoMethod.definition.name;\r\n    }\r\n    ServerStream.prototype.branches = function (key) {\r\n        var _this = this;\r\n        var bList = this._protocol.server.getBranchList(this._repoMethod);\r\n        if (key) {\r\n            if (bList.indexOf(key) > -1) {\r\n                return new ServerBranch(key, this._protocol, this._repoMethod);\r\n            }\r\n            return undefined;\r\n        }\r\n        else {\r\n            return bList.map(function (branchKey) {\r\n                return new ServerBranch(branchKey, _this._protocol, _this._repoMethod);\r\n            });\r\n        }\r\n    };\r\n    ServerStream.prototype.subscriptions = function () {\r\n        var _this = this;\r\n        var subList = this._protocol.server.getSubscriptionList(this._repoMethod);\r\n        return subList.map(function (sub) {\r\n            return new ServerSubscription(_this._protocol, _this._repoMethod, sub);\r\n        });\r\n    };\r\n    Object.defineProperty(ServerStream.prototype, \"definition\", {\r\n        get: function () {\r\n            var def2 = this._repoMethod.definition;\r\n            return {\r\n                accepts: def2.accepts,\r\n                description: def2.description,\r\n                displayName: def2.displayName,\r\n                name: def2.name,\r\n                objectTypes: def2.objectTypes,\r\n                returns: def2.returns,\r\n                supportsStreaming: def2.supportsStreaming,\r\n            };\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ServerStream.prototype.close = function () {\r\n        this._protocol.server.closeAllSubscriptions(this._repoMethod);\r\n        this._server.unregister(this._repoMethod.definition, true);\r\n    };\r\n    ServerStream.prototype.push = function (data, branches) {\r\n        if (typeof branches !== \"string\" && !Array.isArray(branches) && branches !== undefined) {\r\n            throw new Error(\"invalid branches should be string or string array\");\r\n        }\r\n        if (typeof data !== \"object\") {\r\n            throw new Error(\"Invalid arguments. Data must be an object.\");\r\n        }\r\n        this._protocol.server.pushData(this._repoMethod, data, branches);\r\n    };\r\n    ServerStream.prototype.updateRepoMethod = function (repoMethod) {\r\n        this._repoMethod = repoMethod;\r\n    };\r\n    return ServerStream;\r\n}());\n\nvar removeProp = function (object, propNameToRemove) {\r\n    return Object.keys(object).reduce(function (reducedObj, currProp) {\r\n        if (currProp !== propNameToRemove) {\r\n            reducedObj[currProp] = object[currProp];\r\n        }\r\n        return reducedObj;\r\n    }, {});\r\n};\n\nvar Server = (function () {\r\n    function Server(protocol, serverRepository) {\r\n        this.protocol = protocol;\r\n        this.serverRepository = serverRepository;\r\n        this.invocations = 0;\r\n        this.currentlyUnregistering = {};\r\n        this.streaming = new ServerStreaming$2(protocol, this);\r\n        this.protocol.server.onInvoked(this.onMethodInvoked.bind(this));\r\n    }\r\n    Server.prototype.createStream = function (streamDef, callbacks, successCallback, errorCallback, existingStream) {\r\n        var _this = this;\r\n        var promise = new Promise(function (resolve, reject) {\r\n            if (!streamDef) {\r\n                reject(\"The stream name must be unique! Please, provide either a unique string for a stream name to \\u201Cglue.interop.createStream()\\u201D or a \\u201CmethodDefinition\\u201D object with a unique \\u201Cname\\u201D property for the stream.\");\r\n            }\r\n            var streamMethodDefinition;\r\n            if (typeof streamDef === \"string\") {\r\n                streamMethodDefinition = { name: \"\" + streamDef };\r\n            }\r\n            else {\r\n                streamMethodDefinition = __assign({}, streamDef);\r\n            }\r\n            if (!streamMethodDefinition.name) {\r\n                return reject(\"The \\u201Cname\\u201D property is required for the \\u201CstreamDefinition\\u201D object and must be unique. Stream definition: \" + JSON.stringify(streamMethodDefinition));\r\n            }\r\n            var nameAlreadyExists = _this.serverRepository.getList()\r\n                .some(function (serverMethod) { return serverMethod.definition.name === streamMethodDefinition.name; });\r\n            if (nameAlreadyExists) {\r\n                return reject(\"A stream with the name \\\"\" + streamMethodDefinition.name + \"\\\" already exists! Please, provide a unique name for the stream.\");\r\n            }\r\n            streamMethodDefinition.supportsStreaming = true;\r\n            if (!callbacks) {\r\n                callbacks = {};\r\n            }\r\n            if (typeof callbacks.subscriptionRequestHandler !== \"function\") {\r\n                callbacks.subscriptionRequestHandler = function (request) {\r\n                    request.accept();\r\n                };\r\n            }\r\n            var repoMethod = {\r\n                definition: streamMethodDefinition,\r\n                streamCallbacks: callbacks,\r\n                protocolState: {},\r\n            };\r\n            _this.serverRepository.add(repoMethod);\r\n            _this.protocol.server.createStream(repoMethod)\r\n                .then(function () {\r\n                var streamUserObject;\r\n                if (existingStream) {\r\n                    streamUserObject = existingStream;\r\n                    existingStream.updateRepoMethod(repoMethod);\r\n                }\r\n                else {\r\n                    streamUserObject = new ServerStream(_this.protocol, repoMethod, _this);\r\n                }\r\n                repoMethod.stream = streamUserObject;\r\n                resolve(streamUserObject);\r\n            })\r\n                .catch(function (err) {\r\n                _this.serverRepository.remove(repoMethod.repoId);\r\n                reject(err);\r\n            });\r\n        });\r\n        return promisify(promise, successCallback, errorCallback);\r\n    };\r\n    Server.prototype.register = function (methodDefinition, callback) {\r\n        var _this = this;\r\n        if (!methodDefinition) {\r\n            return Promise.reject(\"Method definition is required. Please, provide either a unique string for a method name or a \\u201CmethodDefinition\\u201D object with a required \\u201Cname\\u201D property.\");\r\n        }\r\n        if (typeof callback !== \"function\") {\r\n            return Promise.reject(\"The second parameter must be a callback function. Method: \" + (typeof methodDefinition === \"string\" ? methodDefinition : methodDefinition.name));\r\n        }\r\n        var wrappedCallbackFunction = function (context, resultCallback) { return __awaiter(_this, void 0, void 0, function () {\r\n            var result, resultValue, e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 4, , 5]);\r\n                        result = callback(context.args, context.instance);\r\n                        if (!(result && typeof result.then === \"function\")) return [3, 2];\r\n                        return [4, result];\r\n                    case 1:\r\n                        resultValue = _a.sent();\r\n                        resultCallback(null, resultValue);\r\n                        return [3, 3];\r\n                    case 2:\r\n                        resultCallback(null, result);\r\n                        _a.label = 3;\r\n                    case 3: return [3, 5];\r\n                    case 4:\r\n                        e_1 = _a.sent();\r\n                        if (!e_1) {\r\n                            e_1 = \"\";\r\n                        }\r\n                        resultCallback(e_1, e_1);\r\n                        return [3, 5];\r\n                    case 5: return [2];\r\n                }\r\n            });\r\n        }); };\r\n        wrappedCallbackFunction.userCallback = callback;\r\n        return this.registerCore(methodDefinition, wrappedCallbackFunction);\r\n    };\r\n    Server.prototype.registerAsync = function (methodDefinition, callback) {\r\n        if (!methodDefinition) {\r\n            return Promise.reject(\"Method definition is required. Please, provide either a unique string for a method name or a \\u201CmethodDefinition\\u201D object with a required \\u201Cname\\u201D property.\");\r\n        }\r\n        if (typeof callback !== \"function\") {\r\n            return Promise.reject(\"The second parameter must be a callback function. Method: \" + (typeof methodDefinition === \"string\" ? methodDefinition : methodDefinition.name));\r\n        }\r\n        var wrappedCallback = function (context, resultCallback) {\r\n            try {\r\n                var resultCalled_1 = false;\r\n                var success = function (result) {\r\n                    if (!resultCalled_1) {\r\n                        resultCallback(null, result);\r\n                    }\r\n                    resultCalled_1 = true;\r\n                };\r\n                var error = function (e) {\r\n                    if (!resultCalled_1) {\r\n                        if (!e) {\r\n                            e = \"\";\r\n                        }\r\n                        resultCallback(e, e);\r\n                    }\r\n                    resultCalled_1 = true;\r\n                };\r\n                var methodResult = callback(context.args, context.instance, success, error);\r\n                if (methodResult && typeof methodResult.then === \"function\") {\r\n                    methodResult\r\n                        .then(success)\r\n                        .catch(error);\r\n                }\r\n            }\r\n            catch (e) {\r\n                resultCallback(e, null);\r\n            }\r\n        };\r\n        wrappedCallback.userCallbackAsync = callback;\r\n        return this.registerCore(methodDefinition, wrappedCallback);\r\n    };\r\n    Server.prototype.unregister = function (methodFilter, forStream) {\r\n        if (forStream === void 0) { forStream = false; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var methodDefinition, methodToBeRemoved;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (methodFilter === undefined) {\r\n                            return [2, Promise.reject(\"Please, provide either a unique string for a name or an object containing a \\u201Cname\\u201D property.\")];\r\n                        }\r\n                        if (!(typeof methodFilter === \"function\")) return [3, 2];\r\n                        return [4, this.unregisterWithPredicate(methodFilter, forStream)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2];\r\n                    case 2:\r\n                        if (typeof methodFilter === \"string\") {\r\n                            methodDefinition = { name: methodFilter };\r\n                        }\r\n                        else {\r\n                            methodDefinition = methodFilter;\r\n                        }\r\n                        if (methodDefinition.name === undefined) {\r\n                            return [2, Promise.reject(\"Method name is required. Cannot find a method if the method name is undefined!\")];\r\n                        }\r\n                        methodToBeRemoved = this.serverRepository.getList().find(function (serverMethod) {\r\n                            return serverMethod.definition.name === methodDefinition.name\r\n                                && (serverMethod.definition.supportsStreaming || false) === forStream;\r\n                        });\r\n                        if (!methodToBeRemoved) {\r\n                            return [2, Promise.reject(\"Method with a name \\\"\" + methodDefinition.name + \"\\\" does not exist or is not registered by your application!\")];\r\n                        }\r\n                        return [4, this.removeMethodsOrStreams([methodToBeRemoved])];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Server.prototype.unregisterWithPredicate = function (filterPredicate, forStream) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var methodsOrStreamsToRemove;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        methodsOrStreamsToRemove = this.serverRepository.getList()\r\n                            .filter(function (sm) { return filterPredicate(sm.definition); })\r\n                            .filter(function (serverMethod) {\r\n                            return (serverMethod.definition.supportsStreaming || false) === forStream;\r\n                        });\r\n                        if (!methodsOrStreamsToRemove || methodsOrStreamsToRemove.length === 0) {\r\n                            return [2, Promise.reject(\"Could not find a \" + (forStream ? \"stream\" : \"method\") + \" matching the specified condition!\")];\r\n                        }\r\n                        return [4, this.removeMethodsOrStreams(methodsOrStreamsToRemove)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Server.prototype.removeMethodsOrStreams = function (methodsToRemove) {\r\n        var _this = this;\r\n        var methodUnregPromises = [];\r\n        methodsToRemove.forEach(function (method) {\r\n            var promise = _this.protocol.server.unregister(method)\r\n                .then(function () {\r\n                _this.serverRepository.remove(method.repoId);\r\n            });\r\n            methodUnregPromises.push(promise);\r\n            _this.addAsCurrentlyUnregistering(method.definition.name, promise);\r\n        });\r\n        return Promise.all(methodUnregPromises);\r\n    };\r\n    Server.prototype.addAsCurrentlyUnregistering = function (methodName, promise) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var timeout;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                timeout = new Promise(function (resolve) { return setTimeout(resolve, 5000); });\r\n                this.currentlyUnregistering[methodName] = Promise.race([promise, timeout]).then(function () {\r\n                    removeProp(_this.currentlyUnregistering, methodName);\r\n                });\r\n                return [2];\r\n            });\r\n        });\r\n    };\r\n    Server.prototype.registerCore = function (method, theFunction) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var methodDefinition, unregisterInProgress, nameAlreadyExists, repoMethod;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (typeof method === \"string\") {\r\n                            methodDefinition = { name: \"\" + method };\r\n                        }\r\n                        else {\r\n                            methodDefinition = __assign({}, method);\r\n                        }\r\n                        if (!methodDefinition.name) {\r\n                            return [2, Promise.reject(\"Please, provide a (unique) string value for the \\u201Cname\\u201D property in the \\u201CmethodDefinition\\u201D object: \" + JSON.stringify(method))];\r\n                        }\r\n                        unregisterInProgress = this.currentlyUnregistering[methodDefinition.name];\r\n                        if (!unregisterInProgress) return [3, 2];\r\n                        return [4, unregisterInProgress];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        nameAlreadyExists = this.serverRepository.getList()\r\n                            .some(function (serverMethod) { return serverMethod.definition.name === methodDefinition.name; });\r\n                        if (nameAlreadyExists) {\r\n                            return [2, Promise.reject(\"A method with the name \\\"\" + methodDefinition.name + \"\\\" already exists! Please, provide a unique name for the method.\")];\r\n                        }\r\n                        if (methodDefinition.supportsStreaming) {\r\n                            return [2, Promise.reject(\"When you create methods with \\u201Cglue.interop.register()\\u201D or \\u201Cglue.interop.registerAsync()\\u201D the property \\u201CsupportsStreaming\\u201D cannot be \\u201Ctrue\\u201D. If you want \\u201C\" + methodDefinition.name + \"\\u201D to be a stream, please use the \\u201Cglue.interop.createStream()\\u201D method.\")];\r\n                        }\r\n                        repoMethod = this.serverRepository.add({\r\n                            definition: methodDefinition,\r\n                            theFunction: theFunction,\r\n                            protocolState: {},\r\n                        });\r\n                        return [2, this.protocol.server.register(repoMethod)\r\n                                .catch(function (err) {\r\n                                _this.serverRepository.remove(repoMethod.repoId);\r\n                                throw err;\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Server.prototype.containsProps = function (filter, methodDefinition) {\r\n        var filterProps = Object.keys(filter)\r\n            .filter(function (prop) {\r\n            return typeof filter[prop] !== \"function\"\r\n                && prop !== \"object_types\"\r\n                && prop !== \"display_name\";\r\n        });\r\n        var methodDefProps = Object.keys(methodDefinition);\r\n        var uniqProps = Array.from(new Set(__spreadArrays(filterProps, methodDefProps)));\r\n        return uniqProps.reduce(function (isMatch, prop) {\r\n            var filterValue = filter[prop];\r\n            var methodDefValue = methodDefinition[prop];\r\n            if (prop === \"supportsStreaming\") {\r\n                methodDefValue = methodDefValue || false;\r\n                filterValue = filterValue || false;\r\n            }\r\n            if (prop === \"objectTypes\" && filterValue !== undefined && methodDefValue !== undefined) {\r\n                if (filterValue.length !== methodDefValue.length) {\r\n                    isMatch = false;\r\n                }\r\n                else {\r\n                    var firstObjType = filterValue.sort();\r\n                    var secondObjTypes_1 = methodDefValue.sort();\r\n                    var hasADifference = firstObjType.some(function (objType, index) { return objType !== secondObjTypes_1[index]; });\r\n                    if (hasADifference) {\r\n                        isMatch = false;\r\n                    }\r\n                }\r\n            }\r\n            else if (filterValue !== methodDefValue) {\r\n                isMatch = false;\r\n            }\r\n            return isMatch;\r\n        }, true);\r\n    };\r\n    Server.prototype.onMethodInvoked = function (methodToExecute, invocationId, invocationArgs) {\r\n        var _this = this;\r\n        if (!methodToExecute) {\r\n            return;\r\n        }\r\n        methodToExecute.theFunction(invocationArgs, function (err, result) {\r\n            if (err !== undefined && err !== null) {\r\n                if (err.message && typeof err.message === \"string\") {\r\n                    err = err.message;\r\n                }\r\n                else if (typeof err !== \"string\") {\r\n                    try {\r\n                        err = JSON.stringify(err);\r\n                    }\r\n                    catch (unStrException) {\r\n                        err = \"un-stringifyable error in onMethodInvoked! Top level prop names: \" + Object.keys(err);\r\n                    }\r\n                }\r\n            }\r\n            if (!result || typeof result !== \"object\" || result.constructor === Array) {\r\n                result = { _result: result };\r\n            }\r\n            _this.protocol.server.methodInvocationResult(methodToExecute, invocationId, err, result);\r\n        });\r\n    };\r\n    return Server;\r\n}());\n\nvar AGMImpl = (function () {\r\n    function AGMImpl(protocol, clientRepository, serverRepository, instance, configuration) {\r\n        this.client = new Client(protocol, clientRepository, instance, configuration);\r\n        this.server = new Server(protocol, serverRepository);\r\n        this.instance = instance;\r\n    }\r\n    AGMImpl.prototype.serverRemoved = function (callback) {\r\n        return this.client.serverRemoved(callback);\r\n    };\r\n    AGMImpl.prototype.serverAdded = function (callback) {\r\n        return this.client.serverAdded(callback);\r\n    };\r\n    AGMImpl.prototype.serverMethodRemoved = function (callback) {\r\n        return this.client.serverMethodRemoved(callback);\r\n    };\r\n    AGMImpl.prototype.serverMethodAdded = function (callback) {\r\n        return this.client.serverMethodAdded(callback);\r\n    };\r\n    AGMImpl.prototype.methodRemoved = function (callback) {\r\n        return this.client.methodRemoved(callback);\r\n    };\r\n    AGMImpl.prototype.methodAdded = function (callback) {\r\n        return this.client.methodAdded(callback);\r\n    };\r\n    AGMImpl.prototype.methodsForInstance = function (instance) {\r\n        return this.client.methodsForInstance(instance);\r\n    };\r\n    AGMImpl.prototype.methods = function (methodFilter) {\r\n        return this.client.methods(methodFilter);\r\n    };\r\n    AGMImpl.prototype.servers = function (methodFilter) {\r\n        return this.client.servers(methodFilter);\r\n    };\r\n    AGMImpl.prototype.subscribe = function (method, options, successCallback, errorCallback) {\r\n        return this.client.subscribe(method, options, successCallback, errorCallback);\r\n    };\r\n    AGMImpl.prototype.createStream = function (streamDef, options, successCallback, errorCallback) {\r\n        return this.server.createStream(streamDef, options, successCallback, errorCallback);\r\n    };\r\n    AGMImpl.prototype.unregister = function (methodFilter) {\r\n        return this.server.unregister(methodFilter);\r\n    };\r\n    AGMImpl.prototype.registerAsync = function (methodDefinition, callback) {\r\n        return this.server.registerAsync(methodDefinition, callback);\r\n    };\r\n    AGMImpl.prototype.register = function (methodDefinition, callback) {\r\n        return this.server.register(methodDefinition, callback);\r\n    };\r\n    AGMImpl.prototype.invoke = function (methodFilter, argumentObj, target, additionalOptions, success, error) {\r\n        return this.client.invoke(methodFilter, argumentObj, target, additionalOptions, success, error);\r\n    };\r\n    AGMImpl.prototype.updateInstance = function (newInstance) {\r\n        if (this.instance.machine === undefined) {\r\n            this.instance.machine = newInstance.MachineName || newInstance.machine;\r\n        }\r\n        if (this.instance.user === undefined) {\r\n            this.instance.user = newInstance.UserName || newInstance.user;\r\n        }\r\n        if (this.instance.environment === undefined) {\r\n            this.instance.environment = newInstance.Environment || newInstance.environment;\r\n        }\r\n        if (this.instance.region === undefined) {\r\n            this.instance.region = newInstance.Region || newInstance.region;\r\n        }\r\n    };\r\n    return AGMImpl;\r\n}());\n\nvar ClientRepository = (function () {\r\n    function ClientRepository() {\r\n        this.servers = {};\r\n        this.methodsCount = {};\r\n        this.callbacks = lib();\r\n    }\r\n    ClientRepository.prototype.addServer = function (info, serverId) {\r\n        var current = this.servers[serverId];\r\n        if (current) {\r\n            return current.id;\r\n        }\r\n        var serverEntry = {\r\n            id: serverId,\r\n            info: info,\r\n            methods: {},\r\n            getInfoForUser: function () {\r\n                return new InstanceWrapper(serverEntry.info).unwrap();\r\n            },\r\n        };\r\n        this.servers[serverId] = serverEntry;\r\n        this.callbacks.execute(\"onServerAdded\", serverEntry);\r\n        return serverId;\r\n    };\r\n    ClientRepository.prototype.removeServerById = function (id, reason) {\r\n        var _this = this;\r\n        var server = this.servers[id];\r\n        Object.keys(server.methods).forEach(function (methodId) {\r\n            _this.removeServerMethod(id, methodId);\r\n        });\r\n        delete this.servers[id];\r\n        this.callbacks.execute(\"onServerRemoved\", server, reason);\r\n    };\r\n    ClientRepository.prototype.addServerMethod = function (serverId, method, protocolState) {\r\n        if (!protocolState) {\r\n            protocolState = {};\r\n        }\r\n        var server = this.servers[serverId];\r\n        if (!server) {\r\n            throw new Error(\"server does not exists\");\r\n        }\r\n        var methodId = this.createMethodId(method);\r\n        if (server.methods[methodId]) {\r\n            return;\r\n        }\r\n        var that = this;\r\n        var methodEntity = {\r\n            id: methodId,\r\n            info: method,\r\n            getInfoForUser: function () {\r\n                var result = that.createUserMethodInfo(methodEntity.info);\r\n                result.getServers = function () {\r\n                    return that.getServersByMethod(methodId);\r\n                };\r\n                return result;\r\n            },\r\n            protocolState: protocolState,\r\n        };\r\n        server.methods[methodId] = methodEntity;\r\n        if (!this.methodsCount[methodId]) {\r\n            this.methodsCount[methodId] = 0;\r\n            this.callbacks.execute(\"onMethodAdded\", methodEntity);\r\n        }\r\n        this.methodsCount[methodId] = this.methodsCount[methodId] + 1;\r\n        this.callbacks.execute(\"onServerMethodAdded\", server, methodEntity);\r\n    };\r\n    ClientRepository.prototype.createMethodId = function (methodInfo) {\r\n        var accepts = methodInfo.accepts !== undefined ? methodInfo.accepts : \"\";\r\n        var returns = methodInfo.returns !== undefined ? methodInfo.returns : \"\";\r\n        return (methodInfo.name + accepts + returns).toLowerCase();\r\n    };\r\n    ClientRepository.prototype.removeServerMethod = function (serverId, methodId) {\r\n        var server = this.servers[serverId];\r\n        if (!server) {\r\n            throw new Error(\"server does not exists\");\r\n        }\r\n        var method = server.methods[methodId];\r\n        delete server.methods[methodId];\r\n        this.methodsCount[methodId] = this.methodsCount[methodId] - 1;\r\n        if (this.methodsCount[methodId] === 0) {\r\n            this.callbacks.execute(\"onMethodRemoved\", method);\r\n        }\r\n        this.callbacks.execute(\"onServerMethodRemoved\", server, method);\r\n    };\r\n    ClientRepository.prototype.getMethods = function () {\r\n        var _this = this;\r\n        var allMethods = {};\r\n        Object.keys(this.servers).forEach(function (serverId) {\r\n            var server = _this.servers[serverId];\r\n            Object.keys(server.methods).forEach(function (methodId) {\r\n                var method = server.methods[methodId];\r\n                allMethods[method.id] = method;\r\n            });\r\n        });\r\n        var methodsAsArray = Object.keys(allMethods).map(function (id) {\r\n            return allMethods[id];\r\n        });\r\n        return methodsAsArray;\r\n    };\r\n    ClientRepository.prototype.getServers = function () {\r\n        var _this = this;\r\n        var allServers = [];\r\n        Object.keys(this.servers).forEach(function (serverId) {\r\n            var server = _this.servers[serverId];\r\n            allServers.push(server);\r\n        });\r\n        return allServers;\r\n    };\r\n    ClientRepository.prototype.getServerMethodsById = function (serverId) {\r\n        var server = this.servers[serverId];\r\n        return Object.keys(server.methods).map(function (id) {\r\n            return server.methods[id];\r\n        });\r\n    };\r\n    ClientRepository.prototype.onServerAdded = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onServerAdded\", callback);\r\n        var serversWithMethodsToReplay = this.getServers();\r\n        return this.returnUnsubWithDelayedReplay(unsubscribeFunc, serversWithMethodsToReplay, callback);\r\n    };\r\n    ClientRepository.prototype.onMethodAdded = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onMethodAdded\", callback);\r\n        var methodsToReplay = this.getMethods();\r\n        return this.returnUnsubWithDelayedReplay(unsubscribeFunc, methodsToReplay, callback);\r\n    };\r\n    ClientRepository.prototype.onServerMethodAdded = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onServerMethodAdded\", callback);\r\n        var unsubCalled = false;\r\n        var servers = this.getServers();\r\n        setTimeout(function () {\r\n            servers.forEach(function (server) {\r\n                var methods = server.methods;\r\n                Object.keys(methods).forEach(function (methodId) {\r\n                    if (!unsubCalled) {\r\n                        callback(server, methods[methodId]);\r\n                    }\r\n                });\r\n            });\r\n        }, 0);\r\n        return function () {\r\n            unsubCalled = true;\r\n            unsubscribeFunc();\r\n        };\r\n    };\r\n    ClientRepository.prototype.onMethodRemoved = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onMethodRemoved\", callback);\r\n        return unsubscribeFunc;\r\n    };\r\n    ClientRepository.prototype.onServerRemoved = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onServerRemoved\", callback);\r\n        return unsubscribeFunc;\r\n    };\r\n    ClientRepository.prototype.onServerMethodRemoved = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onServerMethodRemoved\", callback);\r\n        return unsubscribeFunc;\r\n    };\r\n    ClientRepository.prototype.getServerById = function (id) {\r\n        return this.servers[id];\r\n    };\r\n    ClientRepository.prototype.reset = function () {\r\n        var _this = this;\r\n        Object.keys(this.servers).forEach(function (key) {\r\n            _this.removeServerById(key, \"reset\");\r\n        });\r\n        this.servers = {};\r\n        this.methodsCount = {};\r\n    };\r\n    ClientRepository.prototype.createUserServerInfo = function (serverInfo) {\r\n        return {\r\n            machine: serverInfo.machine,\r\n            pid: serverInfo.pid,\r\n            user: serverInfo.user,\r\n            application: serverInfo.application,\r\n            applicationName: serverInfo.applicationName,\r\n            environment: serverInfo.environment,\r\n            region: serverInfo.region,\r\n            instance: serverInfo.instance,\r\n            windowId: serverInfo.windowId,\r\n            peerId: serverInfo.peerId,\r\n            isLocal: serverInfo.isLocal,\r\n            api: serverInfo.api\r\n        };\r\n    };\r\n    ClientRepository.prototype.createUserMethodInfo = function (methodInfo) {\r\n        var result = {\r\n            name: methodInfo.name,\r\n            accepts: methodInfo.accepts,\r\n            returns: methodInfo.returns,\r\n            description: methodInfo.description,\r\n            displayName: methodInfo.displayName,\r\n            objectTypes: methodInfo.objectTypes,\r\n            supportsStreaming: methodInfo.supportsStreaming,\r\n        };\r\n        result.object_types = methodInfo.objectTypes;\r\n        result.display_name = methodInfo.displayName;\r\n        result.version = methodInfo.version;\r\n        return result;\r\n    };\r\n    ClientRepository.prototype.getServersByMethod = function (id) {\r\n        var _this = this;\r\n        var allServers = [];\r\n        Object.keys(this.servers).forEach(function (serverId) {\r\n            var server = _this.servers[serverId];\r\n            Object.keys(server.methods).forEach(function (methodId) {\r\n                if (methodId === id) {\r\n                    allServers.push(server.getInfoForUser());\r\n                }\r\n            });\r\n        });\r\n        return allServers;\r\n    };\r\n    ClientRepository.prototype.returnUnsubWithDelayedReplay = function (unsubscribeFunc, collectionToReplay, callback) {\r\n        var unsubCalled = false;\r\n        setTimeout(function () {\r\n            collectionToReplay.forEach(function (item) {\r\n                if (!unsubCalled) {\r\n                    callback(item);\r\n                }\r\n            });\r\n        }, 0);\r\n        return function () {\r\n            unsubCalled = true;\r\n            unsubscribeFunc();\r\n        };\r\n    };\r\n    return ClientRepository;\r\n}());\n\nvar ServerRepository = (function () {\r\n    function ServerRepository() {\r\n        this.nextId = 0;\r\n        this.methods = [];\r\n    }\r\n    ServerRepository.prototype.add = function (method) {\r\n        if (typeof method !== \"object\") {\r\n            return;\r\n        }\r\n        if (method.repoId !== undefined) {\r\n            return;\r\n        }\r\n        method.repoId = String(this.nextId);\r\n        this.nextId += 1;\r\n        this.methods.push(method);\r\n        return method;\r\n    };\r\n    ServerRepository.prototype.remove = function (repoId) {\r\n        if (typeof repoId !== \"string\") {\r\n            return new TypeError(\"Expecting a string\");\r\n        }\r\n        this.methods = this.methods.filter(function (m) {\r\n            return m.repoId !== repoId;\r\n        });\r\n    };\r\n    ServerRepository.prototype.getById = function (id) {\r\n        if (typeof id !== \"string\") {\r\n            return undefined;\r\n        }\r\n        return this.methods.filter(function (m) {\r\n            return m.repoId === id;\r\n        })[0];\r\n    };\r\n    ServerRepository.prototype.getList = function () {\r\n        return this.methods.map(function (m) { return m; });\r\n    };\r\n    ServerRepository.prototype.length = function () {\r\n        return this.methods.length;\r\n    };\r\n    ServerRepository.prototype.reset = function () {\r\n        this.methods = [];\r\n    };\r\n    return ServerRepository;\r\n}());\n\nvar agm = (function (configuration) {\r\n    if (!configuration.forceGW && configuration.gdVersion === 2) {\r\n        return nativeAgm(configuration);\r\n    }\r\n    if (typeof configuration === \"undefined\") {\r\n        throw new Error(\"configuration is required\");\r\n    }\r\n    if (typeof configuration.connection === \"undefined\") {\r\n        throw new Error(\"configuration.connections is required\");\r\n    }\r\n    var connection = configuration.connection;\r\n    if (typeof configuration.methodResponseTimeout !== \"number\") {\r\n        configuration.methodResponseTimeout = 30 * 1000;\r\n    }\r\n    if (typeof configuration.waitTimeoutMs !== \"number\") {\r\n        configuration.waitTimeoutMs = 30 * 1000;\r\n    }\r\n    var clientRepository = new ClientRepository();\r\n    var serverRepository = new ServerRepository();\r\n    var protocolPromise;\r\n    var instance = new InstanceWrapper(configuration.instance, connection);\r\n    var agmImpl;\r\n    if (connection.protocolVersion === 3) {\r\n        protocolPromise = gW3ProtocolFactory(instance.unwrap(), connection, clientRepository, serverRepository, configuration, function () { return agmImpl; });\r\n    }\r\n    else {\r\n        protocolPromise = gW1ProtocolFactory(instance.unwrap(), connection, clientRepository, serverRepository, configuration, function () { return agmImpl; });\r\n    }\r\n    return new Promise(function (resolve, reject) {\r\n        protocolPromise.then(function (protocol) {\r\n            agmImpl = new AGMImpl(protocol, clientRepository, serverRepository, instance.unwrap(), configuration);\r\n            InstanceWrapper.API = agmImpl;\r\n            resolve(agmImpl);\r\n        }).catch(function (err) {\r\n            reject(err);\r\n        });\r\n    });\r\n});\n\nfunction removeEmptyValues(obj) {\r\n    var cleaned = {};\r\n    Object.keys(obj).forEach(function (key) {\r\n        if (obj[key] !== undefined && obj[key] !== null) {\r\n            cleaned[key] = obj[key];\r\n        }\r\n    });\r\n    return cleaned;\r\n}\r\nfunction keysMatch(obj1, obj2) {\r\n    var keysObj1 = Object.keys(obj1);\r\n    var allMatch = true;\r\n    keysObj1.forEach(function (key) {\r\n        if (obj1[key] !== obj2[key]) {\r\n            allMatch = false;\r\n        }\r\n    });\r\n    return allMatch;\r\n}\n\nvar Protocol = (function () {\r\n    function Protocol(connection, logger, session) {\r\n        var _this = this;\r\n        this.publish = function (topic, data, options) {\r\n            var _a = options || {}, routingKey = _a.routingKey, target = _a.target;\r\n            var args = removeEmptyValues({\r\n                type: \"publish\",\r\n                topic: topic,\r\n                data: data,\r\n                peer_id: _this.peerId,\r\n                routing_key: routingKey,\r\n                target_identity: target\r\n            });\r\n            _this.session.send(args);\r\n        };\r\n        this.subscribe = function (topic, callback, options) {\r\n            return new Promise(function (resolve, reject) {\r\n                var _a = options || {}, routingKey = _a.routingKey, target = _a.target;\r\n                var args = removeEmptyValues({\r\n                    type: \"subscribe\",\r\n                    topic: topic,\r\n                    peer_id: _this.peerId,\r\n                    routing_key: routingKey,\r\n                    source: target\r\n                });\r\n                _this.session.send(args)\r\n                    .then(function (response) {\r\n                    var subscription_id = response.subscription_id;\r\n                    _this.subscriptions.push({ subscription_id: subscription_id, topic: topic, callback: callback, source: target });\r\n                    resolve({\r\n                        unsubscribe: function () {\r\n                            _this.session.send({ type: \"unsubscribe\", subscription_id: subscription_id, peer_id: _this.peerId });\r\n                            _this.subscriptions = _this.subscriptions.filter(function (s) { return s.subscription_id !== subscription_id; });\r\n                            return Promise.resolve();\r\n                        }\r\n                    });\r\n                })\r\n                    .catch(function (error) { return reject(error); });\r\n            });\r\n        };\r\n        this.watchOnEvent = function () {\r\n            _this.session.on(\"event\", function (args) {\r\n                var data = args.data, subscription_id = args.subscription_id;\r\n                var source = args[\"publisher-identity\"];\r\n                var subscription = _this.subscriptions.find(function (s) { return s.subscription_id === subscription_id; });\r\n                if (subscription) {\r\n                    if (!subscription.source) {\r\n                        subscription.callback(data, subscription.topic, source);\r\n                    }\r\n                    else {\r\n                        if (keysMatch(subscription.source, source)) {\r\n                            subscription.callback(data, subscription.topic, source);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        this.connection = connection;\r\n        this.logger = logger;\r\n        this.session = session;\r\n        this.peerId = connection.peerId;\r\n        this.subscriptions = [];\r\n    }\r\n    return Protocol;\r\n}());\r\nfunction ProtocolFactory (connection, logger, session) {\r\n    var protocol = new Protocol(connection, logger, session);\r\n    protocol.watchOnEvent();\r\n    return protocol;\r\n}\n\nvar successMessages = [\"subscribed\", \"success\"];\r\nvar bus = (function (configuration) {\r\n    var connection = configuration.connection, logger = configuration.logger;\r\n    var session = connection.domain(\"bus\", logger, successMessages);\r\n    return new Promise(function (resolve, reject) {\r\n        session.join()\r\n            .then(function () {\r\n            var protocol = ProtocolFactory(connection, logger, session);\r\n            resolve(protocol);\r\n        })\r\n            .catch(reject);\r\n    });\r\n});\n\nvar GW_MESSAGE_CREATE_CONTEXT = \"create-context\";\r\nvar GW_MESSAGE_ACTIVITY_CREATED = \"created\";\r\nvar GW_MESSAGE_ACTIVITY_DESTROYED = \"destroyed\";\r\nvar GW_MESSAGE_CONTEXT_CREATED = \"context-created\";\r\nvar GW_MESSAGE_CONTEXT_ADDED = \"context-added\";\r\nvar GW_MESSAGE_SUBSCRIBE_CONTEXT = \"subscribe-context\";\r\nvar GW_MESSAGE_SUBSCRIBED_CONTEXT = \"subscribed-context\";\r\nvar GW_MESSAGE_UNSUBSCRIBE_CONTEXT = \"unsubscribe-context\";\r\nvar GW_MESSAGE_DESTROY_CONTEXT = \"destroy-context\";\r\nvar GW_MESSAGE_CONTEXT_DESTROYED = \"context-destroyed\";\r\nvar GW_MESSAGE_UPDATE_CONTEXT = \"update-context\";\r\nvar GW_MESSAGE_CONTEXT_UPDATED = \"context-updated\";\r\nvar GW_MESSAGE_JOINED_ACTIVITY = \"joined\";\n\nvar ContextMessageReplaySpec = {\r\n    get name() {\r\n        return \"context\";\r\n    },\r\n    get types() {\r\n        return [\r\n            GW_MESSAGE_CREATE_CONTEXT,\r\n            GW_MESSAGE_ACTIVITY_CREATED,\r\n            GW_MESSAGE_ACTIVITY_DESTROYED,\r\n            GW_MESSAGE_CONTEXT_CREATED,\r\n            GW_MESSAGE_CONTEXT_ADDED,\r\n            GW_MESSAGE_SUBSCRIBE_CONTEXT,\r\n            GW_MESSAGE_SUBSCRIBED_CONTEXT,\r\n            GW_MESSAGE_UNSUBSCRIBE_CONTEXT,\r\n            GW_MESSAGE_DESTROY_CONTEXT,\r\n            GW_MESSAGE_CONTEXT_DESTROYED,\r\n            GW_MESSAGE_UPDATE_CONTEXT,\r\n            GW_MESSAGE_CONTEXT_UPDATED,\r\n            GW_MESSAGE_JOINED_ACTIVITY\r\n        ];\r\n    }\r\n};\n\nvar version = \"4.8.3\";\n\nfunction prepareConfig (configuration, ext, hc, glue42gd, gdVersion) {\r\n    var globalScope;\r\n    if (typeof window !== \"undefined\") {\r\n        globalScope = window;\r\n    }\r\n    if (typeof global !== \"undefined\") {\r\n        globalScope = global;\r\n    }\r\n    globalScope = globalScope || {};\r\n    var uid = shortid();\r\n    var nodeStartingContext;\r\n    if (Utils.isNode()) {\r\n        var startingContextString = process.env._GD_STARTING_CONTEXT_;\r\n        if (startingContextString) {\r\n            try {\r\n                nodeStartingContext = JSON.parse(startingContextString);\r\n            }\r\n            catch (_a) {\r\n            }\r\n        }\r\n    }\r\n    var masterConfig = globalScope.GLUE_CONFIG || {};\r\n    var dynamicDefaults = globalScope.GLUE_DEFAULT_CONFIG || {};\r\n    var hardDefaults = getHardDefaults();\r\n    var metricsIdentity = {\r\n        system: getConfigProp(\"metrics\", \"system\"),\r\n        service: getConfigProp(\"metrics\", \"service\"),\r\n        instance: getConfigProp(\"metrics\", \"instance\")\r\n    };\r\n    var disableAutoAppSystem = getConfigProp(\"metrics\", \"disableAutoAppSystem\");\r\n    function getMetrics() {\r\n        return {\r\n            identity: metricsIdentity,\r\n            disableAutoAppSystem: disableAutoAppSystem\r\n        };\r\n    }\r\n    function getGateway() {\r\n        var _a;\r\n        var force = getConfigProp(\"gateway\", \"force\");\r\n        var gw = hc === undefined || force;\r\n        if (gw) {\r\n            var gwConfig = getConfigProp(\"gateway\");\r\n            var protocolVersion = getConfigProp(\"gateway\", \"protocolVersion\");\r\n            var reconnectInterval = getConfigProp(\"gateway\", \"reconnectInterval\");\r\n            var reconnectAttempts = getConfigProp(\"gateway\", \"reconnectAttempts\");\r\n            var ws = gwConfig.ws;\r\n            var http = gwConfig.http;\r\n            var inproc = gwConfig.inproc;\r\n            if (!ws && !http && !inproc) {\r\n                if (Utils.isNode() || (\"WebSocket\" in window && window.WebSocket.CLOSING === 2)) {\r\n                    ws = getConfigProp(\"gateway\", \"ws\");\r\n                }\r\n                else {\r\n                    http = getConfigProp(\"gateway\", \"http\");\r\n                }\r\n            }\r\n            var instanceId = void 0;\r\n            var windowId = void 0;\r\n            var pid = void 0;\r\n            var environment = void 0;\r\n            var region = void 0;\r\n            var appName = getApplication();\r\n            var uniqueAppName = appName;\r\n            if (hc) {\r\n                windowId = hc.windowId;\r\n                environment = hc.env.env;\r\n                region = hc.env.region;\r\n            }\r\n            else if (typeof glue42gd !== \"undefined\") {\r\n                windowId = glue42gd.windowId;\r\n                pid = glue42gd.pid;\r\n                if (glue42gd.env) {\r\n                    environment = glue42gd.env.env;\r\n                    region = glue42gd.env.region;\r\n                }\r\n                uniqueAppName = (_a = glue42gd.application, (_a !== null && _a !== void 0 ? _a : \"glue-app\"));\r\n                instanceId = glue42gd.appInstanceId;\r\n            }\r\n            else if (Utils.isNode()) {\r\n                pid = process.pid;\r\n                if (nodeStartingContext) {\r\n                    environment = nodeStartingContext.env;\r\n                    region = nodeStartingContext.region;\r\n                    instanceId = nodeStartingContext.instanceId;\r\n                }\r\n            }\r\n            var replaySpecs = getConfigProp(\"gateway\", \"replaySpecs\") || [];\r\n            replaySpecs.push(ContextMessageReplaySpec);\r\n            return {\r\n                identity: {\r\n                    application: uniqueAppName,\r\n                    applicationName: appName,\r\n                    windowId: windowId,\r\n                    instance: instanceId,\r\n                    process: pid,\r\n                    region: region,\r\n                    environment: environment,\r\n                    api: ext.version || version\r\n                },\r\n                reconnectInterval: reconnectInterval,\r\n                ws: ws,\r\n                http: http,\r\n                gw: inproc,\r\n                protocolVersion: protocolVersion,\r\n                reconnectAttempts: reconnectAttempts,\r\n                force: true,\r\n                replaySpecs: replaySpecs,\r\n                gdVersion: gdVersion,\r\n            };\r\n        }\r\n        return { gdVersion: gdVersion };\r\n    }\r\n    function getLogger() {\r\n        var logger = getConfigProp(\"logger\");\r\n        if (typeof logger === \"string\") {\r\n            return {\r\n                console: logger,\r\n                metrics: \"off\",\r\n                publish: \"off\"\r\n            };\r\n        }\r\n        return logger;\r\n    }\r\n    function getAgm() {\r\n        return ifNotFalse(configuration.agm, {\r\n            instance: {\r\n                application: getApplication()\r\n            }\r\n        });\r\n    }\r\n    function getContexts(connectionConfig) {\r\n        if (connectionConfig.protocolVersion < 3) {\r\n            return false;\r\n        }\r\n        var contextConfig = getConfigProp(\"contexts\");\r\n        if (typeof contextConfig === \"boolean\" && !contextConfig) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    function getChannels(contextsEnabled) {\r\n        if (!contextsEnabled) {\r\n            return false;\r\n        }\r\n        var channelsConfig = getConfigProp(\"channels\");\r\n        if (typeof channelsConfig === \"boolean\" && !channelsConfig) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    function getBus(connectionConfig) {\r\n        var contextConfig = getConfigProp(\"bus\");\r\n        if (typeof contextConfig === \"boolean\" && contextConfig) {\r\n            if (connectionConfig.protocolVersion && connectionConfig.protocolVersion < 3) {\r\n                return false;\r\n            }\r\n            if (gdVersion === 2) {\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    function getApplication() {\r\n        return getConfigProp(\"application\");\r\n    }\r\n    function getAuth() {\r\n        return getConfigProp(\"auth\");\r\n    }\r\n    function getHardDefaults() {\r\n        function getMetricsDefaults() {\r\n            var documentTitle = typeof document !== \"undefined\" ? document.title : \"unknown\";\r\n            documentTitle = documentTitle || \"none\";\r\n            if (typeof hc === \"undefined\") {\r\n                return {\r\n                    system: \"Connect.Browser\",\r\n                    service: configuration.application || documentTitle,\r\n                    instance: \"~\" + uid\r\n                };\r\n            }\r\n            if (typeof hc.metricsFacade.getIdentity !== \"undefined\") {\r\n                var identity = hc.metricsFacade.getIdentity();\r\n                return {\r\n                    system: identity.system,\r\n                    service: identity.service,\r\n                    instance: identity.instance\r\n                };\r\n            }\r\n            return {\r\n                system: \"HtmlContainer.\" + hc.containerName,\r\n                service: \"JS.\" + hc.browserWindowName,\r\n                instance: \"~\" + hc.machineName\r\n            };\r\n        }\r\n        function getGatewayDefaults() {\r\n            var defaultProtocol = 3;\r\n            var gatewayURL = \"localhost:8385\";\r\n            var defaultWs = \"ws://\" + gatewayURL;\r\n            var defaultHttp = \"http://\" + gatewayURL;\r\n            if (glue42gd) {\r\n                defaultProtocol = 3;\r\n                defaultWs = glue42gd.gwURL;\r\n            }\r\n            if (Utils.isNode() && nodeStartingContext) {\r\n                defaultProtocol = 3;\r\n                defaultWs = nodeStartingContext.gwURL;\r\n            }\r\n            return {\r\n                ws: defaultWs,\r\n                http: defaultHttp,\r\n                protocolVersion: defaultProtocol,\r\n                reconnectInterval: 1000\r\n            };\r\n        }\r\n        function getDefaultApplicationName() {\r\n            if (hc) {\r\n                return hc.containerName + \".\" + hc.browserWindowName;\r\n            }\r\n            if (glue42gd) {\r\n                return glue42gd.applicationName;\r\n            }\r\n            if (Utils.isNode()) {\r\n                if (nodeStartingContext) {\r\n                    return nodeStartingContext.applicationConfig.name;\r\n                }\r\n                return \"NodeJS\" + uid;\r\n            }\r\n            if (typeof window !== \"undefined\" && typeof document !== \"undefined\") {\r\n                return (window.agm_application || document.title) + uid;\r\n            }\r\n        }\r\n        function getDefaultLogger() {\r\n            return {\r\n                publish: \"off\",\r\n                console: \"error\",\r\n                metrics: \"off\",\r\n            };\r\n        }\r\n        function getDefaultAuth() {\r\n            if (Utils.isNode() && nodeStartingContext) {\r\n                return {\r\n                    gatewayToken: nodeStartingContext.gwToken\r\n                };\r\n            }\r\n        }\r\n        return {\r\n            application: getDefaultApplicationName(),\r\n            metrics: getMetricsDefaults(),\r\n            agm: {},\r\n            gateway: getGatewayDefaults(),\r\n            logger: getDefaultLogger(),\r\n            bus: false,\r\n            auth: getDefaultAuth()\r\n        };\r\n    }\r\n    function getConfigProp(prop1, prop2) {\r\n        var masterConfigProp1 = masterConfig[prop1];\r\n        var userProp1 = configuration[prop1];\r\n        var dynamicDefaultsProp1 = dynamicDefaults[prop1];\r\n        var hardDefaultsProp1 = hardDefaults[prop1];\r\n        if (prop2) {\r\n            if (masterConfigProp1 && masterConfigProp1[prop2] !== undefined) {\r\n                return masterConfigProp1[prop2];\r\n            }\r\n            if (userProp1 && userProp1[prop2] !== undefined) {\r\n                return userProp1[prop2];\r\n            }\r\n            if (dynamicDefaultsProp1 && dynamicDefaultsProp1[prop2] !== undefined) {\r\n                return dynamicDefaultsProp1[prop2];\r\n            }\r\n            if (hardDefaultsProp1 && hardDefaultsProp1[prop2] !== undefined) {\r\n                return hardDefaultsProp1[prop2];\r\n            }\r\n        }\r\n        else {\r\n            if (masterConfigProp1 !== undefined) {\r\n                return masterConfigProp1;\r\n            }\r\n            if (userProp1 !== undefined) {\r\n                return userProp1;\r\n            }\r\n            if (dynamicDefaultsProp1 !== undefined) {\r\n                return dynamicDefaultsProp1;\r\n            }\r\n            if (hardDefaultsProp1 !== undefined) {\r\n                return hardDefaultsProp1;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    function ifNotFalse(what, then) {\r\n        if (typeof what === \"boolean\" && !what) {\r\n            return undefined;\r\n        }\r\n        else {\r\n            return then;\r\n        }\r\n    }\r\n    var connection = getGateway();\r\n    var contexts = getContexts(connection);\r\n    var channels = getChannels(contexts);\r\n    var bus = getBus(connection);\r\n    return {\r\n        bus: bus,\r\n        identity: metricsIdentity,\r\n        auth: getAuth(),\r\n        logger: getLogger(),\r\n        connection: connection,\r\n        metrics: getMetrics(),\r\n        agm: getAgm(),\r\n        contexts: contexts,\r\n        channels: channels,\r\n        version: ext.version || version,\r\n        libs: ext.libs,\r\n        customLogger: configuration.customLogger\r\n    };\r\n}\n\nvar connection = {\r\n    protocolVersion: -1,\r\n    send: function (product, type, message, id, options) {\r\n        return Promise.resolve(undefined);\r\n    },\r\n    on: function (product, type, messageHandler) {\r\n        return { type: \"1\", id: 1 };\r\n    },\r\n    off: function (info) {\r\n    },\r\n    login: function (message) {\r\n        return undefined;\r\n    },\r\n    logout: function () {\r\n    },\r\n    loggedIn: function (callback) {\r\n        return undefined;\r\n    },\r\n    connected: function (callback) {\r\n        return undefined;\r\n    },\r\n    disconnected: function (callback) {\r\n        return undefined;\r\n    },\r\n    reconnect: function () {\r\n        return Promise.resolve();\r\n    }\r\n};\n\nfunction timer () {\r\n    function now() {\r\n        return new Date().getTime();\r\n    }\r\n    var startTime = now();\r\n    var endTime;\r\n    var period;\r\n    function stop() {\r\n        endTime = now();\r\n        period = now() - startTime;\r\n        return period;\r\n    }\r\n    return {\r\n        get startTime() {\r\n            return startTime;\r\n        },\r\n        get endTime() {\r\n            return endTime;\r\n        },\r\n        get period() {\r\n            return period;\r\n        },\r\n        stop: stop\r\n    };\r\n}\n\nvar GW3ContextData = (function () {\r\n    function GW3ContextData(contextId, name, isAnnounced, activityId) {\r\n        this.updateCallbacks = {};\r\n        this.contextId = contextId;\r\n        this.name = name;\r\n        this.isAnnounced = isAnnounced;\r\n        this.activityId = activityId;\r\n        this.context = {};\r\n    }\r\n    GW3ContextData.prototype.hasCallbacks = function () {\r\n        return Object.keys(this.updateCallbacks).length > 0;\r\n    };\r\n    GW3ContextData.prototype.getState = function () {\r\n        if (this.isAnnounced && this.hasCallbacks()) {\r\n            return 3;\r\n        }\r\n        if (this.isAnnounced) {\r\n            return 2;\r\n        }\r\n        if (this.hasCallbacks()) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    };\r\n    return GW3ContextData;\r\n}());\n\nfunction applyContextDelta(context, delta) {\r\n    if (delta) {\r\n        if (delta.reset) {\r\n            context = __assign({}, delta.reset);\r\n            return context;\r\n        }\r\n        context = deepClone(context, null);\r\n        var added_1 = delta.added;\r\n        var updated_1 = delta.updated;\r\n        var removed = delta.removed;\r\n        if (added_1) {\r\n            Object.keys(added_1).forEach(function (key) {\r\n                context[key] = added_1[key];\r\n            });\r\n        }\r\n        if (updated_1) {\r\n            Object.keys(updated_1).forEach(function (key) {\r\n                mergeObjectsProperties(key, context, updated_1);\r\n            });\r\n        }\r\n        if (removed) {\r\n            removed.forEach(function (key) {\r\n                delete context[key];\r\n            });\r\n        }\r\n    }\r\n    return context;\r\n}\r\nfunction deepClone(obj, hash) {\r\n    hash = hash || new WeakMap();\r\n    if (Object(obj) !== obj) {\r\n        return obj;\r\n    }\r\n    if (obj instanceof Set) {\r\n        return new Set(obj);\r\n    }\r\n    if (hash.has(obj)) {\r\n        return hash.get(obj);\r\n    }\r\n    var result = obj instanceof Date ? new Date(obj)\r\n        : obj instanceof RegExp ? new RegExp(obj.source, obj.flags)\r\n            : obj.constructor ? new obj.constructor()\r\n                : Object.create(null);\r\n    hash.set(obj, result);\r\n    return Object.assign.apply(Object, __spreadArrays([result], Object.keys(obj).map(function (key) {\r\n        var _a;\r\n        return (_a = {}, _a[key] = deepClone(obj[key], hash), _a);\r\n    })));\r\n}\r\nvar mergeObjectsProperties = function (key, what, withWhat) {\r\n    var right = withWhat[key];\r\n    if (right === undefined) {\r\n        return what;\r\n    }\r\n    var left = what[key];\r\n    if (!left || !right) {\r\n        what[key] = right;\r\n        return what;\r\n    }\r\n    if (typeof left === \"string\" ||\r\n        typeof left === \"number\" ||\r\n        typeof left === \"boolean\" ||\r\n        typeof right === \"string\" ||\r\n        typeof right === \"number\" ||\r\n        typeof right === \"boolean\" ||\r\n        Array.isArray(left) ||\r\n        Array.isArray(right)) {\r\n        what[key] = right;\r\n        return what;\r\n    }\r\n    what[key] = Object.assign({}, left, right);\r\n    return what;\r\n};\r\nfunction deepEqual(x, y) {\r\n    if (x === y) {\r\n        return true;\r\n    }\r\n    if (!(x instanceof Object) || !(y instanceof Object)) {\r\n        return false;\r\n    }\r\n    if (x.constructor !== y.constructor) {\r\n        return false;\r\n    }\r\n    for (var p in x) {\r\n        if (!x.hasOwnProperty(p)) {\r\n            continue;\r\n        }\r\n        if (!y.hasOwnProperty(p)) {\r\n            return false;\r\n        }\r\n        if (x[p] === y[p]) {\r\n            continue;\r\n        }\r\n        if (typeof (x[p]) !== \"object\") {\r\n            return false;\r\n        }\r\n        if (!deepEqual(x[p], y[p])) {\r\n            return false;\r\n        }\r\n    }\r\n    for (var p in y) {\r\n        if (y.hasOwnProperty(p) && !x.hasOwnProperty(p)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\n\nvar GW3Bridge = (function () {\r\n    function GW3Bridge(config) {\r\n        var _this = this;\r\n        this._contextNameToData = {};\r\n        this._gw3Subscriptions = [];\r\n        this._nextCallbackSubscriptionNumber = 0;\r\n        this._contextNameToId = {};\r\n        this._contextIdToName = {};\r\n        this._connection = config.connection;\r\n        this._logger = config.logger;\r\n        this._gw3Session = this._connection.domain(\"global\", this._logger, [\r\n            GW_MESSAGE_CONTEXT_CREATED,\r\n            GW_MESSAGE_SUBSCRIBED_CONTEXT,\r\n            GW_MESSAGE_CONTEXT_DESTROYED,\r\n            GW_MESSAGE_CONTEXT_UPDATED,\r\n        ]);\r\n        this.subscribeToContextCreatedMessages();\r\n        this.subscribeToContextUpdatedMessages();\r\n        this.subscribeToContextDestroyedMessages();\r\n        this._connection.replayer.drain(ContextMessageReplaySpec.name, function (message) {\r\n            var type = message.type;\r\n            if (!type) {\r\n                return;\r\n            }\r\n            if (type === GW_MESSAGE_CONTEXT_CREATED ||\r\n                type === GW_MESSAGE_CONTEXT_ADDED ||\r\n                type === GW_MESSAGE_ACTIVITY_CREATED) {\r\n                _this.handleContextCreatedMessage(message);\r\n            }\r\n            else if (type === GW_MESSAGE_SUBSCRIBED_CONTEXT ||\r\n                type === GW_MESSAGE_CONTEXT_UPDATED ||\r\n                type === GW_MESSAGE_JOINED_ACTIVITY) {\r\n                _this.handleContextUpdatedMessage(message);\r\n            }\r\n            else if (type === GW_MESSAGE_CONTEXT_DESTROYED ||\r\n                type === GW_MESSAGE_ACTIVITY_DESTROYED) {\r\n                _this.handleContextDestroyedMessage(message);\r\n            }\r\n        });\r\n    }\r\n    GW3Bridge.prototype.dispose = function () {\r\n        for (var _i = 0, _a = this._gw3Subscriptions; _i < _a.length; _i++) {\r\n            var sub = _a[_i];\r\n            this._connection.off(sub);\r\n        }\r\n        this._gw3Subscriptions.length = 0;\r\n        for (var contextName in this._contextNameToData) {\r\n            if (this._contextNameToId.hasOwnProperty(contextName)) {\r\n                delete this._contextNameToData[contextName];\r\n            }\r\n        }\r\n    };\r\n    GW3Bridge.prototype.createContext = function (name, data) {\r\n        var _this = this;\r\n        return this._gw3Session\r\n            .send({\r\n            type: GW_MESSAGE_CREATE_CONTEXT,\r\n            domain: \"global\",\r\n            name: name,\r\n            data: data,\r\n            lifetime: \"retained\",\r\n        })\r\n            .then(function (createContextMsg) {\r\n            _this._contextNameToId[name] = createContextMsg.context_id;\r\n            if (!_this._contextIdToName[createContextMsg.context_id]) {\r\n                _this._contextIdToName[createContextMsg.context_id] = name;\r\n                var contextData = _this._contextNameToData[name] || new GW3ContextData(createContextMsg.context_id, name, true, null);\r\n                contextData.isAnnounced = true;\r\n                contextData.name = name;\r\n                contextData.contextId = createContextMsg.context_id;\r\n                _this._contextNameToData[name] = contextData;\r\n                contextData.context = createContextMsg.data;\r\n                contextData.sentExplicitSubscription = true;\r\n                if (contextData.context) {\r\n                    _this.invokeUpdateCallbacks(contextData, contextData.context, null);\r\n                }\r\n                return _this.update(name, data).then(function () { return createContextMsg.context_id; });\r\n            }\r\n            return createContextMsg.context_id;\r\n        });\r\n    };\r\n    GW3Bridge.prototype.all = function () {\r\n        var _this = this;\r\n        return Object.keys(this._contextNameToData)\r\n            .filter(function (name) { return _this._contextNameToData[name].isAnnounced; });\r\n    };\r\n    GW3Bridge.prototype.update = function (name, delta) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var contextData, currentContext, calculatedDelta;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        contextData = this._contextNameToData[name];\r\n                        if (!contextData || !contextData.isAnnounced) {\r\n                            return [2, this.createContext(name, delta)];\r\n                        }\r\n                        currentContext = contextData.context;\r\n                        if (!!contextData.hasCallbacks()) return [3, 2];\r\n                        return [4, this.get(contextData.name, false)];\r\n                    case 1:\r\n                        currentContext = _a.sent();\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        calculatedDelta = this.calculateContextDelta(currentContext, delta);\r\n                        if (!Object.keys(calculatedDelta.added).length\r\n                            && !Object.keys(calculatedDelta.updated).length\r\n                            && !calculatedDelta.removed.length) {\r\n                            return [2, Promise.resolve()];\r\n                        }\r\n                        return [2, this._gw3Session\r\n                                .send({\r\n                                type: GW_MESSAGE_UPDATE_CONTEXT,\r\n                                domain: \"global\",\r\n                                context_id: contextData.contextId,\r\n                                delta: calculatedDelta,\r\n                            }, {}, { skipPeerId: false })\r\n                                .then(function (gwResponse) {\r\n                                _this.handleUpdated(contextData, calculatedDelta, {\r\n                                    updaterId: gwResponse.peer_id\r\n                                });\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    GW3Bridge.prototype.set = function (name, data) {\r\n        var _this = this;\r\n        var contextData = this._contextNameToData[name];\r\n        if (!contextData || !contextData.isAnnounced) {\r\n            return this.createContext(name, data);\r\n        }\r\n        return this._gw3Session\r\n            .send({\r\n            type: GW_MESSAGE_UPDATE_CONTEXT,\r\n            domain: \"global\",\r\n            context_id: contextData.contextId,\r\n            delta: { reset: data },\r\n        }, {}, { skipPeerId: false })\r\n            .then(function (gwResponse) {\r\n            _this.handleUpdated(contextData, { reset: data, added: {}, removed: [], updated: {} }, { updaterId: gwResponse.peer_id });\r\n        });\r\n    };\r\n    GW3Bridge.prototype.get = function (name, resolveImmediately) {\r\n        var _this = this;\r\n        if (resolveImmediately === undefined) {\r\n            resolveImmediately = true;\r\n        }\r\n        var contextData = this._contextNameToData[name];\r\n        if (!contextData ||\r\n            !contextData.isAnnounced ||\r\n            !contextData.hasCallbacks()) {\r\n            if (!resolveImmediately) {\r\n                return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                    var _this = this;\r\n                    return __generator(this, function (_a) {\r\n                        this.subscribe(name, function (data, delta, removed, un) {\r\n                            _this.unsubscribe(un);\r\n                            resolve(data);\r\n                        });\r\n                        return [2];\r\n                    });\r\n                }); });\r\n            }\r\n        }\r\n        return Promise.resolve(contextData && contextData.context);\r\n    };\r\n    GW3Bridge.prototype.subscribe = function (name, callback) {\r\n        var thisCallbackSubscriptionNumber = this._nextCallbackSubscriptionNumber;\r\n        this._nextCallbackSubscriptionNumber += 1;\r\n        var contextData = this._contextNameToData[name];\r\n        if (!contextData ||\r\n            !contextData.isAnnounced) {\r\n            contextData = contextData || new GW3ContextData(undefined, name, false, undefined);\r\n            this._contextNameToData[name] = contextData;\r\n            contextData.updateCallbacks[thisCallbackSubscriptionNumber] = callback;\r\n            return Promise.resolve(thisCallbackSubscriptionNumber);\r\n        }\r\n        var hadCallbacks = contextData.hasCallbacks();\r\n        contextData.updateCallbacks[thisCallbackSubscriptionNumber] = callback;\r\n        if (!hadCallbacks) {\r\n            if (!contextData.joinedActivity) {\r\n                if (contextData.context &&\r\n                    contextData.sentExplicitSubscription) {\r\n                    callback(contextData.context, contextData.context, [], thisCallbackSubscriptionNumber);\r\n                    return Promise.resolve(thisCallbackSubscriptionNumber);\r\n                }\r\n                return this.sendSubscribe(contextData)\r\n                    .then(function () { return thisCallbackSubscriptionNumber; });\r\n            }\r\n            else {\r\n                callback(contextData.context, contextData.context, [], thisCallbackSubscriptionNumber);\r\n                return Promise.resolve(thisCallbackSubscriptionNumber);\r\n            }\r\n        }\r\n        else {\r\n            callback(contextData.context, contextData.context, [], thisCallbackSubscriptionNumber);\r\n            return Promise.resolve(thisCallbackSubscriptionNumber);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.unsubscribe = function (subscriptionKey) {\r\n        for (var _i = 0, _a = Object.keys(this._contextNameToData); _i < _a.length; _i++) {\r\n            var name_1 = _a[_i];\r\n            var contextId = this._contextNameToId[name_1];\r\n            var contextData = this._contextNameToData[name_1];\r\n            if (!contextData) {\r\n                return;\r\n            }\r\n            var hadCallbacks = contextData.hasCallbacks();\r\n            delete contextData.updateCallbacks[subscriptionKey];\r\n            if (contextData.isAnnounced &&\r\n                hadCallbacks &&\r\n                !contextData.hasCallbacks() &&\r\n                contextData.sentExplicitSubscription) {\r\n                this.sendUnsubscribe(contextData);\r\n            }\r\n            if (!contextData.isAnnounced &&\r\n                !contextData.hasCallbacks()) {\r\n                delete this._contextNameToData[name_1];\r\n            }\r\n        }\r\n    };\r\n    GW3Bridge.prototype.handleUpdated = function (contextData, delta, extraData) {\r\n        var oldContext = contextData.context;\r\n        contextData.context = applyContextDelta(contextData.context, delta);\r\n        if (this._contextNameToData[contextData.name] === contextData &&\r\n            !deepEqual(oldContext, contextData.context)) {\r\n            this.invokeUpdateCallbacks(contextData, contextData.context, delta, extraData);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.subscribeToContextCreatedMessages = function () {\r\n        var createdMessageTypes = [\r\n            GW_MESSAGE_CONTEXT_ADDED,\r\n            GW_MESSAGE_CONTEXT_CREATED,\r\n            GW_MESSAGE_ACTIVITY_CREATED,\r\n        ];\r\n        for (var _i = 0, createdMessageTypes_1 = createdMessageTypes; _i < createdMessageTypes_1.length; _i++) {\r\n            var createdMessageType = createdMessageTypes_1[_i];\r\n            var sub = this._connection.on(\"js-contexts\", createdMessageType, this.handleContextCreatedMessage.bind(this));\r\n            this._gw3Subscriptions.push(sub);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.handleContextCreatedMessage = function (contextCreatedMsg) {\r\n        var createdMessageType = contextCreatedMsg.type;\r\n        if (createdMessageType === GW_MESSAGE_ACTIVITY_CREATED) {\r\n            this._contextNameToId[contextCreatedMsg.activity_id] = contextCreatedMsg.context_id;\r\n            this._contextIdToName[contextCreatedMsg.context_id] = contextCreatedMsg.activity_id;\r\n        }\r\n        else if (createdMessageType === GW_MESSAGE_CONTEXT_ADDED) {\r\n            this._contextNameToId[contextCreatedMsg.name] = contextCreatedMsg.context_id;\r\n            this._contextIdToName[contextCreatedMsg.context_id] = contextCreatedMsg.name;\r\n        }\r\n        var name = this._contextIdToName[contextCreatedMsg.context_id];\r\n        if (!name) {\r\n            throw new Error(\"Received created event for context with unknown name: \" + contextCreatedMsg.context_id);\r\n        }\r\n        if (!this._contextNameToId[name]) {\r\n            throw new Error(\"Received created event for context with unknown id: \" + contextCreatedMsg.context_id);\r\n        }\r\n        var contextData = this._contextNameToData[name];\r\n        if (contextData) {\r\n            if (contextData.isAnnounced) {\r\n                return;\r\n            }\r\n            else {\r\n                if (!contextData.hasCallbacks()) {\r\n                    throw new Error(\"Assertion failure: contextData.hasCallbacks()\");\r\n                }\r\n                contextData.isAnnounced = true;\r\n                contextData.contextId = contextCreatedMsg.context_id;\r\n                contextData.activityId = contextCreatedMsg.activity_id;\r\n                if (!contextData.sentExplicitSubscription) {\r\n                    this.sendSubscribe(contextData);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this._contextNameToData[name] = contextData =\r\n                new GW3ContextData(contextCreatedMsg.context_id, name, true, contextCreatedMsg.activity_id);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.subscribeToContextUpdatedMessages = function () {\r\n        var updatedMessageTypes = [\r\n            GW_MESSAGE_CONTEXT_UPDATED,\r\n            GW_MESSAGE_SUBSCRIBED_CONTEXT,\r\n            GW_MESSAGE_JOINED_ACTIVITY,\r\n        ];\r\n        for (var _i = 0, updatedMessageTypes_1 = updatedMessageTypes; _i < updatedMessageTypes_1.length; _i++) {\r\n            var updatedMessageType = updatedMessageTypes_1[_i];\r\n            var sub = this._connection.on(\"js-contexts\", updatedMessageType, this.handleContextUpdatedMessage.bind(this));\r\n            this._gw3Subscriptions.push(sub);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.handleContextUpdatedMessage = function (contextUpdatedMsg) {\r\n        var updatedMessageType = contextUpdatedMsg.type;\r\n        var contextId = contextUpdatedMsg.context_id;\r\n        var contextData = this._contextNameToData[this._contextIdToName[contextId]];\r\n        var justSeen = !contextData || !contextData.isAnnounced;\r\n        if (updatedMessageType === GW_MESSAGE_JOINED_ACTIVITY) {\r\n            if (!contextData) {\r\n                contextData = new GW3ContextData(contextId, contextUpdatedMsg.activity_id, true, contextUpdatedMsg.activity_id);\r\n                this._contextNameToData[contextUpdatedMsg.activity_id] = contextData;\r\n                this._contextIdToName[contextId] = contextUpdatedMsg.activity_id;\r\n                this._contextNameToId[contextUpdatedMsg.activity_id] = contextId;\r\n            }\r\n            else {\r\n                contextData.contextId = contextId;\r\n                contextData.isAnnounced = true;\r\n                contextData.activityId = contextUpdatedMsg.activity_id;\r\n            }\r\n            contextData.joinedActivity = true;\r\n        }\r\n        else {\r\n            if (!contextData || !contextData.isAnnounced) {\r\n                if (updatedMessageType === GW_MESSAGE_SUBSCRIBED_CONTEXT) {\r\n                    contextData = contextData || new GW3ContextData(contextId, contextUpdatedMsg.name, true, null);\r\n                    contextData.sentExplicitSubscription = true;\r\n                    this._contextNameToData[contextUpdatedMsg.name] = contextData;\r\n                    this._contextIdToName[contextId] = contextUpdatedMsg.name;\r\n                    this._contextNameToId[contextUpdatedMsg.name] = contextId;\r\n                }\r\n                else {\r\n                    this._logger.error(\"Received 'update' for unknown context: \" + contextId);\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        var oldContext = contextData.context;\r\n        if (updatedMessageType === GW_MESSAGE_SUBSCRIBED_CONTEXT) {\r\n            contextData.context = contextUpdatedMsg.data || {};\r\n        }\r\n        else if (updatedMessageType === GW_MESSAGE_JOINED_ACTIVITY) {\r\n            contextData.context = contextUpdatedMsg.context_snapshot || {};\r\n        }\r\n        else if (updatedMessageType === GW_MESSAGE_CONTEXT_UPDATED) {\r\n            contextData.context = applyContextDelta(contextData.context, contextUpdatedMsg.delta);\r\n        }\r\n        else {\r\n            throw new Error(\"Unrecognized context update message \" + updatedMessageType);\r\n        }\r\n        if (justSeen ||\r\n            !deepEqual(contextData.context, oldContext) ||\r\n            updatedMessageType === GW_MESSAGE_SUBSCRIBED_CONTEXT) {\r\n            this.invokeUpdateCallbacks(contextData, contextData.context, contextUpdatedMsg.delta, { updaterId: contextUpdatedMsg.updater_id });\r\n        }\r\n    };\r\n    GW3Bridge.prototype.invokeUpdateCallbacks = function (contextData, data, delta, extraData) {\r\n        delta = delta || { added: {}, updated: {}, reset: {}, removed: [] };\r\n        for (var updateCallbackIndex in contextData.updateCallbacks) {\r\n            if (contextData.updateCallbacks.hasOwnProperty(updateCallbackIndex)) {\r\n                try {\r\n                    var updateCallback = contextData.updateCallbacks[updateCallbackIndex];\r\n                    updateCallback(deepClone(data), Object.assign({}, delta.added || {}, delta.updated || {}, delta.reset || {}), delta.removed, parseInt(updateCallbackIndex, 10), extraData);\r\n                }\r\n                catch (err) {\r\n                    this._logger.debug(\"callback error: \" + JSON.stringify(err));\r\n                }\r\n            }\r\n        }\r\n    };\r\n    GW3Bridge.prototype.subscribeToContextDestroyedMessages = function () {\r\n        var destroyedMessageTypes = [\r\n            GW_MESSAGE_CONTEXT_DESTROYED,\r\n            GW_MESSAGE_ACTIVITY_DESTROYED,\r\n        ];\r\n        for (var _i = 0, destroyedMessageTypes_1 = destroyedMessageTypes; _i < destroyedMessageTypes_1.length; _i++) {\r\n            var destroyedMessageType = destroyedMessageTypes_1[_i];\r\n            var sub = this._connection.on(\"js-contexts\", destroyedMessageType, this.handleContextDestroyedMessage.bind(this));\r\n            this._gw3Subscriptions.push(sub);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.handleContextDestroyedMessage = function (destroyedMsg) {\r\n        var destroyedMessageType = destroyedMsg.type;\r\n        var contextId;\r\n        var name;\r\n        if (destroyedMessageType === GW_MESSAGE_ACTIVITY_DESTROYED) {\r\n            name = destroyedMsg.activity_id;\r\n            contextId = this._contextNameToId[name];\r\n            if (!contextId) {\r\n                this._logger.error(\"Received 'destroyed' for unknown activity: \" + destroyedMsg.activity_id);\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            contextId = destroyedMsg.context_id;\r\n            name = this._contextIdToName[contextId];\r\n            if (!name) {\r\n                this._logger.error(\"Received 'destroyed' for unknown context: \" + destroyedMsg.context_id);\r\n                return;\r\n            }\r\n        }\r\n        delete this._contextIdToName[contextId];\r\n        delete this._contextNameToId[name];\r\n        var contextData = this._contextNameToData[name];\r\n        delete this._contextNameToData[name];\r\n        if (!contextData || !contextData.isAnnounced) {\r\n            this._logger.error(\"Received 'destroyed' for unknown context: \" + contextId);\r\n            return;\r\n        }\r\n    };\r\n    GW3Bridge.prototype.sendSubscribe = function (contextData) {\r\n        contextData.sentExplicitSubscription = true;\r\n        return this._gw3Session\r\n            .send({\r\n            type: GW_MESSAGE_SUBSCRIBE_CONTEXT,\r\n            domain: \"global\",\r\n            context_id: contextData.contextId,\r\n        }).then(function (_) { return undefined; });\r\n    };\r\n    GW3Bridge.prototype.sendUnsubscribe = function (contextData) {\r\n        contextData.sentExplicitSubscription = false;\r\n        return this._gw3Session\r\n            .send({\r\n            type: GW_MESSAGE_UNSUBSCRIBE_CONTEXT,\r\n            domain: \"global\",\r\n            context_id: contextData.contextId,\r\n        }).then(function (_) { return undefined; });\r\n    };\r\n    GW3Bridge.prototype.calculateContextDelta = function (from, to) {\r\n        var delta = { added: {}, updated: {}, removed: [], reset: null };\r\n        if (from) {\r\n            for (var _i = 0, _a = Object.keys(from); _i < _a.length; _i++) {\r\n                var x = _a[_i];\r\n                if (Object.keys(to).indexOf(x) !== -1\r\n                    && to[x] !== null\r\n                    && !deepEqual(from[x], to[x])) {\r\n                    delta.updated[x] = to[x];\r\n                }\r\n            }\r\n        }\r\n        for (var _b = 0, _c = Object.keys(to); _b < _c.length; _b++) {\r\n            var x = _c[_b];\r\n            if (!from || (Object.keys(from).indexOf(x) === -1)) {\r\n                if (to[x] !== null) {\r\n                    delta.added[x] = to[x];\r\n                }\r\n            }\r\n            else if (to[x] === null) {\r\n                delta.removed.push(x);\r\n            }\r\n        }\r\n        return delta;\r\n    };\r\n    return GW3Bridge;\r\n}());\n\nvar HCBridge = (function () {\r\n    function HCBridge(config) {\r\n        this._facade = window.htmlContainer.sharedContextFacade;\r\n    }\r\n    HCBridge.prototype.all = function () {\r\n        var allObj = this._facade.all();\r\n        if (!allObj || !allObj.keys) {\r\n            return [];\r\n        }\r\n        return allObj.keys;\r\n    };\r\n    HCBridge.prototype.update = function (name, delta) {\r\n        this._facade.update(name, delta);\r\n        return Promise.resolve();\r\n    };\r\n    HCBridge.prototype.set = function (name, data) {\r\n        this._facade.set(name, data);\r\n        return Promise.resolve();\r\n    };\r\n    HCBridge.prototype.subscribe = function (name, callback) {\r\n        var snapshot = null;\r\n        var key = this._facade.subscribe(name, function (data, delta, removed) {\r\n            if (!key && key !== 0) {\r\n                snapshot = data;\r\n                return;\r\n            }\r\n            callback(data, delta, removed, key);\r\n        });\r\n        if (snapshot) {\r\n            callback(snapshot, snapshot, [], key);\r\n            snapshot = null;\r\n        }\r\n        return Promise.resolve(key);\r\n    };\r\n    HCBridge.prototype.get = function (name, resolveImmediately) {\r\n        var _this = this;\r\n        if (resolveImmediately) {\r\n            throw new Error(\"resolveImmediately not supported in HtmlContainer\");\r\n        }\r\n        return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                this.subscribe(name, function (data, un) {\r\n                    _this.unsubscribe(un);\r\n                    resolve(data);\r\n                });\r\n                return [2];\r\n            });\r\n        }); });\r\n    };\r\n    HCBridge.prototype.unsubscribe = function (key) {\r\n        this._facade.unsubscribe(key);\r\n    };\r\n    return HCBridge;\r\n}());\n\nvar ContextsModule = (function () {\r\n    function ContextsModule(config) {\r\n        this.config = config;\r\n        try {\r\n            if (config.gdMajorVersion === 2) {\r\n                var hc = window.htmlContainer;\r\n                if (!hc.sharedContextFacade) {\r\n                    throw new Error(\"Your version of HtmlContainer does not support contexts.\"\r\n                        + \" Get version 1.46.0.0 or later to have that feature.\");\r\n                }\r\n                this._bridge = new HCBridge(config);\r\n            }\r\n            else if (config.connection.protocolVersion === 3) {\r\n                this._bridge = new GW3Bridge(config);\r\n            }\r\n            else {\r\n                throw new Error(\"To use the Contexts library you must run in the\"\r\n                    + \" HTML Container or using a connection to Gateway v3.\");\r\n            }\r\n        }\r\n        catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n    ContextsModule.prototype.all = function () {\r\n        return this._bridge.all();\r\n    };\r\n    ContextsModule.prototype.update = function (name, delta) {\r\n        this.checkName(name);\r\n        return this._bridge.update(name, delta);\r\n    };\r\n    ContextsModule.prototype.set = function (name, data) {\r\n        this.checkName(name);\r\n        return this._bridge.set(name, data);\r\n    };\r\n    ContextsModule.prototype.subscribe = function (name, callback) {\r\n        var _this = this;\r\n        this.checkName(name);\r\n        return this._bridge\r\n            .subscribe(name, function (data, delta, removed, key, extraData) { return callback(data, delta, removed, function () { return _this._bridge.unsubscribe(key); }, extraData); })\r\n            .then(function (key) {\r\n            return function () {\r\n                _this._bridge.unsubscribe(key);\r\n            };\r\n        });\r\n    };\r\n    ContextsModule.prototype.get = function (name, resolveImmediately) {\r\n        if (resolveImmediately === false) {\r\n            resolveImmediately = true;\r\n        }\r\n        return this._bridge.get(name, resolveImmediately);\r\n    };\r\n    ContextsModule.prototype.ready = function () {\r\n        return Promise.resolve(this);\r\n    };\r\n    ContextsModule.prototype.checkName = function (name) {\r\n        if (typeof name !== \"string\" ||\r\n            name === \"\") {\r\n            throw new Error(\"'name' must be non-empty string, got '\" + name + \"'\");\r\n        }\r\n    };\r\n    return ContextsModule;\r\n}());\n\nvar GlueCore = function (userConfig, ext) {\r\n    var gdVersion = -1;\r\n    var hc;\r\n    var glue42gd;\r\n    var preloadPromise = Promise.resolve();\r\n    if (typeof window !== \"undefined\") {\r\n        gdVersion = Utils.getGDMajorVersion();\r\n        if (gdVersion === 2) {\r\n            hc = window.htmlContainer;\r\n        }\r\n        else if (gdVersion >= 3) {\r\n            glue42gd = window.glue42gd;\r\n            preloadPromise = window.gdPreloadPromise || preloadPromise;\r\n        }\r\n    }\r\n    var glueInitTimer = timer();\r\n    userConfig = userConfig || {};\r\n    ext = ext || {};\r\n    var internalConfig = prepareConfig(userConfig, ext, hc, glue42gd, gdVersion);\r\n    var _connection;\r\n    var _interop;\r\n    var _logger;\r\n    var _rootMetrics;\r\n    var _metrics;\r\n    var _contexts;\r\n    var _bus;\r\n    var libs = {};\r\n    function registerLib(name, inner, t) {\r\n        inner.initStartTime = t.startTime;\r\n        if (inner.ready) {\r\n            inner.ready().then(function () {\r\n                inner.initTime = t.stop();\r\n                inner.initEndTime = t.endTime;\r\n            });\r\n        }\r\n        else {\r\n            inner.initTime = t.stop();\r\n            inner.initEndTime = t.endTime;\r\n        }\r\n        if (!Array.isArray(name)) {\r\n            name = [name];\r\n        }\r\n        name.forEach(function (n) {\r\n            libs[n] = inner;\r\n            GlueCore[n] = inner;\r\n        });\r\n    }\r\n    function setupConnection() {\r\n        var initTimer = timer();\r\n        internalConfig.connection.logger = _logger.subLogger(\"connection\");\r\n        _connection = gatewayConnection(internalConfig.connection);\r\n        var authPromise = Promise.resolve(internalConfig.auth);\r\n        if (internalConfig.connection && !internalConfig.auth) {\r\n            var protocolVersion = internalConfig.connection.protocolVersion;\r\n            if (!protocolVersion || protocolVersion === 1) {\r\n                registerLib(\"connection\", _connection, initTimer);\r\n                return Promise.resolve({});\r\n            }\r\n            if (protocolVersion === 2) {\r\n                return Promise.reject(\"You need to provide auth information\");\r\n            }\r\n            if (protocolVersion === 3) {\r\n                if (glue42gd) {\r\n                    authPromise = glue42gd.getGWToken().then(function (token) {\r\n                        return {\r\n                            gatewayToken: token\r\n                        };\r\n                    });\r\n                }\r\n                else {\r\n                    authPromise = Promise.reject(\"You need to provide auth information\");\r\n                }\r\n            }\r\n        }\r\n        return authPromise\r\n            .then(function (authConfig) {\r\n            var authRequest;\r\n            if (typeof authConfig === \"string\" || typeof authConfig === \"number\") {\r\n                authRequest = {\r\n                    token: authConfig\r\n                };\r\n            }\r\n            else if (Object.prototype.toString.call(authConfig) === \"[object Object]\") {\r\n                authRequest = authConfig;\r\n            }\r\n            else {\r\n                throw new Error(\"Invalid auth object - \" + JSON.stringify(authConfig));\r\n            }\r\n            return authRequest;\r\n        })\r\n            .then(function (authRequest) {\r\n            return _connection.login(authRequest);\r\n        })\r\n            .then(function (identity) {\r\n            if (identity) {\r\n                if (identity.machine) {\r\n                    internalConfig.agm.instance.machine = identity.machine;\r\n                }\r\n                if (identity.user) {\r\n                    internalConfig.agm.instance.user = identity.user;\r\n                }\r\n            }\r\n            registerLib(\"connection\", _connection, initTimer);\r\n            return internalConfig;\r\n        })\r\n            .catch(function (e) {\r\n            if (_connection) {\r\n                _connection.logout();\r\n            }\r\n            throw e;\r\n        });\r\n    }\r\n    function setupLogger() {\r\n        var initTimer = timer();\r\n        var loggerConfig = {\r\n            identity: internalConfig.identity,\r\n            getConnection: function () {\r\n                return _connection || connection;\r\n            },\r\n            publish: internalConfig.logger.publish || \"off\",\r\n            console: internalConfig.logger.console || \"error\",\r\n            metrics: (internalConfig.metrics && internalConfig.logger.metrics) || \"off\"\r\n        };\r\n        _logger = logger(loggerConfig, internalConfig.connection.identity.application, internalConfig.customLogger);\r\n        registerLib(\"logger\", _logger, initTimer);\r\n        return Promise.resolve(undefined);\r\n    }\r\n    function setupMetrics() {\r\n        if (internalConfig.metrics) {\r\n            var initTimer = timer();\r\n            _rootMetrics = metrics({\r\n                identity: internalConfig.metrics.identity,\r\n                connection: internalConfig.metrics ? _connection : connection,\r\n                logger: _logger.subLogger(\"metrics\")\r\n            });\r\n            if (internalConfig.metrics.disableAutoAppSystem) {\r\n                _metrics = _rootMetrics;\r\n            }\r\n            else {\r\n                _metrics = _rootMetrics.subSystem(\"App\");\r\n            }\r\n            var reportingSystem_1 = _metrics.subSystem(\"reporting\");\r\n            var def_1 = {\r\n                name: \"features\",\r\n                conflation: 1,\r\n            };\r\n            var _featureMetric_1;\r\n            _metrics.featureMetric = function (name, action, payload) {\r\n                if (typeof name === \"undefined\" || name === \"\") {\r\n                    throw new Error(\"name is mandatory\");\r\n                }\r\n                else if (typeof action === \"undefined\" || action === \"\") {\r\n                    throw new Error(\"action is mandatory\");\r\n                }\r\n                else if (typeof payload === \"undefined\" || payload === \"\") {\r\n                    throw new Error(\"payload is mandatory\");\r\n                }\r\n                if (!_featureMetric_1) {\r\n                    _featureMetric_1 = reportingSystem_1.objectMetric(def_1, { name: name, action: action, payload: payload });\r\n                }\r\n                else {\r\n                    _featureMetric_1.update({\r\n                        name: name,\r\n                        action: action,\r\n                        payload: payload\r\n                    });\r\n                }\r\n            };\r\n            var logEventsParent = _metrics.parent || _metrics;\r\n            var logEvents = logEventsParent.subSystem(\"LogEvents\");\r\n            _logger.metricsLevel(\"warn\", logEvents);\r\n            registerLib(\"metrics\", _metrics, initTimer);\r\n        }\r\n        return Promise.resolve(undefined);\r\n    }\r\n    function setupAGM() {\r\n        var initTimer = timer();\r\n        var agmConfig = {\r\n            instance: internalConfig.agm.instance,\r\n            connection: _connection,\r\n            logger: _logger.subLogger(\"interop\"),\r\n            forceGW: internalConfig.connection && internalConfig.connection.force,\r\n            gdVersion: gdVersion,\r\n        };\r\n        return new Promise(function (resolve, reject) {\r\n            agm(agmConfig)\r\n                .then(function (agmLib) {\r\n                _interop = agmLib;\r\n                Logger.Interop = _interop;\r\n                registerLib([\"interop\", \"agm\"], _interop, initTimer);\r\n                resolve(internalConfig);\r\n            })\r\n                .catch(function (err) {\r\n                return reject(err);\r\n            });\r\n        });\r\n    }\r\n    function setupContexts() {\r\n        var hasActivities = (internalConfig.activities && _connection.protocolVersion === 3);\r\n        var needsContexts = internalConfig.contexts || hasActivities;\r\n        if (needsContexts) {\r\n            var initTimer = timer();\r\n            _contexts = new ContextsModule({\r\n                connection: _connection,\r\n                logger: _logger.subLogger(\"contexts\"),\r\n                gdMajorVersion: gdVersion\r\n            });\r\n            registerLib(\"contexts\", _contexts, initTimer);\r\n            return _contexts;\r\n        }\r\n        else {\r\n            var replayer = _connection.replayer;\r\n            if (replayer) {\r\n                replayer.drain(ContextMessageReplaySpec.name, null);\r\n            }\r\n        }\r\n    }\r\n    function setupExternalLibs(externalLibs) {\r\n        try {\r\n            externalLibs.forEach(function (lib) {\r\n                setupExternalLib(lib.name, lib.create);\r\n            });\r\n            return Promise.resolve();\r\n        }\r\n        catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n    function setupExternalLib(name, createCallback) {\r\n        var initTimer = timer();\r\n        var lib = createCallback(libs);\r\n        if (lib) {\r\n            registerLib(name, lib, initTimer);\r\n        }\r\n    }\r\n    function waitForLibs() {\r\n        var libsReadyPromises = Object.keys(libs).map(function (key) {\r\n            var lib = libs[key];\r\n            return lib.ready ?\r\n                lib.ready() : Promise.resolve();\r\n        });\r\n        return Promise.all(libsReadyPromises);\r\n    }\r\n    function constructGlueObject() {\r\n        var feedbackFunc = function (feedbackInfo) {\r\n            if (!_interop) {\r\n                return;\r\n            }\r\n            _interop.invoke(\"T42.ACS.Feedback\", feedbackInfo, \"best\");\r\n        };\r\n        var info = { glueVersion: internalConfig.version };\r\n        glueInitTimer.stop();\r\n        var glue = {\r\n            interop: _interop,\r\n            agm: _interop,\r\n            metrics: _metrics,\r\n            connection: _connection,\r\n            bus: _bus,\r\n            logger: _logger,\r\n            contexts: _contexts,\r\n            feedback: feedbackFunc,\r\n            info: info,\r\n            version: internalConfig.version,\r\n            userConfig: userConfig,\r\n            done: function () {\r\n                _connection.logout();\r\n                return Promise.resolve();\r\n            }\r\n        };\r\n        glue.performance = {\r\n            get glueVer() {\r\n                return internalConfig.version;\r\n            },\r\n            get glueConfig() {\r\n                return JSON.stringify(userConfig);\r\n            },\r\n            get browser() {\r\n                return window.performance.timing.toJSON();\r\n            },\r\n            get memory() {\r\n                return window.performance.memory;\r\n            },\r\n            get initTimes() {\r\n                var result = Object.keys(glue)\r\n                    .filter(function (key) {\r\n                    var _a;\r\n                    if (key === \"initTimes\" || key === \"agm\") {\r\n                        return false;\r\n                    }\r\n                    return (_a = glue[key]) === null || _a === void 0 ? void 0 : _a.initTime;\r\n                })\r\n                    .map(function (key) {\r\n                    return {\r\n                        name: key,\r\n                        time: glue[key].initTime,\r\n                        startTime: glue[key].initStartTime,\r\n                        endTime: glue[key].initEndTime\r\n                    };\r\n                });\r\n                result.push({\r\n                    name: \"glue\",\r\n                    startTime: glueInitTimer.startTime,\r\n                    endTime: glueInitTimer.endTime,\r\n                    time: glueInitTimer.period\r\n                });\r\n                return result;\r\n            }\r\n        };\r\n        Object.keys(libs).forEach(function (key) {\r\n            var lib = libs[key];\r\n            glue[key] = lib;\r\n            info[key] = lib.version;\r\n        });\r\n        glue.config = {};\r\n        Object.keys(internalConfig).forEach(function (k) {\r\n            glue.config[k] = internalConfig[k];\r\n        });\r\n        if (ext.extOptions) {\r\n            Object.keys(ext.extOptions).forEach(function (k) {\r\n                glue.config[k] = ext.extOptions[k];\r\n            });\r\n        }\r\n        if (ext.enrichGlue) {\r\n            ext.enrichGlue(glue);\r\n        }\r\n        if (hc && hc.perfDataNeeded && hc.updatePerfData) {\r\n            var delay = hc.perfDataDelay || 100;\r\n            setTimeout(function () {\r\n                hc.updatePerfData(glue.performance);\r\n            }, delay);\r\n        }\r\n        if (glue42gd && glue42gd.updatePerfData) {\r\n            glue42gd.updatePerfData(glue.performance);\r\n        }\r\n        return glue;\r\n    }\r\n    function setupBus() {\r\n        if (!internalConfig.bus) {\r\n            return Promise.resolve(undefined);\r\n        }\r\n        var initTimer = timer();\r\n        var busSettings = {\r\n            connection: _connection,\r\n            logger: _logger.subLogger(\"bus\")\r\n        };\r\n        return new Promise(function (resolve, reject) {\r\n            bus(busSettings)\r\n                .then(function (busLib) {\r\n                _bus = busLib;\r\n                registerLib(\"bus\", _bus, initTimer);\r\n                resolve();\r\n            })\r\n                .catch(function (err) {\r\n                return reject(err);\r\n            });\r\n        });\r\n    }\r\n    return preloadPromise\r\n        .then(setupLogger)\r\n        .then(setupConnection)\r\n        .then(function () { return Promise.all([setupMetrics(), setupAGM(), setupContexts(), setupBus()]); })\r\n        .then(function () {\r\n        return setupExternalLibs(internalConfig.libs || []);\r\n    })\r\n        .then(waitForLibs)\r\n        .then(constructGlueObject)\r\n        .catch(function (err) {\r\n        return Promise.reject({\r\n            err: err,\r\n            libs: libs\r\n        });\r\n    });\r\n};\n\nif (typeof window !== \"undefined\") {\r\n    window.GlueCore = GlueCore;\r\n}\r\nGlueCore.default = GlueCore;\r\nGlueCore.version = version;\n\nexport default GlueCore;\n//# sourceMappingURL=core.es.js.map\n","import ActivityManager from \"../core/activityManager\";\n\n/**\n * Base class for activity entities with reference to the activity manager\n * @private\n */\nexport default class ActivityEntity {\n\n  public _manager: ActivityManager;\n  public _id: string;\n\n  constructor(id: string) {\n    this._id = id;\n  }\n\n  public get id(): string {\n    return this._id;\n  }\n\n  /**\n   * Updates the properties of the current object using the properties of another object\n   * These two should have the same id.\n   */\n  public _update(other: ActivityEntity) {\n    if (other._id !== this._id) {\n      throw Error(\"Can not update from entity with different id.\");\n    }\n    this._updateCore(other);\n  }\n\n  public _updateCore(other: ActivityEntity) {\n    return;\n  }\n\n  public _beforeDelete(other: ActivityEntity) {\n    return;\n  }\n}\n","// some small useful functions (so we don't reference underscore or lodash)\n\nexport function isNumber(arg: any) {\n  return typeof arg === \"number\";\n}\n\nexport function isString(arg: any) {\n  return typeof arg === \"string\";\n}\n\nexport function isObject(arg: any) {\n  return typeof arg === \"object\" && arg !== null;\n}\n\nexport function isArray(arg: any) {\n  // TODO optimize\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return toString.call(arg) === \"[object Array]\";\n}\nexport function isUndefined(arg: any) {\n  return typeof arg === \"undefined\";\n}\n\nexport function isUndefinedOrNull(arg: any) {\n  return !arg || typeof arg === \"undefined\";\n}\n\n/**\n *  Checks if an object is empty (has no properties)\n * @private\n */\nexport function isEmpty(arg: any) {\n  for (const prop in arg) {\n    if (arg.hasOwnProperty(prop)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function isFunction(arg: any) {\n  return !!(arg && arg.constructor && arg.call && arg.apply);\n}\n\nexport function some<T>(array: T[], predicate: (el: any, index: number) => boolean) {\n  for (let index = 0; index < array.length; index++) {\n    if (predicate(array[index], index)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function first<T>(array: T[], predicate: (el: any, index: number) => boolean) {\n  for (let index = 0; index < array.length; index++) {\n    if (predicate(array[index], index)) {\n      return array[index];\n    }\n  }\n  return undefined;\n}\n\nexport function ifNotUndefined<T>(what: T, doWithIt: (what: T) => void) {\n  if (typeof what !== \"undefined\") {\n    doWithIt(what);\n  }\n}\n\nexport function promisify(promise: Promise<any>, successCallback: () => void, errorCallback: () => void) {\n  \"use strict\";\n  if (typeof successCallback !== \"function\" && typeof errorCallback !== \"function\") {\n    return promise;\n  }\n\n  if (typeof successCallback !== \"function\") {\n    successCallback = () => { return; };\n  } else if (typeof errorCallback !== \"function\") {\n    errorCallback = () => { return; };\n  }\n\n  promise.then(successCallback, errorCallback);\n}\n","import * as contracts from \"../contracts/contracts\";\nimport Activity from \"./activity\";\nimport ActivityEntity from \"./activityEntity\";\nimport WindowType from \"./windowType\";\nimport {ifNotUndefined} from \"../helpers/util\";\nimport {WindowDefinition} from \"./windowDefinition\";\n\nimport { Glue42 } from \"../../../glue\";\ntype OverrideTypeDefinition = Glue42.Activities.OverrideTypeDefinition;\n\n/**\n * An activity type is a definition template for an activity, consisting of a collection of window types,\n * their layout and an initial activity context.\n *\n * @module activityType\n */\nexport default class ActivityType extends ActivityEntity {\n\n  public _name: string;\n  public _description: string;\n  public _ownerWindow: WindowType;\n  public _helperWindows: WindowType[];\n\n  constructor(name: string, ownerWindow: WindowType, helperWindows?: WindowType[], description?: string) {\n    super(name);\n    this._name = name;\n    this._description = description;\n    this._ownerWindow = ownerWindow;\n    this._helperWindows = helperWindows || [];\n  }\n\n  /**\n   * @var {string} name Name of the activity type\n   */\n  public get name(): string {\n    return this._name;\n  }\n\n  /**\n   * @var {string} description description for the activity type\n   */\n  public get description(): string {\n    return this._description;\n  }\n\n  /**\n   * A list of window types that should be created when initiating a new instance of that activity type\n   * @var {windowDefinition[]} helperWindows\n   */\n  public get helperWindows(): WindowType[] {\n    return this._helperWindows;\n  }\n\n  /**\n   * @var {windowDefinition} ownerWindow Returns the definition of the owner window for that activity type\n   */\n  public get ownerWindow(): WindowType {\n    return this._ownerWindow;\n  }\n\n  /**\n   * Initiates a new activity of this type\n   *\n   * @function initiate\n   * @param {object} context The initial context to be used for the new activity\n   * @param callback\n   * @param configuration\n   * @returns {Promise<activity>}\n   */\n  public initiate(context: object, callback?: contracts.Callback<Activity>, configuration?: WindowDefinition[] | OverrideTypeDefinition): Promise<Activity> {\n    return this._manager.initiate(this._name, context, callback, configuration);\n  }\n\n  public _updateCore(other: ActivityType) {\n    super._updateCore(other);\n    ifNotUndefined(other._description, (x) => this._description = x);\n    ifNotUndefined(other._ownerWindow, (x) => this._ownerWindow = x);\n    ifNotUndefined(other._helperWindows, (x) => this._helperWindows = x);\n  }\n}\n","import ActivityEntity from \"./activityEntity\";\nimport ActivityWindow from \"./activityWindow\";\nimport { WindowDefinition } from \"./windowDefinition\";\nimport Activity from \"./activity\";\nimport { Glue42 } from \"../../../glue\";\n\n/**\n * A window type is a definition of a window, typically configured in ACS.\n *\n * @module windowType\n */\nexport default class WindowType extends ActivityEntity {\n\n  public _name: string;\n  public _appByWindowTypeGetter: (name: string) => void;\n\n  constructor(name: string, appByWindowTypeGetter: (wt: string) => Glue42.AppManager.Application) {\n    super(name);\n    this._name = name;\n    this._appByWindowTypeGetter = appByWindowTypeGetter;\n  }\n\n  /**\n   * Name of the window type\n   * @var {string} name\n   */\n  public get name(): string {\n    return this._name;\n  }\n\n  /**\n   * Returns the ACS configuration related to this window type (as application object from AppManager API)\n   * @returns {any}\n   */\n  public get config(): any {\n    return this._appByWindowTypeGetter(this._name);\n  }\n\n  /**\n   * @var {activityWindow[]} windows All windows from that type\n   */\n  public get windows(): ActivityWindow[] {\n    return this._manager.getWindows({ type: this._name });\n  }\n\n  public create(activity: Activity, configuration: any): Promise<ActivityWindow> {\n    const definition: WindowDefinition = (Object as any).assign({ type: this.name, name: this.name, isIndependent: false }, configuration);\n    return this._manager.createWindow(activity, definition);\n  }\n}\n","import { ActivityStatus } from \"./activityStatus\";\n\nexport class EntityEvent<T> {\n    public entity: T;\n    public context: EntityEventContext;\n\n    constructor(entitiy: T, context: EntityEventContext) {\n        this.entity = entitiy;\n        this.context = context;\n    }\n}\n\nexport class EntityEventContext {\n    public type: string;\n\n    constructor(eventType: string) {\n        this.type = eventType;\n    }\n}\n\nexport class ActivityStatusChangeEventContext extends EntityEventContext {\n    public oldStatus: ActivityStatus;\n    public newStatus: ActivityStatus;\n\n    constructor(newStatus: ActivityStatus, oldStatus: ActivityStatus) {\n        super(EntityEventType.StatusChange);\n        this.newStatus = newStatus;\n        this.oldStatus = oldStatus;\n    }\n}\n\nexport class ActivityContextChangedEventContext extends EntityEventContext {\n    public context: object;\n    public updated: object;\n    public removed: string[];\n\n    constructor(context: string | object, updated: object, removed: string[]) {\n        super(EntityEventType.ActivityContextChange);\n        this.context = typeof context === \"string\" ? JSON.parse(context) : context;\n        this.updated = updated;\n        this.removed = removed;\n    }\n}\n\nexport class EntityEventType {\n    public static Added: string = \"added\";\n    public static Removed: string = \"removed\";\n    public static Updated: string = \"updated\";\n    public static Closed: string = \"closed\";\n    public static StatusChange: string = \"statusChange\";\n    public static ActivityContextChange: string = \"activityContextUpdate\";\n    public static ActivityWindowEvent: string = \"activityWindowEvent\";\n    // #deleteme TODO: these are not implemented in HC\n    public static ActivityWindowJoinedActivity: string = \"joined\";\n    public static ActivityWindowLeftActivity: string = \"left\";\n}\n\nexport class ActivityState {\n    public static Created: string = \"created\";\n    public static Started: string = \"started\";\n    public static Destroyed: string = \"destroyed\";\n}\n","import Activity from \"../entities/activity\";\nimport ActivityWindow from \"../entities/activityWindow\";\nimport * as util from \"../helpers/util\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { promisify } from \"../helpers/util\";\n\n// A helper class that provides lame activity AGM implementation\n// Can be initialized with or without activity - in case no activity (independent windows outside activity) only\n// subset of the methods work\nexport class ActivityAGM {\n    public static AGM: Glue42Core.AGM.API;\n\n    private _activity: Activity;\n\n    constructor(activity: Activity) {\n        this._activity = activity;\n    }\n\n    public register(definition: string | Glue42Core.AGM.MethodDefinition, handler: (args: object, caller: Glue42Core.AGM.Instance) => object) {\n        this._ensureHasAgm();\n        ActivityAGM.AGM.register(definition, handler);\n    }\n\n    public servers(): Glue42Core.AGM.Instance[] {\n        this._ensureHasAgm();\n\n        if (util.isUndefinedOrNull(this._activity)) {\n            // or return ActivityAGM.AGM.servers()\n            return [];\n        }\n\n        return this._activity.windows.map(\n            (w: ActivityWindow) => {\n                return w.instance;\n            });\n    }\n\n    public methods(): Glue42Core.AGM.MethodDefinition[] {\n        this._ensureHasAgm();\n\n        if (util.isUndefinedOrNull(this._activity)) {\n            // or return ActivityAGM.AGM.methods()\n            return [];\n        }\n\n        const windows = this._activity.windows;\n        const methodNames: string[] = [];\n        const methods: Glue42Core.AGM.MethodDefinition[] = [];\n\n        // get all windows and their methods, then assemble distinct methods\n        windows.forEach((window) => {\n            const windowMethods = this.methodsForWindow(window);\n            windowMethods.forEach((currentWindowMethod) => {\n                if (methodNames.indexOf(currentWindowMethod.name) === -1) {\n                    methodNames.push(currentWindowMethod.name);\n                    methods.push(currentWindowMethod);\n                }\n            });\n        });\n\n        return methods;\n    }\n\n    public methodsForWindow(window: ActivityWindow): Glue42Core.AGM.MethodDefinition[] {\n        this._ensureHasAgm();\n        // get instance and use agm to get methods for instance\n        if (!window.instance) {\n            return [];\n        }\n\n        return ActivityAGM.AGM.methodsForInstance(window.instance);\n    }\n\n    /** Possible invoke targets\n     *\n     * \"activity.all\" - [default]\n     * \"activity.best\"\n     * ActivityWindow\n     * [ActivityWindow] -\n     *\n     * classic AGM\n     * \"all\" - agm all\n     * \"best\" - agm best\n     * instance - agm\n     * [ instances ]\n     *\n     */\n    public invoke(\n        methodName: string,\n        arg: object,\n        target: string | Glue42Core.AGM.Instance | ActivityWindow | Glue42Core.AGM.Instance[] | ActivityWindow[],\n        options?: Glue42Core.AGM.InvokeOptions,\n        success?: () => void,\n        error?: () => void): Promise<object> {\n\n        this._ensureHasAgm();\n        const activityServers = this.servers();\n        let serversToInvokeAgainst: Glue42Core.AGM.Instance[] = [];\n\n        if (util.isUndefinedOrNull(target)) {\n            target = \"activity.all\";\n        }\n\n        if (util.isString(target)) {\n            if (target === \"activity.all\") {\n                serversToInvokeAgainst = activityServers;\n            } else if (target === \"activity.best\") {\n                const potentialTargets = activityServers.filter((server) => {\n                    const methods = ActivityAGM.AGM.methodsForInstance(server);\n                    return methods.filter((m) => {\n                        return m.name === methodName;\n                    }).length > 0;\n                });\n                if (potentialTargets.length > 0) {\n                    serversToInvokeAgainst = [potentialTargets[0]];\n                }\n            } else if (target === \"all\" || target === \"best\") {\n                return promisify(ActivityAGM.AGM.invoke(methodName, arg, target, options), success, error);\n            } else {\n                throw new Error(\"Invalid invoke target \" + target);\n            }\n        } else if (util.isArray(target)) {\n            // if the array is not empty\n            if ((target as any).length >= 0) {\n                const firstElem = (target as any)[0];\n                // check argument type\n                if (this._isInstance(firstElem)) {\n                    serversToInvokeAgainst = (target as Glue42Core.AGM.Instance[]).map((instance: Glue42Core.AGM.Instance) => instance);\n                } else if (this._isActivityWindow(firstElem)) {\n                    serversToInvokeAgainst = (target as ActivityWindow[]).map((win: ActivityWindow) => win.instance);\n                } else {\n                    throw new Error(\"Unknown target object\");\n                }\n            }\n        } else {\n            if (this._isInstance(target)) {\n                serversToInvokeAgainst = [target as Glue42Core.AGM.Instance];\n            } else if (this._isActivityWindow(target)) {\n                serversToInvokeAgainst = [(target as ActivityWindow).instance];\n            } else {\n                throw new Error(\"Unknown target object\");\n            }\n        }\n\n        throw new Error(\"Not implemented\");\n        // return promisify(ActivityAGM.AGM.invoke(methodName, arg, serversToInvokeAgainst, options), success, error);\n    }\n\n    public unregister(definition: string | Glue42Core.AGM.MethodDefinition) {\n        this._ensureHasAgm();\n        return ActivityAGM.AGM.unregister(definition);\n    }\n\n    public createStream(methodDefinition: string | Glue42Core.AGM.MethodDefinition,\n                        subscriptionAddedHandler: (request: Glue42Core.AGM.StreamSubscription) => void,\n                        subscriptionRemovedHandler: (request: Glue42Core.AGM.StreamSubscription) => void) {\n        this._ensureHasAgm();\n\n        ActivityAGM.AGM.createStream(methodDefinition, {\n            subscriptionAddedHandler,\n            subscriptionRemovedHandler,\n            subscriptionRequestHandler: undefined\n        });\n    }\n\n    public subscribe(methodDefinition: string | Glue42Core.AGM.MethodDefinition, parameters: object, target: string | Glue42Core.AGM.Instance | Glue42Core.AGM.Instance[]): Promise<Glue42Core.AGM.Subscription> {\n        this._ensureHasAgm();\n        // #deleteme TODO: check servers needed?\n        // const servers = this.servers();\n\n        return ActivityAGM.AGM.subscribe(methodDefinition, parameters);\n    }\n\n    public _ensureHasAgm() {\n        if (util.isUndefinedOrNull(ActivityAGM.AGM)) {\n            throw new Error(\"Agm should be configured to be used in activity\");\n        }\n    }\n\n    public _isInstance(obj: any) {\n        // lame check\n        return obj.application !== undefined;\n    }\n\n    public _isActivityWindow(obj: any) {\n        return obj.instance !== undefined;\n    }\n}\n","import { ActivityDescriptor } from \"./activityDescriptor\";\nimport ActivityManager from \"../core/activityManager\";\nimport Activity from \"./activity\";\n\nexport class AttachedActivityDescriptor implements ActivityDescriptor {\n  private _manager: ActivityManager;\n  private _state: ActivityDescriptor;\n  private _ownerActivityId: string;\n\n  constructor(\n    manager: ActivityManager,\n    ownerActivityId: string,\n    state: ActivityDescriptor) {\n    this._manager = manager;\n    this._ownerActivityId = ownerActivityId;\n    this._state = state;\n  }\n\n  public get ownerId() {\n    return this._state.ownerId;\n  }\n\n  public get windowIds() {\n    return this._state.windowIds;\n  }\n\n  public get frameColor() {\n    return this._state.frameColor;\n  }\n\n  public get context() {\n    return this._state.context;\n  }\n\n  public get tag() {\n    return this._state.tag;\n  }\n\n  public detach(descriptor?: ActivityDescriptor): Promise<Activity> {\n\n    descriptor = descriptor || {};\n\n    const merged: ActivityDescriptor = {};\n\n    Object.keys(this._state).forEach((prop) => {\n      merged[prop] = this._state[prop];\n    });\n\n    merged.context = descriptor.context || merged.context;\n    merged.frameColor = descriptor.frameColor || merged.frameColor;\n\n    return this._manager.detachActivities(this._ownerActivityId, merged);\n  }\n}\n","import * as util from \"../helpers/util\";\n\nconst nextTick = (cb: () => void) => {\n  setTimeout(cb, 0);\n};\n\n/**\n * Convert a Promise to node style callback\n * @private\n */\nexport function nodeify<T>(promise: Promise<T>, callback: any): Promise<T> {\n  if (!util.isFunction(callback)) {\n    return promise;\n  }\n\n  promise.then(\n    (resp) => {\n      nextTick( () => { // not sure if this is needed, promises should be already executed on the event pool\n        callback(null, resp);\n      });\n    },\n    (err) => {\n      nextTick(() => {\n        callback(err, null);\n      });\n    });\n}\n","import * as contracts from \"../contracts/contracts\";\nimport ActivityType from \"./activityType\";\nimport ActivityWindow from \"./activityWindow\";\nimport { ActivityStatus } from \"../contracts/activityStatus\";\nimport ActivityEntity from \"./activityEntity\";\nimport { WindowDefinition } from \"./windowDefinition\";\nimport { ActivityAGM } from \"../core/activityAGM\";\nimport { CloneOptions } from \"./cloneOptions\";\nimport { AttachedActivityDescriptor } from \"./attachedActivityDescriptor\";\nimport { nodeify } from \"../helpers/promiseExtensions\";\nimport { ifNotUndefined } from \"../helpers/util\";\n\n/**\n * Activity is an instance of an activity type just like an object is an instance of a class\n * in class-based languages (and just like ‘John’ is an instance of a 'Person’).\n *\n * Activity is often used as a synonym for activity instance.\n *\n * Each activity instance has a single owner window and can optionally have one or more helper windows.\n *\n * @module activity\n */\nexport default class Activity extends ActivityEntity {\n\n  public _id: string;\n  public _actType: string;\n  public _status: ActivityStatus;\n  public _context: object;\n  public _ownerId: string;\n  public _agm: ActivityAGM;\n  public _attached: any;\n\n  constructor(\n    id: string,\n    actType: string,\n    status: ActivityStatus,\n    context: object,\n    ownerId: string) {\n    super(id);\n    this._id = id;\n    this._actType = actType;\n    this._status = status;\n    this._context = context;\n    this._ownerId = ownerId;\n    this._agm = new ActivityAGM(this);\n  }\n\n  /**\n   * Activity type\n   * @var {module:activityType} type\n   */\n  public get type(): ActivityType {\n    if (this._manager) {\n      return this._manager.getActivityType(this._actType);\n    }\n    return undefined;\n  }\n\n  /**\n   * Get current activity context. To update use updateContext , to replace setContext\n   * @var {object} context\n   */\n  public get context(): object {\n    return this._context;\n  }\n\n  /**\n   * Get activity status\n   * @var {activityStatus} status\n   */\n  public get status(): ActivityStatus {\n    return this._status;\n  }\n\n  /**\n   * The owner window\n   * @var {module:activityWindow} owner\n   */\n  public get owner(): ActivityWindow {\n    if (!this._ownerId) {\n      return null;\n    }\n    return this._manager.getWindows({ id: this._ownerId })[0];\n  }\n\n  /**\n   * All windows participating in the activity\n   * @var {module:activityWindow[]} windows\n   */\n  public get windows(): ActivityWindow[] {\n    return this._manager.getWindows({ activityId: this._id });\n  }\n\n  /**\n   * @var {module:activityAGM} agm\n   */\n  public get agm(): ActivityAGM {\n    return this._agm;\n  }\n\n  /**\n   * Joins a specific window to the activity\n   *\n   * @private\n   * @function join\n   * @param window    The window to join\n   * @param callback  (Optional) Result callback\n   * @returns         Promise for ActivityWindow\n   */\n  public addWindow(window: ActivityWindow, callback?: contracts.Callback<ActivityWindow>): Promise<ActivityWindow> {\n    return this._manager.addWindowToActivity(this, window, callback);\n  }\n\n  /**\n   * Creates a new window and joins it to the activity\n   *\n   * @function createWindow\n   * @param {string|windowDefinition} windowType The type of the window to be created\n   * @param callback\n   * @returns {Promise<module:activityWindow>}\n   */\n  public createWindow(windowType: string | WindowDefinition, callback?: contracts.Callback<ActivityWindow>): Promise<ActivityWindow> {\n    return this._manager.createWindow(this, windowType, callback);\n  }\n\n  /**\n   * Creates a stacked set of windows and joins them to the\n   *\n   * @function createStackedWindows\n   * @param {string[] | windowDefinition[]} windowTypes The types of the windows to be created\n   * @param {number} timeout\n   * @param callback\n   * @returns {Promise<module:activityWindow[]>}\n   */\n  public createStackedWindows(windowTypes: Array<string | WindowDefinition>, timeout?: number, callback?: contracts.Callback<ActivityWindow[]>): Promise<ActivityWindow[]> {\n    return this._manager.createStackedWindows(this, windowTypes, timeout, callback);\n  }\n\n  /**\n   * Removes a window from the activity\n   *\n   * @private\n   * @param window\n   * @param callback\n   * @returns     Promise for ActivityWindow\n   */\n  public leave(window: ActivityWindow, callback?: contracts.Callback<ActivityWindow>): Promise<ActivityWindow> {\n    return this._manager.leaveWindowFromActivity(this, window, callback);\n  }\n\n  /**\n   * Get all windows participating in the activity from a given type\n   *\n   * @param {string} windowType\n   * @returns {module:activityWindow[]}\n   */\n  public getWindowsByType(windowType: string): ActivityWindow[] {\n    const filter = { activityId: this._id, type: windowType };\n    return this._manager.getWindows(filter);\n  }\n\n  /**\n   * Replaces the activity context with a new one.\n   *\n   * @function setContext\n   * @param {object} context   The new context\n   * @param callback\n   * @returns {Promise<Object>}\n   */\n  public setContext(context: object, callback?: contracts.Callback<Activity>): Promise<object> {\n    return this._manager.setActivityContext(this, context, callback);\n  }\n\n  /**\n   * Updates activity context using the properties from the context argument.\n   * If old context is {a:1, b:2, c:3} and invoking updateContext({b:3, c:null}) will result a context\n   * be {a:1, b:3}\n   *\n   * @function updateContext\n   * @param {object} context\n   * @param callback\n   * @return {Promise<object>}\n   */\n  public updateContext(context: object, callback?: contracts.Callback<Activity>): Promise<object> {\n    return this._manager.updateActivityContext(this, context, callback);\n  }\n\n  /**\n   * Subscribe for status change events\n   *\n   * @function onStatusChange\n   *\n   * @param {activityStatusChangeHandler} handler Handler function that will receive status notifications\n   */\n  public onStatusChange(handler: (activity: Activity, newStatus: ActivityStatus, oldStatus: ActivityStatus) => void): () => void {\n    return this._manager.subscribeActivityEvents((a, ns, os) => {\n      if (a.id === this.id) {\n        handler(a, ns, os);\n      }\n    });\n  }\n\n  /**\n   * Subscribe for window related events, like joined, removed from activity\n   *\n   * @function onWindowEvent\n   * @param {windowEventHandler} handler Handler function that will receive windows events\n   */\n  public onWindowEvent(handler: contracts.ActivityWindowEventHandler): () => void {\n    return this._manager.subscribeWindowEvents((a, w, e) => {\n      if (a.id === this.id) {\n        handler(a, w, e);\n      }\n    });\n  }\n\n  /**\n   * Subscribe for context updates\n   *\n   * @function onContextChanged\n   * @param {contextChangedHandler} handler Handler function that will receive context related events\n   */\n  public onContextChanged(handler: contracts.ContextUpdateHandler) {\n    this._manager.subscribeActivityContextChanged((act, context, updated, removed) => {\n      if (act.id === this.id) {\n        handler(context, updated, removed, act);\n      }\n    });\n\n    try {\n      // replay the context at the time of subscribing, swallow user exceptions\n      handler(this.context, this.context, [], this);\n    } catch (e) {\n      return;\n    }\n  }\n\n  /**\n   * Stops the activity\n   * @function stop\n   */\n  public stop() {\n    this._manager.stopActivity(this);\n  }\n\n  /**\n   * Clones the activity into a new one\n   * @function clone\n   * @param {CloneOptions} options\n   */\n  public clone(options: CloneOptions) {\n    return this._manager.clone(this, options);\n  }\n\n  public attach(activity: Activity | string, tag?: object): Promise<AttachedActivityDescriptor> {\n    let activityId;\n    if (typeof activity === \"string\") {\n      activityId = activity;\n    } else {\n      activityId = activity.id;\n    }\n    return this._manager.attachActivities(activityId, this.id, tag);\n  }\n\n  public onActivityAttached(callback: (descriptor: AttachedActivityDescriptor) => void) {\n    this._manager.subscribeActivitiesAttached((newActId: string, oldActId: string, descriptor: AttachedActivityDescriptor) => {\n      if (newActId !== this._id) {\n        return;\n      }\n\n      callback(descriptor);\n    });\n  }\n\n  public onDetached(callback: (newAct: Activity, state: any) => void) {\n    this._manager.subscribeActivitiesDetached((newAct: Activity, originalActivity: Activity, state: any) => {\n      if (originalActivity.id !== this._id) {\n        return;\n      }\n\n      callback(newAct, state);\n    });\n  }\n\n  public _updateCore(other: Activity) {\n    super._updateCore(other);\n    ifNotUndefined(other._actType, (x) => this._actType = x);\n    ifNotUndefined(other._context, (x) => this._context = x);\n    ifNotUndefined(other._ownerId, (x) => this._ownerId = x);\n    if (other._status && (!this._status || (this._status.state !== other._status.state))) {\n      this._status = other._status;\n    }\n  }\n\n  public _updateDescriptors(allStates: any) {\n    this._attached = allStates.map((s: any) => {\n      return new AttachedActivityDescriptor(this._manager, this._id, s);\n    });\n  }\n\n  public get attached(): AttachedActivityDescriptor[] {\n    return this._attached;\n  }\n\n  public setFrameColor(color: string, callback: () => void): Promise<Activity> {\n    const promise = new Promise<Activity>((resolve, reject) => {\n\n      let callbacksToWait = this.windows.length;\n      if (callbacksToWait === 0) {\n        resolve(this);\n      }\n\n      this.windows.forEach((w) => {\n        w.underlyingWindow.setFrameColor(color, () => {\n          callbacksToWait--;\n          if (callbacksToWait <= 0) {\n            resolve(this);\n          }\n        });\n      });\n\n      setTimeout(() => {\n\n        if (callbacksToWait > 0) {\n          reject(this.id + \" - timed out waiting for setFrameColor with\" + color);\n        }\n\n      }, 5000);\n\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  public getFrameColor(): string {\n\n    if (!this.windows || this.windows.length === 0) {\n      return \"\";\n    }\n\n    return this.windows[0].underlyingWindow.frameColor;\n  }\n}\n","/* tslint:disable */\n\nimport * as util from \"./util\";\nimport {Glue42Core} from \"@glue42/core\";\n\nexport class LogLevel {\n  public static Trace: string = \"trace\";\n  public static Debug: string = \"debug\";\n  public static Info: string = \"info\";\n  public static Warn: string = \"warn\";\n  public static Error: string = \"error\";\n}\n\nexport class Logger {\n\n  public static Level: string = LogLevel.Info;\n  public static GlueLogger: Glue42Core.Logger.API;\n\n  private _glueLogger: Glue42Core.Logger.API;\n\n  public static GetNamed(name: string): Logger {\n    return new Logger(name);\n  }\n\n  public static Get(owner: Object): Logger {\n    return new Logger(Logger.GetTypeName(owner));\n  }\n\n  public _name: string;\n\n  constructor(name: string) {\n    this._name = name;\n    // we have a glue logger let's create a new logger for it\n    if (!util.isUndefinedOrNull(Logger.GlueLogger)) {\n      this._glueLogger = Logger.GlueLogger.subLogger(name);\n    }\n  }\n\n  public trace(message: string) {\n    if (!util.isUndefinedOrNull(this._glueLogger)) {\n      this._glueLogger.trace(message);\n    } else {\n      if (Logger.Level === LogLevel.Trace) {\n        console.info(this._getMessage(message, LogLevel.Trace));\n      }\n    }\n  }\n\n  public debug(message: string) {\n    if (!util.isUndefinedOrNull(this._glueLogger)) {\n      this._glueLogger.debug(message);\n    } else {\n      if (Logger.Level === LogLevel.Debug ||\n        Logger.Level === LogLevel.Trace) {\n        console.info(this._getMessage(message, LogLevel.Debug));\n      }\n    }\n  }\n\n  public info(message: string) {\n    if (!util.isUndefinedOrNull(this._glueLogger)) {\n      this._glueLogger.info(message);\n    } else {\n      if (Logger.Level === LogLevel.Debug ||\n        Logger.Level === LogLevel.Trace ||\n        Logger.Level === LogLevel.Info) {\n        console.info(this._getMessage(message, LogLevel.Info));\n      }\n    }\n  }\n\n  public warn(message: string) {\n    if (!util.isUndefinedOrNull(this._glueLogger)) {\n      this._glueLogger.warn(message);\n    } else {\n      if (Logger.Level === LogLevel.Debug ||\n        Logger.Level === LogLevel.Trace ||\n        Logger.Level === LogLevel.Info ||\n        Logger.Level === LogLevel.Warn) {\n        console.info(this._getMessage(message, LogLevel.Info));\n      }\n    }\n  }\n\n  public error(message: string) {\n    if (!util.isUndefinedOrNull(this._glueLogger)) {\n      this._glueLogger.error(message);\n    } else {\n      console.error(this._getMessage(message, LogLevel.Error));\n      console.trace();\n    }\n  }\n\n  public _getMessage(message: string, level: string): string {\n    return \"[\" + level + \"] \" + this._name + \" - \" + message;\n  }\n\n  /**\n   * Returns the function name for a given object (same as constructor.name but cross-browser)\n   */\n  public static GetTypeName(object: object): string {\n    const funcNameRegex = /function (.{1,})\\(/;\n    const results = (funcNameRegex).exec(object.constructor.toString());\n    return (results && results.length > 1) ? results[1] : \"\";\n  }\n}\n","import * as contracts from \"../contracts/contracts\";\nimport { WindowBounds } from \"../contracts/windowBounds\";\n\nimport WindowType from \"./windowType\";\nimport ActivityEntity from \"./activityEntity\";\nimport Activity from \"./activity\";\n\nimport { Logger } from \"../helpers/logger\";\nimport * as util from \"../helpers/util\";\nimport { ifNotUndefined } from \"../helpers/util\";\nimport { EntityEventType } from \"../contracts/entityEvent\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../../glue\";\n\n/**\n * A window participating in an activity\n *\n * @module activityWindow\n */\nexport default class ActivityWindow extends ActivityEntity {\n\n    private _logger: Logger = Logger.Get(\"window\");\n\n    private _type: string;\n    private _activityId: string;\n    private _name: string;\n    private _instance: Glue42Core.AGM.Instance;\n    private _isIndependent: boolean;\n    private _windowGetter: () => Glue42.Windows.GDWindow;\n    private _hcWindowId: string;\n\n    constructor(id: string, name: string, type: string, activityId: string, instance: Glue42Core.AGM.Instance, isIndependent: boolean, windowGetter: any,\n                hcWindowId: string) {\n        super(id);\n        this._type = type;\n        this._activityId = activityId;\n        this._name = name;\n        this._instance = instance;\n        this._isIndependent = isIndependent;\n        this._windowGetter = windowGetter;\n        this._hcWindowId = hcWindowId;\n    }\n\n    /**\n     * Return window's title\n     * @function getBounds\n     * @return {Promise<WindowBounds>}\n     */\n    public getBounds(): Promise<WindowBounds> {\n        return this._manager.getWindowBounds(this.id);\n    }\n\n    /**\n     * @var {string} name The window name\n     */\n    public get name(): string {\n        return this._name;\n    }\n\n    /**\n     * @var {bool} isIndependent True if this is an independent window\n     */\n    public get isIndependent(): boolean {\n        return this._isIndependent;\n    }\n\n    /**\n     * @var {module:windowType} type The window type\n     */\n    public get type(): WindowType {\n        if (this._manager) {\n            return this._manager.getWindowType(this._type);\n        }\n        return undefined;\n    }\n\n    /**\n     * @var {module:activity} activity The activity that the window is part of\n     */\n    public get activity(): Activity {\n        if (util.isUndefined(this._activityId)) {\n            return undefined;\n        }\n        return this._manager.getActivityById(this._activityId);\n    }\n\n    /**\n     * @var {bool} isOwner True if the window is the owner of the activity.\n     */\n    public get isOwner(): boolean {\n        const act = this.activity;\n        if (util.isUndefined(act)) {\n            return false;\n        }\n\n        return act.owner.id === this.id;\n    }\n\n    /**\n     * Sets window's visibility\n     *\n     * @function setVisible\n     * @param {boolean} isVisible\n     * @returns {Promise<module:activityWindow>}\n     */\n    public setVisible(isVisible: boolean, callback?: contracts.Callback<ActivityWindow>): Promise<ActivityWindow> {\n        return this._manager.setWindowVisibility(this.id, isVisible);\n    }\n\n    /**\n     * Activate window\n     * @function activate\n     * @param {boolean} focus If true then activate window with focus otherwise activate window without focus\n     */\n    public activate(focus: boolean): Promise<ActivityWindow> {\n        return this._manager.activateWindow(this.id, focus);\n    }\n\n    /**\n     * Sets window's bounds\n     * @function setBounds\n     *\n     * @param {bounds} bounds The new bounds to be applied\n     * @returns  {Promise<module:activityWindow>}\n     */\n    public setBounds(bounds: WindowBounds, callback?: contracts.Callback<ActivityWindow>): Promise<ActivityWindow> {\n        return this._manager.setWindowBounds(this.id, bounds, callback);\n    }\n\n    /**\n     * Closes the window\n     *\n     * @function close\n     * @returns {Promise}\n     */\n    public close(): Promise<any> {\n        return this._manager.closeWindow(this.id);\n    }\n\n    /**\n     * @var {agmInstance} instance The agm instance of that window. You can use this to invoke AGM methods against that window\n     */\n    public get instance(): Glue42Core.AGM.Instance {\n        return this._instance;\n    }\n\n    /**\n     * Returns the window as object from Windows API (glue.windows).\n     *\n     * @var {window} underlyingWindow\n     */\n    public get underlyingWindow(): any {\n        const window = this._windowGetter();\n        if (!window) {\n            // we don't have the window object any more, let's return as much as we can\n            return {\n                id: this._hcWindowId\n            };\n        }\n        return window;\n    }\n\n    public onActivityJoined(callback: (activity: Activity) => void) {\n        this._subscribeForActivityWindowEvent(EntityEventType.ActivityWindowJoinedActivity, callback);\n    }\n\n    public onActivityRemoved(callback: (activity: Activity) => void) {\n        this._subscribeForActivityWindowEvent(EntityEventType.ActivityWindowLeftActivity, callback);\n    }\n\n    public _updateCore(other: ActivityWindow) {\n        ifNotUndefined(other._activityId, (x) => this._activityId = x);\n        ifNotUndefined(other._isIndependent, (x) => this._isIndependent = x);\n        ifNotUndefined(other._hcWindowId, (x) => this._hcWindowId = x);\n        ifNotUndefined(other._type, (x) => this._type = x);\n        ifNotUndefined(other._name, (x) => this._name = x);\n\n        if (!util.isUndefinedOrNull(other._instance)) {\n            this._instance = other._instance;\n        }\n    }\n\n    public _subscribeForActivityWindowEvent(eventName: string, callback: (activity: Activity) => void) {\n        this._manager.subscribeWindowEvents((activity, window, event) => {\n            // ignore events not related to this window\n            if (window.id !== this.id) {\n                return;\n            }\n\n            if (event === eventName) {\n                callback(activity);\n            }\n        });\n    }\n\n    public _beforeDelete(other: ActivityWindow) {\n        this._hcWindowId = other._hcWindowId;\n    }\n}\n","/**\n * @typedef {Object} activityStatus Defines activity instance status\n * @property {string} state Current state\n * @property {string} message Message\n * @property {Date} time Time of the last status update\n */\nexport class ActivityStatus {\n  public state: string;\n  public message: string;\n  public time: Date;\n\n  constructor(state: string, message: string, time: Date) {\n    this.state = state;\n    this.message = message;\n    this.time = time;\n  }\n\n  public getState(): string {\n    return this.state;\n  }\n\n  public getMessage(): string {\n    return this.message;\n  }\n\n  public getTime(): Date {\n    return this.time;\n  }\n}\n","import { AnnouncementInfo } from \"../contracts/announcementInfo\";\n\nimport { ActivityBridge } from \"./activityBridge\";\nimport ActivityType from \"../entities/activityType\";\nimport WindowType from \"../entities/windowType\";\nimport { EventHandlerCallback } from \"../contracts/contracts\";\nimport { WindowDefinition } from \"../entities/windowDefinition\";\nimport {\n    ActivityContextChangedEventContext,\n    ActivityStatusChangeEventContext,\n    EntityEvent,\n    EntityEventContext,\n    EntityEventType,\n} from \"../contracts/entityEvent\";\nimport { WindowFactory } from \"../contracts/windowFactory\";\nimport Activity from \"../entities/activity\";\nimport ActivityWindow from \"../entities/activityWindow\";\nimport { WindowBounds } from \"../contracts/windowBounds\";\nimport {\n    ActivityGwMessage,\n    ActivityTypeGwMessage,\n    ActivityTypeGwMessageEntity,\n    GwMessage,\n    PeerCreatedGwMessage,\n    PeerFactoryGwMessage,\n    PeerFactoryGwMessageEntity,\n    PeerRequestedGwMessage,\n} from \"./gw3BridgeMessages\";\nimport { ActivityDescriptor } from \"../entities/activityDescriptor\";\nimport { CloneOptions } from \"../entities/cloneOptions\";\nimport { Glue42 } from \"../../../glue\";\n\nimport { ActivityStatus } from \"../contracts/activityStatus\";\nimport { ActivityConfig } from \"../activityConfig\";\nimport { Glue42Core } from \"@glue42/core\";\n\nimport { Glue42 as glue42 } from \"../../../glue\";\ntype OverrideTypeDefinition = glue42.Activities.OverrideTypeDefinition;\n\nconst gwMessageSuccess = \"success\";\nconst gwMmessageError = \"error\";\n\nconst gwMessageAddActivityTypes = \"add-types\";\nconst gwMmessageActivityTypesAdded = \"types-added\";\nconst gwMessageRemoveActivityTypes = \"remove-types\";\nconst gwMessageActivityTypesRemoved = \"types-removed\";\n\nconst gwMessageActivityCreated = \"created\";\nconst gwMessageActivityDestroyed = \"destroyed\";\nconst gwMessageActivityInitiated = \"initiated\";\nconst gwMmessageJoinActivity = \"join-activity\";\nconst gwMessageJoinedActivity = \"joined\";\nconst gwMessageActivityJoined = \"activity-joined\";\nconst gwMessageLeaveActivity = \"leave-activity\";\nconst gwMessageActivityLeft = \"left\";\nconst gwNmessageMergeActivities = \"merge\";\nconst gwMessageSplitActivities = \"split\";\nconst gwMessageChildrenChanged = \"children-changed\";\nconst gwMessageOwnerChanged = \"owner-changed\";\n\nconst gwMessageAddPeerFactories = \"add-peer-factories\";\nconst gwMessagePeerFactoriesAdded = \"peer-factories-added\";\nconst gwMessageRemovePeerFactories = \"remove-peer-factories\";\nconst gwMessagePeerFactoriesRemoved = \"peer-factories-removed\";\n\nconst gwMessageCreateActivity = \"create\";\nconst gwMessageCreatePeer = \"create-peer\";\nconst gwMessagePeerRequested = \"peer-requested\";\nconst gwMessageReady = \"ready\";\nconst gwMessagePeerCreated = \"peer-created\";\n\nconst gwMessageDestroyActivity = \"destroy\";\nconst gwMessageDisposePeer = \"dispose-peer\";\n\ndeclare let window: any;\ndeclare let process: any;\n\nexport default class GW3Bridge implements ActivityBridge {\n\n    private static activityTypeGwMessageEntityToActivityType(\n        entity: ActivityTypeGwMessageEntity,\n        description: string): ActivityType {\n\n        const nameToWindowType =\n            (windowName: any) =>\n                new WindowType(\n                    windowName,\n                    undefined);\n\n        return new ActivityType(\n            entity.name,\n            entity.owner_type && nameToWindowType(entity.owner_type),\n            entity.helper_types && entity.helper_types.map(nameToWindowType),\n            description);\n    }\n\n    private static peerFactoryGwMessageEntityToWindowType(entity: PeerFactoryGwMessageEntity): WindowType {\n        return new WindowType(\n            entity.peer_type,\n      /* #deleteme TODO: review - appmanager configuration? */(_) => undefined);\n    }\n\n    private static activityGwMessageToActivity(msg: ActivityGwMessage, status: ActivityStatus): Activity {\n        const ownerId = msg.owner !== undefined ? msg.owner.peer_id : msg.owner_id;\n        return new Activity(\n            msg.activity_id,\n            msg.activity_type,\n            status,\n            msg.context_snapshot,\n            ownerId);\n    }\n\n    private static activityToActivityStatusChangeEvent(act: Activity) {\n        return new EntityEvent<Activity>(act, new ActivityStatusChangeEventContext(act.status, undefined));\n    }\n\n    private _connection: any;\n    private _logger: any;\n    private _contexts: Glue42.Contexts.API;\n\n    private _gw3Session: Glue42Core.Connection.GW3DomainSession;\n\n    // callbacks\n\n    private _activityChangeCallbacks: Array<EventHandlerCallback<EntityEvent<Activity>>> = [];\n    private _activityTypeStatusChangeCallbacks: Array<EventHandlerCallback<EntityEvent<ActivityType>>> = [];\n    private _activityWindowChangeCallbacks: Array<EventHandlerCallback<EntityEvent<ActivityWindow>>> = [];\n    private _windowTypeStatusChangeCallbacks: Array<EventHandlerCallback<EntityEvent<WindowType>>> = [];\n\n    // state tracking\n    private _peerIdAndFactoryIdToPeerType: any = {};\n    private _peerFactoriesRegisteredByUs: { [index: string]: WindowFactory } = {};\n    private _gw3Subscriptions: any[] = [];\n    private _contextSubscriptions: any = {};\n    private _activityTypesInitiatedFromMe: any = {};\n\n    private _sessionJoinedPromise: Promise<GW3Bridge>;\n    private _sessionJoinedPromiseResolve: (bridge: GW3Bridge) => void;\n    private _activityJoinedPromise: Promise<object>;\n    private _activityJoinedPromiseResolve: (obj: object) => void;\n    private _config: ActivityConfig;\n\n    constructor(\n        connection: Glue42Core.Connection.GW3Connection,\n        logger: any,\n        contexts: Glue42.Contexts.API,\n        config: ActivityConfig) {\n        this._config = config;\n        this._connection = connection;\n        this._logger = logger;\n        this._contexts = contexts;\n\n        this._sessionJoinedPromise = new Promise<GW3Bridge>((resolve /*, reject */) => {\n            this._sessionJoinedPromiseResolve = resolve;\n        });\n\n        this._activityJoinedPromise = new Promise<object>((resolve /*, reject */) => {\n            this._activityJoinedPromiseResolve = resolve;\n        });\n\n        if (!this._config.activityId) {\n            this._activityJoinedPromiseResolve({});\n        }\n\n        this._gw3Session = connection.domain(\n            \"activity\",\n            logger.subLogger(\"session:com.tick42.activity\"),\n            [\"joined\", \"initiated\", \"peer-created\", \"token\"]);\n\n        if (typeof window !== \"undefined\") {\n            const glue42gd = (window as any).glue42gd;\n            // G4E-1343\n            if (glue42gd && typeof glue42gd.addRefreshHandler === \"function\") {\n                glue42gd.addRefreshHandler((success: any, error: any) => {\n                    this._gw3Session\n                        .send(\n                            {\n                                type: \"reload\"\n                            })\n                        .then(\n                            (msg: any) => {\n                                if (!msg.token) {\n                                    error(\"Expected gateway token for refreshing.\");\n                                    return;\n                                }\n                                try {\n                                    glue42gd.setGWToken(msg.token as string);\n                                } catch (e) {\n                                    error(e.message || e);\n                                    return;\n                                }\n                                success();\n                            },\n                            error);\n                });\n            }\n        }\n    }\n\n    public get bridgeType(): \"GW3\" {\n        return \"GW3\";\n    }\n\n    public init() {\n        // activity types\n        this.forwardActivityTypeMessagesToStatusEventHandlers();\n\n        // activities\n        this.subscribe<ActivityGwMessage>(\n            gwMessageActivityCreated,\n            this.handleActivityCreatedMessage);\n\n        this.subscribe<ActivityGwMessage>(\n            gwMessageActivityDestroyed,\n            this.handleActivityDestroyedMessage);\n\n        this.forwardActivityMessagesToStatusEventHandlers();\n\n        this.forwardActivityCreatedAndJoinedActivityToActivityWindowEventHandlers();\n\n        // window types / peer factories\n\n        // NB: this forward must happen before the handlePeerFactoriesRemoved subscription\n        // since the latter clears state which is used by peerFactoryIdAndOwnerIdToWindowType\n        this.forwardPeerFactoryMessagesToStatusEventHandlers();\n\n        this.forwardPeerFactoryMessagesToPeerFactoryRequests();\n\n        this.subscribe(\n            gwMessagePeerFactoriesAdded,\n            this.handlePeerFactoriesAdded);\n\n        this.subscribe(\n            gwMessagePeerFactoriesRemoved,\n            this.handlePeerFactoriesRemoved);\n\n        // activity windows\n\n        this.forwardActivityWindowMessagesToEventHandlers();\n        //\n\n        this.subscribe(\n            gwMessageDisposePeer,\n      /*(msg)*/() => {\n                if (this._config.disposeRequestHandling === \"dispose\") {\n                    this.dispose();\n                    return;\n                }\n                if (this._config.disposeRequestHandling === \"exit\") {\n                    if (typeof window !== \"undefined\" &&\n                        typeof (window as any).close === \"function\") {\n                        window.close();\n                        return;\n                    }\n                    if (typeof process !== \"undefined\" &&\n                        typeof (process as any).exit === \"function\") {\n                        process.exit();\n                        return;\n                    }\n                }\n            });\n\n        // start domain join handshake\n        this._gw3Session.onJoined(() => {\n\n            if (this._config.mode === \"trackMyOnly\" ||\n                this._config.mode === \"trackMyTypeAndInitiatedFromMe\") {\n                this._sessionJoinedPromiseResolve(this);\n            } else {\n                this._gw3Session\n                    .send(\n                        {\n                            type: \"subscribe\",\n                            activity_types:\n                                (this._config.mode === \"trackAll\" ? [] :\n                                    this._config.mode === \"trackTypes\" ? this._config.typesToTrack : [])\n                        })\n                    .then(() => {\n                        this._sessionJoinedPromiseResolve(this);\n                    });\n            }\n        });\n        this._gw3Session.join();\n    }\n\n    public dispose() {\n        this._gw3Subscriptions.forEach((sub) => sub && this._connection.off(sub));\n        this._gw3Subscriptions.length = 0;\n    }\n\n    // ActivityBridge interface\n\n    public ready(): Promise<object> {\n        return Promise.all([this._sessionJoinedPromise, this._activityJoinedPromise]);\n    }\n\n    public initReady(): Promise<ActivityBridge> {\n        return this._sessionJoinedPromise;\n    }\n\n    public onActivityTypeStatusChange(callback: EventHandlerCallback<EntityEvent<ActivityType>>) {\n        this._activityTypeStatusChangeCallbacks.push(callback);\n    }\n\n    public registerActivityType(\n        activityTypeName: string,\n        ownerWindow: WindowDefinition,\n        helperWindows?: WindowDefinition[],\n        config?: any,\n        description?: string): Promise<ActivityType> {\n\n        const entity: ActivityTypeGwMessageEntity = {};\n        entity.name = activityTypeName;\n        const toActivityPeerConfig = (windowDefinition: WindowDefinition) => ({ type: windowDefinition.type, name: windowDefinition.name, configuration: windowDefinition });\n\n        entity.owner_type = toActivityPeerConfig(ownerWindow);\n        entity.helper_types = helperWindows.map(toActivityPeerConfig);\n\n        return this._gw3Session\n            .send(\n                {\n                    type: gwMessageAddActivityTypes,\n                    types: [entity]\n                })\n            .then(() => {\n                const activityType = GW3Bridge.activityTypeGwMessageEntityToActivityType(entity, description);\n                this.invokeCallbacks(\n                    this._activityTypeStatusChangeCallbacks,\n                    new EntityEvent<ActivityType>(\n                        activityType,\n                        new EntityEventContext(EntityEventType.Added)),\n                    gwMessageAddActivityTypes);\n                return activityType;\n            });\n    }\n\n    public unregisterActivityType(activityTypeName: string): Promise<void> {\n        return this._gw3Session\n            .send(\n                {\n                    type: gwMessageRemoveActivityTypes,\n                    types: [activityTypeName]\n                })\n            .then(() => {\n                const activityType = new ActivityType(activityTypeName, undefined, undefined, undefined);\n                this.invokeCallbacks(\n                    this._activityTypeStatusChangeCallbacks,\n                    new EntityEvent<ActivityType>(\n                        activityType,\n                        new EntityEventContext(EntityEventType.Removed)),\n                    gwMessageAddActivityTypes);\n            });\n    }\n\n    public onWindowTypeStatusChange(callback: EventHandlerCallback<EntityEvent<WindowType>>): void {\n        this._windowTypeStatusChangeCallbacks.push(callback);\n    }\n\n    // NB: in GW3, peer factories have ids separate from the ids of the peers they create\n    // in this implementation we keep the two equal for simplicity\n    // NB: we assume only one peer will register a peer factory for a given type; otherwise the\n    // add/remove window types event logic will get messy\n    public registerWindowFactory(\n        windowType: string,\n        factory: WindowFactory,\n        parameters?: any): Promise<void> {\n        if (this._peerFactoriesRegisteredByUs[windowType]) {\n            return Promise.reject(new Error(`Factory for windowType ${windowType} already registered.`));\n        }\n\n        this._peerFactoriesRegisteredByUs[windowType] = factory;\n\n        // #deleteme TODO: review success/failure code paths\n        // #deleteme TODO: review - should we create the window type here?\n        const entity = {\n            id: windowType,\n            peer_type: windowType,\n            configuration: parameters\n        };\n        return this._gw3Session.send({\n            type: gwMessageAddPeerFactories,\n            factories: [entity]\n        })\n            .then(() => {\n                this.invokeCallbacks(\n                    this._windowTypeStatusChangeCallbacks,\n                    new EntityEvent(\n                        GW3Bridge.peerFactoryGwMessageEntityToWindowType(entity),\n                        new EntityEventContext(EntityEventType.Added)),\n                    gwMessageAddPeerFactories);\n            })\n            .catch(() => {\n                delete this._peerFactoriesRegisteredByUs[windowType];\n            });\n    }\n\n    public unregisterWindowFactory(windowType: string): Promise<void> {\n        const factory = this._peerFactoriesRegisteredByUs[windowType];\n        if (!factory) {\n            return Promise.reject(new Error(`Factory for windowType ${windowType} not registered.`));\n        }\n\n        delete this._peerFactoriesRegisteredByUs[windowType];\n\n        return this._gw3Session.send({\n            type: gwMessageRemovePeerFactories,\n            factory_ids: [windowType]\n        }).then(() => {\n            this.invokeCallbacks(\n                this._windowTypeStatusChangeCallbacks,\n                new EntityEvent(\n                    new WindowType(windowType, undefined),\n                    new EntityEventContext(EntityEventType.Removed)),\n                gwMessageAddPeerFactories);\n        });\n    }\n\n    public onActivityStatusChange(callback: EventHandlerCallback<EntityEvent<Activity>>) {\n        this._activityChangeCallbacks.push(callback);\n    }\n\n    public initiateActivity(activityType: string, context?: object, configuration?: WindowDefinition[] | OverrideTypeDefinition): Promise<string> {\n        const initiateMsg: any = {\n            type: gwMessageCreateActivity,\n            activity_type: activityType,\n            initial_context: context,\n        };\n\n        if (this.isOverrideTypeDefinition(configuration)) {\n            initiateMsg.types_override = {\n                owner_type: { type: configuration.owner.type, name: configuration.owner.name, configuration: configuration.owner },\n                helper_types: configuration.helpers && configuration.helpers.map((wd) => ({ type: wd.type, name: wd.name, configuration: wd }))\n            };\n        } else {\n            initiateMsg.configuration = configuration && configuration.map((wd) => ({ type: wd.type, name: wd.name, configuration: wd }));\n        }\n\n        return this.sendCreateAndMapResultingMessagesToPromise(\n            initiateMsg,\n            gwMessageActivityInitiated,\n            (msg, requestId) => msg.request_id === requestId,\n            gwMessageActivityCreated,\n            (msg, requestId, initMsg) => msg.activity_id === initMsg.activity_id,\n            gwMessageActivityDestroyed,\n            (msg, requestId, initMsg) => msg.activity_id === initMsg.activity_id,\n            (msg) => msg.activity_id).then((id) => {\n                if (this._config.mode === \"trackMyTypeAndInitiatedFromMe\") {\n                    if (!this._activityTypesInitiatedFromMe[activityType]) {\n                        this._activityTypesInitiatedFromMe[activityType] = true;\n\n                        return this._gw3Session\n                            .send(\n                                {\n                                    type: \"subscribe\",\n                                    activity_types: [activityType]\n                                })\n                            .then(() => {\n                                return id;\n                            });\n                    }\n                }\n                return id;\n            });\n    }\n\n    public stopActivity(activity: Activity): Promise<boolean> {\n        return this._gw3Session.send({\n            type: gwMessageDestroyActivity,\n            activity_id: activity.id,\n            reason_uri: \"com.tick42.glue.activity.constants.destroyReason.general\",\n            reason: \"Destroying activity\"\n        }).then((_) => true);\n    }\n\n    public updateActivityContext(activity: Activity, context: any, fullReplace: boolean, removedKeys?: string[]): Promise<void> {\n        if (fullReplace) {\n            // this will currently fail on GW3\n            return this._contexts.set(activity.id, context);\n        } else {\n            removedKeys = removedKeys || [];\n            for (const x of removedKeys) {\n                context[x] = null;\n            }\n            return this._contexts.update(activity.id, context);\n        }\n    }\n\n    public announceWindow(windowType?: string, activityWindowId?: string) {\n        // in the GW3 case we are only joined to an activity after we announce ourselves\n        // so all announcement calls should go in 'registerWindow', not here\n        // (registerWindow registers a window that's not part of an activity, at least yet)\n        throw new Error(\"Invalid operation 'announceWindow' for GW3 protocol\");\n    }\n\n    public registerWindow(type: string, name: string, independent: boolean): Promise<string> {\n\n        let shouldSendReady = this._connection.gatewayToken;\n        const peerId = this._connection.peerId;\n\n        // if running in GD3 (glue42gd is there) we should send ready only if we have the activityInfo object in glue\n        if (typeof window !== \"undefined\") {\n            const glue42gd = window.glue42gd;\n            if (glue42gd) {\n                shouldSendReady = glue42gd.activityInfo !== undefined;\n            }\n        }\n\n        if (shouldSendReady) {\n            this._gw3Session.send({\n                type: gwMessageReady,\n            });\n        }\n\n        this.invokeCallbacks(\n            this._activityWindowChangeCallbacks,\n            new EntityEvent<ActivityWindow>(\n                new ActivityWindow(peerId, name, type, undefined, this.getAgmInstance(peerId), independent, this.generateWindowGetter(peerId), undefined),\n                new EntityEventContext(EntityEventType.Added)),\n            \"register window\");\n\n        return Promise.resolve(peerId);\n    }\n\n    public onActivityWindowChange(callback: EventHandlerCallback<EntityEvent<ActivityWindow>>) {\n        this._activityWindowChangeCallbacks.push(callback);\n    }\n\n    public createWindow(activityId: string, windowDefinition: WindowDefinition): Promise<string> {\n\n        // if the user hasn't provided a layout option but has some of left,top,width,height\n        // insert a layout\n        if (!windowDefinition.layout) {\n            if (windowDefinition.left || windowDefinition.width || windowDefinition.height || windowDefinition.top) {\n                windowDefinition.layout = {\n                    mode: \"pixels\",\n                    cellSize: 1,\n                };\n            }\n        }\n\n        return this.sendCreateAndMapResultingMessagesToPromise(\n            {\n                type: gwMessageCreatePeer,\n                peer_type: windowDefinition.type,\n                peer_name: windowDefinition.name || windowDefinition.type,\n                configuration: windowDefinition,\n                activity_id: activityId,\n            },\n            undefined,\n            undefined,\n            gwMessagePeerCreated,\n            (msg, requestId) => msg.request_id === requestId,\n            undefined,\n            undefined,\n            (msg) => msg.created_id)\n            .then((id) => {\n                if (!activityId) {\n                    return;\n                }\n                return this.joinActivity(activityId, id, windowDefinition.name)\n                    .then(() => {\n                        return id;\n                    });\n            });\n    }\n\n    public closeWindow(id: string): Promise<void> {\n        return this._gw3Session.send({\n            destroy_peer_id: id\n        }).then((_) => undefined);\n    }\n\n    public getAnnouncementInfo(): AnnouncementInfo {\n        let activityId = this._config.activityId || (this._config.announcementInfo && this._config.announcementInfo.activityId);\n        let activityWindowType = (this._config.announcementInfo && this._config.announcementInfo.activityWindowType);\n        let activityWindowIndependent = (this._config.announcementInfo && this._config.announcementInfo.activityWindowIndependent);\n        let activityWindowName = (this._config.announcementInfo && this._config.announcementInfo.activityWindowName);\n\n        if (typeof window !== \"undefined\" &&\n            typeof window.location !== \"undefined\" &&\n            window.location.search &&\n            typeof URLSearchParams === \"function\") {\n            const searchParams = new URLSearchParams(location.search.slice(1));\n            activityWindowType = activityWindowType || searchParams.get(\"t42PeerType\");\n            activityWindowType = activityWindowType || searchParams.get(\"t42ActivityWindowType\");\n            if (typeof activityWindowIndependent === \"undefined\") {\n                activityWindowIndependent = searchParams.get(\"t42ActivityWindowIndependent\");\n            }\n            activityWindowName = activityWindowName || searchParams.get(\"t42ActivityWindowName\");\n            activityId = activityId || searchParams.get(\"t42ActivityId\");\n        }\n\n        activityWindowType = activityWindowType || \"unknown\";\n        activityWindowIndependent = activityWindowIndependent || false;\n        activityWindowName = activityWindowName || this._connection.peerId;\n\n        return {\n            activityWindowId: undefined, // not member of activity from the get go\n            activityId,\n            activityWindowType,\n            activityWindowIndependent,\n            activityWindowName,\n        };\n    }\n\n    public joinActivity(activityId: string, windowId: string, name?: string): Promise<void> {\n        const maybeName = (name && { name }) || {};\n        return this._gw3Session.send({\n            type: gwMmessageJoinActivity,\n            target_id: windowId,\n            activity_id: activityId,\n            ...maybeName\n        }).then(() => {\n            this.invokeCallbacks(\n                this._activityWindowChangeCallbacks,\n                new EntityEvent<ActivityWindow>(\n                    new ActivityWindow(windowId, undefined, undefined, activityId, this.getAgmInstance(windowId), undefined, this.generateWindowGetter(windowId), undefined),\n                    new EntityEventContext(EntityEventType.ActivityWindowJoinedActivity)),\n                \"activity joined - ActivityWindow\");\n\n            this.invokeCallbacks(\n                this._activityChangeCallbacks,\n                new EntityEvent<Activity>(\n                    new Activity(activityId, undefined, new ActivityStatus(\"created\", undefined, undefined), undefined, undefined),\n                    new EntityEventContext(EntityEventType.Updated)),\n                \"activity joined - Activity\");\n        });\n    }\n\n    public leaveActivity(activityId: string, windowId: string): Promise<void> {\n        return this._gw3Session.send({\n            type: gwMessageLeaveActivity,\n            target_id: windowId,\n            activity_id: activityId\n        }).then(() => {\n            this.invokeCallbacks(\n                this._activityWindowChangeCallbacks,\n                new EntityEvent<ActivityWindow>(\n                    new ActivityWindow(windowId, undefined, undefined, null, this.getAgmInstance(windowId), undefined, this.generateWindowGetter(windowId), undefined),\n                    new EntityEventContext(EntityEventType.ActivityWindowLeftActivity)),\n                \"activity left - ActivityWindow\");\n\n            this.invokeCallbacks(\n                this._activityChangeCallbacks,\n                new EntityEvent<Activity>(\n                    new Activity(activityId, undefined, new ActivityStatus(\"created\", undefined, undefined), undefined, undefined),\n                    new EntityEventContext(EntityEventType.Updated)),\n                \"activity left - Activity\");\n        });\n    }\n\n    // purposefully returning empty arrays\n    public getActivityTypes(): Promise<ActivityType[]> {\n        return Promise.resolve([]);\n    }\n\n    public getWindowTypes(): Promise<WindowType[]> {\n        return Promise.resolve([]);\n    }\n\n    public getActivities(): Promise<Activity[]> {\n        return Promise.resolve([]);\n    }\n\n    public getActivityWindows(): Promise<ActivityWindow[]> {\n        return Promise.resolve([]);\n    }\n\n    // N/A\n\n    // ignore for now\n\n    // POSTPONED\n    public createStackedWindows(id: string, windowDefinitions: WindowDefinition[], timeout: number): Promise<string[]> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public getWindowBounds(id: string): Promise<WindowBounds> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public setWindowBounds(id: string, bounds: WindowBounds): Promise<void> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public activateWindow(id: string, focus: boolean): Promise<void> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public setWindowVisibility(id: string, visible: boolean): Promise<void> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public cloneActivity(id: string, cloneOptions: CloneOptions): Promise<string> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public attachActivities(from: string, to: string, tag: object): Promise<any> {\n        return this._gw3Session.send({\n            type: gwNmessageMergeActivities,\n            into: to,\n            merge: from\n        });\n    }\n\n    // POSTPONED\n    public detachActivities(activityId: string, newActivityInfo: ActivityDescriptor): Promise<string> {\n        return this._gw3Session.send({\n            type: gwMessageSplitActivities,\n            from: activityId,\n            // split: from\n        }).then(() => \"\");\n    }\n\n    // POSTPONED\n    public onActivitiesAttached(callback: (info: any) => void) {\n        // POSTPONED\n    }\n\n    // POSTPONED\n    public onActivitiesDetached(callback: (info: any) => void) {\n        // POSTPONED\n    }\n\n    public onActivityAttachedDescriptorsRefreshed(callback: (info: any) => void): void {\n        // POSTPONED\n    }\n\n    // POSTPONED\n    public getAttachedDescriptors(): Promise<any[]> {\n        return Promise.resolve([]);\n    }\n\n    // helpers\n\n    // Protocol handling\n\n    private getRandomRequestId() {\n        return this._connection.peerId + \":\" + Math.floor(Math.random() * 1e9) + \"\";\n    }\n\n    private forwardAddedAndRemovedMessagesToEventHandler<TMessage, TEntity>(\n        addedMessageType: string,\n        removedMessageType: string,\n        mapper: (msg: TMessage, isAdded: boolean) => TEntity[],\n        handlers: Array<EventHandlerCallback<EntityEvent<TEntity>>>) {\n\n        const getGetEntityEvent = (isAdded: boolean) => (entity: any) => new EntityEvent<TEntity>(\n            entity,\n            new EntityEventContext(\n                isAdded ?\n                    EntityEventType.Added :\n                    EntityEventType.Removed));\n\n        let sub1;\n        let sub2;\n\n        sub1 = addedMessageType && this.forwardMessageToEventHandler<TMessage, TEntity>(\n            addedMessageType,\n            (msg) => mapper(msg, true),\n            getGetEntityEvent(true),\n            handlers);\n\n        sub2 = removedMessageType && this.forwardMessageToEventHandler<TMessage, TEntity>(\n            removedMessageType,\n            (msg) => mapper(msg, false),\n            getGetEntityEvent(false),\n            handlers);\n\n        return [sub1, sub2].filter((x) => x);\n    }\n\n    private forwardMessageToEventHandler<TMessage, TEntity>(\n        messageType: string,\n        mapper: (msg: TMessage) => TEntity[],\n        getEntityEvent: (entity: TEntity, msg: TMessage) => EntityEvent<TEntity>,\n        handler: Array<EventHandlerCallback<EntityEvent<TEntity>>>) {\n        return this.subscribe(\n            messageType,\n            (msg: TMessage) => {\n                mapper(msg)\n                    .forEach((ent: any) =>\n                        handler.forEach((h) => h(getEntityEvent(ent, msg))));\n            });\n    }\n\n    private sendCreateAndMapResultingMessagesToPromise<TCreatedMessage extends GwMessage, TPromiseType>(\n        msg: any,\n        initiatedMessageType: string,\n        initiatedMessageFilter: (msg: any, requestId: string) => boolean,\n        createdMessageType: string,\n        createdMessageFilter: (msg: any, requestId: string, initMsg: any) => boolean,\n        cancelledMessageType: string,\n        cancelledMessageFilter: (msg: any, requestId: string, initMsg: any) => boolean,\n        createdMessageToPromiseResolution: (TCreatedMessage: any) => TPromiseType): Promise<TPromiseType> {\n\n        const reqId = this.getRandomRequestId();\n\n        let resolveCreatedPromise: (arg: any) => void;\n        let rejectCreatedPromise: (arg: any) => void;\n        const createdPromise = new Promise<TPromiseType>((resolve, reject) => {\n            resolveCreatedPromise = resolve;\n            rejectCreatedPromise = reject;\n        });\n\n        let initiatedMessageAck: any = null;\n\n        let initiatedSubscription: any;\n        let createdSubscription: any;\n        let cancelledSubscription: any;\n        let errorSubscription: any;\n\n        const dropSubscriptions = () => {\n            this.dropSubscription(initiatedSubscription);\n            this.dropSubscription(createdSubscription);\n            this.dropSubscription(cancelledSubscription);\n            this.dropSubscription(errorSubscription);\n        };\n\n        initiatedSubscription = initiatedMessageType &&\n            this.subscribe(\n                initiatedMessageType,\n                (msg4: any) => {\n                    if (!initiatedMessageFilter(msg4, reqId)) {\n                        return;\n                    }\n                    initiatedMessageAck = msg4;\n                    this.dropSubscription(initiatedSubscription);\n                });\n        createdSubscription =\n            this.subscribe(\n                createdMessageType,\n                (msg1: TCreatedMessage) => {\n                    if (!createdMessageFilter(msg1, reqId, initiatedMessageAck)) {\n                        return;\n                    }\n                    resolveCreatedPromise(createdMessageToPromiseResolution(msg1));\n                });\n        cancelledSubscription = cancelledMessageType &&\n            this.subscribe(\n                cancelledMessageType,\n                (msg2: any) => {\n                    if (!cancelledMessageFilter(msg2, reqId, initiatedMessageAck)) {\n                        return;\n                    }\n                    rejectCreatedPromise(msg2);\n                });\n        errorSubscription = cancelledMessageType &&\n            this.subscribe(\n                gwMmessageError,\n                (msg3: any) => {\n                    if (msg3.request_id !== reqId) {\n                        return;\n                    }\n                    rejectCreatedPromise(msg3);\n                });\n\n        msg.request_id = reqId;\n\n        const toReturn = this._gw3Session\n            .send(msg)\n            .then(() => {\n                return createdPromise;\n            });\n        toReturn.then(dropSubscriptions, dropSubscriptions);\n        return toReturn;\n    }\n\n    // Entity Mapping\n\n    private peerFactoryIdAndOwnerIdToWindowType(factoryId: string, ownerId: string) {\n        const peerType = this._peerIdAndFactoryIdToPeerType[ownerId + \":\" + factoryId];\n        if (!peerType) {\n            return null;\n        } else {\n            return new WindowType(peerType, undefined);\n        }\n    }\n\n    private subscribe<TMessage>(messageType: string, handler: (msg: TMessage) => void) {\n        const sub = this._connection.on(\n            \"js-activity\",\n            messageType,\n            (msg: TMessage) => handler.bind(this)(msg));\n\n        this._gw3Subscriptions.push(sub);\n\n        return sub;\n    }\n\n    private dropSubscription(subscription: any) {\n        if (subscription) {\n            this._connection.off(subscription);\n            delete this._gw3Subscriptions[this._gw3Subscriptions.indexOf(subscription)];\n        }\n    }\n\n    private invokeCallbacks<TEvent>(\n        callbacks: Array<EventHandlerCallback<EntityEvent<TEvent>>>,\n        event: EntityEvent<TEvent>,\n        description?: string) {\n        callbacks.forEach((cb) => {\n            try {\n                cb(event);\n            } catch (err) {\n                this._logger.error(`Error in ${description || event.context.type} callback: ` + JSON.stringify(err));\n            }\n        });\n    }\n\n    private handleActivityCreatedMessage(msg: ActivityGwMessage) {\n        if (!msg.context_id) {\n            this._logger.error(\"Activity created with unknown context_id: \" + msg.activity_id);\n        } else {\n            if (!this._contextSubscriptions[msg.activity_id]) {\n                this.subscribeToContext(msg);\n            }\n        }\n    }\n\n    private async subscribeToContext(msg: ActivityGwMessage): Promise<void> {\n        const activityId = msg.activity_id;\n        this._contextSubscriptions[activityId] =\n            await this._contexts.subscribe(activityId,\n                (data: any, updated: any, removed: string[]) => {\n                    const event = new EntityEvent<Activity>(\n                        new Activity(activityId, undefined, undefined, data, undefined),\n                        new ActivityContextChangedEventContext(data, updated, removed));\n\n                    this.invokeCallbacks(\n                        this._activityChangeCallbacks,\n                        event,\n                        \"context updated\");\n                });\n    }\n\n    private handleActivityDestroyedMessage(msg: ActivityGwMessage) {\n        const unsubscribeContext = this._contextSubscriptions[msg.activity_id];\n        if (typeof unsubscribeContext === \"function\") {\n            unsubscribeContext();\n        }\n        delete this._contextSubscriptions[msg.activity_id];\n    }\n\n    private handlePeerFactoriesAdded(msg: PeerFactoryGwMessage) {\n        msg.factories.forEach((entity: PeerFactoryGwMessageEntity) => {\n            this._peerIdAndFactoryIdToPeerType[msg.owner_id + \":\" + entity.id] = entity.peer_type;\n        });\n    }\n\n    private handlePeerFactoriesRemoved(msg: PeerFactoryGwMessage) {\n        msg.factory_ids.forEach((factoryId: string) => {\n            delete this._peerIdAndFactoryIdToPeerType[msg.owner_id + \":\" + factoryId];\n        });\n    }\n\n    private forwardActivityTypeMessagesToStatusEventHandlers() {\n        this.forwardAddedAndRemovedMessagesToEventHandler<ActivityTypeGwMessage, ActivityType>(\n            gwMmessageActivityTypesAdded,\n            gwMessageActivityTypesRemoved,\n            (msg: ActivityTypeGwMessage, isAdded) => isAdded\n                ? msg.types.map((t) => GW3Bridge.activityTypeGwMessageEntityToActivityType(t, undefined))\n                : msg.types.map((t) => new ActivityType(t.name, undefined, undefined, undefined)),\n            this._activityTypeStatusChangeCallbacks);\n\n    }\n\n    private forwardActivityCreatedAndJoinedActivityToActivityWindowEventHandlers() {\n        // if we're created as part of this activity, the JOINED ACTIVITY is\n\n        // the first time we'll hear about it; so let's record the participants\n        for (const activityCreatedMessage of [gwMessageActivityCreated, gwMessageJoinedActivity, gwMessageOwnerChanged]) {\n            this.forwardMessageToEventHandler<ActivityGwMessage, ActivityWindow>(\n                activityCreatedMessage,\n                (msg) =>\n                    ([msg.owner || { ...msg, type: msg.peer_type, name: msg.peer_name, peer_id: msg.owner_id }])\n                        .concat(msg.participants || [])\n                        .map((info: any) => new ActivityWindow(info.peer_id, info.name, info.type, msg.activity_id, this.getAgmInstance(info.peer_id), undefined, this.generateWindowGetter(info.peer_id), undefined)),\n                (ent, msg) => new EntityEvent<ActivityWindow>(ent, new EntityEventContext(EntityEventType.ActivityWindowJoinedActivity)),\n                this._activityWindowChangeCallbacks);\n        }\n    }\n\n    private forwardActivityMessagesToStatusEventHandlers() {\n\n        // see dot-net-activity\\Activity\\ActivityState.cs\n\n        for (const createdMessage of [gwMessageActivityCreated, gwMessageJoinedActivity]) {\n            this.forwardMessageToEventHandler<ActivityGwMessage, Activity>(\n                createdMessage,\n                (msg) => [GW3Bridge.activityGwMessageToActivity(msg, new ActivityStatus(\"started\", \"\", new Date()))],\n                (ent, msg) => GW3Bridge.activityToActivityStatusChangeEvent(ent),\n                this._activityChangeCallbacks);\n        }\n\n        this.forwardMessageToEventHandler<ActivityGwMessage, Activity>(\n            gwMessageActivityDestroyed,\n            (msg) => [GW3Bridge.activityGwMessageToActivity(msg, new ActivityStatus(\"destroyed\", msg.reason, new Date()))],\n            (ent, msg) => GW3Bridge.activityToActivityStatusChangeEvent(ent),\n            this._activityChangeCallbacks);\n\n        this.forwardMessageToEventHandler<ActivityGwMessage, Activity>(\n            gwMessageActivityInitiated,\n            (msg) => [GW3Bridge.activityGwMessageToActivity(msg, new ActivityStatus(\"created\", \"\", new Date()))],\n            (ent, msg) => GW3Bridge.activityToActivityStatusChangeEvent(ent),\n            this._activityChangeCallbacks);\n\n        this.forwardMessageToEventHandler<ActivityGwMessage, Activity>(\n            gwMessageOwnerChanged,\n            (msg) => [GW3Bridge.activityGwMessageToActivity(msg, new ActivityStatus(\"created\", \"\", new Date()))],\n            (ent, msg) => GW3Bridge.activityToActivityStatusChangeEvent(ent),\n            this._activityChangeCallbacks);\n    }\n\n    private forwardPeerFactoryMessagesToStatusEventHandlers() {\n        this.forwardAddedAndRemovedMessagesToEventHandler<PeerFactoryGwMessage, WindowType>(\n            gwMessagePeerFactoriesAdded,\n            gwMessagePeerFactoriesRemoved,\n            (msg: PeerFactoryGwMessage, isAdded: boolean) => isAdded\n                ? msg.factories.map(GW3Bridge.peerFactoryGwMessageEntityToWindowType)\n                : msg.factory_ids.map((id) => this.peerFactoryIdAndOwnerIdToWindowType(id, msg.owner_id)).filter((x) => x != null),\n            this._windowTypeStatusChangeCallbacks);\n    }\n\n    private forwardPeerFactoryMessagesToPeerFactoryRequests() {\n        this.subscribe(\n            gwMessagePeerRequested,\n            (msg: PeerRequestedGwMessage) => {\n                const factory = this._peerFactoriesRegisteredByUs[msg.peer_factory];\n                if (!factory) {\n                    this._gw3Session.send(\n                        {\n                            type: gwMmessageError,\n                            request_id: msg.request_id,\n                            reason: `Unknown peer factory ${msg.peer_factory}`\n                        });\n                    return;\n                }\n\n                try {\n                    const configuration = msg.configuration || {};\n                    // NB: peer factories (or whoever they're delegating to) need to support whatever activity\n                    // environment (GW3, HC) we're targeting when they're creating peers\n                    // the manager is env agnostic, the bridge will augment the configuration with whatever's required\n\n                    // NB: also, since peers are requested in two ways (single peer with just its configuration,\n                    // or peer created as part of new activity, where the factory receives the aggregate config of\n                    // all peers, combined from ADD ACTIVITY TYPE and CREATE ACTIVITY), the peer factories need to\n                    // be able to handle both configuration structures intelligently.\n                    configuration.gateway_token = configuration.gateway_token || msg.gateway_token;\n                    configuration.peer_factory = configuration.peer_factory || msg.peer_factory;\n                    const promise = factory({\n                        activityId: msg.activity && msg.activity.id,\n                        activityType: msg.activity && msg.activity.type,\n                        type: msg.configuration && msg.configuration.type,\n                        gwToken: configuration.gateway_token,\n                        configuration\n                    });\n                    if (promise && promise.then && promise.catch) {\n                        promise.catch((err) => this._gw3Session.send(\n                            {\n                                type: gwMmessageError,\n                                request_id: msg.request_id,\n                                reason: err && (err.message || JSON.stringify(err))\n                            }));\n                    }\n                } catch (err) {\n                    this._gw3Session.send(\n                        {\n                            type: gwMmessageError,\n                            request_id: msg.request_id,\n                            reason: err && (err.message || JSON.stringify(err))\n                        });\n                }\n            });\n    }\n\n    private forwardActivityWindowMessagesToEventHandlers() {\n        for (const joinedMessage of [gwMessageActivityJoined, gwMessageJoinedActivity]) {\n            this.subscribe(joinedMessage,\n                (msg: any) => {\n                    const joinedId = (joinedMessage === gwMessageActivityJoined) ? msg.joined_id : msg.peer_id;\n                    const joinedType = (joinedMessage === gwMessageActivityJoined) ? msg.joined_type : msg.peer_type;\n                    const joinedName = (joinedMessage === gwMessageActivityJoined) ? msg.joined_name : msg.peer_name;\n\n                    const entity = new ActivityWindow(\n                        joinedId,\n                        joinedName,\n                        joinedType /* for ACTIVITY JOINED */,\n                        msg.activity_id,\n                        this.getAgmInstance(joinedId),\n                        undefined,\n                        this.generateWindowGetter(joinedId),\n                        undefined);\n\n                    // TODO review - what if it's our activity, do we\n                    // even need to subscribe\n                    if (!this._contextSubscriptions[msg.activity_id]) {\n                        this.subscribeToContext(msg).then(() => {\n                            if (joinedMessage === gwMessageJoinedActivity) {\n                                this._activityJoinedPromiseResolve({});\n                            }\n                        });\n                    } else if (joinedMessage === gwMessageJoinedActivity) {\n                        this._activityJoinedPromiseResolve({});\n                    }\n\n                    // TODO review: we might have the context data here already\n                    // why not update it here instead of waiting for subscribeToContext\n                    this.invokeCallbacks(\n                        this._activityWindowChangeCallbacks,\n                        new EntityEvent<ActivityWindow>(\n                            entity,\n                            new EntityEventContext(EntityEventType.ActivityWindowJoinedActivity)),\n                        joinedMessage);\n\n                });\n        }\n\n        this.subscribe(\n            gwMessageActivityLeft,\n            (msg: any) => {\n                const entity = new ActivityWindow(\n                    msg.left_id,\n                    undefined,\n                    undefined,\n                    null,\n                    this.getAgmInstance(msg.left_id),\n                    undefined,\n                    this.generateWindowGetter(msg.left_id),\n                    undefined);\n\n                this.invokeCallbacks(\n                    this._activityWindowChangeCallbacks,\n                    new EntityEvent<ActivityWindow>(\n                        entity,\n                        new EntityEventContext(EntityEventType.ActivityWindowLeftActivity)),\n                    gwMessageActivityLeft);\n            });\n\n        this.forwardAddedAndRemovedMessagesToEventHandler<PeerCreatedGwMessage, ActivityWindow>(\n            gwMessagePeerCreated,\n            undefined,\n            (msg) => [\n                new ActivityWindow(\n                    msg.created_id,\n                    undefined /* #deleteme TODO: review - we should know the name if any */,\n                    undefined /* #deleteme TODO: review - we should know the type */,\n                    undefined,\n                    undefined,\n                    undefined,\n                    this.generateWindowGetter(msg.created_id),\n                    undefined)],\n            this._activityWindowChangeCallbacks);\n    }\n\n    private getAgmInstance(id: string): Glue42.AGM.Instance {\n        return this._config.agm.servers().find((s) => s.peerId === id || s.windowId === id);\n    }\n\n    private generateWindowGetter(peerId: string): () => Glue42.Windows.GDWindow {\n        return () => {\n            const server = this.getAgmInstance(peerId);\n            if (!server) {\n                return;\n            }\n            const windowId = server.windowId;\n            return this._config.windows.list().filter((w) => w.id === windowId)[0];\n        };\n    }\n\n    private isOverrideTypeDefinition(value: OverrideTypeDefinition | WindowDefinition[]): value is OverrideTypeDefinition {\n        if (typeof value === \"undefined\") {\n            return false;\n        }\n        if ((value as OverrideTypeDefinition).owner) {\n            return true;\n        }\n        return false;\n    }\n}\n","import {Logger} from \"./logger\";\nimport * as util from \"../helpers/util\";\n/**\n * Class that can be used as a marker for successful completion of a set of events\n * @private\n * @module readyMarker\n */\nexport class ReadyMarker {\n  private _callbacks: Array<(err: any) => void>;\n  private _signals: number;\n  private _error: any;\n  private _logger: Logger;\n  private _name: string;\n\n  /**\n   * Creates new marker\n   * @param name Name of the marker, useful in logging\n   * @param signalsToWait Number of signals(events) that needs to be signaled (completed) before the marker is set as completed\n   */\n  constructor(name: string, signalsToWait: number) {\n    this._logger = Logger.Get(\"ReadyMarker [\" + name + \"]\");\n    this._logger.debug(\"Initializing ready marker for '\" + name + \"' with \" + signalsToWait + \" signals to wait\");\n    if (signalsToWait <= 0) {\n      throw new Error(\"Invalid signal number. Should be > 0\");\n    }\n    this._signals = signalsToWait;\n    this._callbacks = [];\n    this._name = name;\n  }\n\n  /**\n   * Adds a new callback that will be notified when the events are completed (success) or some error happened\n   */\n  public setCallback(callback: (err: any) => void) {\n    if (this.isSet()) {\n      callback(undefined);\n      return;\n    } else if (this.isError()) {\n      callback(this._error);\n      return;\n    }\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Signals for a completion of an event. If this is the last event success callbacks will be called\n   */\n  public signal(message?: string) {\n    this._logger.debug(\"Signaled - \" + message + \" - signals left \" + (this._signals - 1));\n    this._signals--;\n    if (this._signals < 0) {\n      throw new Error(\"Error in ready marker '\" + this._name + \" - signals are \" + this._signals);\n    }\n\n    if (this.isSet()) {\n      this._callbacks.forEach((callback) => {\n        callback(undefined);\n      });\n    }\n  }\n\n  /**\n   * Signals for an error in some of the events. This will notify all callbacks that the marker has failed\n   */\n  public error(error: string) {\n    this._error = error;\n    this._callbacks.forEach((errorCallback) => {\n      errorCallback(error);\n    });\n  }\n\n  /**\n   * Checks if the marker is set (completed)\n   */\n  public isSet() {\n    if (this.isError()) {\n      return false;\n    }\n    return this._signals === 0;\n  }\n\n  /**\n   * Checks if the marker has failed (some of the events has failed)\n   */\n  public isError() {\n    return !util.isUndefined(this._error);\n  }\n\n  /**\n   * Returns the last reported error (undefined if no error)\n   */\n  public getError() {\n    return this._error;\n  }\n}\n","import { ActivityBridge } from \"./activityBridge\";\n\nimport { AnnouncementInfo } from \"../contracts/announcementInfo\";\n\nimport { Callback, EventHandlerCallback } from \"../contracts/contracts\";\nimport {\n  ActivityContextChangedEventContext,\n  ActivityStatusChangeEventContext,\n  EntityEvent,\n  EntityEventContext,\n  EntityEventType\n} from \"../contracts/entityEvent\";\nimport { WindowFactory } from \"../contracts/windowFactory\";\nimport { ActivityStatus } from \"../contracts/activityStatus\";\n\nimport ActivityType from \"../entities/activityType\";\nimport WindowType from \"../entities/windowType\";\nimport Activity from \"../entities/activity\";\nimport ActivityEntity from \"../entities/activityEntity\";\nimport ActivityWindow from \"../entities/activityWindow\";\n\nimport { Logger } from \"../helpers/logger\";\nimport { WindowDefinition } from \"../entities/windowDefinition\";\nimport { ReadyMarker } from \"../helpers/readyMarker\";\nimport * as util from \"../helpers/util\";\nimport { WindowBounds } from \"../contracts/windowBounds\";\nimport { CloneOptions } from \"../entities/cloneOptions\";\nimport { AttachedActivityDescriptor } from \"../entities/attachedActivityDescriptor\";\nimport { ActivityMode } from \"../activityConfig\";\nimport { Glue42 } from \"../../../glue\";\n\n/**\n * HtmlContainer (HC) bridge\n * @private\n * @module hcBridge\n */\nexport default class HCBridge implements ActivityBridge {\n  /**\n   *  Convert an ActivityType entity coming from HC to ActivityType\n   */\n  public static _hcToJsActivityType(hcActType: any): ActivityType {\n    return new ActivityType(hcActType.name, hcActType.ownerWindowType, hcActType.helperWindowTypes, hcActType.description);\n  }\n\n  public static _getURLParameter(name: string) {\n    return decodeURIComponent((new RegExp(\"[?|&]\" + name + \"=\" + \"([^&;]+?)(&|#|;|$)\").exec(location.search) || [, \"\"])[1].replace(/\\+/g, \"%20\")) || null;\n  }\n\n  // HC constants\n  private _activityTypeEntityName = \"activityType\";\n  private _windowTypeEntityName = \"windowType\";\n  private _activityEntityName = \"activity\";\n  private _windowEntityName = \"activityWindow\";\n  private _logger: Logger = Logger.Get(\"hcBridge\");\n\n  private _htmlContainer: any;\n\n  // event sequences\n  private _lastSeq: number = 0;\n  private _eventQueue: any[] = [];\n\n  private _activityTypeCallbacks: Array<EventHandlerCallback<EntityEvent<ActivityType>>> = [];\n  private _windowTypeCallbacks: Array<EventHandlerCallback<EntityEvent<WindowType>>> = [];\n  private _activityCallbacks: Array<EventHandlerCallback<EntityEvent<Activity>>> = [];\n  private _windowCallbacks: Array<EventHandlerCallback<EntityEvent<ActivityWindow>>> = [];\n\n  private _readyMarker: ReadyMarker;\n  private _agm: any;\n  private _windows: Glue42.Windows.API;\n  private _appManagerGetter: () => Glue42.AppManager.API;\n  private _appByWindowTypeGetter: (wt: string) => Glue42.AppManager.Application;\n  private _activitiesDetached: (info: any) => void;\n  private _activitiesAttachedHandler: (info: any) => void;\n  private _activityAttachedDescriptorsRefreshed: (info: any) => void;\n  private _mode: ActivityMode;\n  private _typesToTrack: string[];\n\n  constructor(agm: any, windows: Glue42.Windows.API, appManagerGetter: () =>  Glue42.AppManager.API, mode: ActivityMode, typesToTrack: string[]) {\n    this._agm = agm;\n    this._windows = windows;\n    this._appManagerGetter = appManagerGetter;\n    this._mode = mode;\n    this._typesToTrack = typesToTrack;\n  }\n\n  public get bridgeType(): \"HC\" {\n    return \"HC\";\n  }\n\n  public joinActivity(activityId: string, windowId: string): Promise<void> {\n    throw new Error(\"Not implemented\");\n  }\n\n  public leaveActivity(activityId: string, windowId: string): Promise<void> {\n    throw new Error(\"Not implemented\");\n  }\n\n  public init() {\n    this._readyMarker = new ReadyMarker(\"HC Bridge\", 1);\n\n    this._htmlContainer = (window as any).htmlContainer.activityFacade;\n\n    if (this._htmlContainer.subscribeForJoinBreakEvents) {\n      this._htmlContainer.subscribeForJoinBreakEvents((e: any) => {\n        this._handleGenericEvents(e);\n      });\n    }\n\n    let options = this._agm ? this._agm.instance : undefined;\n    let initFunc: (options: any, listener: () => void, func: () => void, func1: (error: any) => void) => void = this._htmlContainer.init;\n\n    if (this._htmlContainer.init2) {\n      initFunc = this._htmlContainer.init2;\n      options = {\n        jsAgmInstance: options,\n        glueVersion: 3,\n        mode: this._mode,\n        typesToTrack: this._typesToTrack\n      };\n    }\n\n    initFunc(options,\n      this._hcEventHandler.bind(this),\t// event listener\n      () => {\n        this._readyMarker.signal(\"Init done from HC\");\n      },\n      (error) => {\n        this._readyMarker.error(error);\n      });\n  }\n\n  public initReady(): Promise<ActivityBridge> {\n    return new Promise<ActivityBridge>((resolve, reject) => {\n      this._readyMarker.setCallback(\n        (err) => {\n          if (!err) {\n            resolve(this);\n          } else {\n            this._logger.error(\"Error initializing HC bridge - \" + err);\n            reject(this._readyMarker.getError());\n          }\n        });\n    });\n  }\n\n  public ready(): Promise<object> {\n    return this.initReady();\n  }\n\n  public _handleGenericEvents(event: any) {\n    this._processEventBySeq(event);\n  }\n\n  public _hcEventHandler(eventJson: string) {\n    this._logger.trace(eventJson);\n    const event = JSON.parse(eventJson);\n    this._processEventBySeq(event);\n  }\n\n  public _processEventBySeq(event: any) {\n    const seq = event.sequence;\n    if (seq === this._lastSeq + 1) {\n      // if this is the event we expect process it\n      this._processEvent(event);\n      this._lastSeq++;\n      // empty the next items in the queue - if any\n      const nextEvent = this._eventQueue[seq + 1];\n      if (!util.isUndefined(nextEvent)) {\n        this._logger.debug(\"replaying message number \" + seq);\n        this._processEventBySeq(nextEvent);\n        delete this._eventQueue[seq + 1];\n      }\n    } else {\n      // save in the queue\n      this._eventQueue[seq] = event;\n      this._logger.debug(\"Got out of order event with number \" + seq + \". Will wait for previous event(s) before replaying.\");\n    }\n  }\n\n  public _processEvent(event: any) {\n    if (event.genericEvent) {\n      this._processGenericEvent(event);\n      return;\n    }\n    const entityType = event.entityType;\n    const eventContext = this._convertContext(event.context);\n    let entity: ActivityEntity;\n\n    // Hack for Activities .NET api not delivering right context\n    if (event.context.type === EntityEventType.ActivityContextChange &&\n        (!this._htmlContainer.contextUpdateRaceFixed)) {\n        // When there is a context update, we will ask the container for all activities\n        // and use the context of the returned activity instead of the one we received from the update\n        // we should remove this hack once a fix in HC is deployed\n        this.getActivities()\n            .then((activities) => {\n\n                const updated = event.context.updated;\n                const removed = event.context.removed;\n\n                const activityInEvent = (this._hcToJsActivity(event.entity) as Activity);\n                const contextAsString = event.entity.context;\n\n                activities.forEach((activity) => {\n                    if (activity.id !== activityInEvent.id) {\n                        return;\n                    }\n\n                    const hackEventContext = new ActivityContextChangedEventContext(contextAsString,\n                        updated,\n                        removed);\n\n                    this._publishActivityStatusChange(activityInEvent, hackEventContext);\n                });\n            });\n        return;\n    }\n\n    switch (entityType) {\n      case this._activityTypeEntityName:\n        entity = HCBridge._hcToJsActivityType(event.entity);\n        this._publishActivityTypeStatusChange((entity as ActivityType), eventContext);\n        break;\n      case this._windowTypeEntityName:\n        entity = this._hcToJsWindowType(event.entity);\n        this._publishWindowTypeStatusChange((entity as WindowType), eventContext);\n        break;\n      case this._activityEntityName:\n        entity = this._hcToJsActivity(event.entity);\n        this._publishActivityStatusChange((entity as Activity), eventContext);\n        break;\n      case this._windowEntityName:\n        entity = this._hcToJsWindow(event.entity);\n        this._publishActivityWindowEvent((entity as ActivityWindow), eventContext);\n        break;\n    }\n  }\n\n  public _processGenericEvent(event: any) {\n    const info = event.data;\n    if (event.type === \"ActivitiesAttached\") {\n      if (this._activitiesAttachedHandler) {\n        this._activitiesAttachedHandler(info);\n      }\n    } else if (event.type === \"ActivitiesDetached\") {\n      if (this._activitiesDetached) {\n        this._activitiesDetached(info);\n      }\n    } else if (event.type === \"ActivityAttachedDescriptorsRefreshed\") {\n      if (this._activityAttachedDescriptorsRefreshed) {\n        this._activityAttachedDescriptorsRefreshed(info);\n      }\n    }\n  }\n\n  public _convertContext(hcContext: any): EntityEventContext {\n    if (hcContext.type === EntityEventType.StatusChange) {\n      const oldStatus = new ActivityStatus(hcContext.oldStatus.state, hcContext.oldStatus.statusMessage, hcContext.oldStatus.statusTime);\n      const newStatus = new ActivityStatus(hcContext.newStatus.state, hcContext.newStatus.statusMessage, hcContext.newStatus.statusTime);\n      return new ActivityStatusChangeEventContext(newStatus, oldStatus);\n    } else if (hcContext.type === EntityEventType.ActivityWindowEvent) {\n      return new EntityEventContext(hcContext.event);\n    } else if (hcContext.type === EntityEventType.ActivityContextChange) {\n      return new ActivityContextChangedEventContext(hcContext.newContext,\n                hcContext.updated,\n                hcContext.removed);\n    }\n    return new EntityEventContext(hcContext.type);\n  }\n\n  /**\n   *  Convert an Activity entity from HC to Activity\n   */\n  public _hcToJsActivity(hcAct: any): Activity {\n    const window = hcAct.owner ? this._hcToJsWindow(hcAct.owner) : null;\n    const windowId = window ? window.id : null;\n    const status = new ActivityStatus(hcAct.status.state, hcAct.status.statusMessage, hcAct.status.statusTime);\n    const context = JSON.parse(hcAct.context);\n\n    return new Activity(hcAct.id, hcAct.type.name, status, context, windowId);\n  }\n\n  /**\n   *  Convert a WindowType entity coming from HC to WindowType\n   */\n  public _hcToJsWindowType(hcWinType: any): WindowType {\n\n    if (util.isUndefined(hcWinType.factories)) {\n      hcWinType.factories = [];\n    }\n\n    // lazy init\n    if (!this._appByWindowTypeGetter) {\n      if (!this._appManagerGetter) {\n        this._appByWindowTypeGetter = () => undefined;\n      }\n\n      this._appByWindowTypeGetter = (wt: string) => {\n        const appMgr = this._appManagerGetter();\n        return appMgr.applications().filter((app) => app.activityWindowType === wt)[0];\n      };\n    }\n\n    return new WindowType(hcWinType.name,\n      this._appByWindowTypeGetter);\n  }\n\n  // /** Convert a WindowFactory entity coming from HC to WindowFactory */\n  // static _hcToJsWindowTypeFactory(hcWinTypeFactory: any): WindowFactory {\n  //   return new ProxyWindowFactory(hcWinTypeFactory.description);\n  // }\n\n  public getActivityTypes(): Promise<ActivityType[]> {\n    return new Promise<ActivityType[]>((resolve, reject) => {\n      // get all from HC\n      this._htmlContainer.getActivityTypes((infos: any) => {\n        // transform to Activity Js Entities\n        const result = infos.map((info: any) => HCBridge._hcToJsActivityType(info));\n        resolve(result);\n      },\n        (error: any) => {\n          reject(error);\n        });\n    });\n  }\n\n  public registerActivityType(\n    activityTypeName: string,\n    ownerWindow: WindowDefinition,\n    helperWindows?: WindowDefinition[],\n    layoutConfig?: any,\n    description?: string): Promise<ActivityType> {\n    return new Promise<ActivityType>((resolve, reject) => {\n      if (helperWindows === undefined) {\n        helperWindows = [];\n      }\n\n      const config = {\n        name: activityTypeName,\n        ownerWindowType: ownerWindow,\n        helperWindowTypes: helperWindows,\n        description,\n        layoutConfig: JSON.stringify(layoutConfig)\n      };\n\n      // pass create request to HC\n      this._htmlContainer.registerActivityType(JSON.stringify(config),\n        (info: any) => {\n          // transform to Activity Js Entity\n          const newActivityType = HCBridge._hcToJsActivityType(info);\n          resolve(newActivityType);\n        },\n        (error: any) => {\n          reject(error);\n        });\n    });\n  }\n\n  public unregisterActivityType(activityTypeName: string): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      // pass create request to HC\n      this._htmlContainer.unregisterActivityType(activityTypeName,\n        /*( info )*/() => {\n          resolve();\n        },\n        (error: any) => {\n          reject(error);\n        });\n    });\n  }\n\n  public getWindowTypes(): Promise<WindowType[]> {\n    return new Promise<WindowType[]>((resolve, reject) => {\n      // get all from HC\n      this._htmlContainer.getWindowTypes((infos: any) => {\n        // transform to Activity Js Entities\n        const result = infos.map((info: any) => this._hcToJsWindowType(info));\n        resolve(result);\n      },\n        (error: any) => {\n          reject(error);\n        });\n    });\n  }\n\n  public registerWindowFactory(\n    windowTypeName: string,\n    factory: WindowFactory,\n    parameters?: any): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      if (util.isUndefinedOrNull(windowTypeName)) {\n        reject(\"windowTypeName should be provided\");\n        return;\n      }\n\n      // pass create request to HC\n      this._htmlContainer.registerWindowFactory(windowTypeName,\n        factory,\n        /*(info)*/() => {\n          resolve();\n        },\n        (error: any) => {\n          reject(error);\n        });\n    });\n  }\n\n  public initiateActivity(activityType: string, context?: object, configuration?: any): Promise<string> {\n    return new Promise<string>((resolve, reject) => {\n      if (util.isUndefinedOrNull(activityType)) {\n        reject(\"windowTypeName should be provided\");\n        return;\n      }\n\n      if (util.isUndefinedOrNull(context)) {\n        context = {};\n      }\n\n      // pass create request to HC\n      this._htmlContainer.initiate(activityType, JSON.stringify(context),\n        (activityId: string) => {\n          resolve(activityId);\n        },\n        (error: any) => {\n          reject(error);\n        });\n    });\n  }\n\n  public getAnnouncementInfo(): AnnouncementInfo {\n    const hc: any = (window as any).htmlContainer;\n    const context: any = hc.getContext();\n    const result: AnnouncementInfo = { activityWindowId: \"\", activityWindowType: \"\", activityWindowIndependent: false, activityWindowName: \"\" };\n    if (!context.activityId) {\n      // in case we're not in activity just return. this will\n      // lead to window not registering itself\n      return result;\n    }\n\n    result.activityWindowType = context.activityWindowType;\n    if (util.isUndefined(result.activityWindowType)) {\n      result.activityWindowType = HCBridge._getURLParameter(\"activityWindowType\");\n    }\n    result.activityWindowId = context.activityWindowId;\n    if (util.isUndefined(result.activityWindowId)) {\n      result.activityWindowId = HCBridge._getURLParameter(\"activityWindowId\");\n    }\n    result.activityWindowIndependent = context.activityWindowIndependent;\n    if (util.isUndefined(result.activityWindowIndependent)) {\n      // TODO parse\n      // result.activityWindowIndependent = this._getURLParameter(\"activityWindowIndependent\");\n    }\n    result.activityWindowName = context.activityWindowName;\n    if (util.isUndefined(result.activityWindowName)) {\n      result.activityWindowName = HCBridge._getURLParameter(\"activityWindowName\");\n    }\n\n    return result;\n  }\n\n  public announceWindow(windowType: string, activityWindowId: string) {\n\n    if (util.isUndefined(windowType)) {\n      throw new Error(\"can not determine window type\");\n    }\n\n    if (util.isUndefined(windowType)) {\n      throw new Error(\"can not determine window activityWindowId\");\n    }\n\n    this._htmlContainer.announceWindow(windowType,\n      activityWindowId,\n      (error: any) => {\n        this._logger.error(\"Error announcing activity window with id '\" + activityWindowId + \"'. \" + error);\n      });\n  }\n\n  public getActivities(): Promise<Activity[]> {\n    return new Promise<Activity[]>((resolve, reject) => {\n      // get all from HC\n      this._logger.trace(\"Executing getActivities()\");\n      this._htmlContainer.getActivities((activitiesStr: string) => {\n        // transform to Activity Js Entities\n        this._logger.trace(\"Got getActivities() :\" + activitiesStr);\n        const activities = JSON.parse(activitiesStr);\n        const result: Activity[] = activities.map((act: Activity) => this._hcToJsActivity(act));\n        resolve(result);\n      },\n        (error: any) => {\n          this._logger.trace(\"Error in getActivities() :\" + error);\n          reject(error);\n        });\n    });\n  }\n\n  public updateActivityContext(activity: Activity, context: object, fullReplace: boolean, removedKeys?: string[]): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n\n      if (util.isUndefined(removedKeys)) {\n        removedKeys = [];\n      }\n\n      const options = {\n        fullReplace,\n        removedKeys\n      };\n\n      this._htmlContainer.setActivityContext(activity.id,\n        JSON.stringify(context),\n        JSON.stringify(options),\n        (newContextString: string) => {\n          // receives the new context as string\n          const newContext = JSON.parse(newContextString);\n          resolve(newContext);\n        },\n        (error: any) => reject(error)\n      );\n    });\n  }\n\n  public getActivityWindows(): Promise<ActivityWindow[]> {\n    return new Promise<ActivityWindow[]>((resolve, reject) => {\n      // get all from HC\n      this._htmlContainer.getWindows((windows: any[]) => {\n        // transform to Activity Js Entities\n        const result: ActivityWindow[] = windows.map((wind) => this._hcToJsWindow(wind));\n        resolve(result);\n      },\n        (error: any) => {\n          reject(error);\n        });\n    });\n  }\n\n  public stopActivity(activity: Activity): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      this._htmlContainer.stopActivity(activity.id,\n        (result: boolean) => {\n          resolve(result);\n        },\n        (error: any) => {\n          reject(error);\n        });\n    });\n  }\n\n  public unregisterWindowFactory(windowTypeName: string): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      this._htmlContainer.registerWindowFactory(windowTypeName,\n        /*(info)*/() => {\n          resolve();\n        },\n        (error: any) => {\n          reject(error);\n        });\n    });\n  }\n\n  public createWindow(id: string, windowDefinition: WindowDefinition): Promise<string> {\n    return new Promise<string>((resolve, reject) => {\n\n      let objToSend: any = windowDefinition;\n      let functionToUse: (id: string, object: any, success: (id: string) => void, error: (error: any) => void) => void = this._htmlContainer.createWindow2;\n      if (!functionToUse) {\n        functionToUse = this._htmlContainer.createWindow;\n        objToSend = JSON.stringify(windowDefinition);\n      }\n\n      functionToUse(id,\n        objToSend,\n        (newId) => {\n          resolve(newId);\n        },\n        (error) => {\n          reject(error);\n        });\n    });\n  }\n\n  public createStackedWindows(id: string, windowDefinitions: WindowDefinition[], timeout: number): Promise<string[]> {\n    return new Promise<string[]>((resolve, reject) => {\n\n      let objToSend: any = windowDefinitions;\n      let functionToUse: (id: string, timeout: number, object: any, success: (id: string[]) => void, error: (error: any) => void) => void = this._htmlContainer.createStackedWindows2;\n      if (!functionToUse) {\n        functionToUse = this._htmlContainer.createStackedWindows;\n        objToSend = JSON.stringify(windowDefinitions);\n      }\n\n      functionToUse(id,\n        objToSend,\n        timeout,\n        (newId) => {\n          resolve(newId);\n        },\n        (error) => {\n          reject(error);\n        });\n    });\n  }\n\n  public onActivityTypeStatusChange(callback: EventHandlerCallback<EntityEvent<ActivityType>>) {\n    this._activityTypeCallbacks.push(callback);\n  }\n\n  public onWindowTypeStatusChange(callback: EventHandlerCallback<EntityEvent<WindowType>>) {\n    this._windowTypeCallbacks.push(callback);\n  }\n\n  public onActivityStatusChange(callback: EventHandlerCallback<EntityEvent<Activity>>) {\n    this._activityCallbacks.push(callback);\n  }\n\n  public onActivityWindowChange(callback: EventHandlerCallback<EntityEvent<ActivityWindow>>) {\n    this._windowCallbacks.push(callback);\n  }\n\n  public getWindowBounds(id: string): Promise<WindowBounds> {\n    return new Promise<WindowBounds>((resolve, reject) => {\n      this._htmlContainer.getWindowBounds(id,\n        (bounds: WindowBounds) => {\n          resolve(bounds);\n        },\n        (err: any) => {\n          reject(err);\n        });\n    });\n  }\n\n  public setWindowBounds(id: string, bounds: WindowBounds): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      this._htmlContainer.setWindowBounds(id,\n        JSON.stringify(bounds),\n        () => {\n          resolve();\n        },\n        (err: any) => {\n          reject(err);\n        });\n    });\n  }\n\n  public registerWindow(type: string, name: string, independent: boolean): Promise<string> {\n    return new Promise<string>((resolve, reject) => {\n\n      this._htmlContainer.registerWindow(type,\n        name,\n        independent,\n        (id: any) => {\n          resolve(id);\n        },\n        (error: any) => {\n          reject(error);\n        });\n    });\n  }\n\n  public closeWindow(id: string): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      this._htmlContainer.closeWindow(id,\n        () => {\n          resolve();\n        },\n        (err: any) => {\n          reject(err);\n        });\n    });\n  }\n\n  public activateWindow(id: string, focus: boolean): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      this._htmlContainer.activateWindow(id, focus,\n        () => {\n          resolve();\n        },\n        (err: any) => {\n          reject(err);\n        });\n    });\n  }\n\n  public setWindowVisibility(id: string, visible: boolean): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      this._htmlContainer.setWindowVisibility(id, visible,\n        () => {\n          resolve();\n        },\n        (err: any) => {\n          reject(err);\n        });\n    });\n  }\n\n  public cloneActivity(id: string, options: CloneOptions): Promise<string> {\n    return new Promise<string>((resolve, reject) => {\n      this._htmlContainer.cloneActivity(id, options,\n        (activityId: any) => {\n          resolve(activityId);\n        },\n        (err: any) => {\n          reject(err);\n        });\n    });\n  }\n\n  public _publishStatusChange<T extends ActivityEntity>(entity: T, context: EntityEventContext, callbacks: Array<EventHandlerCallback<EntityEvent<T>>>) {\n    const entityEvent = new EntityEvent<T>(entity, context);\n\n    callbacks.forEach((callback) => {\n      callback(entityEvent);\n    });\n  }\n\n  public _publishActivityTypeStatusChange(at: ActivityType, context: EntityEventContext) {\n    this._publishStatusChange(at, context, this._activityTypeCallbacks);\n  }\n\n  public _publishWindowTypeStatusChange(wt: WindowType, context: EntityEventContext) {\n    this._publishStatusChange(wt, context, this._windowTypeCallbacks);\n  }\n\n  public _publishActivityStatusChange(act: Activity, context: EntityEventContext) {\n    this._publishStatusChange(act, context, this._activityCallbacks);\n  }\n\n  public _publishActivityWindowEvent(w: ActivityWindow, context: EntityEventContext) {\n    this._publishStatusChange(w, context, this._windowCallbacks);\n  }\n\n  public attachActivities(from: string, to: string, tag: object): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      this._htmlContainer.attachActivities(from, to, tag,\n        (state: any) => {\n          resolve(state);\n        },\n        (err: any) => {\n          reject(err);\n        });\n    });\n  }\n\n  public detachActivities(activityId: string, newActivityInfo: AttachedActivityDescriptor): Promise<string> {\n    return new Promise<string>((resolve, reject) => {\n      this._htmlContainer.detachActivities(activityId, newActivityInfo,\n        (newActivityId: string) => {\n          resolve(newActivityId);\n        },\n        (err: any) => {\n          reject(err);\n        });\n    });\n  }\n\n  public onActivitiesAttached(callback: (info: any) => void) {\n    this._activitiesAttachedHandler = callback;\n  }\n\n  public onActivitiesDetached(callback: (info: any) => void) {\n    this._activitiesDetached = callback;\n  }\n\n  public onActivityAttachedDescriptorsRefreshed(callback: (info: any) => void) {\n    this._activityAttachedDescriptorsRefreshed = callback;\n  }\n\n  public getAttachedDescriptors(): Promise<any[]> {\n    return new Promise((resolve, reject) => {\n      if (!this._htmlContainer.getAttachedDescriptors) {\n        // support for container that does not have descriptors\n        resolve([]);\n        return;\n      }\n\n      this._htmlContainer.getAttachedDescriptors(\n        (result: any[]) => {\n          resolve(result);\n        },\n        (err: any) => {\n          reject(err);\n        });\n    });\n  }\n\n  /**\n   *  Convert a ActivityWindow entity coming from HC to ActivityWindow\n   */\n  private _hcToJsWindow(hcWindow: any): ActivityWindow {\n\n    let windowGetter: () => Glue42.Windows.GDWindow = () => undefined;\n    if (this._windows) {\n      if (hcWindow.hcWindowId) {\n        windowGetter = () => this._windows.list().filter((w: Glue42.Windows.GDWindow) => w.id === hcWindow.hcWindowId)[0];\n      } else {\n        // backward compatibility for HC < 1.58\n        windowGetter = () => this._windows.list().filter((w: Glue42.Windows.GDWindow) => w.application === hcWindow.instance.application)[0];\n      }\n    }\n\n    return new ActivityWindow(hcWindow.id,\n      hcWindow.name,\n      hcWindow.type,\n      hcWindow.activityId,\n      hcWindow.instance,\n      hcWindow.isIndependent,\n      windowGetter,\n      hcWindow.hcWindowId);\n  }\n}\n","import { EntityEventType } from \"./../contracts/entityEvent\";\nimport Activity from \"./../entities/activity\";\nimport ActivityWindow from \"./../entities/activityWindow\";\n\nimport ActivityManager from \"./../core/activityManager\";\nimport { Logger } from \"./../helpers/logger\";\nimport * as util from \"./../helpers/util\";\n\nimport { WindowDefinition } from \"./../entities/windowDefinition\";\nimport { CloneOptions } from \"../entities/cloneOptions\";\nimport { Callback } from \"../contracts/contracts\";\nimport { AttachedActivityDescriptor } from \"../entities/attachedActivityDescriptor\";\nimport { Glue42 } from \"../../../glue\";\n\nexport interface My {\n\n  activity: Activity;\n\n  window: ActivityWindow;\n\n  context: object;\n\n  updateContext(context: object, callback?: any): Promise<object>;\n\n  setContext(context: object, callback?: any): Promise<object>;\n\n  onActivityJoined(callback: (activity: Activity) => void): void;\n\n  onActivityLeft(callback: (activity: Activity) => void): void;\n\n  onContextChanged(callback: (context: object, delta: object, removed: string[], activity: Activity) => void): void;\n\n  clone(options: CloneOptions, callback: Callback<Activity>): Promise<Activity>;\n\n  attach(activity: Activity | string, tag?: object): Promise<AttachedActivityDescriptor>;\n\n  setFrameColor(color: string, callback: () => void): Promise<Activity>;\n\n  getFrameColor(): string;\n\n  onFrameColorChanged(callback: () => void): void;\n}\n\n/**\n * A lightweight, single activity oriented subset of the API which should be used by most activity applications.\n * Provides access to the activity of your application (my.activity) and shortcuts to the most commonly used methods\n * (e.g. my.createWindow is a shortcut for my.activity.createWindow)\n *\n * @module my\n */\nexport default class ActivityMy implements My {\n\n  public _myAttached: Array<(state: AttachedActivityDescriptor) => void> = [];\n  public _myDetached: Array<(state: AttachedActivityDescriptor) => void> = [];\n  public _myAttachedTo: Array<(activity: Activity, state: AttachedActivityDescriptor) => void> = [];\n  public _myDetachedFrom: Array<(detached: Activity, existing: Activity, state: AttachedActivityDescriptor) => void> = [];\n  public _myActivityFrameColorChanged: Array<(frameColor: string) => void> = [];\n  public _myActivityJoinedCallbacks: Array<(activity: Activity, event: any) => void> = [];\n  public _myActivityRemovedCallbacks: Array<(activity: Activity, event: any) => void> = [];\n  public _myContextUpdateCallbacks: Array<(context: object, delta: object, removed: string[], activity: Activity) => void> = [];\n  public _w: ActivityWindow;\n  public _m: ActivityManager;\n  public _logger: Logger = Logger.Get(this);\n\n  constructor(manager: ActivityManager, windows: any) {\n    this._m = manager;\n    manager.ready()\n      .then((am) => {\n        // Subscribe for events for driving \"my\" logic\n        am.subscribeActivityContextChanged(this._subscribeMyContextChanged.bind(this));\n        am.subscribeWindowEvents(this._subscribeMyWindowEvent.bind(this));\n        am.subscribeActivitiesAttached(this._subscribeActivitiesAttached.bind(this));\n        am.subscribeActivitiesDetached(this._subscribeActivitiesDetached.bind(this));\n        if (windows) {\n          windows.onWindowFrameColorChanged(this._subscribeWindowFrameColorChanged.bind(this));\n        }\n      });\n  }\n\n  /**\n   * The current activity window; can be undefined (if the window is not part of any activity)\n   *\n   * @var {Window} window\n   */\n  public get window(): ActivityWindow {\n    if (util.isUndefinedOrNull(this._w)) {\n      const announcedWindows = this._m.announcedWindows;\n      if (announcedWindows.length > 0) {\n        this._w = announcedWindows[0];\n      }\n    }\n    return this._w;\n  }\n\n  /**\n   * The current activity that the application participates in.\n   * Can be undefined (if currently not part of any activity)\n   *\n   * @var {module:activity} activity\n   */\n  public get activity(): Activity {\n    const myWin = this.window;\n    if (util.isUndefinedOrNull(myWin)) {\n      return undefined;\n    }\n    return myWin.activity;\n  }\n\n  /**\n   * Creates a new window and joins it to the activity\n   *\n   * @function createWindow\n   * @param {string| windowDefinition} windowType The type of the window to be created\n   * @returns {Promise<module:activityWindow>}\n   */\n  public createWindow(windowType: string | WindowDefinition): Promise<ActivityWindow> {\n    return this._m.createWindow(this.activity, windowType);\n  }\n\n  /**\n   * Creates a stacked set of windows and joins them to the\n   *\n   * @function createStackedWindows\n   * @param {string[] | windowDefinition[]} windowTypes The types of the windows to be created\n   * @param {number} timeout\n   * @returns {Promise<module:activityWindow[]>}\n   */\n  public createStackedWindows(windowTypes: Array<string | WindowDefinition>, timeout?: number): Promise<ActivityWindow[]> {\n    return this._m.createStackedWindows(this.activity, windowTypes, timeout);\n  }\n\n  /**\n   * The current activity context. To update use my.updateContext, to replace my.setContext\n   *\n   * @var {object} context\n   */\n  public get context(): object {\n    const activity = this.activity;\n    if (util.isUndefined(activity)) {\n      return {};\n    }\n\n    return activity.context;\n  }\n\n  /**\n   * Updates activity context using the properties from the context argument.\n   * If old context is {a:1, b:2, c:3} and invoking updateContext({b:3, c:null}) will result a context\n   * be {a:1, b:3}\n   *\n   * @function updateContext\n   * @param {object} context\n   * @return {Promise<object>}\n   */\n  public updateContext(context: object, callback?: any): Promise<object> {\n    const activity = this.activity;\n    if (util.isUndefined(activity)) {\n      return new Promise<object>((resolve, reject) => {\n        reject(\"Not in activity\");\n      });\n    }\n\n    return activity.updateContext(context, callback);\n  }\n\n  /**\n   * Replaces the activity context with a new one.\n   *\n   * @function setContext\n   * @param {object} context   The new context\n   * @returns {Promise<Object>}\n   */\n  public setContext(context: object, callback?: any): Promise<object> {\n    const activity = this.activity;\n    if (util.isUndefined(activity)) {\n      return new Promise((resolve, reject) => {\n        reject(\"Not in activity\");\n      });\n    }\n\n    return activity.setContext(context, callback);\n  }\n\n  public onActivityJoined(callback: (activity: Activity) => void) {\n    this._myActivityJoinedCallbacks.push(callback);\n\n    // replay joined event\n    const myWin = this.window;\n    if (!util.isUndefinedOrNull(myWin) && !util.isUndefinedOrNull(myWin.activity)) {\n      callback(myWin.activity);\n    }\n  }\n\n  public onActivityLeft(callback: (activity: Activity) => void) {\n    this._myActivityRemovedCallbacks.push(callback);\n  }\n\n  /**\n   * Subscribe for context updates\n   *\n   * @function onContextChanged\n   * @param {contextChangedHandler} callback Handler function that will receive context related events\n   */\n  public onContextChanged(callback: (context: object, delta: object, removed: string[], activity: Activity) => void) {\n    this._myContextUpdateCallbacks.push(callback);\n\n    // publish initial event\n    const myWin = this.window;\n    if (util.isUndefinedOrNull(myWin)) {\n      return;\n    }\n\n    const activity = myWin.activity;\n    if (util.isUndefinedOrNull(activity)) {\n      return;\n    }\n\n    // NB: either the callback is added before the activity is recorded in the API, or\n    // the activity is recorded before the callback\n    // in the former case, when the activity is seen, the callback will be invoked in _notifyMyContextChanged\n    // in the latter, the callback will be invoked here\n    // in both cases, the callback will be invoked at least once as soon as an activity is recorded\n\n    // see \"long analysis for callback behavior in GW3: several cases\" for full explanation\n\n    callback(activity.context, activity.context, [], activity);\n  }\n\n  public clone(options: CloneOptions, callback: Callback<Activity>): Promise<Activity> {\n    const act = this.activity;\n    return this._m.clone(act, options, callback);\n  }\n\n  public attach(activity: Activity | string, tag?: object): Promise<AttachedActivityDescriptor> {\n    let activityId: string;\n    if (typeof activity === \"string\") {\n      activityId = activity;\n    } else {\n      activityId = activity.id;\n    }\n    return this._m.attachActivities(activityId, this.activity.id, tag);\n  }\n\n  public onActivityAttached(callback: (state: AttachedActivityDescriptor) => void) {\n    this._myAttached.push(callback);\n  }\n\n  public onActivityDetached(callback: (state: AttachedActivityDescriptor) => void) {\n    this._myDetached.push(callback);\n  }\n\n  public onAttachedToActivity(callback: (activity: Activity, state: AttachedActivityDescriptor) => void) {\n    this._myAttachedTo.push(callback);\n  }\n\n  public onDetachedFromActivity(callback: (detached: Activity, existing: Activity, state: AttachedActivityDescriptor) => void)  {\n    this._myDetachedFrom.push(callback);\n  }\n\n  public get attached() {\n    if (!this.activity) {\n      return [];\n    }\n\n    return this.activity.attached;\n  }\n\n  public setFrameColor(color: string, callback: () => void): Promise<Activity> {\n\n    if (this.activity) {\n      return this.activity.setFrameColor(color, callback);\n    } else {\n      return Promise.resolve(null);\n    }\n  }\n\n  public getFrameColor(): string {\n\n    if (this.activity) {\n      return this.activity.getFrameColor();\n    }\n\n    return \"\";\n  }\n\n  public onFrameColorChanged(callback: () => void) {\n    this._myActivityFrameColorChanged.push(callback);\n  }\n\n  private _subscribeMyContextChanged(activity: Activity, context: object, delta: object, removed: string[]) {\n    const myWin = this.window;\n    if (util.isUndefinedOrNull(myWin)) {\n      return;\n    }\n\n    const myActivity = myWin.activity;\n    if (util.isUndefinedOrNull(myActivity)) {\n      return;\n    }\n\n    // ignore events not related to my activity\n    if (activity.id !== myActivity.id) {\n      return;\n    }\n\n    this._notifyMyContextChanged(activity, context, delta, removed);\n  }\n\n  private _subscribeMyWindowEvent(activity: Activity, window: ActivityWindow, event: any) {\n\n    if (util.isUndefinedOrNull(this.window)) {\n      return;\n    }\n\n    // ignore events not related to my window\n    if (this.window.id !== window.id) {\n      return;\n    }\n\n    if (event === EntityEventType.ActivityWindowJoinedActivity) {\n      this._notifyMyWindowEvent(activity, this._myActivityJoinedCallbacks);\n\n      // NB: tick42-contexts doesn't raise automatically an update event on join if the snapshot matches\n      // the currently recorded data\n      // revisited: however, it is pushing an update on subscribe() (which is performed by js-activity)\n      // long analysis for callback behavior in GW3: several cases\n      // 1 client calls onContextChanged before joined-activity arrives\n      // then callback is pushed but onContextChanged callback call is skipped\n      //    1-1 js-activity handles joined-activity first; it calls js-context subscribe\n      //    1-1-1 js-context has not seen the activity so far so it doesn't invoke an update\n      //    however, js-context then handles joined-activity and raises an update\n      //    1-1-2 js-context has seen the activity, so it raises an update\n      //    js-context then handles joined-activity and doesn't raise a second update unless the received snapshot is\n      //    different from the last seen context value (can this even happen?)\n      //    1-2 js-context handles joined-activity first\n      //    since js-activity is not subscribed, whether it raises an update or not, it's not propagated\n      //    js-activity then handles joined-activity, performs a subscribe and js-context raises an update\n      // 2 joined-activity arrives, whatever updates are raised by js-activity's subscribe() or js-context's\n      // message handler are not propagated since the callback is not pushed, client then calls onContextChanged,\n      // and the callback is called inside that\n      // also, the callback cannot be invoked first in 1 then 2 or first 2 then 1\n      // => in all cases, a callback is called exactly once as soon as (it's subscribed && the activity is joined)\n      // (in 1-1-2 it *might* be possible to be called twice, first with a slightly out of date context,\n      // then with the joined-activity snapshot, see \"different from the last seen context value\", but it's unlikely,\n      // and not a real issue anyway)\n      // in the HC case, however, case 1 doesn't work since js-context doesn't raise updates on subscribe() nor\n      // joining the activity (#deleteme TODO LATER MINOR: verify), so we need to raise it ourselves\n\n      // 2017-09-08: final revisit (@vnikolov)\n      // since SBGW_D-163 allows automatic subscription to contexts of pre-existing activities, 1-1-2 no longer works\n      // (we might have already seen the latest state before joined-activity so no update will be raised)\n      // for this reason I'm invoking notifyMyContextChanged unconditionally - so we might have multiple\n      // invocations; if this turns into a problem we might add a guard inside notifyMyContextChanged that\n      // checks we're not raising it twice with the same context value\n      //\n      // we might also get a duplicate raise if the sender of an update is also subscribed to the context\n      // if (this._m.usingHc) {\n      this._notifyMyContextChanged(activity, activity.context, null, null);\n      // }\n\n      // #deleteme TODO LATER MAJOR: what about the cases when we're not watching foreign activity contexts?\n    } else if (event === EntityEventType.ActivityWindowLeftActivity) {\n      this._notifyMyWindowEvent(activity, this._myActivityRemovedCallbacks);\n      // #deleteme TODO LATER MINOR: should we send null update here?\n    }\n  }\n\n  private _notifyMyWindowEvent(activity: Activity, callbackStore: Array<(activity: Activity, event: any) => void>) {\n    callbackStore.forEach((element) => {\n      try {\n        element(activity, event);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _notifyMyContextChanged(activity: Activity, context: object, delta?: object, removed?: string[]) {\n    delta = delta || {};\n    removed = removed || [];\n\n    this._myContextUpdateCallbacks.forEach( (element) => {\n      try {\n        element(context, delta, removed, activity);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _notifyAttached(state: AttachedActivityDescriptor) {\n\n    this._myAttached.forEach((cb) => {\n      try {\n        cb(state);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _notifyDetached(state: AttachedActivityDescriptor) {\n\n    this._myDetached.forEach((cb) => {\n      try {\n        cb(state);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _notifyAttachedTo(state: AttachedActivityDescriptor) {\n\n    this._myAttachedTo.forEach((cb) => {\n      try {\n        cb(this.activity, state);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _notifyDetachedFrom(detached: Activity, existing: Activity, state: AttachedActivityDescriptor) {\n\n    this._myDetachedFrom.forEach((cb) => {\n      try {\n        cb(detached, existing, state);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _subscribeActivitiesAttached(newAct: Activity, state: AttachedActivityDescriptor) {\n    const myWin = this.window;\n    if (util.isUndefinedOrNull(myWin)) {\n      return;\n    }\n\n    const myActivity = myWin.activity;\n    if (util.isUndefinedOrNull(myActivity)) {\n      return;\n    }\n\n    // ignore events not related to my activity\n    if (newAct.id !== myActivity.id) {\n      return;\n    }\n\n    if (state.windowIds.indexOf(myWin.id) >= 0) {\n      this._notifyAttachedTo(state);\n      return;\n    }\n\n    this._notifyAttached(state);\n  }\n\n  private _subscribeActivitiesDetached(newAct: Activity, oldAct: Activity, state: any) {\n    const myWin = this.window;\n    if (util.isUndefinedOrNull(myWin)) {\n      return;\n    }\n\n    const myActivity = myWin.activity;\n    if (util.isUndefinedOrNull(myActivity)) {\n      return;\n    }\n\n    // ignore events not related to my activity\n    if (oldAct.id === myActivity.id) {\n      this._notifyDetached(state);\n    }\n\n    if (newAct.id === myActivity.id) {\n      this._notifyDetachedFrom(newAct, oldAct, state);\n    }\n  }\n\n  private _subscribeWindowFrameColorChanged(window: Glue42.Windows.GDWindow) {\n    const act = this.activity;\n    if (!act) {\n      return;\n    }\n\n    if (!act.owner) {\n      return;\n    }\n\n    if (act.owner.underlyingWindow.id === window.id) {\n      this._myActivityFrameColorChanged.forEach((callback) => {\n        callback(window.frameColor);\n      });\n    }\n  }\n}\n","import ActivityEntity from \"../entities/activityEntity\";\nimport {\n  ActivityStatusChangeEventContext,\n  EntityEvent,\n  EntityEventContext,\n  EntityEventType\n} from \"../contracts/entityEvent\";\nimport Activity from \"../entities/activity\";\nimport ActivityWindow from \"../entities/activityWindow\";\nimport { ActivityState } from \"..//contracts/entityEvent\";\n\ndeclare const htmlContainer: any;\n\n/**\n * Collection of ActivityEntities that provides change notifications\n * @module entityCollection\n * @private\n */\nexport class EntityObservableCollection<T extends ActivityEntity> {\n\n  private _items: { [key: string]: T } = {};\n  private _listeners: Array<(item: T, action: EntityEventContext) => void> = [];\n  private _processNew: (entity: T) => void;\n\n  constructor(processNew: (entity: T) => void) {\n    this._processNew = processNew;\n  }\n\n  /**\n   * Adds one item to the collection\n   */\n  public addOne(item: T) {\n    this.add([item]);\n  }\n\n  /**\n   * Adds an array of items to the collection\n   */\n  public add(items: T[]) {\n    items.forEach((element) => {\n      this.process(new EntityEvent<T>(element, new EntityEventContext(EntityEventType.Added)));\n    });\n  }\n\n  /**\n   * Process existing EntityEvent\n   */\n  public process(event: EntityEvent<T>): T {\n\n    const context = event.context;\n    const type = context.type;\n    const entity = event.entity;\n\n    // here we're populating some data which particular implementations (e.g.\n    // GW3) can't provide\n\n    // TODO: extract these cases into external filters\n\n    // activity status change without old status?\n    // grab it from the existing entity\n    if (type === EntityEventType.StatusChange &&\n      !(context as ActivityStatusChangeEventContext).oldStatus) {\n      const act = this._items[entity.id] as any as Activity;\n      if (act) {\n        (context as ActivityStatusChangeEventContext).oldStatus = act.status;\n      }\n    }\n\n    // the GW3 bridge notifies us of possible status changes (it's mostly stateless so\n    // it can't/doesn't distinguish between JOINED ACTIVITY for an activity we already\n    // know about vs a brand new activity. for this reason, we just coalesce status\n    // updates which indicate the same state.\n    if (type === EntityEventType.StatusChange &&\n      (context as ActivityStatusChangeEventContext).oldStatus &&\n      (context as ActivityStatusChangeEventContext).newStatus &&\n      (context as ActivityStatusChangeEventContext).oldStatus.state ===\n      (context as ActivityStatusChangeEventContext).newStatus.state) {\n      context.type = EntityEventType.Updated;\n    }\n\n    // GW3: coalesce multiple joined/left events\n\n    if (typeof htmlContainer === \"undefined\") {\n      if (type === EntityEventType.ActivityWindowJoinedActivity &&\n        this._items[entity.id] &&\n        (this._items[entity.id] as any as ActivityWindow).activity) {\n        context.type = EntityEventType.Updated;\n      }\n      if (type === EntityEventType.ActivityWindowLeftActivity &&\n        this._items[entity.id] &&\n        !(this._items[entity.id] as any as ActivityWindow).activity) {\n        context.type = EntityEventType.Updated;\n      }\n    }\n\n    // update internal collections (adding the entity or updating existing entity). From that\n    // point start using the internalEntity\n    // NB: undefined properties are coalesced, null properties represent removals\n    const internalEntity = this._updateInternalCollections(entity, type, context);\n    this._notifyListeners(internalEntity, context);\n    return internalEntity;\n  }\n\n  /**\n   * Gets all items from the collection.\n   */\n  public get(): T[] {\n    const result = [];\n    for (const key in this._items) {\n      if (this._items.hasOwnProperty(key)) {\n        const element = this._items[key];\n        result.push(element);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Gets item by name/id\n   * @param name  Name/id of the item to get\n   * @returns     Item if found; undefined if not\n   */\n  public getByName(name: string) {\n    // this does not work for some reason\n    // return this._items[name];\n    for (const key in this._items) {\n      if (key === name) {\n        return this._items[key];\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Gets a item if in the collection or waits for it to appear\n   * @param name\n   * @returns {Promise<T>}\n   */\n  public getOrWait(name: string): Promise<T> {\n    return new Promise<T>((resolve) => {\n      const entityAddedHandler = (entity: T) => {\n        if (entity.id !== name) {\n          return;\n        }\n        resolve(entity);\n        this.unsubscribe(entityAddedHandler);\n      };\n      this.subscribe(entityAddedHandler);\n\n      // try to get right away - if not here wait for it to appear\n      const window = this.getByName(name);\n      if (window) {\n        this.unsubscribe(entityAddedHandler);\n        resolve(window);\n        return;\n      }\n    });\n  }\n\n  /**\n   * Subscribes a listener for changes\n   * @param handler Callback for changes\n   */\n  public subscribe(handler: (act: T, action: EntityEventContext) => void): () => void {\n    this._listeners.push(handler);\n    // replay existing items for new subscribers\n    Object.keys(this._items).forEach((key) => {\n      const element = this._items[key];\n      handler(element, new EntityEventContext(EntityEventType.Added.toString()));\n    });\n\n    return () => {\n      this.unsubscribe(handler);\n    };\n  }\n\n  /**\n   *  Unsubscribes a listener\n   */\n  public unsubscribe(handler: (act: T, action: EntityEventContext) => void) {\n    const index = this._listeners.indexOf(handler);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Notify all listeners for some event\n   */\n  private _notifyListeners(entity: T, context: EntityEventContext) {\n    this._listeners.forEach((listener) => {\n      try {\n        listener(entity, context);\n      } catch (e) {\n        return;\n      }\n    });\n  }\n\n  /**\n   * Update internal collections (usually after some kind of modification event has arrived)\n   */\n  private _updateInternalCollections(entity: T, type: EntityEventType, context: any) {\n    const entityAsAny = (entity as any);\n\n    // #deleteme TODO: refactor - currently we apply some rules for each type\n    const isActivityDestroy =\n      (type === EntityEventType.StatusChange &&\n        entityAsAny.status &&\n        entityAsAny.status.state === ActivityState.Destroyed) ||\n      (type === EntityEventType.StatusChange &&\n        context &&\n        context.newStatus &&\n        context.newStatus.state === ActivityState.Destroyed);\n\n    // #deleteme TODO: verify this stuff\n    // windows have two states - removed from activity and closed (TODO: this only works in GD 2.1 and later)\n    const isWindowClose = type === EntityEventType.Closed;\n    const isTypeRemove = type === EntityEventType.Removed && typeof entityAsAny.isIndependent === \"undefined\";\n\n    if (isTypeRemove || isWindowClose || isActivityDestroy) {\n\n      const oldEntity = this._items[entity.id];\n      delete this._items[entity.id];\n      // on remove return the input entity\n      this._processNew(entity);\n      if (oldEntity) {\n        entity._beforeDelete(oldEntity);\n      }\n      return entity;\n    } else {\n      const key = entity.id;\n      // if new object add, otherwise clone object properties\n      if (!this._items.hasOwnProperty(key)) {\n        this._processNew(entity);\n        this._items[entity.id] = entity;\n      } else {\n        this._items[entity.id]._update(entity);\n      }\n    }\n\n    return this._items[entity.id];\n  }\n}\n","﻿/* tslint:disable */\nimport { ActivityContextUpdateHandler, Callback } from \"../contracts/contracts\";\nimport { ActivityStatus } from \"../contracts/activityStatus\";\nimport {\n  ActivityContextChangedEventContext,\n  ActivityStatusChangeEventContext,\n  EntityEvent,\n  EntityEventContext,\n  EntityEventType\n} from \"../contracts/entityEvent\";\n\nimport ActivityType from \"../entities/activityType\";\nimport WindowType from \"../entities/windowType\";\nimport Activity from \"../entities/activity\";\nimport ActivityEntity from \"../entities/activityEntity\";\nimport ActivityWindow from \"../entities/activityWindow\";\nimport WindowSource from \"../entities/windowSource\";\n\nimport { nodeify } from \"../helpers/promiseExtensions\";\nimport { ReadyMarker } from \"../helpers/readyMarker\";\nimport { EntityObservableCollection } from \"../helpers/entityObservableCollection\";\nimport { Logger } from \"../helpers/logger\";\nimport * as util from \"../helpers/util\";\n\nimport { ActivityBridge } from \"../bridges/activityBridge\";\nimport { WindowDefinition } from \"../entities/windowDefinition\";\nimport { WindowBounds } from \"../contracts/windowBounds\";\nimport { CloneOptions } from \"../entities/cloneOptions\";\nimport { AttachedActivityDescriptor } from \"../entities/attachedActivityDescriptor\";\nimport { ActivityDescriptor } from \"../entities/activityDescriptor\";\nimport { ActivityState } from \"../contracts/entityEvent\";\nimport HCBridge from \"../bridges/hcBridge\";\nimport { WindowFactory } from \"../contracts/windowFactory\";\nimport { Glue42 } from \"../../../glue\";\n/* tslint:enable */\n\ntype OverrideTypeDefinition = Glue42.Activities.OverrideTypeDefinition;\n\ndeclare const htmlContainer: any;\n\nexport default class ActivityManager {\n  private _bridge: ActivityBridge;\n  private _readyMarker: ReadyMarker;\n  private _dataReadyMarker: ReadyMarker;\n  private _descriptorsMarker: ReadyMarker;\n\n  private _activityTypes: EntityObservableCollection<ActivityType>;\n  private _windowTypes: EntityObservableCollection<WindowType>;\n  private _activities: EntityObservableCollection<Activity>;\n  private _windows: EntityObservableCollection<ActivityWindow>;\n  private _logger: Logger = Logger.Get(\"activityManager\");\n  private _announcedWindows: ActivityWindow[] = [];\n  private _attachedCallbacks: Array<(newAct: any, descriptor: any) => void> = [];\n  private _detachedCallbacks: Array<(newAct: any, oldAct: Activity, descriptor: any) => void> = [];\n  private _frameColorChangesCallbacks: Array<(act: Activity, frameColor: string) => void> = [];\n  private _windowHandlers: any[][] = [];\n\n  public get usingHc(): boolean {\n    return this._bridge.bridgeType === \"HC\";\n  }\n\n  public get announcedWindows(): ActivityWindow[] {\n    return this._announcedWindows;\n  }\n\n  public set announcedWindows(v: ActivityWindow[]) {\n    throw new Error(\"not allowed\");\n  }\n\n  constructor(bridge: ActivityBridge, autoAnnounce: boolean, windows: any) {\n    this._bridge = bridge;\n    this._activityTypes = new EntityObservableCollection<ActivityType>((e) => this._grabEntity(e));\n    this._windowTypes = new EntityObservableCollection<WindowType>((e) => this._grabEntity(e));\n    this._activities = new EntityObservableCollection<Activity>((e) => this._grabEntity(e));\n    this._windows = new EntityObservableCollection<ActivityWindow>((e) => this._grabEntity(e));\n\n    // signals to wait for - get AT, get WT, get Activities and get Windows\n    this._dataReadyMarker = new ReadyMarker(\"Activity Manager Data\", [\"GetActivityTypes\", \"GetWindowTypes\", \"GetActivities\", \"GetWindows\"].length);\n    this._descriptorsMarker = new ReadyMarker(\"Attached Activities Descriptors\", [\"GetDescriptors\"].length);\n\n    // waiting for activity data first\n\n    // NB: in the GW3 case, we don't have the ability to request data at will\n    // but need wait for delta messages\n    // So GW3Bridge returns empty arrays from the get() calls\n    // We're relying on the fact that the GW3 bridge will wait\n    // until resolving its .ready()\n\n    if (autoAnnounce) {\n      // if auto announce replace the ready marker, so:\n      // 1) wait for data\n      // 2) get descriptors\n      // 3) announce the current window\n\n      this._readyMarker = new ReadyMarker(\"Activity Manager Announce\", [\"Announcement\"].length);\n      this._dataReadyMarker.setCallback((dataErr: any) => {\n        if (dataErr) {\n          this._readyMarker.error(dataErr);\n        }\n\n        this._descriptorsMarker.setCallback((err: any) => {\n\n          if (err) {\n            this._readyMarker.error(err);\n          }\n\n          this._logger.debug(\"Auto announcing window\");\n          // signal no matter if it failed or not\n          this.announceWindow()\n            .then((w) => {\n              // NB: this creates glue.activities.my.window\n              this._announcedWindows.push(w);\n              this._readyMarker.signal(\"Successfully announced window with id '\" + w.id + \"'\");\n            })\n            .catch((errCatch) => {\n              this._logger.debug(\"Will not announce window - \" + errCatch);\n              this._readyMarker.signal();\n            });\n        });\n\n        this.refreshDescriptors();\n      });\n    } else {\n      // TODO: not sure if this still works\n      this._readyMarker = this._dataReadyMarker;\n    }\n\n    this._bridge.onActivitiesAttached((e) => {\n      this._handleActivitiesAttached(e);\n    });\n    this._bridge.onActivitiesDetached((e) => {\n      this._handleActivitiesDetached(e);\n    });\n    this._bridge.onActivityAttachedDescriptorsRefreshed((e) => {\n      this._handleActivityDescriptorsRefreshed(e);\n    });\n    if (windows) {\n      windows.onWindowFrameColorChanged(this._handleWindowFrameColorChanged.bind(this));\n    }\n\n    // initialize the bridge\n    this._bridge.init();\n\n    // NB: there is no race condition here.\n    // Since browser/Node JS is a single-threaded environment, assuming no events on _bridge\n    // fire inside .init(), this subscribe will catch anything that comes between it and the init() call\n    this._subscribeForData();\n\n    // NB: in GW3 case, the initial state messages after a JOIN come in before the JOIN's SUCCESS\n    // message (see https://confluence.tick42.com:8443/display/TD/Global+Gateway+Domain#GlobalGatewayDomain-JOIN)\n    // so the .initReady().then() callback will only get invoked after we've received the initial domain\n    // state. We need to be ready to handle events before that, hence the _subscribeForData() above.\n    // what's more, our own JOINED ACTIVITY will come only after we've sent our READY, hence waiting\n    // for bridge.ready() in the manager's ready()\n\n    // wait for it to become ready and then start getting/subscribing for data\n    this._bridge\n      .initReady()\n      .then((aw) => {\n        this._getInitialData();\n      })\n      .catch((error) => {\n        // tslint:disable-next-line\n        console.log(error);\n      });\n  }\n\n  public ready(callback?: (err: string, manager: ActivityManager) => void): Promise<ActivityManager> {\n    const promise = new Promise<ActivityManager>((resolve, reject) => {\n      this._readyMarker.setCallback(\n        (err) => {\n          if (!err) {\n            resolve(this);\n          } else {\n            reject(this._readyMarker.getError());\n          }\n        });\n    });\n\n    return nodeify(Promise.all([this._bridge.ready(), promise]).then(() => this), callback);\n  }\n\n  /**\n   * @returns All known activity types\n   */\n  public getActivityTypes(): ActivityType[] {\n    return this._activityTypes.get();\n  }\n\n  /**\n   * Gets ActivityType by name\n   * @param name  Name to search for\n   * @returns     If found the @type ActivityType; otherwise undefined\n   */\n  public getActivityType(name: string): ActivityType {\n    return this._activityTypes.getByName(name);\n  }\n\n  /**\n   * Registers a new activity type\n   * @param activityTypeName      The name of the activity type to be created\n   * @param ownerWindowType       The type of the owner window or a WindowDefinition for the owner window\n   * @param helperWindowTypes     Types of helper windows (or WindowDefinitions for helper windows) for that activity type\n   * @param config                (HC only, deprecated) Layout config\n   * @param description           (HC only, deprecated) Description for the new activity type\n   * @param callback              (Optional) Callback for results - if not specified the method will return a promise\n   */\n  public registerActivityType(\n    activityTypeName: string,\n    ownerWindowType: string | WindowDefinition,\n    helperWindowTypes?: string[] | WindowDefinition[],\n    config?: any,\n    description?: string,\n    callback?: Callback<ActivityType>): Promise<ActivityType> {\n    const promise = new Promise<ActivityType>((resolve, reject) => {\n\n      // activityTypeName checks\n      if (util.isUndefinedOrNull(activityTypeName)) {\n        reject(\"activityTypeName argument can not be undefined\");\n        return;\n      }\n      if (!util.isString(activityTypeName)) {\n        reject(\"activityTypeName should be string\");\n        return;\n      }\n      // check if type is already defined\n      const actType = this.getActivityType(activityTypeName);\n      if (!util.isUndefinedOrNull(actType)) {\n        reject(\"Activity type '\" + activityTypeName + \"' already exists\");\n        return;\n      }\n\n      // ownerWindowType checks\n      let ownerDefinition: WindowDefinition;\n      if (util.isUndefined(ownerWindowType)) {\n        reject(\"Owner window type can not be undefined\");\n        return;\n      }\n      if (util.isString(ownerWindowType)) {\n        ownerDefinition = { type: (ownerWindowType as string), name: \"\", isIndependent: false, arguments: {} };\n      } else {\n        ownerDefinition = (ownerWindowType as WindowDefinition);\n      }\n\n      // helperWindowTypes checks\n      const helperDefinitions: WindowDefinition[] = [];\n      if (!util.isUndefined(helperWindowTypes) && util.isArray(helperWindowTypes)) {\n        // tslint:disable-next-line\n        for (const index in helperWindowTypes) {\n          const item = helperWindowTypes[index];\n          if (util.isString(item)) {\n            const definition = {\n              type: (item as string),\n              name: \"\",\n              isIndependent: false,\n              arguments: {},\n              relativeTo: \"\",\n              relativeDirection: \"\",\n              windowStyleAttributes: {}\n            };\n            helperDefinitions.push(definition);\n          } else {\n            helperDefinitions.push(item as WindowDefinition);\n          }\n        }\n      }\n\n      // redirect to bridge\n      this._bridge\n        .registerActivityType(activityTypeName,\n          ownerDefinition,\n          helperDefinitions,\n          config,\n          description)\n        .then((activityType) => {\n          // add to from collections\n          this._grabEntity(activityType);\n          resolve(activityType);\n        })\n        .catch((error) => {\n          reject(error);\n        });\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Unregister existing activity type\n   * @param type The name of the activity type to be removed\n   */\n  public unregisterActivityType(type: string, callback?: Callback<any>) {\n    const promise = new Promise<ActivityType>((resolve, reject) => {\n      // check if type is defined\n      const actType = this.getActivityType(type);\n      if (util.isUndefined(actType)) {\n        reject(\"Activity type '\" + type + \"' does not exists\");\n        return;\n      }\n      this._bridge.unregisterActivityType(type).then(() => resolve(actType), reject);\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Initiates a new activity from the given type.\n   * @param activityType  The ActivityType to initiate\n   * @param context       The initial context of the activity\n   * @param callback      Callback for result\n   * @param configuration Optional configuration passed to window/peer factories for the new activity's participants\n   * @returns             Promise for activity\n   */\n  public initiate(activityType: string, context?: object, callback?: Callback<Activity>, configuration?: WindowDefinition[] | OverrideTypeDefinition): Promise<Activity> {\n    const promise = new Promise<Activity>((resolve, reject) => {\n      // check if type is defined\n      const actType = this.getActivityType(activityType);\n      if (util.isUndefined(actType)) {\n        reject(\"Activity type '\" + activityType + \"' does not exists\");\n        return;\n      }\n\n      this._bridge\n        .initiateActivity(activityType, context, configuration)\n        .then((actId) => {\n\n          this._activities\n            .getOrWait(actId)\n            .then((act: Activity) => {\n              resolve(act);\n            })\n            .catch((err) => reject(err));\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n    return nodeify(promise, callback);\n  }\n\n  public subscribeActivityTypeEvents(handler: (act: ActivityType, action: string) => void) {\n    this._activityTypes.subscribe((at, context) => {\n      handler(at, context.type);\n    });\n  }\n\n  /**\n   * @returns All known WindowTypes\n   */\n  public getWindowTypes(): WindowType[] {\n    return this._windowTypes.get();\n  }\n\n  /**\n   * Gets WindowType by name\n   * @param name  The name of the type @type WindowType\n   * @returns     WindowType if found; undefined otherwise\n   */\n  public getWindowType(name: string): WindowType {\n    return this._windowTypes.getByName(name);\n  }\n\n  /**\n   * Registers a factory for a given WindowType. The factory will be called once window of that type is requested\n   * @param windowType   Window type that will be constructed from the factory. Can be a string (name of the window type)\n   * or object that has name, description properties\n   * @param factoryMethod      The factory that will construct Windows of that type\n   * @param description\n   * @param callback\n   * @param configuration\n   * @returns {}\n   */\n  public registerWindowFactory(\n    windowType: any,\n    factoryMethod: WindowFactory,\n    callback?: any): Promise<any> {\n    const promise = new Promise<any>((resolve, reject) => {\n      if (util.isUndefinedOrNull(windowType)) {\n        reject(\"no windowType specified\");\n        return;\n      }\n\n      if (util.isObject(windowType)) {\n        windowType = windowType.getName();\n      } else if (!util.isString(windowType)) {\n        reject(\"windowType should be string or object that has getName method\");\n        return;\n      }\n\n      this._bridge\n        .registerWindowFactory(windowType, factoryMethod)\n        .then((v) => {\n          resolve(v);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Unregisters all factories for a given WindowType.\n   * @param windowType   Window type that is constructed from the factory.\n   * @param callback\n   * @returns {}\n   */\n  public unregisterWindowFactory(windowType: string, callback?: any): Promise<any> {\n    const promise = new Promise<any>((resolve, reject) => {\n      if (util.isUndefinedOrNull(windowType)) {\n        reject(\"no windowType specified\");\n        return;\n      }\n\n      if (!util.isString(windowType)) {\n        reject(\"windowType should be a string\");\n        return;\n      }\n\n      this._bridge\n        .unregisterWindowFactory(windowType)\n        .then((v) => {\n          resolve(v);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * @returns All started activities\n   * @param activityType Can be a string or @type ActivityType. If string a new activityType will be created using the string for name.\n   * @returns Array of Activity objects\n   */\n  public getActivities(activityType?: string | ActivityType | string[] | ActivityType[]): Activity[] {\n    let act = this._activities.get();\n    act = act.filter((a) => a._ownerId);\n    if (!activityType) {\n      return act;\n    }\n    let types: any = activityType;\n    if (util.isString(activityType)) {\n      types = [activityType];\n    } else if (activityType instanceof ActivityType) {\n      types = [activityType.name];\n    } else if (activityType instanceof Array) {\n      // TODO check if string array or array of ActivityTypes\n    } else {\n      throw new Error(\"Invalid input argument 'activityType' = \" + activityType);\n    }\n\n    return act.filter((at: Activity) => {\n      const type = at.type;\n      return util.some(types, (t: ActivityType) => {\n        return type.id === t.id;\n      });\n    });\n  }\n\n  /**\n   * Returns Activity by ID\n   */\n  public getActivityById(id: string): Activity {\n    return this._activities.getByName(id);\n  }\n\n  /**\n   * Initialises activity for the current window - by doing this the window is announced as activity aware to the other participants\n   * @param windowType            Type of window\n   * @param activityWindowId      The id of the window that was created\n   * @returns {}                  Promise for an activity window (joined to an activity, if the activity creation fails the promise will be rejected)\n   */\n  public announceWindow(activityWindowId?: string, windowType?: string): Promise<ActivityWindow> {\n    const promise = new Promise<ActivityWindow>((resolve, reject) => {\n\n      // get the announcement info from the bridge (e.g. the context in HC) - this will be used if no arguments passed\n      const announcementInfo = this._bridge.getAnnouncementInfo();\n      if (util.isUndefined(activityWindowId)) {\n        activityWindowId = announcementInfo.activityWindowId;\n      }\n      if (util.isUndefined(windowType)) {\n        windowType = announcementInfo.activityWindowType;\n      }\n      if (util.isUndefinedOrNull(windowType)) {\n        throw new Error(\"Can not announce - unknown windowType\");\n      }\n\n      const activityId = announcementInfo && announcementInfo.activityId;\n\n      // We cover two cases here:\n      // * no activityWindowId supplied (neither in arguments or announcement info) - in that case we register new window by type. Most of the time this is the case when an independent window is created outside activity\n      // * activityWindowId supplied - window created as part of activity creation\n\n      // NB: in GW3, windows are created standalone, and receive 'JOINED' after they send a 'READY'\n      // so we always go in 'if' case, not 'else'\n      if (util.isUndefinedOrNull(activityWindowId)) {\n        this._logger.debug(\"Registering window with type:'\" + windowType + \"', name:'\" + announcementInfo.activityWindowName + \"', ind.:'\" + announcementInfo.activityWindowIndependent + \"'\");\n        // register new window created outside activity\n        this._bridge.registerWindow(windowType, announcementInfo.activityWindowName, announcementInfo.activityWindowIndependent)\n          .then(this._windows.getOrWait.bind(this._windows))\n          .then((w: any) => {\n            if (activityId) {\n              return this._activities.getOrWait(activityId).then((_: any) => w);\n            } else {\n              return w;\n            }\n          })\n          .then((w: any) => {\n            resolve(w);\n          })\n          .catch((err) => {\n            this._logger.error(err);\n          });\n\n      } else {\n        // announce new window created in an activity creation process\n        this._logger.debug(\"Announcing window with id '\" + activityWindowId + \"' and type '\" + windowType + \"'\");\n\n        // check if the window is already created -\n        const currentWindow = this._windows.getByName(activityWindowId);\n        if (!util.isUndefinedOrNull(currentWindow)) {\n          this._logger.debug(\"Window with id '\" + activityWindowId + \"' already announced - reusing the window\");\n          resolve(currentWindow);\n          return;\n        }\n\n        // window events handler\n        const windowEventHandler = (a: Activity, w: ActivityWindow, e: any) => {\n          if (activityWindowId === w.id) {\n            if (e === EntityEventType.ActivityWindowJoinedActivity) {\n              const activity = w.activity;\n              if (util.isUndefined(activity)) {\n                reject(\"UNDEFINED ACTIVITY\");\n              }\n              this._logger.trace(\"Got joined event for id '\" + activityWindowId + \"'\");\n              resolve(w);\n              this.unsubscribeWindowEvents(windowEventHandler);\n            }\n          }\n        };\n\n        this.subscribeWindowEvents(windowEventHandler);\n        this._logger.trace(\"Waiting for joined event for id '\" + activityWindowId + \"'\");\n        this._bridge.announceWindow(windowType, activityWindowId);\n      }\n    });\n    return promise;\n  }\n\n  /**\n   * Allows you to subscribe for windows events, e.g. window type registered\n   * @param handler   The handler to receive notifications\n   * @returns {}\n   */\n  public subscribeWindowTypeEvents(handler: (act: WindowType, event: string) => void) {\n    this._windowTypes.subscribe((wt, context) => {\n      handler(wt, context.type);\n    });\n  }\n\n  /**\n   * Subscribe for activity status events\n   * @param handler Handler function that will receive status notifications\n   * @returns {}\n   */\n  public subscribeActivityEvents(handler: (activity: Activity, newStatus: ActivityStatus, oldStatus: ActivityStatus) => void): () => void {\n    return this._activities.subscribe((act, context) => {\n      if (context.type === EntityEventType.StatusChange) {\n        const p = (context as ActivityStatusChangeEventContext);\n        handler(act, p.newStatus, p.oldStatus);\n      }\n\n      // implicitly leave the activity on destroy\n      if (context.type === EntityEventType.Removed ||\n        (context.type === EntityEventType.StatusChange &&\n          (context as ActivityStatusChangeEventContext).newStatus.getState() === ActivityState.Destroyed)) {\n        for (const window of this._windows.get()) {\n          if (window.activity && window.activity.id === act.id) {\n            this._windows.process(new EntityEvent<ActivityWindow>(window, new EntityEventContext(EntityEventType.ActivityWindowLeftActivity)));\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * Allows you to subscribe for windows events, e.g. window joining to activity\n   * @param handler   The handler to receive notifications\n   * @returns {}\n   */\n  public subscribeWindowEvents(handler: (activity: Activity, window: ActivityWindow, event: any) => void): () => void {\n    const wrappingHandler = (window: ActivityWindow, context: any) => {\n      let eventType = context.type;\n      if (eventType === EntityEventType.Added) {\n        // rename added to opened (because added is misleading - semantically it's the opposite of remove);\n        eventType = \"opened\";\n      }\n      handler(window.activity, window, eventType);\n    };\n    this._windowHandlers.push([handler, wrappingHandler]);\n    return this._windows.subscribe(wrappingHandler);\n  }\n\n  public unsubscribeWindowEvents(handler: (activity: Activity, window: ActivityWindow, event: any) => void) {\n    const found = this._windowHandlers.find((pair) => pair[0] === handler);\n    if (found) {\n      this._windowHandlers.splice(this._windowHandlers.indexOf(found), 1);\n      this._windows.unsubscribe(found[1]);\n    }\n  }\n\n  /**\n   * Creates a new window from a given type and joins it to an activity\n   *\n   * @param activity      Activity to join the window to\n   * @param windowType    The window type to join (string or window definition)\n   * @param callback      (Optional) Result callback\n   * @returns             Promise for ActivityWindow\n   */\n  public createWindow(activity: Activity, windowTypeOrConfiguration: string | WindowDefinition | any, callback?: Callback<ActivityWindow>): Promise<ActivityWindow> {\n    const promise = new Promise<ActivityWindow>((resolve, reject) => {\n      if (util.isUndefinedOrNull(windowTypeOrConfiguration)) {\n        reject(\"windowType is undefined\");\n      }\n\n      let windowDefinition: WindowDefinition;\n      if (util.isString(windowTypeOrConfiguration)) {\n        windowDefinition = { type: (windowTypeOrConfiguration as string), name: \"\", isIndependent: false, arguments: {} };\n      } else if (windowTypeOrConfiguration instanceof WindowType) {\n        windowDefinition = {\n          type: (windowTypeOrConfiguration as any).type || windowTypeOrConfiguration.id,\n          name: windowTypeOrConfiguration.name || (windowTypeOrConfiguration as any).type || windowTypeOrConfiguration.id,\n          isIndependent: false\n        };\n      } else {\n        windowDefinition = (windowTypeOrConfiguration as WindowDefinition);\n      }\n\n      let relativeToWindow: string | WindowSource;\n      if (!util.isUndefinedOrNull(windowDefinition.relativeTo)) {\n        relativeToWindow = windowDefinition.relativeTo;\n        if (typeof relativeToWindow === \"string\") {\n          const windows = this.getWindows({ type: relativeToWindow as string });\n          if (!util.isUndefinedOrNull(windows) && windows.length > 0) {\n            windowDefinition.relativeTo = windows[0].id;\n          }\n        } else if (!util.isUndefinedOrNull(relativeToWindow.type)) {\n          const windows = this.getWindows({ type: relativeToWindow.type });\n          if (!util.isUndefinedOrNull(windows) && windows.length > 0) {\n            windowDefinition.relativeTo = windows[0].id;\n          }\n        } else if (!util.isUndefinedOrNull(relativeToWindow.windowId)) {\n          windowDefinition.relativeTo = relativeToWindow.windowId;\n        }\n      }\n\n      this._bridge.createWindow(activity && activity.id, windowDefinition)\n        .then((wid) => {\n\n          this._logger.debug(\"Window created, waiting for window entity with id \" + wid);\n          const handler = (window: ActivityWindow, context: EntityEventContext) => {\n            // wait until the window has activity property (this means it was joined)\n            if (window.id === wid && (!activity || window.activity)) {\n              this._logger.debug(\"Got entity window with id \" + wid);\n              resolve(window);\n              this._windows.unsubscribe(handler);\n            }\n          };\n\n          // if we can not get the window right away, wait for event\n          this._windows.subscribe(handler);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Creates relative windows from a given types and joins them to an activity\n   *\n   * @param activity               Activity to join relative windows to\n   * @param relativeWindowTypes    Relative window types to join (string or window definitions array)\n   * @param callback               (Optional) Result callback\n   * @returns                      Promise for ActivityWindow\n   */\n  public createStackedWindows(activity: Activity, relativeWindowTypes: Array<string | WindowDefinition>, timeout?: number, callback?: Callback<ActivityWindow[]>): Promise<ActivityWindow[]> {\n    const promise = new Promise<ActivityWindow[]>((resolve, reject) => {\n      if (util.isUndefinedOrNull(activity)) {\n        reject(\"activity is undefined\");\n      }\n      if (util.isUndefinedOrNull(relativeWindowTypes)) {\n        reject(\"relativeWindowTypes is undefined\");\n      }\n\n      if (!Array.isArray(relativeWindowTypes)) {\n        reject(\"relativeWindowTypes has to be array\");\n      }\n      if (util.isUndefinedOrNull(timeout)) {\n        timeout = 20000; // default timeout: 20 seconds\n      }\n\n      const relativeWindows: WindowDefinition[] = [];\n      relativeWindowTypes.forEach((element) => {\n        let windowDefinition: WindowDefinition;\n        if (util.isString(element)) {\n          windowDefinition = { type: (element as string), name: \"\", isIndependent: false, arguments: {} };\n        } else {\n          windowDefinition = (element as WindowDefinition);\n        }\n\n        let relativeToWindow: WindowSource;\n        if (!util.isUndefinedOrNull(windowDefinition.relativeTo)) {\n          // this can not be string, converted in the prev. layer\n          relativeToWindow = windowDefinition.relativeTo as WindowSource;\n          if (!util.isUndefinedOrNull(relativeToWindow.type)) {\n            windowDefinition.relativeTo = relativeToWindow.type;\n          } else if (!util.isUndefinedOrNull(relativeToWindow.windowId)) {\n            const windows = this.getWindows({ id: relativeToWindow.windowId });\n            if (!util.isUndefinedOrNull(windows) && windows.length > 0) {\n              windowDefinition.relativeTo = windows[0].type.name;\n              windowDefinition.useExisting = true;\n            }\n          }\n        }\n\n        relativeWindows.push(windowDefinition);\n      });\n\n      this._bridge.createStackedWindows(activity.id, relativeWindows, timeout)\n        .then((wid) => {\n          const activityWindows: ActivityWindow[] = [];\n          const alreadyCreated: string[] = [];\n          const handler = function(window: ActivityWindow, context: EntityEventContext) {\n            // wait until the window has activity property (this means it was joined)\n            if (wid.indexOf(window.id) >= 0 && alreadyCreated.indexOf(window.id) < 0 && window.activity) {\n              this._logger.debug(\"Got entity window with id \" + wid);\n              activityWindows.push(window);\n              alreadyCreated.push(window.id);\n\n              if (activityWindows.length === wid.length) {\n                resolve(activityWindows);\n                this._windows.unsubscribe(handler);\n              }\n            }\n          }.bind(this);\n\n          // if we can not get the window right away, wait for event\n          this._windows.subscribe(handler);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Joins a new window from a given type to the activity\n   *\n   * @param activity      Activity to join the window to\n   * @param window        The window to join\n   * @param callback      (Optional) Result callback\n   * @returns             Promise for ActivityWindow\n   */\n  public addWindowToActivity(activity: Activity, window: ActivityWindow, callback?: Callback<ActivityWindow>): Promise<ActivityWindow> {\n    const toReturn = this._bridge.joinActivity(activity.id, window.id)\n      .then(() => window);\n    nodeify(toReturn, callback);\n    return toReturn;\n  }\n\n  /**\n   * Removes a window from the activity\n   *\n   * @param activity  Activity to remove the window from\n   * @param           The window to remove\n   * @param           (Optional) Result callback\n   * @returns         Promise for ActivityWindow\n   */\n  public leaveWindowFromActivity(activity: Activity, window: ActivityWindow, callback?: Callback<ActivityWindow>): Promise<ActivityWindow> {\n    const toReturn = this._bridge.leaveActivity(activity.id, window.id)\n      .then(() => window);\n    nodeify(toReturn, callback);\n    return toReturn;\n  }\n\n  /**\n   * Replaces the activity context\n   * @param activity  Activity\n   * @param context   The new context\n   * @param callback  (Optional) Result callback\n   * @returns         Promise for Activity\n   */\n  public setActivityContext(activity: Activity, context: object, callback?: Callback<Activity>): Promise<Activity> {\n    const promise = new Promise<Activity>((resolve, reject) => {\n      if (util.isUndefinedOrNull(activity)) {\n        reject(\"activity can not be null\");\n      }\n\n      // TODO: duplication with updateActivityContext\n\n      // DONE: verify is the change visible here when 'updateActivityContext' resolves?\n      this._bridge\n        .updateActivityContext(activity, context, true)\n        .then((_) => {\n          resolve(activity);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Updates activity context using the properties from  context argument.\n   * If old context is {a:1, b:2, c:3} and invoking updateContext({b:3, c:null}) will result a context\n   * be {a:1, b:3}\n   *\n   * @param activity\n   * @param context\n   * @param callback\n   */\n  public updateActivityContext(activity: Activity, context: any, callback?: Callback<Activity>): Promise<Activity> {\n    const promise = new Promise<Activity>((resolve, reject) => {\n      if (util.isUndefinedOrNull(activity)) {\n        reject(\"activity can not be null\");\n      }\n\n      const removedKeys = [];\n      for (const key in context) {\n        if (context.hasOwnProperty(key) && context[key] === null) {\n          removedKeys.push(key);\n        }\n      }\n      for (const removedKey of removedKeys) {\n        delete context[removedKey];\n      }\n\n      this._bridge\n        .updateActivityContext(activity, context, false, removedKeys)\n        .then((_) => {\n          // DONE: verify is the change already visible here when 'updateActivityContext' resolves?\n          resolve(activity);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Subscribe for activity context update events\n   *\n   * @param activity  Activity\n   * @param handler   Handler function that will receive context related events\n   * @returns {}\n   */\n  public subscribeActivityContextChanged(handler: ActivityContextUpdateHandler) {\n    this._activities.subscribe((act, context) => {\n      if (context.type === EntityEventType.ActivityContextChange) {\n        const updateContext = context as ActivityContextChangedEventContext;\n        handler(act, updateContext.context, updateContext.updated, updateContext.removed);\n      }\n    });\n  }\n\n  /**\n   * Stops an activity\n   * @returns {}\n   */\n  public stopActivity(activity: Activity, callback?: Callback<boolean>): Promise<boolean> {\n    const promise = this._bridge.stopActivity(activity);\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Returns activity windows based on some filter. If no filter supplied all activity windows are returned.\n   * @param filter  Filter that\n   * @returns Array of ActivityWindows that match the filter object\n   */\n  public getWindows(filter: { id?: string, type?: string, name?: string, activityId?: string }): ActivityWindow[] {\n    if (util.isUndefined(filter)) {\n      return this._windows.get();\n    }\n\n    if (!util.isUndefined(filter.id)) {\n      return [this._windows.getByName(filter.id)];\n    }\n\n    const allWindows = this._windows.get();\n\n    return allWindows.filter((w) => {\n\n      if (!util.isUndefined(filter.type) && w.type.id !== filter.type) {\n        return false;\n      }\n\n      if (!util.isUndefined(filter.name) && w.name !== filter.name) {\n        return false;\n      }\n\n      if (!util.isUndefined(filter.activityId)) {\n        if (util.isUndefinedOrNull(w.activity)) {\n          return false;\n        }\n\n        if (w.activity.id !== filter.activityId) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n\n  public getWindowBounds(id: string): Promise<WindowBounds> {\n    return this._bridge.getWindowBounds(id);\n  }\n\n  public setWindowBounds(id: string, bounds: WindowBounds, callback?: Callback<ActivityWindow>): Promise<any> {\n    const promise = new Promise<any>((resolve, reject) => {\n      this._bridge.setWindowBounds(id, bounds)\n        .then(() => resolve())\n        .catch((err) => reject(err));\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  public closeWindow(id: string): Promise<any> {\n    return this._bridge.closeWindow(id);\n  }\n\n  public activateWindow(id: string, focus: boolean): Promise<any> {\n    return this._bridge.activateWindow(id, focus);\n  }\n\n  public setWindowVisibility(id: string, visible: boolean): Promise<any> {\n    return this._bridge.setWindowVisibility(id, visible);\n  }\n\n  public clone(activity: Activity, cloneOptions: CloneOptions, callback?: Callback<Activity>) {\n    const promise = new Promise<any>((resolve, reject) => {\n      if (!activity) {\n        reject(\"activity can not be null\");\n      }\n\n      this._bridge.cloneActivity(activity.id, cloneOptions)\n        .then((activityId) => {\n          this._activities\n            .getOrWait(activityId)\n            .then((act: Activity) => {\n              resolve(act);\n            })\n            .catch((err) => reject(err));\n        })\n        .catch((err) => reject(err));\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  public attachActivities(from: string, to: string, tag?: object, callback?: Callback<AttachedActivityDescriptor>): Promise<AttachedActivityDescriptor> {\n\n    tag = tag || {};\n\n    const promise = new Promise<AttachedActivityDescriptor>((resolve, reject) => {\n\n      const fromActivity = this._activities.getByName(from);\n      if (!fromActivity) {\n        reject(\"can not find activity with id \" + from);\n        return;\n      }\n\n      const toActivity = this._activities.getByName(to);\n      if (!toActivity) {\n        reject(\"can not find activity with id \" + to);\n        return;\n      }\n\n      return this._bridge.attachActivities(from, to, tag)\n        .then((data: any) => {\n          const newActId = data.to;\n          const state = data.descriptor;\n          const allStates = data.descriptors;\n\n          this._activities.getOrWait(newActId).then((act) => {\n            act._updateDescriptors(allStates);\n            const stateWrapped = act.attached.filter((u) => u.ownerId === state.ownerId)[0];\n\n            resolve(stateWrapped);\n          });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  public detachActivities(\n    activityId: string,\n    descriptor: ActivityDescriptor,\n    callback?: Callback<Activity>): Promise<Activity> {\n    const promise = new Promise<Activity>((resolve, reject) => {\n      return this._bridge.detachActivities(activityId, descriptor)\n        .then(/*(params)*/() => {\n          // #deleteme TODO: deal with this\n          const oldActId: string = undefined; // params.oldActivityId;\n          const newActId: string = undefined; // params.newActivityId;\n          const descriptors: any = undefined; // params.descriptors;\n\n          this._activities\n            .getOrWait(oldActId)\n            .then((oldAct: Activity) => {\n              oldAct._updateDescriptors(descriptors);\n\n              this._activities\n                .getOrWait(newActId)\n                .then((newAct: Activity) => {\n                  resolve(newAct);\n                });\n            })\n            .catch((err) => reject(err));\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  public subscribeActivitiesAttached(callback: any) {\n    this._attachedCallbacks.push(callback);\n  }\n\n  public subscribeActivitiesDetached(callback: any) {\n    this._detachedCallbacks.push(callback);\n  }\n\n  public subscribeActivityFrameColorChanged(callback: () => void) {\n    this._frameColorChangesCallbacks.push(callback);\n  }\n\n  /** Assigns a manager to a given ActivityEntity */\n  private _grabEntity(entity: ActivityEntity) {\n    entity._manager = this;\n  }\n\n  private _getInitialData() {\n    this._logger.debug(\"Request initial data...\");\n\n    // NB: there's no possibility for duplicate entities from events that have come\n    // in between _bridge.init() and _bridge.ready()'s resolve, since the ObservableCollections\n    // coalesce items by id.\n\n    this._bridge.getActivityTypes()\n      .then((at) => {\n        this._activityTypes.add(at);\n        this._dataReadyMarker.signal(\"Got act types\");\n      })\n      .catch((error) => {\n        this._logger.error(error);\n        this._dataReadyMarker.error(\"Can not initialize ActivityManager - error getting activity types -\" + error);\n      });\n\n    this._bridge.getWindowTypes()\n      .then((wt) => {\n        this._windowTypes.add(wt);\n        this._dataReadyMarker.signal(\"Got window types\");\n      })\n      .catch((error) => {\n        this._logger.error(error);\n        this._dataReadyMarker.error(\"Can not initialize ActivityManager - error getting window types  \" + error);\n      });\n\n    this._bridge.getActivities()\n      .then((ac) => {\n        this._activities.add(ac);\n        this._dataReadyMarker.signal(\"Got activities\");\n      })\n      .catch((error) => {\n        this._logger.error(error);\n        this._dataReadyMarker.error(\"Can not initialize ActivityManager - error getting activity instances -\" + error);\n      });\n\n    this._bridge.getActivityWindows()\n      .then((aw) => {\n        this._windows.add(aw);\n        this._dataReadyMarker.signal(\"Got windows\");\n      })\n      .catch((error) => {\n        this._logger.error(error);\n        this._dataReadyMarker.error(\"Can not initialize ActivityManager - error getting activity windows -\" + error);\n      });\n  }\n\n  private _subscribeForData() {\n    this._logger.debug(\"Subscribe for data...\");\n\n    // NB: there's no possibility for duplicate entities from events that have come\n    // in between _bridge.init() and _bridge.ready()'s resolve, since the ObservableCollections\n    // coalesce items by id.\n\n    this._bridge.onActivityTypeStatusChange((event) => {\n      this._activityTypes.process(event);\n    });\n\n    this._bridge.onWindowTypeStatusChange((event) => {\n      this._windowTypes.process(event);\n    });\n\n    this._bridge.onActivityStatusChange((event: EntityEvent<Activity>) => {\n      const activity = this._activities.process(event);\n      if (event.context.type === EntityEventType.ActivityWindowJoinedActivity &&\n        activity &&\n        activity.context &&\n        this._bridge instanceof HCBridge) {\n        // for parity with older code which explicitly sent a context update to subscribers\n        // upon joining an activity\n        this._activities.process(new EntityEvent<Activity>(activity, new ActivityContextChangedEventContext(activity.context, activity.context, [])));\n      }\n    });\n\n    this._bridge.onActivityWindowChange((event) => {\n      this._windows.process(event);\n    });\n  }\n\n  private _handleActivitiesAttached(data: any) {\n\n    const newActId = data.to;\n    const descriptor = data.descriptor;\n    const descriptors = data.descriptors;\n\n    this._activities.getOrWait(newActId).then((act) => {\n      act._updateDescriptors(descriptors);\n      const descriptorAsObjectFromAPI = act.attached.filter((u) => u.ownerId === descriptor.ownerId)[0];\n\n      this._attachedCallbacks.forEach((callback) => {\n        try {\n          callback(act, descriptorAsObjectFromAPI);\n        } catch (err) {\n          return;\n        }\n      });\n\n    });\n  }\n\n  private _handleActivitiesDetached(data: any) {\n    const oldActId = data.oldActivityId;\n    const newActId = data.newActivityId;\n    const descriptors = data.descriptors;\n    const descriptor = data.descriptor;\n\n    this._activities.getOrWait(oldActId).then((oldAct) => {\n\n      oldAct._updateDescriptors(descriptors);\n\n      this._activities.getOrWait(newActId).then((newAct) => {\n\n        this._detachedCallbacks.forEach((callback) => {\n          try {\n            callback(newAct, oldAct, descriptor);\n          } catch (err) {\n            return;\n          }\n        });\n      });\n    });\n  }\n\n  private _handleActivityDescriptorsRefreshed(data: any) {\n    const id = data.id;\n    const descriptors = data.descriptors;\n\n    const act = this._activities.getByName(id);\n    if (act) {\n      act._updateDescriptors(descriptors);\n    }\n  }\n\n  private refreshDescriptors() {\n    this._bridge.getAttachedDescriptors()\n      .then((map: any) => {\n\n        // populate descriptors\n        if (map) {\n          Object.keys(map).forEach((key: string) => {\n            const actId = key;\n            const descriptors = map[key];\n\n            const act = this._activities.getByName(actId);\n            if (act) {\n              act._updateDescriptors(descriptors);\n            }\n          });\n        }\n\n        this._descriptorsMarker.signal(\"Successfully got descriptors\");\n      })\n      .catch((err) => {\n        this._descriptorsMarker.error(\"failed to get descriptors - \" + err);\n      });\n  }\n\n  private _handleWindowFrameColorChanged(win: Glue42.Windows.GDWindow) {\n    if (!win.activityId) {\n      return;\n    }\n\n    const act = this._activities.getByName(win.activityId);\n    if (!act) {\n      return;\n    }\n\n    // notify for the owner only\n    if (!act.owner) {\n      return;\n    }\n\n    if (act.owner.underlyingWindow.id !== win.id) {\n      return;\n    }\n\n    this._frameColorChangesCallbacks.forEach((callback) => {\n      try {\n        callback(act, win.frameColor);\n      } catch (e) {\n        return;\n      }\n    });\n  }\n}\n","import ActivityType from \"./../entities/activityType\";\nimport WindowType from \"./../entities/windowType\";\nimport * as util from \"./../helpers/util\";\nimport ActivityManager from \"./../core/activityManager\";\nimport My from \"./activityMyAPI\";\nimport { WindowDefinition } from \"./../entities/windowDefinition\";\nimport { Callback } from \"./../contracts/contracts\";\nimport Activity from \"./../entities/activity\";\nimport ActivityWindow from \"./../entities/activityWindow\";\nimport { ActivityStatus } from \"./../contracts/activityStatus\";\nimport { WindowFactory } from \"../contracts/windowFactory\";\nimport { Glue42 } from \"../../../glue\";\n\nexport interface ManagementAPI {\n  activityTypes: Glue42.Activities.ActivityTypesAPI;\n  windowTypes: Glue42.Activities.WindowTypesAPI;\n  windows: Glue42.Activities.WindowingAPI;\n  instances: Glue42.Activities.InstancesAPI;\n\n  onAttached(callback: () => void): void;\n  onDetached(callback: () => void): void;\n  onActivityFrameColorChanged(callback: () => void): void;\n}\n\nexport class ActivityManagementAPI implements ManagementAPI {\n\n  public _m: ActivityManager;\n\n  public _my: My;\n\n  public activityTypes: Glue42.Activities.ActivityTypesAPI;\n\n  public windowTypes: Glue42.Activities.WindowTypesAPI;\n\n  public windows: Glue42.Activities.WindowingAPI;\n\n  public instances: Glue42.Activities.InstancesAPI;\n\n  constructor(manager: ActivityManager, my: My) {\n    this._m = manager;\n    this._my = my;\n\n    this.activityTypes = {\n      get: this._getActivityTypesWrapper.bind(this),\n      register: this._m.registerActivityType.bind(this._m),\n      unregister: this._m.unregisterActivityType.bind(this._m),\n      subscribe: this._m.subscribeActivityTypeEvents.bind(this._m),\n      unsubscribe: undefined,\n      initiate: this._m.initiate.bind(this._m)\n    };\n\n    this.windowTypes = {\n      get: this._getWindowTypesWrapper.bind(this),\n      registerFactory: this._m.registerWindowFactory.bind(this._m),\n      unregisterFactory: this._m.unregisterWindowFactory.bind(this._m),\n      subscribe: this._m.subscribeWindowTypeEvents.bind(this._m),\n      unsubscribe: undefined\n    };\n\n    this.windows = {\n      get: this._m.getWindows.bind(this._m),\n      subscribe: this._m.subscribeWindowEvents.bind(this._m),\n      announce: this._m.announceWindow.bind(this._m),\n      unsubscribe: undefined,\n      create: this._m.createWindow.bind(this._m)\n    };\n\n    this.instances = {\n      get: this._m.getActivities.bind(this._m),\n      subscribe: this._m.subscribeActivityEvents.bind(this._m),\n      unsubscribe: undefined\n    };\n  }\n\n  public onAttached(callback: () => void) {\n    this._m.subscribeActivitiesAttached(callback);\n  }\n\n  public onDetached(callback: () => void) {\n    this._m.subscribeActivitiesDetached(callback);\n  }\n\n  public onActivityFrameColorChanged(callback: () => void) {\n    this._m.subscribeActivityFrameColorChanged(callback);\n  }\n\n  private _getActivityTypesWrapper(name?: string): ActivityType[] | ActivityType {\n    if (util.isUndefined(name)) {\n      return this._m.getActivityTypes();\n    }\n    return this._m.getActivityType(name);\n  }\n\n  private _getWindowTypesWrapper(name?: string): WindowType[] | WindowType {\n    if (util.isUndefined(name)) {\n      return this._m.getWindowTypes();\n    }\n    return this._m.getWindowType(name);\n  }\n}\n","import ActivityManager from \"./../core/activityManager\";\nimport My from \"./activityMyAPI\";\nimport { nodeify } from \"./../helpers/promiseExtensions\";\nimport { ActivityManagementAPI, ManagementAPI } from \"./activityManagementAPI\";\nimport { ActivityAGM } from \"../core/activityAGM\";\n\nexport interface API {\n\n  aware: boolean;\n\n  inActivity: boolean;\n\n  my: My;\n\n  agm: ActivityAGM;\n\n  all: ManagementAPI;\n\n  ready(callback?: (api: API) => void): Promise<API>;\n\n  getAvailableFrameColors(): string[];\n}\n\n/**\n * The entry points of activities API - accessible from glue.activities\n *\n * @module activities\n */\nexport class ActivityAPI implements API {\n\n  public _mgr: ActivityManager;\n  public _my: My;\n\n /**\n  * Extended API that provides access to all running activities and windows and available activity and window types\n  *\n  * @var {module:all} all\n  */\n public all: ManagementAPI;\n\n  constructor(manager: ActivityManager, my: My) {\n    this._mgr = manager;\n    this._my = my;\n    this.all = new ActivityManagementAPI(manager, my);\n  }\n\n  /**\n   * The entry point for your activity code.\n   *\n   * @function ready\n   * @returns {Promise<module:activities>} A promise for activity API\n   */\n  public ready(callback?: any): Promise<API> {\n    const promise = new Promise<any>((resolve, reject) => {\n      this._mgr.ready()\n        .then(() => {\n          resolve(this);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * A lightweight, single activity oriented subset of the API which should be used by most activity applications\n   *\n   * @var {module:my} my\n   */\n  public get my(): My {\n    return this._my;\n  }\n\n  /**\n   * True if the current window is activity aware - meaning that the window has been created as\n   * an activity participant - either a helper or an independent window.\n   * Check this after the API is ready.\n   *\n   * @var {bool} aware\n   */\n  public get aware(): boolean {\n    return this._my.window !== undefined;\n  }\n\n  /**\n   * Returns true if the current window is activity aware and is currently participating in activity\n   *\n   * @var {bool} inActivity\n   */\n  public get inActivity(): boolean {\n    return this.aware && this._my.activity !== undefined;\n  }\n\n  /**\n   * Defines an Activity-specific version of the AGM API which:\n   * * restricts method registrations to activity-only windows\n   * * restricts method discovery and invocation to activity-only methods, unless you explicitly specify otherwise\n   * Other than that, the API is pretty much the same.\n   *\n   * @var  {module:activityAGM} agm\n   *\n   */\n  public get agm(): ActivityAGM {\n    if (!this.aware) {\n      // no agm if not activity aware\n      return undefined;\n    }\n    if (!this.inActivity) {\n      // if we're not in activity no\n      return new ActivityAGM(null);\n    }\n\n    return this._my.activity.agm;\n  }\n\n  /**\n   * Returns a list of frame colors that can be used as activity frame colors\n   *\n   * @returns {string[]}\n   */\n  public getAvailableFrameColors(): string[] {\n    let frameColors;\n    const hc = window.htmlContainer;\n    if (hc) {\n      frameColors = hc.getFrameColors();\n    }\n\n    frameColors = frameColors || [];\n\n    return frameColors;\n  }\n}\n","import GW3Bridge from \"./bridges/gw3Bridge\";\nimport HCBridge from \"./bridges/hcBridge\";\n\nimport My from \"./API/activityMyAPI\";\nimport ActivityManager from \"./core/activityManager\";\n\nimport { ActivityBridge } from \"./bridges/activityBridge\";\n\nimport { ActivityConfig } from \"./activityConfig\";\nimport { ActivityAPI } from \"./API/activityAPI\";\nimport { ActivityAGM } from \"./core/activityAGM\";\nimport { Logger } from \"./helpers/logger\";\nimport * as util from \"./helpers/util\";\n\nimport { Glue42Core } from \"@glue42/core\";\n\nimport { nodeify } from \"./helpers/promiseExtensions\";\n\n/**\n * Activity context update handler - used when we want to subscribe for context changes in a specific activity\n *\n * @callback contextChangedHandler\n * @param {Object} context The full context of the activity after the update\n * @param {Object} delta The delta (contains the added/removed keys at top level)\n * @param {string[]} removed  Array of keys that were removed from context\n * @param {module:activity} activity The activity instance that owns the context\n *\n */\n\n/**\n * @callback windowEventHandler Handler for ActivityWindow events - e.g window joined to activity, window removed from\n * activity\n * @param {module:activity} activity\n * @param {module:activityWindow} window\n * @param {string} event 'joined' or 'removed'\n */\n\n/**\n * @callback activityStatusChangeHandler Handler for activity status changed events\n * @param {module:activity} activity\n * @param {activityStatus} newStatus\n * @param {activityStatus} oldStatus\n *\n */\n\n/**\n * @typedef {Object} windowDefinition\n * @property {string} type\n * @property {string} name\n * @property {Object} arguments\n */\n\n/**\n * @typedef {Object} bounds\n * @param {number} top\n * @param {number} left\n * @param {number} width\n * @param {number} height\n *\n */\n\n/**\n * @typedef {Object} agmInstance\n * @param {string} application\n * @param {string} pid\n * @param {string} machine\n * @param {string} user\n * @param {string} environment\n * @param {string} region\n */\n\n// Factory function for activity API\nexport class ActivityModule {\n    public static checkIsUsingGW3Implementation(connection: Glue42Core.Connection.API) {\n        return connection.protocolVersion === 3;\n    }\n\n    private _api: ActivityAPI;\n    private _isUsingGW3Implementation: boolean;\n    private _isUsingHCImplementation: boolean;\n    private _readyPromise: Promise<ActivityModule>;\n\n    get api(): ActivityAPI {\n        return this._api;\n    }\n\n    set api(value: ActivityAPI) {\n        this._api = value;\n    }\n\n    constructor(config: ActivityConfig) {\n        if (!config) {\n            throw new Error(\"config can not be null\");\n        }\n\n        // set log level\n        if (!util.isUndefined(config.logLevel)) {\n            Logger.Level = config.logLevel;\n        }\n\n        if (!util.isUndefinedOrNull(config.logger)) {\n            Logger.GlueLogger = config.logger;\n        }\n\n        // choose the correct bridge\n        let bridge: ActivityBridge;\n        this._isUsingHCImplementation = config.gdMajorVersion === 2;\n        this._isUsingGW3Implementation = ActivityModule.checkIsUsingGW3Implementation(config.connection);\n\n        if (this._isUsingHCImplementation) {\n            bridge = new HCBridge(undefined, config.windows, config.appManagerGetter, config.mode, config.typesToTrack);\n        } else if (this._isUsingGW3Implementation) {\n            bridge = new GW3Bridge(config.connection as Glue42Core.Connection.GW3Connection, config.logger, config.contexts, config);\n        } else {\n            throw new Error(\"Unable to instantiate activity bridge implementation\");\n        }\n\n        if (!bridge) {\n            throw new Error(\"A bridge to native activity is needed to create activity lib.\");\n        }\n\n        ActivityAGM.AGM = config.agm;\n        const activityManager = new ActivityManager(bridge, !config.disableAutoAnnounce, config.windows);\n        const my = new My(activityManager, config.windows);\n        this._api = new ActivityAPI(activityManager, my);\n        this._readyPromise = activityManager.ready().then((_) => this);\n    }\n\n    public get isUsingHCImplementation(): boolean {\n        return this._isUsingHCImplementation;\n    }\n\n    public get isUsingGW3Implementation(): boolean {\n        return this._isUsingGW3Implementation;\n    }\n\n    public ready(callback?: (err: string, module: ActivityModule) => void): Promise<void> {\n        return nodeify(this._readyPromise, callback) as any as Promise<void>;\n    }\n}\n","\"use strict\";\r\nfunction createRegistry(options) {\r\n    if (options && options.errorHandling\r\n        && typeof options.errorHandling !== \"function\"\r\n        && options.errorHandling !== \"log\"\r\n        && options.errorHandling !== \"silent\"\r\n        && options.errorHandling !== \"throw\") {\r\n        throw new Error(\"Invalid options passed to createRegistry. Prop errorHandling should be [\\\"log\\\" | \\\"silent\\\" | \\\"throw\\\" | (err) => void], but \" + typeof options.errorHandling + \" was passed\");\r\n    }\r\n    var _userErrorHandler = options && typeof options.errorHandling === \"function\" && options.errorHandling;\r\n    var callbacks = {};\r\n    function add(key, callback) {\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey) {\r\n            callbacksForKey = [];\r\n            callbacks[key] = callbacksForKey;\r\n        }\r\n        callbacksForKey.push(callback);\r\n        return function () {\r\n            var allForKey = callbacks[key];\r\n            if (!allForKey) {\r\n                return;\r\n            }\r\n            allForKey = allForKey.reduce(function (acc, element, index) {\r\n                if (!(element === callback && acc.length === index)) {\r\n                    acc.push(element);\r\n                }\r\n                return acc;\r\n            }, []);\r\n            callbacks[key] = allForKey;\r\n        };\r\n    }\r\n    function execute(key) {\r\n        var argumentsArr = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            argumentsArr[_i - 1] = arguments[_i];\r\n        }\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey || callbacksForKey.length === 0) {\r\n            return [];\r\n        }\r\n        var results = [];\r\n        callbacksForKey.forEach(function (callback) {\r\n            try {\r\n                var result = callback.apply(undefined, argumentsArr);\r\n                results.push(result);\r\n            }\r\n            catch (err) {\r\n                results.push(undefined);\r\n                _handleError(err, key);\r\n            }\r\n        });\r\n        return results;\r\n    }\r\n    function _handleError(exceptionArtifact, key) {\r\n        var errParam = exceptionArtifact instanceof Error ? exceptionArtifact : new Error(exceptionArtifact);\r\n        if (_userErrorHandler) {\r\n            _userErrorHandler(errParam);\r\n            return;\r\n        }\r\n        var msg = \"[ERROR] callback-registry: User callback for key \\\"\" + key + \"\\\" failed: \" + errParam.stack;\r\n        if (options) {\r\n            switch (options.errorHandling) {\r\n                case \"log\":\r\n                    return console.error(msg);\r\n                case \"silent\":\r\n                    return;\r\n                case \"throw\":\r\n                    throw new Error(msg);\r\n            }\r\n        }\r\n        console.error(msg);\r\n    }\r\n    function clear() {\r\n        callbacks = {};\r\n    }\r\n    function clearKey(key) {\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey) {\r\n            return;\r\n        }\r\n        delete callbacks[key];\r\n    }\r\n    return {\r\n        add: add,\r\n        execute: execute,\r\n        clear: clear,\r\n        clearKey: clearKey\r\n    };\r\n}\r\n;\r\ncreateRegistry.default = createRegistry;\r\nmodule.exports = createRegistry;\r\n//# sourceMappingURL=index.js.map","export function objectValues(source: {[key: string]: any}): any[] {\n    if (!source) {\n        return [];\n    }\n    return Object.keys(source).map((key) => source[key]);\n}\n\nexport function objectClone(obj: {[key: string]: any}): any {\n    let result;\n    try {\n        result = JSON.parse(JSON.stringify(obj || {}));\n    } catch (error) {\n        result = {};\n    }\n\n    return result;\n}\n","import * as AgmNames from \"./const/agm-names\";\nimport { default as CallbackRegistryFactory, CallbackRegistry } from \"callback-registry\";\nimport { Glue42 } from \"../../glue\";\nimport { ContextParam, InstanceProps, AppProps } from \"./types\";\nimport AppManagerImpl from \"./app-manager\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { objectClone } from \"./helper\";\n\nexport default class ApplicationImpl implements Glue42.AppManager.Application {\n\n    private _registry: CallbackRegistry = CallbackRegistryFactory();\n\n    // Additional properties of the Application\n    private _props: AppProps;\n\n    constructor(private _appManager: AppManagerImpl, private _name: string, private _agm: Glue42Core.AGM.API) {\n\n        // TODO: Replace string events with constants. The string declaration of the registry event name should only ever appear once. Ever. Period.\n\n        // subscribe for events from app-manager\n        _appManager.onInstanceStarted((instance) => {\n            if (instance.application && instance.application.name !== this._name) {\n                return;\n            }\n\n            this._registry.execute(\"instanceStarted\", instance);\n        });\n\n        _appManager.onInstanceStopped((instance) => {\n            if (instance.application && instance.application.name !== this._name) {\n                return;\n            }\n\n            this._registry.execute(\"instanceStopped\", instance);\n        });\n\n        _appManager.onAppRemoved((app) => {\n            if (app.name !== this._name) {\n                return;\n            }\n\n            this._registry.execute(\"appRemoved\", app);\n        });\n\n        _appManager.onAppChanged((app) => {\n            if (app.name !== this._name) {\n                return;\n            }\n\n            this._registry.execute(\"appChanged\", app);\n        });\n\n        _appManager.onAppAvailable((app) => {\n            if (app.name !== this._name) {\n                return;\n            }\n\n            this._registry.execute(\"appAvailable\", app);\n        });\n\n        _appManager.onAppUnavailable((app) => {\n            if (app.name !== this._name) {\n                return;\n            }\n\n            this._registry.execute(\"appUnavailable\", app);\n        });\n    }\n\n    get name(): string { return this._name; }\n    get title(): string { return this._props.Title; }\n    get version(): string { return this._props.Version; }\n    get autoStart(): boolean { return this._props.AutoStart; }\n    get isShell(): boolean { return this._props.IsShell; }\n    get caption(): string { return this._props.Caption; }\n    get hidden(): boolean { return this._props.IsHidden; }\n    get container(): string { return this._props.ApplicationName; }\n    get activityType(): string { return this._props.ActivityType; }\n    get activityWindowType(): string { return this._props.ActivityWindowType; }\n    get windowSettings(): { [key: string]: any } {\n        if (!this._props.Arguments) {\n            return {};\n        }\n        return objectClone(this._props.Arguments);\n    }\n    get allowMultiple(): boolean { return this._props.AllowMultiple; }\n    get available(): boolean { return this._props.IsReady || false; }\n    get icon(): string { return this._props.Icon; }\n    get iconURL(): string { return this._props.IconUrl; }\n    get sortOrder(): number { return this._props.SortOrder; }\n    get userProperties(): { [key: string]: any } {\n        if (!this._props.UserProperties) {\n            return {};\n        }\n        return objectClone(this._props.UserProperties);\n    }\n    get isActivity(): boolean {\n        return this._props.ActivityType !== undefined && this._props.ActivityType !== \"\";\n    }\n\n    get configuration(): Glue42.AppManager.LegacyAppConfigProperties {\n        return {\n            autoStart: this._props.AutoStart,\n            caption: this._props.Caption,\n            hidden: this._props.IsHidden,\n            container: this._props.ApplicationName,\n            activityType: this._props.ActivityType,\n            allowMultiple: this._props.AllowMultiple\n        };\n    }\n\n    get instances() {\n        return this._appManager.instances().filter((instance: Glue42.AppManager.Instance) => instance.application.name === this._name);\n    }\n\n    get type() {\n        return this._props.Type;\n    }\n\n    get mode() {\n        if (!this._props) {\n            // no info about the app\n            return \"unknown\";\n        }\n\n        // GD3 - we always have Mode from the stream object\n        if (this._props.Mode && typeof this._props.Mode === \"string\") {\n            return this._props.Mode.toLowerCase() as Glue42.Windows.WindowMode;\n        }\n\n        // GD2\n        // return unknown for activity applications\n        if (this.isActivity) {\n            return \"unknown\";\n        }\n\n        // check definition -> hc.args.mode\n        if (this._props.Arguments && this._props.Arguments.mode && typeof this._props.Arguments.mode === \"string\") {\n            return this._props.Arguments.mode.toLowerCase() as Glue42.Windows.WindowMode;\n        }\n\n        // if no hc.args.mode, check hc.WindowStyleAttributes\n        let styleAttributes = this._props.WindowStyleAttributes;\n        if (styleAttributes) {\n            // WindowStyleAttributes is not a valid JSON, we will need to find mode in the string\n            styleAttributes = styleAttributes.split(\" \").join(\"\");\n            const searchFor = \"mode:\\\"\";\n            const modeIndex = styleAttributes.indexOf(searchFor);\n            if (modeIndex !== -1) {\n                const startModeIndex = modeIndex + searchFor.length;\n                const stopModeIndex = styleAttributes.indexOf(\"\\\"\", startModeIndex);\n                const style = styleAttributes.substr(startModeIndex, stopModeIndex - startModeIndex);\n                if (style && typeof style === \"string\") {\n                    return style.toLowerCase() as Glue42.Windows.WindowMode;\n                }\n            }\n        }\n\n        // default mode for GD2\n        return \"flat\";\n    }\n\n    public updateFromProps(props: AppProps) {\n        if (!this._props) {\n            this._props = { Name: props.Name };\n        }\n\n        Object.keys(props).forEach((key) => {\n            (this._props as any)[key] = (props as any)[key];\n        });\n    }\n\n    public start(context?: ContextParam, options?: Glue42.AppManager.ApplicationStartOptions): Promise<Glue42.AppManager.Instance> {\n        const name = this._name;\n        const startTimeout: number = 10000;\n        return new Promise<Glue42.AppManager.Instance>((resolve, reject) => {\n            options = options || {};\n            context = context || {};\n            context._t42 = { createWindowArgs: options };\n\n            if (typeof options.waitForAGMReady === \"undefined\") {\n                options.waitForAGMReady = true;\n            }\n            const waitForAGMInstance = options.waitForAGMReady;\n            const waitForInstance = !options.waitForAGMReady;\n\n            const waitForApplicationInstance = (id: string) => {\n                // fetch from the current list in app-manager\n                const check = (): Glue42.AppManager.Instance => {\n                    const filtered = this._appManager.instances().filter((i: Glue42.AppManager.Instance) => i.id === id);\n                    let result: Glue42.AppManager.Instance;\n                    // GD2 check - in case of activities we have 2 instances with the same id\n                    if (filtered.length === 2) {\n                        result = filtered[0].isActivityInstance ? filtered[0] : filtered[1];\n                    } else {\n                        result = filtered[0];\n                    }\n                    if (result && waitForAGMInstance) {\n                        if (result.agm) {\n                            return result;\n                        } else {\n                            // if no agm, return undefined so we keep waiting\n                            return undefined;\n                        }\n                    }\n\n                    return result;\n                };\n\n                let unsub: () => void;\n                // reject after some timeout\n                const timeout = setTimeout(() => {\n                    if (unsub) {\n                        unsub();\n                    }\n                    reject(\"timeout\");\n                }, startTimeout);\n\n                const waitFunc = (i: Glue42.AppManager.Instance) => {\n                    if (i.id !== id) {\n                        return;\n                    }\n                    if (unsub) {\n                        unsub();\n                        unsub = undefined;\n                    }\n                    clearTimeout(timeout);\n                    // schedule - we need this because there might be more than one\n                    // instance with the same id (activity case) - so this handler\n                    // will kick for the very first\n                    setTimeout(() => {\n                        resolve(check());\n                    }, 1);\n                };\n\n                if (waitForAGMInstance) {\n                    unsub = this._appManager.onInstanceAgmServerReady(waitFunc);\n                } else {\n                    // if not there subscribe for instance events\n                    unsub = this._appManager.onInstanceStarted(waitFunc);\n                }\n\n                // try to find it in the current list\n                const instances: Glue42.AppManager.Instance = check();\n                if (instances) {\n                    if (unsub) {\n                        unsub();\n                        unsub = undefined;\n                    }\n                    clearTimeout(timeout);\n                    resolve(instances);\n                }\n            };\n\n            this._agm.invoke(AgmNames.StartApplicationMethodName,\n                {\n                    Name: name,\n                    Context: context,\n                    WaitForAgmInstance: waitForAGMInstance,\n                    WaitForInstance: waitForInstance\n                },\n                \"best\",\n                {\n                    methodResponseTimeoutMs: startTimeout\n                },\n                (result) => {\n                    const acsResult: InstanceProps = result.returned && result.returned.Instance_0\n                        ? result.returned.Instance_0\n                        : result.returned;\n\n                    if (acsResult && acsResult.Id) {\n                        if (this._appManager.mode === \"startOnly\") {\n                            // we're in startOnly mode, no stream, so we will simulate the instance\n                            // based on the data received from GD\n                            const instance = this._appManager.handleInstanceStarted(acsResult);\n                            resolve(instance);\n                        } else {\n                            // we received instance from ACS, let's wait until it appears on the stream\n                            waitForApplicationInstance(acsResult.Id);\n                        }\n                    } else {\n                        // we haven't received instance from ACS - this might happen if the app does not\n                        // support tracking instances (e.g. we start internet explorer with some url)\n                        resolve(undefined);\n                    }\n                },\n                (err: any) => {\n                    reject(err);\n                });\n        });\n    }\n\n    public onInstanceStarted(callback: (instance: Glue42.AppManager.Instance) => any): void {\n        this._registry.add(\"instanceStarted\", callback);\n    }\n\n    public onInstanceStopped(callback: (instance: Glue42.AppManager.Instance) => any): void {\n        this._registry.add(\"instanceStopped\", callback);\n    }\n\n    public onAvailable(callback: (app: Glue42.AppManager.Application) => any): void {\n        this._registry.add(\"appAvailable\", callback);\n    }\n\n    public onUnavailable(callback: (app: Glue42.AppManager.Application) => any): void {\n        this._registry.add(\"appUnavailable\", callback);\n    }\n\n    public onChanged(callback: (app: Glue42.AppManager.Application) => any): void {\n        this._registry.add(\"appChanged\", callback);\n    }\n\n    public onRemoved(callback: (app: Glue42.AppManager.Application) => any): void {\n        this._registry.add(\"appRemoved\", callback);\n    }\n}\n","export const ShutdownMethodName = \"T42.ACS.Shutdown\";\nexport const RestartMethodName = \"T42.ACS.Restart\";\n\nexport const FeedackMethodName = \"T42.ACS.Feedback\";\n\nexport const GetConfigurationRegionMethodName = \"T42.ACS.GetConfigurationRegion\";\nexport const SetConfigurationRegionMethodName = \"T42.ACS.SetConfigurationRegion\";\n\nexport const GetUserMethodName = \"T42.ACS.GetUser\";\nexport const GetBranchesMethodName = \"T42.ACS.GetBranches\";\nexport const GetCurrentBranchMethodName = \"T42.ACS.GetCurrentBranch\";\nexport const SetCurrentBranchMethodName = \"T42.ACS.SetCurrentBranch\";\n\nexport const GetFunctionalEntitlementMethodName = \"T42.ACS.GetFunctionalEntitlement\";\nexport const CanIMethodName = \"T42.ACS.CanI\";\n\nexport const StartApplicationMethodName = \"T42.ACS.StartApplication\";\nexport const StopApplicationMethodName = \"T42.ACS.StopApplication\";\nexport const ActivateApplicationMethodName = \"T42.ACS.ActivateApplication\";\nexport const RunApplicationMethodName = \"T42.ACS.RunApplication\";\n\nexport const OnEventMethodName = \"T42.ACS.OnEvent\";\n\nexport const GetApplicationsMethodName = \"T42.ACS.GetApplications\";\n","import * as AgmNames from \"./const/agm-names\";\nimport { default as CallbackRegistryFactory, CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport { ContextParam, InstanceProps, WindowContext, AgmInstanceProps } from \"./types\";\nimport AppManagerImpl from \"./app-manager\";\nimport { Glue42 } from \"../../glue\";\nimport { Glue42Core } from \"@glue42/core\";\n\nexport default class InstanceImpl implements Glue42.AppManager.Instance {\n\n    public onAgmReady = this._addToRegistry(\"agmReady\");\n\n    public onStopped = this._addToRegistry(\"stopped\");\n\n    private _registry: CallbackRegistry = CallbackRegistryFactory();\n\n    private _startUpContext: WindowContext;\n    private _title: string;\n    private _isActivityInstance: boolean;\n    private _activityId: string;\n    private _inActivity: boolean;\n    private _agmInstance: Partial<Glue42Core.AGM.Instance>;\n    private _unsubscribeInstanceAgmServerReady: UnsubscribeFunction;\n    private _unsubscribeInstanceStopped: UnsubscribeFunction;\n\n    constructor(private _id: string,\n                private _appName: string,\n                private _appManager: AppManagerImpl,\n                private _agm: Glue42Core.AGM.API,\n                private _activities: Glue42.Activities.API,\n                private _windows: Glue42.Windows.API,\n                startFailed?: boolean\n    ) {\n        if (startFailed) {\n            return;\n        }\n\n        this._unsubscribeInstanceStopped = this._appManager.onInstanceStopped((instance: Glue42.AppManager.Instance) => {\n            if (instance.id !== this._id) {\n                return;\n            }\n\n            this._registry.execute(\"stopped\", instance);\n        });\n\n        this._unsubscribeInstanceAgmServerReady = this._appManager.onInstanceAgmServerReady((instance) => {\n            if (instance.id !== this._id) {\n                return;\n            }\n\n            this._registry.execute(\"agmReady\", instance);\n        });\n    }\n\n    get id(): string { return this._id; }\n\n    get application(): Glue42.AppManager.Application { return this._appManager.application(this._appName); }\n\n    get activity(): Glue42.Activities.Activity {\n        if (!this._activities) {\n            throw new Error(\"This method requires glue.activities library to be enabled.\");\n        }\n        return this._activities.all.instances.get()\n            .filter((activityInstance: Glue42.Activities.Activity) => activityInstance.id === this._activityId)[0];\n    }\n\n    get activityInstances(): Glue42.AppManager.Instance[] {\n        return this._appManager.instances()\n            .filter((i) => i.context && (i.context.activityId === this._activityId));\n    }\n\n    get activityOwnerInstance(): Glue42.AppManager.Instance {\n        return this._appManager.instances()\n            .filter((instance) => {\n                if (instance.window && instance.window.context) {\n                    const instWinCntx = instance.window.context as WindowContext;\n                    if (instWinCntx._t42 && instWinCntx._t42.activityIsOwner) {\n                        return true;\n                    }\n                }\n                return false;\n            })[0];\n    }\n\n    get window(): Glue42.Windows.GDWindow {\n        if (!this._windows) {\n            throw new Error(\"This method requires glue.windows library to be enabled.\");\n        }\n\n        let win = this._windows.list().filter((w) => w.id === this._id)[0];\n        if (!win && this.activity && this.activityOwnerInstance) {\n            // This is covering GD3 activity instance\n            win = this.activityOwnerInstance.window;\n        }\n\n        return win;\n    }\n\n    get context(): WindowContext { return this._startUpContext; }\n\n    get title(): string { return this._title; }\n\n    get isActivityInstance(): boolean { return this._isActivityInstance; }\n\n    get activityId(): string { return this._activityId; }\n\n    get inActivity(): boolean { return this._inActivity; }\n\n    get isSingleWindowApp(): boolean { return !this._inActivity; }\n\n    get agm(): Partial<Glue42Core.AGM.Instance> {\n        return this._agmInstance;\n    }\n\n    public updateFromProps(props: InstanceProps): void {\n        this._startUpContext = props.Context;\n        this._title = props.Title;\n        this._isActivityInstance = false;\n        if (props.ActivityId && props.ActivityId !== \"\") {\n            this._activityId = props.ActivityId;\n            this._isActivityInstance = true;\n        }\n        if (!this._activityId && this._startUpContext && this._startUpContext.activityId) {\n            this._activityId = this._startUpContext.activityId;\n        }\n        this._inActivity = Boolean(this._activityId);\n\n        this.updateAgmInstanceFromProps(props);\n    }\n\n    public updateAgmInstanceFromProps(props: InstanceProps) {\n        if (!props.AgmServers) {\n            return;\n        }\n\n        if (props.GD3) {\n            const agmInstances: Glue42Core.AGM.Instance[] = props.AgmServers as Glue42Core.AGM.Instance[];\n            if (agmInstances) {\n                this._agmInstance = agmInstances[0];\n            }\n        } else {\n            const gdAgmServers: { [key: string]: AgmInstanceProps } = props.AgmServers as { [key: string]: AgmInstanceProps };\n            const propsAgmServer = Object.keys(gdAgmServers)[0];\n            if (!propsAgmServer) {\n                return;\n            }\n            const propsAgm = gdAgmServers[propsAgmServer];\n            this._agmInstance = {\n                machine: propsAgm.machineName,\n                user: propsAgm.userName,\n                environment: propsAgm.environment,\n                application: propsAgm.applicationName,\n            };\n        }\n    }\n\n    public stop(): Promise<void> {\n        return new Promise((resolve, reject) => {\n            const unsubscribe = this._appManager.onInstanceStopped((instance) => {\n                if (instance.id === this._id) {\n                    unsubscribe();\n                    resolve();\n                }\n            });\n\n            this._agm.invoke(\n                AgmNames.StopApplicationMethodName,\n                {\n                    Name: this._appName,\n                    Id: this._id\n                })\n                .then(() => {\n                    if (this._appManager.mode === \"startOnly\") {\n                        this._appManager.handleInstanceStopped({\n                            Name: this._appName,\n                            Id: this.id,\n                            Context: undefined,\n                            Title: undefined,\n                            ActivityId: undefined,\n                            AgmServers: undefined\n                        });\n                        // in startOnly mode, resolve stop as soon as we receive\n                        resolve();\n                    }\n                })\n                .catch((err: any) => reject(err));\n        });\n    }\n\n    public activate(): Promise<Glue42Core.AGM.InvocationResult<any>> {\n        return this._agm.invoke(AgmNames.ActivateApplicationMethodName, { Name: this._appName, Id: this._id });\n    }\n\n    public done() {\n\n        // remove all handlers\n        this._registry.clear();\n        // remove subscriptions\n        this._unsubscribeInstanceAgmServerReady();\n        this._unsubscribeInstanceStopped();\n    }\n\n    private _addToRegistry(key: string) {\n        return (callback: (instance: Glue42.AppManager.Instance) => any) => {\n            this._registry.add(key, callback);\n        };\n    }\n}\n","import ApplicationImpl from \"./application\";\nimport { Glue42 } from \"../../glue\";\nimport { AppProps, InstanceProps } from \"./types\";\nimport { default as CallbackRegistryFactory, CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport InstanceImpl from \"./instance\";\nimport { Glue42Core } from \"@glue42/core\";\n\nexport default class AppManagerImpl implements Glue42.AppManager.AppManager {\n\n    private _apps: { [key: string]: ApplicationImpl } = {};\n    private _instances: InstanceImpl[] = [];\n    private _registry: CallbackRegistry = CallbackRegistryFactory();\n\n    constructor(\n        public mode: Glue42.AppManager.Mode,\n        private _agm: Glue42Core.AGM.API,\n        private _activities: Glue42.Activities.API,\n        private _windows: Glue42.Windows.API,\n        private _logger: Glue42Core.Logger.API,\n        private _gdMajorVersion: number\n    ) {\n        //\n    }\n\n    public application = (name: string) => {\n        return this._apps[name];\n    }\n\n    public applications = () => {\n        return Object.keys(this._apps).map((k: string) => this._apps[k]);\n    }\n\n    public instances = () => {\n        return this._instances;\n    }\n\n    public getMyInstance = () => {\n        if (this._gdMajorVersion >= 3) {\n            // GD3 check\n            const instanceId = window.glue42gd.appInstanceId;\n            return this._instances.filter((i) => i.id === instanceId)[0];\n        }\n\n        if (this._gdMajorVersion === 2) {\n\n            const myWindowId = window.htmlContainer.windowId;\n\n            const matchingInstances = this._instances.filter((i) => i.id === myWindowId);\n            if (matchingInstances.length < 2) {\n                return matchingInstances[0];\n            }\n\n            // If we have two matches - this can happen only when asking for the window\n            // of activity owner - so return the instance that is not activity instance\n            return matchingInstances.filter((i) => !i.isActivityInstance)[0];\n        }\n\n        return undefined;\n    }\n\n    public handleAppAdded = (props: AppProps) => {\n        const id = this._getAppId(props);\n        this._logger.trace(`adding app ${id}`);\n        this._apps[id] = new ApplicationImpl(this, id, this._agm);\n        const app = this._updateAppFromProps(props);\n\n        this._registry.execute(\"appAdded\", app);\n    }\n\n    public handleAppUpdated = (props: AppProps) => {\n        // TODO: check side effects, is this._apps updated?\n\n        const app = this._updateAppFromProps(props);\n\n        this._registry.execute(\"appChanged\", app);\n    }\n\n    public handleAppRemoved = (props: AppProps) => {\n        const id = this._getAppId(props);\n        this._logger.trace(`removing app ${id}`);\n        const app = this.application(id);\n\n        // remove all instances related to the app\n        this._instances = this._instances.filter((i) => i.application.name !== app.name);\n\n        delete this._apps[id];\n\n        this._registry.execute(\"appRemoved\", app);\n    }\n\n    public handleAppReady = (props: AppProps) => {\n        const id = this._getAppId(props);\n        const app = this._getAppOrThrow(id);\n        app.updateFromProps(props);\n\n        if (app.available) {\n            this._registry.execute(\"appAvailable\", app);\n        } else {\n            this._registry.execute(\"appUnavailable\", app);\n        }\n    }\n\n    public handleInstanceStarted = (props: InstanceProps): InstanceImpl => {\n        this._logger.trace(`started app ${props.Name} ${props.Id}`);\n        const id = this._getInstanceId(props);\n        const appName = this._getInstanceAppName(props);\n\n        const instance = new InstanceImpl(id, appName, this, this._agm, this._activities, this._windows);\n\n        this._updateInstanceFromProps(instance, props);\n\n        this._instances.push(instance);\n\n        this._registry.execute(\"instanceStarted\", instance);\n        return instance;\n    }\n\n    public handleInstanceStopped = (props: InstanceProps) => {\n        this._logger.trace(`failed to start app ${props.Name} ${props.Id}`);\n\n        const id = this._getInstanceId(props);\n        const appName = this._getInstanceAppName(props);\n        const instance = this._getInstanceOrThrow(id, appName);\n\n        this._instances = this._instances.filter((i) => !this._matchInstance(i, id, appName));\n\n        this._registry.execute(\"instanceStopped\", instance);\n        instance.done();\n    }\n\n    public handleInstanceAgmServerReady = (props: InstanceProps) => {\n\n        const id = this._getInstanceId(props);\n        const appName = this._getInstanceAppName(props);\n        const instance = this._getInstanceOrThrow(id, appName);\n\n        instance.updateAgmInstanceFromProps(props);\n\n        this._registry.execute(\"instanceAgmServerReady\", instance);\n    }\n\n    public handleInstanceStartFailed = (props: InstanceProps) => {\n\n        const id = this._getInstanceId(props);\n        const appName = this._getInstanceAppName(props);\n        const startFailed = true;\n        const instance = new InstanceImpl(id, appName, undefined, undefined, undefined, undefined, startFailed);\n\n        this._updateInstanceFromProps(instance, props);\n\n        this._registry.execute(\"instanceStartFailed\", instance);\n    }\n\n    public handleInstanceUpdated = (props: InstanceProps) => {\n\n        const id = this._getInstanceId(props);\n        const app = this._getInstanceAppName(props);\n        const instance = this._getInstanceOrThrow(id, app);\n\n        this._updateInstanceFromProps(instance, props);\n    }\n\n    /** Event subscription methods */\n    public onInstanceStarted = (callback: (item: Glue42.AppManager.Instance) => any): UnsubscribeFunction => {\n        this._replay(this._instances, callback);\n        return this._registry.add(\"instanceStarted\", callback);\n    }\n\n    public onInstanceStartFailed = (callback: (item: Glue42.AppManager.Instance) => any): UnsubscribeFunction => {\n        return this._registry.add(\"instanceStartFailed\", callback);\n    }\n\n    public onInstanceStopped = (callback: (item: Glue42.AppManager.Instance) => any): UnsubscribeFunction => {\n        return this._registry.add(\"instanceStopped\", callback);\n    }\n\n    public onInstanceUpdated = (callback: (item: Glue42.AppManager.Instance) => any): UnsubscribeFunction => {\n        return this._registry.add(\"instanceChanged\", callback);\n    }\n\n    public onInstanceAgmServerReady = (callback: (item: Glue42.AppManager.Instance) => any): UnsubscribeFunction => {\n        return this._registry.add(\"instanceAgmServerReady\", callback);\n    }\n\n    public onAppAdded = (callback: (item: Glue42.AppManager.Application) => any): UnsubscribeFunction => {\n        this._replay(this._apps, callback);\n        return this._registry.add(\"appAdded\", callback);\n    }\n\n    public onAppRemoved = (callback: (item: Glue42.AppManager.Application) => any): UnsubscribeFunction => {\n        return this._registry.add(\"appRemoved\", callback);\n    }\n\n    public onAppAvailable = (callback: (item: Glue42.AppManager.Application) => any): UnsubscribeFunction => {\n        return this._registry.add(\"appAvailable\", callback);\n    }\n\n    public onAppUnavailable = (callback: (item: Glue42.AppManager.Application) => any): UnsubscribeFunction => {\n        return this._registry.add(\"appUnavailable\", callback);\n    }\n\n    public onAppChanged = (callback: (item: Glue42.AppManager.Application) => any): UnsubscribeFunction => {\n        return this._registry.add(\"appChanged\", callback);\n    }\n\n    private _getAppOrThrow(id: string) {\n        const result = this.application(id);\n        if (!result) {\n            throw Error(`app with id ${id} not found`);\n        }\n        return result;\n    }\n\n    private _getAppId(props: AppProps) {\n        return props.Name;\n    }\n\n    private _matchInstance(instance: Glue42.AppManager.Instance, id: string, appName: string) {\n        return instance.id === id && instance.application.name === appName;\n    }\n\n    private _getInstanceByIdAndName(id: string, appName: string) {\n        return this._instances.filter((i) => this._matchInstance(i, id, appName))[0];\n    }\n\n    private _getInstanceOrThrow(id: string, appName: string) {\n        const result = this._getInstanceByIdAndName(id, appName);\n        if (!result) {\n            throw Error(`instance with id ${id} not found`);\n        }\n        return result;\n    }\n\n    private _getInstanceId(props: InstanceProps) {\n        return props.Id;\n    }\n\n    private _getInstanceAppName(props: InstanceProps) {\n        return props.Name;\n    }\n\n    private _updateAppFromProps(props: AppProps) {\n        const id = this._getAppId(props);\n        this._logger.trace(`updating app with  + ${id}, ${props}`);\n        const app = this._getAppOrThrow(id);\n\n        app.updateFromProps(props);\n\n        return app;\n    }\n\n    private _updateInstanceFromProps(instance: InstanceImpl, props: InstanceProps) {\n        this._logger.trace(\"updating instance with \" + this._getInstanceId(props) + \" for app \" + this._getInstanceAppName(props));\n        instance.updateFromProps(props);\n    }\n\n    private _replay(itemsToReplay: { [key: string]: any } | any[], callback: (item: any) => any) {\n        if (itemsToReplay) {\n            // if not array transform to array using Object.values\n            if (Array.isArray(itemsToReplay)) {\n                itemsToReplay.forEach((item) => callback(item));\n            } else {\n                const itemsToReplayArr = Object.keys(itemsToReplay).map((key) => itemsToReplay[key]);\n                itemsToReplayArr.forEach((item) => callback(item));\n            }\n        }\n    }\n\n}\n","import * as AgmNames from \"./const/agm-names\";\nimport { default as CallbackRegistryFactory, CallbackRegistry } from \"callback-registry\";\nimport { Glue42 } from \"../../glue\";\nimport { Glue42Core } from \"@glue42/core\";\n\nfunction promisify(promise: Promise<any>, successCallback: (arg?: any) => void, errorCallback: (err?: any) => void) {\n    const isFunction = (arg: any) => {\n        return !!(arg && arg.constructor && arg.call && arg.apply);\n    };\n\n    if (!isFunction(successCallback) && !isFunction(errorCallback)) {\n        return promise;\n    }\n\n    if (!isFunction(successCallback)) {\n        successCallback = () => {\n            // EMPTY\n        };\n    } else if (!isFunction(errorCallback)) {\n        errorCallback = () => {\n            // EMPTY\n        };\n    }\n\n    promise.then(successCallback, errorCallback);\n}\n\nexport default class EntitlementsImpl implements Glue42.AppManager.Entitlements {\n\n    private _registry: CallbackRegistry = CallbackRegistryFactory();\n\n    constructor(\n        private _agm: Glue42Core.AGM.API\n    ) {\n        //\n    }\n\n    public handleBranchModified = (branch: Glue42.AppManager.Branch) => {\n        this._registry.execute(\"branchChanged\", branch);\n    }\n\n    public handleBranchesModified = (branches: Glue42.AppManager.Branch[]) => {\n        this._registry.execute(\"branchesChanged\", branches);\n    }\n\n    public getRegion = (success?: (region: string) => any, error?: (err: any) => any): void | Promise<string> => {\n        return promisify(\n            this._agmInvoke(\n                AgmNames.GetConfigurationRegionMethodName,\n                (e: Glue42Core.AGM.InvocationResult<{ Region: string }>) => e.returned.Region\n            ),\n            success,\n            error\n        );\n    }\n\n    public getBranches = (success?: (branches: Glue42.AppManager.Branch[]) => any, error?: (err: any) => any): void | Promise<Glue42.AppManager.Branch[]> => {\n        const promise = this._agmInvoke(\n            AgmNames.GetBranchesMethodName,\n            (e) => {\n                const obj = e.returned.Branches as { [key: string]: Glue42.AppManager.Branch };\n                return Object.keys(obj).map((key) => obj[key]);\n            }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public getCurrentBranch = (success?: (branch: Glue42.AppManager.Branch) => any, error?: (err: any) => any): void | Promise<Glue42.AppManager.Branch> => {\n        const promise = this._agmInvoke(\n            AgmNames.GetCurrentBranchMethodName,\n            (e) => e.returned.Branch,\n            undefined\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public setRegion = (region: string, success?: (resMsg: string) => any, error?: (err: any) => any): void | Promise<string> => {\n        const promise = this._agmInvoke(\n            AgmNames.SetConfigurationRegionMethodName,\n            (e) => e.returned.ResultMessage,\n            { Region: region }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public setCurrentBranch = (branch: string, success?: (resMsg: string) => any, error?: (err: any) => any): void | Promise<string> => {\n        const promise = this._agmInvoke(\n            AgmNames.SetCurrentBranchMethodName,\n            (e) => e.returned.ResultMessage,\n            { Branch: branch }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public currentUser = (success?: (user: Glue42.AppManager.UserInfo) => any, error?: (err: any) => any): void | Promise<Glue42.AppManager.UserInfo> => {\n        const promise = this._agmInvoke(AgmNames.GetUserMethodName);\n        return promisify(promise, success, error);\n    }\n\n    public getFunctionalEntitlement = (funct: string, success?: (entitlement: string) => any, error?: (err: any) => any): void | Promise<string> => {\n        const promise = this._agmInvoke(\n            AgmNames.GetFunctionalEntitlementMethodName,\n            (e) => e.returned.Entitlement,\n            { Function: funct }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public getFunctionalEntitlementBranch = (funct: string, branch: string, success?: (entitlement: string) => any, error?: (err: any) => any): void | Promise<string> => {\n        const promise = this._agmInvoke(\n            AgmNames.GetFunctionalEntitlementMethodName,\n            (e) => e.returned.Entitlement,\n            { Function: funct, Branch: branch }\n        );\n        return promisify(promise, success, error);\n    }\n\n    public canI = (func: string, success?: (allowed: boolean) => any, error?: (err: any) => any): void | Promise<boolean> => {\n        const promise = this._agmInvoke(\n            AgmNames.CanIMethodName,\n            (e) => e.returned.Result,\n            { Function: func }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public canIBranch = (func: string, branch: string, success?: (allowed: boolean) => any, error?: (err: any) => any): void | Promise<boolean> => {\n        const promise = this._agmInvoke(\n            AgmNames.CanIMethodName,\n            (e) => e.returned.Result,\n            { Function: func, Branch: branch }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public onBranchesChanged = (callback: (branches: Glue42.AppManager.Branch[]) => any): void => {\n        this._registry.add(\"branchesChanged\", callback);\n    }\n\n    public onBranchChanged = (callback: (branch: Glue42.AppManager.Branch) => any): void => {\n        this._registry.add(\"branchChanged\", callback);\n    }\n\n    public exit = (options: Glue42.AppManager.ExitOpts): Promise<any> => {\n        return this._agmInvoke(\n            AgmNames.ShutdownMethodName,\n            null,\n            options\n        );\n    }\n\n    public restart = (options: Glue42.AppManager.ExitOpts): Promise<any> => {\n        return this._agmInvoke(\n            AgmNames.RestartMethodName,\n            null,\n            options\n        );\n    }\n\n    private _agmInvoke = (\n        method: string,\n        transformFunction?: (res: Glue42Core.AGM.InvocationResult<any>) => any,\n        args?: object\n    ): Promise<any> => {\n        args = args || {};\n        return new Promise((resolve, reject) => {\n            const errHandler: Glue42Core.AGM.InvokeErrorHandler = (error) => reject(error);\n            this._agm.invoke(method, args)\n                .then((result) => {\n                    if (!transformFunction) {\n                        transformFunction = (d: Glue42Core.AGM.InvocationResult<any>) => d.returned;\n                    }\n                    resolve(transformFunction(result));\n                })\n                .catch(errHandler);\n        });\n    }\n}\n","import AppManagerImpl from \"./app-manager\";\nimport EntitlementsImpl from \"./entitlements\";\nimport snapshot from \"./snapshot\";\nimport subscriptionFactory from \"./data-subscription\";\nimport { Glue42 } from \"../../glue\";\n\nexport default (config: Glue42.AppManager.Config): Glue42.AppManager.API => {\n\n    if (!config) {\n        throw Error(\"config not set\");\n    }\n\n    if (!config.agm) {\n        throw Error(\"config.agm is missing\");\n    }\n\n    const START_ONLY: Glue42.AppManager.Mode = \"startOnly\";\n    const SKIP_ICONS: Glue42.AppManager.Mode = \"skipIcons\";\n    const FULL: Glue42.AppManager.Mode = \"full\";\n\n    const mode: Glue42.AppManager.Mode = config.mode || START_ONLY;\n    if (mode !== START_ONLY && mode !== SKIP_ICONS && mode !== FULL) {\n        throw new Error(`Invalid mode for appManager lib - ${mode} is not supported`);\n    }\n\n    const activities = config.activities;\n    const agm = config.agm;\n    const logger = config.logger;\n    const windows = config.windows;\n    const appManager = new AppManagerImpl(mode, agm, activities, windows, logger.subLogger(\"applications\"), config.gdMajorVersion);\n    const entitlements = new EntitlementsImpl(agm);\n\n    let readyPromise: Promise<undefined | {}>;\n    if (mode === START_ONLY) {\n        readyPromise = snapshot(agm, appManager);\n    } else {\n        const subscription = subscriptionFactory(agm, appManager, entitlements, mode === SKIP_ICONS);\n        readyPromise = subscription.start();\n    }\n\n    const api: Glue42.AppManager.API = {\n        ready: () => readyPromise,\n\n        applications: appManager.applications,\n        application: appManager.application,\n\n        onAppAdded: appManager.onAppAdded,\n        onAppRemoved: appManager.onAppRemoved,\n        onAppChanged: appManager.onAppChanged,\n        onAppAvailable: appManager.onAppAvailable,\n        onAppUnavailable: appManager.onAppUnavailable,\n\n        instances: appManager.instances,\n        get myInstance() {\n            return appManager.getMyInstance();\n        },\n\n        onInstanceStarted: appManager.onInstanceStarted,\n        onInstanceStopped: appManager.onInstanceStopped,\n        onInstanceUpdated: appManager.onInstanceUpdated,\n        onInstanceStartFailed: appManager.onInstanceStartFailed,\n\n        getRegion: entitlements.getRegion,\n        getBranches: entitlements.getBranches,\n        getCurrentBranch: entitlements.getCurrentBranch,\n        getFunctionalEntitlement: entitlements.getFunctionalEntitlement,\n        getFunctionalEntitlementBranch: entitlements.getFunctionalEntitlementBranch,\n\n        setCurrentBranch: entitlements.setCurrentBranch,\n        setRegion: entitlements.setRegion,\n\n        currentUser: entitlements.currentUser,\n\n        canI: entitlements.canI,\n        canIBranch: entitlements.canIBranch,\n\n        onBranchesChanged: entitlements.onBranchesChanged,\n\n        exit: entitlements.exit,\n        restart: entitlements.restart\n    };\n\n    return api;\n};\n","import * as AgmNames from \"./const/agm-names\";\nimport { objectValues } from \"./helper\";\nimport { Glue42Core } from \"@glue42/core\";\nimport AppManagerImpl from \"./app-manager\";\n\n/** Retrieves application snapshot from ACS */\nexport default function snapshot(agm: Glue42Core.AGM.API, appManager: AppManagerImpl): Promise<undefined> {\n    return new Promise((resolve, reject) => {\n        agm.invoke(AgmNames.GetApplicationsMethodName, { skipIcon: true })\n            .then((response) => {\n                const data = response.returned;\n                if (!data) {\n                    resolve();\n                }\n\n                const applications = data.applications;\n                if (!applications) {\n                    resolve();\n                }\n\n                objectValues(applications).map((item) => appManager.handleAppAdded(item));\n\n                resolve();\n            })\n            .catch((err) => reject(`Error getting application snapshot: ${err.message}`));\n    });\n}\n","import * as AgmNames from \"./const/agm-names\";\nimport * as EventNames from \"./const/event-names\";\nimport { objectValues } from \"./helper\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../glue\";\nimport { AppProps, InstanceProps } from \"./types\";\nimport AppManagerImpl from \"./app-manager\";\nimport EntitlementsImpl from \"./entitlements\";\n\n/** Subscribe for the AGM stream published by ACS and distributes events to applications and instances components */\nexport default function createDataSubscription(agm: Glue42Core.AGM.API, applications: AppManagerImpl, entitlements: EntitlementsImpl, skipIcons: boolean) {\n\n    let subscription: Glue42Core.AGM.Subscription;\n    const start = () => {\n        let resolveFunc: (value?: {} | Promise<{}>) => void;\n        let rejectFunc: (error?: any) => void;\n\n        const resultPromise = new Promise((resolve, reject) => {\n            resolveFunc = resolve;\n            rejectFunc = reject;\n        });\n\n        agm.subscribe(AgmNames.OnEventMethodName, { arguments: { skipIcon: skipIcons }, waitTimeoutMs: 10000 })\n            .then((s: any) => {\n                subscription = s;\n                subscription.onData((streamData: Glue42Core.AGM.StreamData) => {\n                    const events: any = streamData.data;\n\n                    objectValues(events[EventNames.OnApplicationAddedEvent])\n                        .map((item: AppProps) => applications.handleAppAdded(item));\n\n                    objectValues(events[EventNames.OnApplicationChangedEvent])\n                        .map((item: AppProps) => applications.handleAppUpdated(item));\n\n                    objectValues(events[EventNames.OnApplicationRemovedEvent])\n                        .map((item: AppProps) => applications.handleAppRemoved(item));\n\n                    objectValues(events[EventNames.OnApplicationReadyEvent])\n                        .map((item: AppProps) => applications.handleAppReady(item));\n\n                    objectValues(events[EventNames.OnApplicationStartedEvent])\n                        .map((item: InstanceProps) => applications.handleInstanceStarted(item));\n\n                    objectValues(events[EventNames.OnApplicationStartFailedEvent])\n                        .map((item: InstanceProps) => applications.handleInstanceStartFailed(item));\n\n                    objectValues(events[EventNames.OnApplicationStoppedEvent])\n                        .map((item: InstanceProps) => applications.handleInstanceStopped(item));\n\n                    objectValues(events[EventNames.OnApplicationUpdatedEvent])\n                        .map((item: InstanceProps) => applications.handleInstanceUpdated(item));\n\n                    objectValues(events[EventNames.OnApplicationAgmServerReadyEvent])\n                        .map((item: InstanceProps) => applications.handleInstanceAgmServerReady(item));\n\n                    objectValues(events[EventNames.OnBranchChangedEvent])\n                        .map((item: Glue42.AppManager.Branch) => entitlements.handleBranchModified(item));\n\n                    objectValues(events[EventNames.OnBranchesModifiedEvent])\n                        .map((item: Glue42.AppManager.Branch[]) => entitlements.handleBranchesModified(item));\n\n                    resolveFunc();\n                });\n\n                subscription.onFailed((err: any) => rejectFunc(err));\n\n            })\n            .catch((err: any) => rejectFunc(`Error subscribing for ${AgmNames.OnEventMethodName} stream. Err: ${err}`));\n\n        return resultPromise;\n    };\n\n    const stop = () => {\n        if (subscription) {\n            subscription.close();\n        }\n    };\n\n    return {\n        start,\n        stop\n    };\n}\n","import { CallbackRegistry, UnsubscribeFunction, default as CallbackFactory } from \"callback-registry\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { PendingWindowState, WindowEvents, WindowWrapper } from \"./types\";\n\nexport class WindowStore {\n    private readonly waitForTimeoutInMilliseconds: number = 60000;\n    private _windows: { [key: string]: WindowWrapper } = {};\n    private _pendingWindows: { [key: string]: WindowWrapper } = {};\n    private _pendingWindowsStates: { [key: string]: PendingWindowState } = {};\n    private _registry: CallbackRegistry;\n    private _logger: Glue42Core.Logger.API;\n\n    constructor() {\n        this._registry = CallbackFactory();\n    }\n\n    public init(logger: Glue42Core.Logger.API) {\n        this._logger = logger;\n    }\n\n    // Returns a window which either in Ready OR NOT 'ready' state (when the window is NOT marked with readyToShow)\n    public get(id: string): WindowWrapper {\n        return this._windows[id] || this._pendingWindows[id];\n    }\n\n    // Returns a window which is in 'ready' state (when the window is marked with readyToShow)\n    public getIfReady(id: string): WindowWrapper {\n        return this._windows[id];\n    }\n\n    public get list(): { [key: string]: WindowWrapper } {\n        return this._windows;\n    }\n\n    public add(window: WindowWrapper) {\n        const isExist = this._pendingWindows[window.API.id] ? true : false;\n        if (isExist) {\n            this._logger.error(`trying to add window with id ${window.API.id} from windowStore, which already exists`);\n            return;\n        }\n        const remote = window.API.windowType === \"remote\";\n        this._pendingWindows[window.API.id] = window;\n        this._pendingWindowsStates[window.API.id] = {\n            ready: false,\n            urlChanged: remote, // remote windows don't have url events\n        };\n\n        this._registry.execute(\"on-added\", window);\n    }\n\n    public remove(window: WindowWrapper) {\n        delete this._windows[window.API.id];\n        delete this._pendingWindows[window.API.id];\n        delete this._pendingWindowsStates[window.API.id];\n        this._registry.execute(\"on-removed\", window);\n    }\n\n    public setReadyState(windowId: string) {\n        const targetWindowState = this._pendingWindowsStates[windowId];\n\n        if (typeof targetWindowState === \"undefined\") {\n            return;\n        }\n\n        targetWindowState.ready = true;\n\n        if (targetWindowState.urlChanged) {\n            this.markReadyToShow(windowId);\n        }\n    }\n\n    public setUrlChangedState(windowId: string) {\n        const targetWindowState = this._pendingWindowsStates[windowId];\n\n        if (typeof targetWindowState === \"undefined\") {\n            return;\n        }\n\n        targetWindowState.urlChanged = true;\n\n        if (targetWindowState.ready) {\n            this.markReadyToShow(windowId);\n        }\n    }\n\n    public waitFor(id: string): Promise<WindowWrapper> {\n        return new Promise((resolve, reject) => {\n\n            let un: UnsubscribeFunction;\n\n            const timeout = setTimeout(() => {\n                un();\n                reject(\"waitFor timed out.\");\n            }, this.waitForTimeoutInMilliseconds);\n\n            const win = this._windows[id];\n            if (win) {\n                clearTimeout(timeout);\n                resolve(win);\n            } else {\n                un = this.onReadyWindow((w: WindowWrapper) => {\n                    if (w.API.id !== id) {\n                        return;\n                    }\n                    clearTimeout(timeout);\n                    un();\n                    resolve(w);\n                });\n            }\n        });\n    }\n\n    public onReadyWindow(callback: (win: WindowWrapper) => void): UnsubscribeFunction {\n        return this._registry.add(\"on-ready\", callback);\n    }\n\n    public onAdded(callback: (win: WindowWrapper) => void): UnsubscribeFunction {\n        return this._registry.add(\"on-added\", callback);\n    }\n\n    public onRemoved(callback: (win: WindowWrapper) => void): UnsubscribeFunction {\n        return this._registry.add(\"on-removed\", callback);\n    }\n\n    // newly created windows now need to hear both \"ready\" and \"urlChanged\" events in otder to be markedReadyToShow\n    public markReadyToShow(windowId: string) {\n        if (this._pendingWindows[windowId]) {\n            this._windows[windowId] = this._pendingWindows[windowId];\n            delete this._pendingWindows[windowId];\n            delete this._pendingWindowsStates[windowId];\n        }\n\n        this._registry.execute(\"on-ready\", this._windows[windowId]);\n    }\n}\n\nexport default new WindowStore();\n","import { Glue42 } from \"../glue\";\nimport { Glue42Core } from \"@glue42/core\";\n\nexport default class Utils {\n    public static getGDMajorVersion() {\n        if (typeof window === \"undefined\") {\n            return -1;\n        }\n        if (!window.glueDesktop) {\n            return -1;\n        }\n        if (!window.glueDesktop.version) {\n            return -1;\n        }\n        const ver = Number(window.glueDesktop.version.substr(0, 1));\n        return isNaN(ver) ? -1 : ver;\n    }\n\n    public static callbackifyPromise<T>(\n        action: () => Promise<T>,\n        successCallback?: (args?: T) => void,\n        errorCallback?: (errorMessage: string) => void): Promise<T> {\n\n        const fail = (error: any) => {\n            let msg = error;\n            if (error instanceof Error) {\n                msg = error.message;\n            }\n            if (typeof errorCallback === \"function\") {\n                errorCallback(msg);\n                return;\n            }\n\n            return Promise.reject(msg);\n        };\n\n        try {\n            return action()\n                .then((result) => {\n                    if (typeof successCallback === \"function\") {\n                        successCallback(result);\n                    }\n                    return result;\n                })\n                .catch((error) => {\n                    return fail(error);\n                });\n        } catch (err) {\n            return fail(err);\n        }\n    }\n\n    public static getMonitor(bounds: Glue42.Windows.Bounds, displays?: Glue42Core.Screen[]): Glue42Core.Screen {\n        const monitorsSortedByOverlap = displays.map((m) => {\n            const { left, top, workingAreaWidth: width, workingAreaHeight: height } = m;\n            const overlap = this.calculateTotalOverlap({ left, top, width, height }, bounds);\n            return {\n                monitor: m,\n                totalOverlap: overlap\n            };\n        }).sort((a, b) => b.totalOverlap - a.totalOverlap);\n\n        return monitorsSortedByOverlap[0].monitor;\n    }\n\n    public static getDisplayCenterOfScreen(a: Glue42.Windows.Bounds, display?: Glue42Core.Screen) {\n        const left = Math.floor(Math.max(display.left, (display.left + (display.workingAreaWidth - a.width) / 2)));\n        const top = Math.floor(Math.max(display.top, (display.top + (display.workingAreaHeight - a.height) / 2)));\n        return {\n            top,\n            left\n        };\n    }\n\n    private static calculateTotalOverlap(r1: Glue42.Windows.Bounds, r2: Glue42.Windows.Bounds) {\n        const r1x = r1.left;\n        const r1y = r1.top;\n        const r1xMax = r1x + r1.width;\n        const r1yMax = r1y + r1.height;\n\n        const r2x = r2.left;\n        const r2y = r2.top;\n        const r2xMax = r2x + r2.width;\n        const r2yMax = r2y + r2.height;\n\n        const xOverlap = Math.max(0, Math.min(r1xMax, r2xMax) - Math.max(r1x, r2x));\n        const yOverlap = Math.max(0, Math.min(r1yMax, r2yMax) - Math.max(r1y, r2y));\n\n        return xOverlap * yOverlap;\n    }\n}\n","import CallbackFactory, { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../glue\";\nimport {\n    Executor,\n    FrameButton,\n    Neighbours,\n    WindowConstructorOptions,\n    WindowEvents,\n    WindowWrapper,\n    FlashOptions,\n} from \"./types\";\nimport * as util from \"../activity/helpers/util\";\nimport utils from \"../utils\";\n\nimport { default as windowStore } from \"./store\";\nimport GDWindow = Glue42.Windows.GDWindow;\n\nexport default (id: string, options: WindowConstructorOptions, executor: Executor, logger: Glue42Core.Logger.API, appManagerGetter: () => Glue42.AppManager.API, agm: Glue42.AGM.API): WindowWrapper => {\n    const _registry: CallbackRegistry = CallbackFactory();\n    const _logger = logger.subLogger(`window ${id}`);\n\n    const _name: string = options.name;\n    const _mode: Glue42.Windows.WindowMode = options.mode;\n    let _url: string = options.url;\n    let _title: string = options.title;\n    let _context: any = options.context || {};\n    const _bounds: Glue42.Windows.Bounds = options.bounds;\n    let _frameColor: string = options.frameColor;\n    let _focus: boolean = options.focus;\n    let _neighbours: Neighbours = options.neighbours || {};\n    let _groupId: string = options.groupId;\n    let _isGroupHeaderVisible: boolean = options.isGroupHeaderVisible;\n    let _isTabHeaderVisible: boolean = options.isTabHeaderVisible;\n    let _isTabSelected: boolean = options.isTabSelected;\n    let _settings: Glue42.Windows.WindowSettings = options.settings;\n\n    // is Window visible\n    let _isVisible: boolean = options.isVisible;\n\n    // Window state Collapsed | Expanded\n    let isCollapsed: boolean = options.isCollapsed;\n\n    // Window state normal | maximized | minimized\n    let _windowState: Glue42.Windows.WindowState = options.state;\n\n    // tabGroupId only for window with 'Tab' mode\n    let _tabGroupId: string = options.tabGroupId;\n\n    // window is locked or unlocked;\n    let _isLocked: boolean = options.isLocked;\n\n    let _group: Glue42.Windows.Group;\n    let resultWindow: Glue42.Windows.GDWindow;\n\n    // Holding all frame buttons\n    let _frameButtons: Glue42.Windows.ButtonInfo[] = [];\n\n    // Holding the current zoom factor\n    let _zoomFactor = options.zoomFactor;\n\n    //#region \"AGM methods\"\n\n    function close(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            executor.close(resultWindow)\n                .then(() => {\n                    if (typeof success === \"function\") {\n                        success(resultWindow);\n                    }\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function navigate(newUrl: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            executor.navigate(resultWindow, newUrl)\n                .then(() => {\n                    if (newUrl === _url) {\n                        if (typeof success === \"function\") {\n                            success(resultWindow);\n                        }\n                        return resolve(resultWindow);\n                    }\n                    const un = onUrlChanged((url: string, win: Glue42.Windows.GDWindow) => {\n                        if (win.id === id && url === win.url) {\n                            if (typeof success === \"function\") {\n                                success(resultWindow);\n                            }\n                            un();\n                            resolve(resultWindow);\n                        }\n                    });\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function setStyle(style: Glue42.Windows.WindowStyle, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        if (!style || Object.keys(style).length === 0 || Object.keys(style).every((key) => !key)) {\n            const errMessage = `Invalid style arguments: ${JSON.stringify(style)}`;\n            error(errMessage);\n            return Promise.reject(new Error(errMessage));\n        }\n\n        if (style && style.focus !== undefined) {\n            if (typeof style.focus !== \"boolean\") {\n                const errMessage = `Focus must be boolean. Currently only focus true is supported ! ${JSON.stringify(style)}`;\n                error(errMessage);\n                return Promise.reject(new Error(errMessage));\n            } else if (style.focus === false) {\n                // tslint:disable-next-line:no-console\n                console.warn(\"Focus false is not supported ! \");\n            }\n        }\n\n        if (style && style.hidden !== undefined && typeof style.hidden !== \"boolean\") {\n            const errMessage = `Hidden must be boolean ! provided: ${JSON.stringify(style)}`;\n            error(errMessage);\n            return Promise.reject(new Error(errMessage));\n        }\n\n        return utils.callbackifyPromise(\n            () => executor.setStyle(resultWindow, style),\n            success,\n            error\n        );\n    }\n\n    function resetButtons(buttons: Glue42.Windows.WindowButtons, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(\n            () => executor.resetButtons(resultWindow, buttons),\n            success,\n            error\n        );\n    }\n\n    function setOnTop(onTop: boolean, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        if (this.onTop === onTop) {\n            const errMessage = `OnTop setting is already set to '${onTop}'`;\n            error(errMessage);\n            return Promise.reject(new Error(errMessage));\n        }\n\n        return utils.callbackifyPromise(\n            () => executor.setOnTop(resultWindow, onTop),\n            success,\n            error\n        );\n    }\n\n    function setSizeConstraints(constraints: Glue42.Windows.SizeConstraints, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        if (!constraints || Object.keys(constraints).every((value) => value === undefined)) {\n            const errMessage = `Invalid Constraints: ${JSON.stringify(constraints)}`;\n            error(errMessage);\n            return Promise.reject(new Error(errMessage));\n        }\n\n        return utils.callbackifyPromise(\n            () => executor.setSizeConstraints(resultWindow, constraints),\n            success,\n            error\n        );\n    }\n\n    function setTitle(newTitle: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise<Glue42.Windows.GDWindow>((resolve, reject) => {\n            executor.setTitle(resultWindow, newTitle)\n                .then(() => {\n                    if (typeof success === \"function\") {\n                        success(resultWindow);\n                    }\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n\n        // OPTION 2\n        // const promise = executor.setTitle(resultWindow, newTitle)\n        // return promisify\n    }\n\n    function moveResize(dimensions: Glue42.Windows.Bounds, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve: (window: Glue42.Windows.GDWindow) => void, reject: (error: string) => void) => {\n\n            const resolveImmediately = areBoundsEqual(dimensions, _bounds);\n            let isDone = false;\n            const done = () => {\n                if (isDone) {\n                    return;\n                }\n                isDone = true;\n                if (typeof success === \"function\") {\n                    success(resultWindow);\n                }\n                resolve(resultWindow);\n\n                if (unsubscribeBoundsChanged) {\n                    unsubscribeBoundsChanged();\n                    unsubscribeBoundsChanged = undefined;\n                }\n                if (resolveTimeout) {\n                    clearTimeout(resolveTimeout);\n                    resolveTimeout = undefined;\n                }\n            };\n            let resolveTimeout: any;\n            let unsubscribeBoundsChanged: () => void;\n            if (!resolveImmediately) {\n                unsubscribeBoundsChanged = onBoundsChanged((win: Glue42.Windows.GDWindow) => {\n                    if (win.id !== resultWindow.id) {\n                        return;\n                    }\n\n                    if (!areBoundsEqual(dimensions, win.bounds)) {\n                        return;\n                    }\n\n                    done();\n                });\n            }\n\n            // always execute moveResize (we might have old bounds and prevent calls that are actually valid)\n            executor.moveResize(resultWindow, dimensions)\n                .then(() => {\n                    // if we're trying to resize with the bounds we already have\n                    if (resolveImmediately) {\n                        done();\n                        return;\n                    }\n\n                    // if no bounds change in the next 1s resolve\n                    resolveTimeout = setTimeout(() => {\n                        done();\n                    }, 1000);\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function addFrameButton(buttonInfo: Glue42.Windows.ButtonInfo, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            if (typeof buttonInfo === \"undefined\") {\n                if (typeof error === \"function\") {\n                    error(\"No button info\");\n                    return;\n                }\n                reject(\"No button info\");\n                return;\n            }\n\n            if (buttonInfo.buttonId === undefined) {\n                if (typeof error === \"function\") {\n                    error(\"No buttonId\");\n                    return;\n                }\n                reject(\"No buttonId\");\n                return;\n            }\n\n            if (buttonInfo.imageBase64 === undefined) {\n                if (typeof error === \"function\") {\n                    error(\"No imageBase64\");\n                    return;\n                }\n                reject(\"No imageBase64\");\n                return;\n            }\n            executor.addFrameButton(resultWindow, buttonInfo)\n                .then(() => {\n                    if (typeof success === \"function\") {\n                        success(resultWindow);\n                    }\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function removeFrameButton(buttonId: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            if (buttonId === undefined || buttonId === \"\") {\n                if (typeof error === \"function\") {\n                    error(\"No buttonId\");\n                    return;\n                }\n                reject(\"No buttonId\");\n                return;\n            }\n\n            executor.removeFrameButton(resultWindow, buttonId)\n                .then(() => {\n                    if (typeof success === \"function\") {\n                        success(resultWindow);\n                    }\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n\n        });\n    }\n\n    function activate(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            executor.activate(resultWindow)\n                .then(() => {\n                    if (typeof success === \"function\") {\n                        success(resultWindow);\n                    }\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function focus(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            executor.focus(resultWindow)\n                .then(() => {\n                    if (typeof success === \"function\") {\n                        success(resultWindow);\n                    }\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function maximizeRestore(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            const currEvent = _windowState === \"normal\" ? onMaximized : onNormal;\n            executor.maximizeRestore(resultWindow)\n                .then(() => {\n                    const un = currEvent(() => {\n                        if (typeof success === \"function\") {\n                            success(resultWindow);\n                        }\n                        if (un) {\n                            un();\n                        }\n                        resolve(resultWindow);\n                    });\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function maximize(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            executor.maximize(resultWindow)\n                .then(() => {\n                    if (_windowState === \"maximized\") {\n                        if (typeof success === \"function\") {\n                            success(resultWindow);\n                        }\n                        return resolve(resultWindow);\n                    }\n\n                    const un = onMaximized((win: Glue42.Windows.GDWindow) => {\n                        if (win.id === id && win.state === \"maximized\") {\n                            if (typeof success === \"function\") {\n                                success(resultWindow);\n                            }\n                            un();\n                            resolve(resultWindow);\n                        }\n                    });\n\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function restore(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            executor.restore(resultWindow)\n                .then(() => {\n                    if (_windowState === \"normal\") {\n                        if (typeof success === \"function\") {\n                            success(resultWindow);\n                        }\n                        return resolve(resultWindow);\n                    }\n\n                    const un = onNormal((win: Glue42.Windows.GDWindow) => {\n                        if (id === win.id && win.state === \"normal\") {\n                            if (typeof success === \"function\") {\n                                success(resultWindow);\n                            }\n                            un();\n                            resolve(resultWindow);\n                        }\n                    });\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function minimize(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            executor.minimize(resultWindow)\n                .then(() => {\n                    if (_windowState === \"minimized\") {\n                        if (typeof success === \"function\") {\n                            success(resultWindow);\n                        }\n                        return resolve(resultWindow);\n                    }\n\n                    const un = onMinimized((win: Glue42.Windows.GDWindow) => {\n                        if (id === win.id && win.state === \"minimized\") {\n                            if (typeof success === \"function\") {\n                                success(resultWindow);\n                            }\n                            un();\n                            return resolve(resultWindow);\n                        }\n                    });\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function collapse(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            if (isCollapsed) {\n                if (typeof success === \"function\") {\n                    success(resultWindow);\n                }\n                return resolve(resultWindow);\n            }\n            executor.collapse(resultWindow)\n                .then(() => {\n                    if (isCollapsed) {\n                        if (typeof success === \"function\") {\n                            success(resultWindow);\n                        }\n                        return resolve(resultWindow);\n                    }\n\n                    const un = onCollapsed((win: Glue42.Windows.GDWindow) => {\n                        if (win.id === id) {\n                            if (typeof success === \"function\") {\n                                success(resultWindow);\n                            }\n                            un();\n                            resolve(resultWindow);\n                        }\n                    });\n\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function expand(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            if (!isCollapsed) {\n                if (typeof success === \"function\") {\n                    success(resultWindow);\n                }\n                return resolve(resultWindow);\n            }\n            executor.expand(resultWindow)\n                .then(() => {\n                    if (!isCollapsed) {\n                        if (typeof success === \"function\") {\n                            success(resultWindow);\n                        }\n                        return resolve(resultWindow);\n                    }\n\n                    const un = onExpanded((win: Glue42.Windows.GDWindow) => {\n                        if (win.id === id) {\n                            if (typeof success === \"function\") {\n                                success(resultWindow);\n                            }\n                            un();\n                            resolve(resultWindow);\n                        }\n                    });\n\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function toggleCollapse(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            const currEvent = isCollapsed ? onExpanded : onCollapsed;\n            executor.toggleCollapse(resultWindow)\n                .then(() => {\n                    currEvent((win: Glue42.Windows.GDWindow) => {\n                        if (win.id === id) {\n                            if (typeof success === \"function\") {\n                                success(resultWindow);\n                            }\n                            resolve(resultWindow);\n                        }\n                    });\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function snap(target: string | Glue42.Windows.GDWindow, direction: Glue42.Windows.RelativeDirection, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        let targetWindowGroup;\n        if (!target) {\n            return Promise.reject(`Please specify a target window! calledWith: ${target}`);\n        }\n\n        if (typeof target === \"string\") {\n            const targetWindow = windowStore.get(target);\n            if (!targetWindow) {\n                return Promise.reject(new Error(`Invalid target parameter or no such window. Invoked with:  ${target}`));\n            }\n            targetWindowGroup = targetWindow.API.group;\n        } else {\n            targetWindowGroup = target.group;\n        }\n\n        return Promise.all([\n            waitForMyWindowToJoinTargetGroup(targetWindowGroup),\n            executor.snap(resultWindow, target, direction)\n        ])\n            .then(() => {\n                if (typeof success === \"function\") {\n                    success(resultWindow);\n                }\n                return resultWindow;\n            })\n            .catch((e) => {\n                if (typeof error === \"function\") {\n                    error(e);\n                }\n                return e;\n            });\n    }\n\n    function waitForMyWindowToJoinTargetGroup(targetGroup: Glue42.Windows.Group): Promise<void> {\n        return new Promise((resolve, reject) => {\n            const unsub = targetGroup.onWindowAdded((_, window) => {\n                if (resultWindow.id === window.id) {\n                    unsub();\n                    resolve();\n                }\n            });\n\n            // setTimeout(() => {\n            //     resolve();\n            // }, 1500);\n        });\n    }\n\n    function attachTab(tab: Glue42.Windows.GDWindow | string, index: number, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            let sourceWindowId: string;\n            const targetWindowId: string = resultWindow.id;\n            const errorMessage: string = \"Invalid tab parameter - should be an object with property id or a string. Invoked for source window id:\" + resultWindow.id;\n\n            if (!tab) {\n                reject(errorMessage);\n                return;\n            }\n\n            if (typeof tab === \"string\") {\n                sourceWindowId = tab;\n            } else if (typeof tab.id !== \"undefined\") {\n                sourceWindowId = tab.id;\n            } else {\n                reject(errorMessage);\n                return;\n            }\n\n            const argsForSend: any = {\n                sourceWindowId,\n                targetWindowId,\n            };\n\n            if (index) {\n                argsForSend.index = index;\n            }\n\n            const sourceWin = windowStore.get(argsForSend.sourceWindowId).API;\n            const un = sourceWin.onAttached((win: Glue42.Windows.GDWindow) => {\n                if (win.id === sourceWin.id) {\n                    if (typeof success === \"function\") {\n                        success(resultWindow);\n                    }\n                    un();\n                    resolve(resultWindow);\n                }\n            });\n\n            executor.attachTab(resultWindow, argsForSend)\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    un();\n                    reject(e);\n                });\n        });\n    }\n\n    function detachTab(opt: Glue42.Windows.DetachOptions, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            const argsForSend: any = { windowId: resultWindow.id };\n            const _options: Glue42.Windows.DetachOptions = opt || {};\n\n            if (typeof _options.relativeTo !== \"undefined\") {\n                if (typeof _options.relativeTo === \"string\") {\n                    argsForSend.relativeTo = _options.relativeTo;\n                } else if (typeof _options.relativeTo.id !== \"undefined\") {\n                    argsForSend.relativeTo = _options.relativeTo.id;\n                }\n\n                if (typeof _options.relativeDirection !== \"undefined\") {\n                    argsForSend.relativeDirection = _options.relativeDirection;\n                }\n\n                if (typeof _options.width !== \"undefined\") {\n                    argsForSend.width = _options.width;\n                }\n\n                if (typeof _options.height !== \"undefined\") {\n                    argsForSend.height = _options.height;\n                }\n            }\n\n            if (typeof _options.bounds !== \"undefined\") {\n                argsForSend.bounds = _options.bounds;\n            }\n\n            if (typeof _options.hideTabHeader !== \"undefined\") {\n                argsForSend.hideTabHeader = _options.hideTabHeader;\n            }\n\n            let visibilityChangeHeard = false;\n            let detachedHeard = false;\n\n            const unVisibility = _registry.add(\"frame-attached\", ((win: Glue42.Windows.GDWindow) => {\n                const isVisibilityCorrect = _options.hideTabHeader === undefined || _options.hideTabHeader !== win.isTabHeaderVisible;\n                if (id === win.id && isVisibilityCorrect) {\n                    visibilityChangeHeard = true;\n                    unVisibility();\n                    if (detachedHeard) {\n                        if (typeof success === \"function\") {\n                            success(resultWindow);\n                        }\n                        resolve(resultWindow);\n                        if (typeof unDetached === \"function\") {\n                            unDetached();\n                        }\n                    }\n                }\n            }));\n\n            const unDetached = onDetached((win: Glue42.Windows.GDWindow) => {\n                if (id === win.id) {\n                    detachedHeard = true;\n                    unDetached();\n                    if (visibilityChangeHeard) {\n                        if (typeof success === \"function\") {\n                            success(resultWindow);\n                        }\n                        resolve(resultWindow);\n                        if (typeof unVisibility === \"function\") {\n                            unVisibility();\n                        }\n                    }\n                }\n            });\n\n            executor.detachTab(resultWindow, argsForSend)\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    unDetached();\n                    unVisibility();\n                    reject(e);\n                });\n        });\n\n    }\n\n    function setVisible(toBeVisible?: boolean, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            executor.setVisible(resultWindow, toBeVisible)\n                .then(() => {\n                    let isVisibilityCorrect = toBeVisible === undefined ? _isVisible === true : _isVisible === toBeVisible;\n                    if (isVisibilityCorrect) {\n                        if (typeof success === \"function\") {\n                            success(resultWindow);\n                        }\n                        return resolve(resultWindow);\n                    }\n\n                    const un = onVisibilityChanged((win: Glue42.Windows.GDWindow) => {\n                        isVisibilityCorrect = toBeVisible === undefined ? win.isVisible === true : win.isVisible === toBeVisible;\n                        if (win.id === id && isVisibilityCorrect) {\n                            if (typeof success === \"function\") {\n                                success(resultWindow);\n                            }\n                            un();\n                            resolve(resultWindow);\n                        }\n                    });\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function showLoader(loader?: Glue42.Windows.Loader): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            executor.showLoader(resultWindow, loader)\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    function hideLoader(): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            executor.hideLoader(resultWindow)\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n\n    }\n\n    function updateContext(context: any, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            executor.updateContext(resultWindow, context)\n                .then(() => {\n                    if (typeof success === \"function\") {\n                        success(resultWindow);\n                    }\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function lock(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        if (resultWindow.isLocked) {\n            if (typeof success === \"function\") {\n                success(resultWindow);\n            }\n            return Promise.resolve(resultWindow);\n        }\n\n        return new Promise((resolve, reject) => {\n            executor.lock(resultWindow)\n                .then(() => waitForLockingChanged())\n                .then(() => {\n                    if (typeof success === \"function\") {\n                        success(resultWindow);\n                    }\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function unlock(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        if (!resultWindow.isLocked) {\n            if (typeof success === \"function\") {\n                success(resultWindow);\n            }\n            return Promise.resolve(resultWindow);\n        }\n\n        return new Promise((resolve, reject) => {\n            executor.unlock(resultWindow)\n                .then(() => waitForLockingChanged())\n                .then(() => {\n                    if (typeof success === \"function\") {\n                        success(resultWindow);\n                    }\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function waitForLockingChanged() {\n        return new Promise((resolve) => {\n            const un = onLockingChanged((window: GDWindow) => {\n                if (window.id === resultWindow.id) {\n                    un();\n                    resolve();\n                }\n            });\n        });\n    }\n\n    function getIcon(success?: (icon: string) => void, error?: Glue42Core.AGM.InvokeErrorHandler): Promise<string> {\n        return new Promise((resolve, reject) => {\n            // agm.invoke(\"T42.Wnd.GetIcon\", { windowId: resultWindow.id }, \"best\", {}, successHandler, error);\n            executor.getIcon(resultWindow)\n                .then((icon: string) => {\n                    if (typeof success === \"function\") {\n                        success(icon);\n                    }\n                    resolve(icon);\n                })\n                .catch((e) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function setIcon(base64Image: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            executor.setIcon(resultWindow, base64Image)\n                .then(() => {\n                    if (typeof success === \"function\") {\n                        success(resultWindow);\n                    }\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function setFrameColor(frameColor: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            executor.setFrameColor(resultWindow, frameColor)\n                .then(() => {\n                    if (typeof success === \"function\") {\n                        success(resultWindow);\n                    }\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function setTabHeaderVisible(toBeTabHeaderVisible: boolean, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            executor.setTabHeaderVisible(resultWindow, toBeTabHeaderVisible)\n                .then(() => {\n                    if (_isTabHeaderVisible === toBeTabHeaderVisible) {\n                        if (typeof success === \"function\") {\n                            success(resultWindow);\n                        }\n\n                        return resolve(resultWindow);\n                    }\n                    const un = onTabHeaderVisibilityChanged((win: Glue42.Windows.GDWindow) => {\n                        if (win.id === id && win.isTabHeaderVisible === toBeTabHeaderVisible) {\n                            if (typeof success === \"function\") {\n                                success(resultWindow);\n                            }\n                            un();\n                            resolve(resultWindow);\n                        }\n                    });\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function showPopup(config: Glue42.Windows.PopupOptions): Promise<Glue42.Windows.GDWindow> {\n        return executor.showPopup(resultWindow, config);\n    }\n\n    function createFlydown(config: Glue42.Windows.FlydownOptions): Promise<Glue42.Windows.Flydown> {\n        return executor.createFlydown(resultWindow.id, config);\n    }\n\n    function setModalState(isModal: boolean): Promise<void> {\n        return executor.setModalState(resultWindow.id, isModal || false);\n    }\n\n    function zoomIn(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise<Glue42.Windows.GDWindow>(() => {\n            return executor.zoomIn(resultWindow);\n        }, success, error);\n\n    }\n\n    function zoomOut(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise<Glue42.Windows.GDWindow>(() => {\n            return executor.zoomOut(resultWindow);\n        }, success, error);\n\n    }\n\n    function setZoomFactor(zoomFactor: number, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise<Glue42.Windows.GDWindow>(() => {\n            if (isNaN(zoomFactor)) {\n                throw new Error(`zoomFactor is not a number`);\n            }\n            return executor.setZoomFactor(resultWindow, zoomFactor);\n        }, success, error);\n    }\n\n    function showDevTools() {\n        return executor.showDevTools(resultWindow);\n    }\n\n    function capture(captureOptions: Glue42.Windows.CaptureOptions): Promise<string> {\n        return executor.capture(resultWindow, captureOptions);\n    }\n\n    function flash(suppliedOptions?: boolean): Promise<Glue42.Windows.GDWindow> {\n        const flashOptions: FlashOptions = {\n            shouldFlash: true\n        };\n\n        if (typeof suppliedOptions === \"boolean\") {\n            flashOptions.shouldFlash = suppliedOptions;\n        }\n\n        return executor.flash(resultWindow, flashOptions);\n    }\n\n    //#endregion \"AGM methods\"\n\n    //#region \"Events\"\n\n    function onTitleChanged(callback: (title: string, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        callback(resultWindow.title, resultWindow);\n        return _registry.add(\"onTitleChanged\", callback);\n    }\n\n    function onClose(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"onClose\", callback);\n    }\n\n    function onUrlChanged(callback: (url: string, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"onUrlChanged\", callback);\n    }\n\n    function onFrameButtonAdded(callback: (btnInfo: Glue42.Windows.ButtonInfo, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"onFrameButtonAdded\", callback);\n    }\n\n    function onFrameButtonRemoved(callback: (btnInfo: Glue42.Windows.ButtonInfo, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"onFrameButtonRemoved\", callback);\n    }\n\n    function onFrameButtonClicked(callback: (btnInfo: Glue42.Windows.ButtonInfo, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"onFrameButtonClicked\", callback);\n    }\n\n    function onCollapsed(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (isCollapsed) {\n            callback(resultWindow);\n        }\n        return _registry.add(\"collapsed\", callback);\n    }\n\n    function onExpanded(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (!isCollapsed) {\n            callback(resultWindow);\n        }\n        return _registry.add(\"expanded\", callback);\n    }\n\n    function onMaximized(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (_windowState === \"maximized\") {\n            callback(resultWindow);\n        }\n        return _registry.add(\"maximized\", callback);\n    }\n\n    function onMinimized(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (_windowState === \"minimized\") {\n            callback(resultWindow);\n        }\n        return _registry.add(\"minimized\", callback);\n    }\n\n    function onNormal(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (_windowState === \"normal\") {\n            callback(resultWindow);\n        }\n        return _registry.add(\"normal\", callback);\n    }\n\n    function onAttached(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"attached\", callback);\n    }\n\n    function onDetached(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"detached\", callback);\n    }\n\n    function onVisibilityChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"visibility-changed\", callback);\n    }\n\n    function onContextUpdated(callback: (context: any, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"context-updated\", callback);\n    }\n\n    function onLockingChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"lock-changed\", callback);\n    }\n\n    function onBoundsChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"bounds-changed\", callback);\n    }\n\n    function onFocusChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"focus-changed\", callback);\n    }\n\n    function onFrameColorChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"frame-color-changed\", callback);\n    }\n\n    function onTabHeaderVisibilityChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"tab-header-visibility-changed\", callback);\n    }\n\n    function onWindowAttached(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"window-attached\", callback);\n    }\n\n    function onWindowDetached(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"window-detached\", callback);\n    }\n\n    function onGroupChanged(callback: (window: Glue42.Windows.GDWindow, newGroup: Glue42.Windows.Group, oldGroup: Glue42.Windows.Group) => void): UnsubscribeFunction {\n        return _registry.add(\"group-changed\", callback);\n    }\n\n    function onTabSelectionChanged(callback: (selectedWindow: Glue42.Windows.GDWindow, previousWindow: Glue42.Windows.GDWindow, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"tab-selection-changed\", callback);\n    }\n\n    function onClosing(callback: () => Promise<void>): UnsubscribeFunction {\n        if (!util.isFunction(callback)) {\n            throw new Error(\"callback should be a function\");\n        }\n\n        type GDHandler = (success: () => void, error: () => void) => void;\n        const callbackWrap: GDHandler = (success: () => void, error: () => void) => {\n            const promise = callback();\n            if (promise && promise.then) {\n                promise.then(success).catch(error);\n            } else {\n                success();\n            }\n        };\n        return executor.onClosing(callbackWrap, id);\n    }\n\n    function onRefreshing(callback: (prevent: () => void) => Promise<void>): UnsubscribeFunction {\n        if (!util.isFunction(callback)) {\n            throw new Error(\"callback should be a function\");\n        }\n\n        type GDRefreshHandler = (success: () => void, error: () => void, prevent: () => void) => void;\n        const callbackWrap: GDRefreshHandler = (success: () => void, error: () => void, prevent: () => void) => {\n            const promise = callback(prevent);\n            if (promise && promise.then) {\n                promise.then(success).catch(error);\n            } else {\n                success();\n            }\n        };\n        return executor.onRefreshing(callbackWrap, id);\n    }\n\n    function onZoomFactorChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (!util.isFunction(callback)) {\n            throw new Error(\"callback should be a function\");\n        }\n        return _registry.add(\"zoom-factor-changed\", callback);\n    }\n\n    //#endregion \"Events\"\n\n    //#region \"Stream function\"\n\n    function handleTitleChanged(newTitle: string): void {\n        _title = newTitle;\n        _registry.execute(\"onTitleChanged\", newTitle, resultWindow);\n    }\n\n    function handleUrlChanged(newUrl: string): void {\n        _url = newUrl;\n        _registry.execute(\"onUrlChanged\", newUrl, resultWindow);\n    }\n\n    function handleVisibilityChanged(isVisible: boolean) {\n        if (isVisible === _isVisible) {\n            return;\n        }\n        _isVisible = isVisible;\n        _registry.execute(\"visibility-changed\", resultWindow);\n    }\n\n    function handleWindowSettingsChanged(settings: Glue42.Windows.WindowSettings): void {\n        _settings = settings;\n        _registry.execute(\"settings-changed\", resultWindow);\n    }\n\n    function handleContextUpdated(context: any): void {\n        _context = context;\n        _registry.execute(\"context-updated\", _context, resultWindow);\n    }\n\n    function handleWindowClose(): void {\n        if (resultWindow.id === undefined) {\n            return;\n        }\n        resultWindow.id = undefined;\n        _registry.execute(\"onClose\", resultWindow);\n    }\n\n    function handleFrameButtonAdded(frameButton: FrameButton): void {\n        const buttonObj: Glue42.Windows.ButtonInfo = [\"buttonId\", \"imageBase64\", \"order\", \"tooltip\"].reduce((memo: any, k) => {\n            memo[k] = frameButton[k];\n            return memo;\n        }, {}) as Glue42.Windows.ButtonInfo;\n\n        const frameButtonsIds = _frameButtons.map((btn) => {\n            return btn.buttonId;\n        });\n\n        if (frameButtonsIds.indexOf(frameButton.buttonId) === -1) {\n            _frameButtons.push(buttonObj);\n        }\n\n        _registry.execute(\"onFrameButtonAdded\", buttonObj, resultWindow);\n    }\n\n    function handleFrameButtonRemoved(frameButtonId: string): void {\n        let button: Glue42.Windows.ButtonInfo;\n        _frameButtons = _frameButtons.reduce((memo, btn) => {\n            if (btn.buttonId === frameButtonId) {\n                button = btn;\n            } else {\n                memo.push(btn);\n            }\n            return memo;\n        }, []);\n\n        if (button !== undefined) {\n            _registry.execute(\"onFrameButtonRemoved\", button, resultWindow);\n        }\n    }\n\n    function handleFrameButtonClicked(frameButton: FrameButton): void {\n        const button = _frameButtons.filter((btn) => {\n            return btn.buttonId === frameButton.buttonId;\n        });\n\n        if (button.length > 0) {\n            _registry.execute(\"onFrameButtonClicked\", button[0], resultWindow);\n        }\n    }\n\n    function handleWindowChangeState(state: string): void {\n        if (state === \"collapsed\") {\n            isCollapsed = true;\n        } else if (state === \"expanded\") {\n            isCollapsed = false;\n        } else {\n            _windowState = state as Glue42.Windows.WindowState;\n        }\n\n        _registry.execute(state, resultWindow);\n    }\n\n    function handleFrameIsLockedChanged(isLocked: boolean): void {\n        _isLocked = isLocked;\n        _registry.execute(\"lock-changed\", resultWindow);\n    }\n\n    function handleBoundsChanged(bounds: Glue42.Windows.Bounds): void {\n        if (_bounds.top === bounds.top && _bounds.left === bounds.left && _bounds.width === bounds.width && _bounds.height === bounds.height) {\n            return;\n        }\n        _bounds.top = bounds.top;\n        _bounds.left = bounds.left;\n        _bounds.width = bounds.width;\n        _bounds.height = bounds.height;\n\n        _registry.execute(\"bounds-changed\", resultWindow);\n    }\n\n    function handleFocusChanged(isFocused: boolean): void {\n        _focus = isFocused;\n        _registry.execute(\"focus-changed\", resultWindow);\n    }\n\n    function handleFrameColorChanged(frameColor: string): void {\n        _frameColor = frameColor;\n        _registry.execute(\"frame-color-changed\", resultWindow);\n    }\n\n    function handleFrameAttached(tabGroupId: string, isTabHeaderVisible: boolean): void {\n        _tabGroupId = tabGroupId;\n        _isTabHeaderVisible = isTabHeaderVisible;\n        _registry.execute(\"frame-attached\", resultWindow);\n    }\n\n    function handleCompositionChanged(neighbours: Neighbours, groupId: string): void {\n        _neighbours = neighbours || {};\n        _groupId = groupId;\n    }\n\n    function handleGroupHeaderVisibilityChanged(isGroupHeaderVisible: boolean): void {\n        _isGroupHeaderVisible = isGroupHeaderVisible;\n    }\n\n    function handleTabHeaderVisibilityChanged(isTabHeaderVisible: boolean): void {\n        if (_isTabHeaderVisible !== isTabHeaderVisible) {\n            _isTabHeaderVisible = isTabHeaderVisible;\n            _registry.execute(\"tab-header-visibility-changed\", resultWindow);\n        }\n    }\n\n    function handleFrameSelectionChanged(newWindow: string, prevWindow: string): void {\n        let selectedWindow: Glue42.Windows.GDWindow;\n        if (typeof newWindow !== \"undefined\" && newWindow === id) {\n            _isTabSelected = true;\n            selectedWindow = resultWindow;\n        } else {\n            _isTabSelected = false;\n            selectedWindow = windowStore.get(newWindow) ? windowStore.get(newWindow).API : undefined;\n        }\n        const previousWindow = windowStore.get(prevWindow) ? windowStore.get(prevWindow).API : undefined;\n\n        if (_isTabSelected && previousWindow) {\n            const un = previousWindow.onTabSelectionChanged((newWin: Glue42.Windows.GDWindow, prevWin: Glue42.Windows.GDWindow) => {\n                if ((prevWin && prevWin.id) === previousWindow.id) {\n                    un();\n                    _registry.execute(\"tab-selection-changed\", selectedWindow, previousWindow, resultWindow);\n                }\n            });\n        } else {\n            _registry.execute(\"tab-selection-changed\", selectedWindow, previousWindow, resultWindow);\n        }\n    }\n\n    function handleAttached(newTabGroupId: string, tabHeaderVisible: boolean): void {\n        _tabGroupId = newTabGroupId;\n        _isTabHeaderVisible = tabHeaderVisible;\n        _registry.execute(\"attached\", resultWindow);\n    }\n\n    function handleWindowAttached(win: Glue42.Windows.GDWindow): void {\n        _registry.execute(\"window-attached\", win);\n    }\n\n    function handleDetached(tabGroupId: string): void {\n        _tabGroupId = tabGroupId;\n        // this tabGroupId is always the same as the current one\n        // the tabGroupId is actually changed in the frame-attached event\n        const un = _registry.add(\"frame-attached\", (win: Glue42.Windows.GDWindow) => {\n            if (win.id === id) {\n                un();\n                _registry.execute(\"detached\", resultWindow);\n            }\n        });\n    }\n\n    function handleWindowDetached(win: Glue42.Windows.GDWindow): void {\n        _registry.execute(\"window-detached\", win);\n    }\n\n    function handleZoomFactorChanged(zoomFactor: number): void {\n        _zoomFactor = zoomFactor;\n        _registry.execute(\"zoom-factor-changed\", resultWindow);\n    }\n\n    //#endregion \"Stream function\"\n\n    //#region \"Group Events\"\n    function handleGroupChanged(newGroup: Glue42.Windows.Group, oldGroup: Glue42.Windows.Group) {\n        logger.trace(`handle group changed to win: ${id} with group id: ${newGroup.id}`);\n        _group = newGroup;\n        _groupId = newGroup.id;\n        _registry.execute(\"group-changed\", resultWindow, newGroup, oldGroup);\n    }\n\n    // This is used to set the relation from window to corespondent group API, it could be undefined, if the window is removed from group\n    function handleGroupAssociation(group: Glue42.Windows.Group) {\n        if (group) {\n            _logger.trace(`setting group to win: ${id} with group id: ${group.id}`);\n        }\n        _group = group;\n    }\n\n    //#region \"Internal function\"\n\n    function getAllTabs(): Glue42.Windows.GDWindow[] {\n        const allWindows = windowStore.list;\n        if (_mode.toLowerCase() !== \"tab\") {\n            return [];\n        }\n        return Object.keys(allWindows).reduce((memo, win) => {\n            const window: WindowWrapper = allWindows[win];\n            if (window\n                && window.API.tabGroupId\n                && typeof window.API.tabGroupId !== \"undefined\"\n                && typeof resultWindow.tabGroupId !== \"undefined\"\n                && window.API.tabGroupId === resultWindow.tabGroupId) {\n                memo.push(window.API);\n            }\n            return memo;\n        }, []);\n    }\n\n    function mapWindowIdsToWindowObjects(windowIdArr: string[]): Glue42.Windows.GDWindow[] {\n        return windowIdArr.reduce((memo, winId) => {\n            const window = windowStore.get(winId);\n            if (window) {\n                memo.push(window.API);\n            }\n            return memo;\n        }, []);\n    }\n\n    function getNeighboursByDirection(direction: string): Glue42.Windows.GDWindow[] {\n        const windowIds = _neighbours[direction];\n        if (typeof windowIds !== \"undefined\") {\n            return mapWindowIdsToWindowObjects(windowIds);\n        }\n    }\n\n    function getApplicationName(): string {\n        if (_context._APPLICATION_NAME) {\n            return _context._APPLICATION_NAME;\n        }\n        if (_context && _context._t42 && _context._t42.application) {\n            return _context._t42.application;\n        }\n        const info = getWindowInfo();\n        if (!info) {\n            return undefined;\n        }\n\n        return info.applicationName;\n    }\n\n    function getWindowInfo() {\n        if (typeof window.glue42gd !== \"undefined\" && window.glue42gd.getWindowInfo) {\n            const info = window.glue42gd.getWindowInfo(id);\n            if (!info) {\n                return undefined;\n            } else {\n                return info;\n            }\n        }\n    }\n\n    function areBoundsEqual(requested: Glue42.Windows.Bounds, current: Glue42.Windows.Bounds) {\n        let height = requested.height;\n        let width = requested.width;\n        if (requested.height < _settings.minHeight) {\n            height = _settings.minHeight;\n        }\n        if (requested.height > _settings.maxHeight) {\n            height = _settings.maxHeight;\n        }\n        if (requested.width < _settings.minWidth) {\n            width = _settings.minWidth;\n        }\n        if (requested.width > _settings.maxWidth) {\n            width = _settings.maxWidth;\n        }\n\n        const areHeightsEqual = height ? current.height === height : true;\n        const areWidthsEqual = width ? current.width === width : true;\n        const areLeftsEqual = requested.left ? current.left === requested.left : true;\n        const areTopsEqual = requested.top ? current.top === requested.top : true;\n\n        return areHeightsEqual && areWidthsEqual && areLeftsEqual && areTopsEqual;\n    }\n\n    //#endregion \"Internal function\"\n\n    //#region \"API\"\n\n    resultWindow = {\n        get name() {\n            return _name;\n        },\n        get application() {\n            const appManager = appManagerGetter();\n            return appManager ? appManager.application(getApplicationName()) : undefined;\n        },\n        get hostInstance() {\n            return executor.hostInstance;\n        },\n        get agmInstance() {\n            if (window.glue42gd) {\n                return agm.servers().find((s) => s.windowId === this.id);\n            }\n            const appName = getApplicationName();\n            return appName ? { application: appName } : undefined;\n        },\n        get url() {\n            return _url;\n        },\n        id,\n        get title() {\n            return _title;\n        },\n        get windowStyleAttributes() {\n            return _settings;\n        },\n        get settings() {\n            return _settings;\n        },\n        get tabGroupId() {\n            return _mode.toLowerCase() === \"tab\" ? _tabGroupId : undefined;\n        },\n        get frameButtons() {\n            return _frameButtons;\n        },\n        get mode() {\n            return _mode;\n        },\n        get state() {\n            return _windowState;\n        },\n        get isCollapsed() {\n            return isCollapsed;\n        },\n        get isVisible() {\n            return _isVisible;\n        },\n        get isLocked() {\n            return _isLocked;\n        },\n        get context() {\n            return _context;\n        },\n        get bounds() {\n            return _bounds;\n        },\n        get minHeight() {\n            return _settings.minHeight;\n        },\n        get maxHeight() {\n            return _settings.maxHeight;\n        },\n        get minWidth() {\n            return _settings.minWidth;\n        },\n        get maxWidth() {\n            return _settings.maxWidth;\n        },\n        get isFocused() {\n            return _focus;\n        },\n        get frameColor() {\n            return _frameColor;\n        },\n        get opened() {\n            return resultWindow.id !== undefined;\n        },\n        get group() {\n            return _group;\n        },\n\n        get groupId() {\n            return _groupId;\n        },\n\n        get topNeighbours() {\n            return getNeighboursByDirection(\"top\");\n        },\n\n        get leftNeighbours() {\n            return getNeighboursByDirection(\"left\");\n        },\n\n        get rightNeighbours() {\n            return getNeighboursByDirection(\"right\");\n        },\n\n        get bottomNeighbours() {\n            return getNeighboursByDirection(\"bottom\");\n        },\n\n        get isGroupHeaderVisible() {\n            return _isGroupHeaderVisible;\n        },\n\n        get activityId() {\n            if (_context._t42) {\n                return _context._t42.activityId;\n            }\n            const info = getWindowInfo();\n            if (!info) {\n                return undefined;\n            }\n            return info.activityId;\n        },\n\n        get activityWindowId() {\n            if (_context._t42) {\n                return _context._t42.activityWindowId;\n            }\n            const info = getWindowInfo();\n            if (!info) {\n                return undefined;\n            }\n            return info.activityWindowId;\n        },\n\n        get windowType() {\n            return options.windowType || \"electron\";\n        },\n\n        get zoomFactor() {\n            return _zoomFactor;\n        },\n        get screen() {\n            return utils.getMonitor(resultWindow.bounds, (window.glue42gd as any).monitors);\n        },\n        maximize,\n        restore,\n        minimize,\n        maximizeRestore,\n        collapse,\n        expand,\n        toggleCollapse,\n        focus,\n        activate,\n        moveResize,\n        setTitle,\n        setStyle,\n        setOnTop,\n        resetButtons,\n        setSizeConstraints,\n        navigate,\n        addFrameButton,\n        removeFrameButton,\n        setVisible,\n        show: () => setVisible(true),\n        hide: () => setVisible(false),\n        center: (screen) => moveResize(utils.getDisplayCenterOfScreen(resultWindow.bounds, screen || resultWindow.screen)),\n        close,\n        snap,\n        showLoader,\n        hideLoader,\n        updateContext,\n        lock,\n        unlock,\n        getIcon,\n        setIcon,\n        setFrameColor,\n        attachTab,\n        detachTab,\n        setTabHeaderVisible,\n        showPopup,\n        createFlydown,\n        setModalState,\n        setZoomFactor,\n        zoomIn,\n        zoomOut,\n        showDevTools,\n        capture,\n        flash,\n\n        onClose,\n        onUrlChanged,\n        onTitleChanged,\n        onFrameButtonAdded,\n        onFrameButtonRemoved,\n        onFrameButtonClicked,\n        onCollapsed,\n        onExpanded,\n        onMinimized,\n        onMaximized,\n        onNormal,\n        onAttached,\n        onDetached,\n        onVisibilityChanged,\n        onContextUpdated,\n        onLockingChanged,\n        onBoundsChanged,\n        onFrameColorChanged,\n        onFocusChanged,\n        onGroupChanged,\n        onWindowAttached,\n        onWindowDetached,\n        onTabSelectionChanged,\n        onTabHeaderVisibilityChanged,\n        onClosing,\n        onRefreshing,\n        onZoomFactorChanged,\n\n        get tabs() {\n            return getAllTabs();\n        },\n\n        get isTabHeaderVisible() {\n            return _isTabHeaderVisible;\n        },\n\n        get isTabSelected() {\n            return _isTabSelected;\n        },\n    };\n\n    //#endregion \"API\"\n\n    //#endregion \"Group Events\"\n\n    const events: WindowEvents = {\n        handleWindowClose,\n        handleWindowChangeState,\n        handleTitleChanged,\n        handleVisibilityChanged,\n        handleUrlChanged,\n        handleWindowSettingsChanged,\n        handleContextUpdated,\n        handleFrameIsLockedChanged,\n        handleBoundsChanged,\n        handleFocusChanged,\n        handleFrameButtonAdded,\n        handleFrameButtonRemoved,\n        handleFrameButtonClicked,\n        handleFrameColorChanged,\n        handleFrameAttached,\n        handleFrameSelectionChanged,\n        handleCompositionChanged,\n        handleGroupHeaderVisibilityChanged,\n        handleTabHeaderVisibilityChanged,\n        handleGroupChanged,\n        handleGroupAssociation,\n        handleAttached,\n        handleDetached,\n        handleWindowAttached,\n        handleWindowDetached,\n        handleZoomFactorChanged\n    };\n\n    return {\n        API: resultWindow,\n        Events: events,\n    };\n};\n","import { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../../../glue\";\nimport { Executor, FlashOptions } from \"../../types\";\nimport { ShowFlydownData, ReformatedFlydownOptions, ReformatedFlydownZone, ReformatedPopupOptions } from \"./types\";\nimport { CallbackRegistry, default as CallbackFactory } from \"callback-registry\";\n\nexport class GDExecutor implements Executor {\n    private agm: Glue42Core.AGM.API;\n    private agmTarget: {};\n    private _registry: CallbackRegistry = CallbackFactory();\n\n    public get hostInstance() {\n        return this.agmTarget;\n    }\n\n    public init(\n        agm: Glue42Core.AGM.API,\n        instance: Glue42Core.AGM.Instance | string\n    ) {\n        this.agm = agm;\n        this.agmTarget = instance;\n    }\n\n    public close(\n        resultWindow: Glue42.Windows.GDWindow\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"close\", { windowId: resultWindow.id })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public navigate(\n        resultWindow: Glue42.Windows.GDWindow,\n        newUrl: string\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"navigate\", {\n                windowId: resultWindow.id,\n                options: {\n                    url: newUrl\n                }\n            })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    // Calls the public methods of the window. No Call to GD is made\n    public async setStyle(\n        resultWindow: Glue42.Windows.GDWindow,\n        style: Glue42.Windows.WindowSettings\n    ): Promise<Glue42.Windows.GDWindow> {\n        const stylePromises: Array<Promise<any>> = [];\n        const wait = (promise: Promise<any>) => stylePromises.push(promise);\n\n        if (style.focus !== undefined && !resultWindow.isFocused) {\n            wait(resultWindow.focus());\n        }\n\n        // Todo: only if !isRestoring (hopefully setVisible does this check)\n        if (style.hidden !== undefined) {\n            const toBeVisible = !style.hidden;\n            wait(resultWindow.setVisible(toBeVisible));\n        }\n\n        if (style.onTop !== undefined) {\n            wait(resultWindow.setOnTop(style.onTop));\n        }\n\n        const {\n            maxWidth, maxHeight, minWidth, minHeight,\n            allowClose, allowCollapse, allowLockUnlock, allowMaximize, allowMinimize\n        } = style;\n\n        wait(resultWindow.setSizeConstraints({ maxWidth, maxHeight, minWidth, minHeight }));\n        wait(resultWindow.resetButtons({ allowClose, allowCollapse, allowLockUnlock, allowMaximize, allowMinimize }));\n\n        await Promise.all(stylePromises);\n\n        return resultWindow;\n    }\n\n    public setSizeConstraints(\n        resultWindow: Glue42.Windows.GDWindow,\n        constraints: Glue42.Windows.SizeConstraints\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"setSizeConstraints\", {\n                windowId: resultWindow.id,\n                options: constraints\n            }).then(() => {\n                resolve(resultWindow);\n            }).catch(reject);\n        });\n    }\n\n    public resetButtons(\n        resultWindow: Glue42.Windows.GDWindow,\n        buttonsConfig: Glue42.Windows.WindowButtons\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"resetButtons\", {\n                windowId: resultWindow.id,\n                options: buttonsConfig\n            }).then(() => {\n                resolve(resultWindow);\n            }).catch(reject);\n        });\n    }\n\n    public setOnTop(\n        resultWindow: Glue42.Windows.GDWindow,\n        onTop: boolean\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"setOnTop\", {\n                windowId: resultWindow.id,\n                options: { onTop }\n            }).then(() => {\n                resolve(resultWindow);\n            }).catch(reject);\n        });\n    }\n    public setTitle(\n        resultWindow: Glue42.Windows.GDWindow,\n        newTitle: string\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            const options = {\n                windowId: resultWindow.id,\n                options: {\n                    title: newTitle\n                }\n            };\n\n            this.execute(\"setTitle\", options)\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n\n            Promise.resolve();\n        });\n    }\n\n    public moveResize(\n        resultWindow: Glue42.Windows.GDWindow,\n        dimensions: Glue42.Windows.Bounds\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"moveResize\", {\n                windowId: resultWindow.id,\n                options: {\n                    bounds: dimensions\n                }\n            })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public addFrameButton(\n        resultWindow: Glue42.Windows.GDWindow,\n        buttonInfo: Glue42.Windows.ButtonInfo\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"addButton\", {\n                windowId: resultWindow.id,\n                options: buttonInfo\n            })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public removeFrameButton(\n        resultWindow: Glue42.Windows.GDWindow,\n        buttonId: string\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"removeButton\", {\n                windowId: resultWindow.id,\n                options: buttonId\n            })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public activate(\n        resultWindow: Glue42.Windows.GDWindow\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"activate\", { windowId: resultWindow.id })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public focus(\n        resultWindow: Glue42.Windows.GDWindow\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"focus\", { windowId: resultWindow.id })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public maximizeRestore(\n        resultWindow: Glue42.Windows.GDWindow\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            function successHandler(w: Glue42.Windows.GDWindow) {\n                resolve(w);\n            }\n\n            function errorHandler(e: string) {\n                reject(e);\n            }\n\n            this.execute(\"maximizeRestore\", { windowId: resultWindow.id })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public maximize(\n        resultWindow: Glue42.Windows.GDWindow\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"maximize\", { windowId: resultWindow.id })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public restore(\n        resultWindow: Glue42.Windows.GDWindow\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"restore\", { windowId: resultWindow.id })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public minimize(\n        resultWindow: Glue42.Windows.GDWindow\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"minimize\", { windowId: resultWindow.id })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public collapse(\n        resultWindow: Glue42.Windows.GDWindow\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"collapse\", { windowId: resultWindow.id })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public expand(\n        resultWindow: Glue42.Windows.GDWindow\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"expand\", { windowId: resultWindow.id })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public toggleCollapse(\n        resultWindow: Glue42.Windows.GDWindow\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"toggleCollapse\", { windowId: resultWindow.id })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public snap(\n        resultWindow: Glue42.Windows.GDWindow,\n        target: string | Glue42.Windows.GDWindow,\n        direction: Glue42.Windows.RelativeDirection\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            const sourceWindowId = resultWindow.id;\n            let targetWindowId;\n            const errorMessage =\n                \"Invalid target parameter - should be an object with property id or a string. Invoked for source window id:\" +\n                resultWindow.id;\n            if (!target) {\n                reject(errorMessage);\n                return;\n            }\n            if (typeof target === \"string\") {\n                targetWindowId = target;\n            } else if (typeof target.id !== \"undefined\") {\n                targetWindowId = target.id;\n            } else {\n                reject(errorMessage);\n                return;\n            }\n            const args: any = {\n                targetWindowId\n            };\n\n            if (direction) {\n                args.snappingEdge = direction;\n            }\n            this.execute(\"snap\", {\n                windowId: resultWindow.id,\n                options: args\n            })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public attachTab(\n        resultWindow: Glue42.Windows.GDWindow,\n        options: any\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"attachTab\", {\n                windowId: resultWindow.id,\n                options\n            })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public detachTab(\n        resultWindow: Glue42.Windows.GDWindow,\n        options: Glue42.Windows.DetachOptions\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            function successHandler(w: Glue42.Windows.GDWindow) {\n                resolve(w);\n            }\n\n            function errorHandler(e: string) {\n                reject(e);\n            }\n\n            this.execute(\"detachTab\", {\n                windowId: resultWindow.id,\n                options\n            })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public setVisible(\n        resultWindow: Glue42.Windows.GDWindow,\n        toBeVisible: boolean = true\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            let command: string;\n            if (toBeVisible) {\n                command = \"show\";\n            } else {\n                command = \"hide\";\n            }\n\n            this.execute(command, { windowId: resultWindow.id })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public showLoader(\n        resultWindow: Glue42.Windows.GDWindow,\n        loader?: Glue42.Windows.Loader\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"showLoadingAnimation\", { windowId: resultWindow.id, options: loader })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public hideLoader(\n        resultWindow: Glue42.Windows.GDWindow\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"hideLoadingAnimation\", { windowId: resultWindow.id })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public updateContext(\n        resultWindow: Glue42.Windows.GDWindow,\n        context: any\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"updateContext\", {\n                windowId: resultWindow.id,\n                context,\n                replace:\n                    Object.keys(resultWindow.context).length > 0 ? false : true\n            })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public lock(\n        resultWindow: Glue42.Windows.GDWindow\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"lockUnlock\", {\n                windowId: resultWindow.id,\n                options: {\n                    lock: true\n                }\n            })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public unlock(\n        resultWindow: Glue42.Windows.GDWindow\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"lockUnlock\", {\n                windowId: resultWindow.id,\n                options: {\n                    lock: false\n                }\n            })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public getIcon(resultWindow: Glue42.Windows.GDWindow): Promise<string> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"getIcon\", {\n                windowId: resultWindow.id,\n                options: {}\n            })\n                .then((result) => {\n                    resolve((result as any).icon);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public setIcon(\n        resultWindow: Glue42.Windows.GDWindow,\n        base64Image: string\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"setIcon\", {\n                windowId: resultWindow.id,\n                options: {\n                    dataURL: base64Image\n                }\n            })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public setFrameColor(\n        resultWindow: Glue42.Windows.GDWindow,\n        frameColor: string\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            function successHandler(w: Glue42.Windows.GDWindow) {\n                resolve(w);\n            }\n\n            function errorHandler(e: string) {\n                reject(e);\n            }\n\n            this.execute(\"setFrameColor\", {\n                windowId: resultWindow.id,\n                options: {\n                    frameColor\n                }\n            })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public setTabHeaderVisible(\n        resultWindow: Glue42.Windows.GDWindow,\n        toBeTabHeaderVisible: boolean\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            function successHandler(w: Glue42.Windows.GDWindow) {\n                resolve(w);\n            }\n\n            function errorHandler(e: string) {\n                reject(e);\n            }\n\n            this.execute(\"setTabHeaderVisible\", {\n                windowId: resultWindow.id,\n                options: {\n                    toShow: toBeTabHeaderVisible\n                }\n            })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public async showPopup(targetWindow: Glue42.Windows.GDWindow, options: Glue42.Windows.PopupOptions): Promise<Glue42.Windows.GDWindow> {\n        if (!options) {\n            return Promise.reject(\"The options object is not valid!\");\n        }\n\n        const optionsCopy = { ...options };\n\n        if (!optionsCopy.targetLocation) {\n            optionsCopy.targetLocation = \"bottom\" as Glue42.Windows.PopupTargetLocation;\n        }\n\n        const reformatedOptions: ReformatedPopupOptions & { targetId: string } = {\n            ...optionsCopy,\n            popupBounds: optionsCopy.size,\n            targetId: targetWindow.id,\n            popupId: optionsCopy.windowId\n        };\n\n        await this.execute(\"showPopupWindow\", {\n            windowId: targetWindow.id,\n            options: reformatedOptions\n        });\n\n        return targetWindow;\n    }\n\n    public async createFlydown(windowId: string, options: Glue42.Windows.FlydownOptions) {\n        if (!options) {\n            return Promise.reject(\"The options object is not valid!\");\n        }\n\n        const optionsCopy = { ...options };\n\n        if (!optionsCopy.horizontalOffset) {\n            optionsCopy.horizontalOffset = 0;\n        }\n\n        if (!optionsCopy.verticalOffset) {\n            optionsCopy.verticalOffset = 0;\n        }\n\n        const fullOptions: Glue42.Windows.FlydownOptions & { targetId: string, flydownBounds: Glue42.Windows.FlydownOptions[\"size\"] } = this.reformatFlydownOptions(windowId, optionsCopy);\n\n        return this.execute(\"setFlydownArea\", { windowId, options: fullOptions }).then(() => {\n            const zoneIds = fullOptions.zones.map((z) => z.id);\n\n            fullOptions.zones.forEach((z) => {\n                let callback: (...args: any[]) => any = typeof (z.flydownSize) === \"function\" ?\n                    z.flydownSize : () => z.flydownSize;\n\n                if (options.size instanceof Function && z.flydownSize) {\n                    callback = async (data: Glue42.Windows.ShowFlydownData, cancel: () => void) => {\n                        let result;\n                        // The options callback must be always invoked\n                        // If the property in the zone is null it will be automatically\n                        // assigned to the same callback from the code above reformatFlydownOptions\n                        if (options.size instanceof Function) {\n                            result = await options.size(data, cancel);\n                        }\n\n                        // If both are callbacks the zone has higher priority\n                        // If they are the same only one should be invoked\n                        if (z.flydownSize instanceof Function && z.flydownSize !== options.size) {\n                            return await z.flydownSize(data, cancel) || result;\n                        }\n\n                        // The options callback overwrites the bounds object specified in the zone\n                        return result || z.flydownSize;\n                    };\n                }\n                this._registry.clearKey(`${fullOptions.targetId}_${z.id}`);\n                this._registry.add(`${fullOptions.targetId}_${z.id}`, callback);\n            });\n\n            return {\n                destroy: () => this.clearFlydownArea(fullOptions.targetId, zoneIds),\n                options: optionsCopy\n            };\n        });\n    }\n\n    public async setModalState(windowId: string, isModal: boolean): Promise<void> {\n        return this.execute(\"setModalState\", { windowId, options: { isModal } });\n    }\n\n    public async handleFlydownBoundsRequested(targetId: string, data: ShowFlydownData) {\n        const cancelCallback = () => data.cancel = true;\n\n        const callbackData: Glue42.Windows.ShowFlydownData = {\n            zoneId: data.flydownId,\n            flydownWindowBounds: data.flydownWindowBounds,\n            flydownWindowId: data.flydownWindowId,\n        };\n\n        const responses = await Promise.all(this._registry.execute(`${targetId}_${data.flydownId}`, callbackData, cancelCallback));\n\n        if (responses.length === 1) {\n            const defaultResponse = { height: 0, width: 0, top: 0, left: 0 };\n            const response = typeof (responses[0]) === \"object\" && !Array.isArray(responses[0]) ? responses[0] : defaultResponse;\n            const responseOptions: ShowFlydownData = { ...data, flydownWindowBounds: response };\n\n            return responseOptions;\n        }\n    }\n\n    public async zoomIn(window: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"zoomIn\", {\n            windowId: window.id,\n        });\n        return window;\n    }\n\n    public async zoomOut(window: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"zoomOut\", {\n            windowId: window.id,\n        });\n        return window;\n    }\n\n    public async setZoomFactor(window: Glue42.Windows.GDWindow, zoomFactor: number): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"setZoomFactor\", {\n            windowId: window.id,\n            options: {\n                zoomFactor\n            }\n        });\n        return window;\n    }\n\n    public async showDevTools(window: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"showDevTools\", {\n            windowId: window.id,\n        });\n\n        return window;\n    }\n\n    public async capture(window: Glue42.Windows.GDWindow, options: Glue42.Windows.CaptureOptions): Promise<string> {\n        const base64screenshot = (await this.execute(\n            \"captureScreenshot\",\n            { windowId: window.id, options: { ...options } }\n        )).data;\n\n        return base64screenshot;\n    }\n\n    public async captureGroup(windowIds: string[], options: Glue42.Windows.CaptureOptions): Promise<string> {\n        const base64screenshot: string = (await this.execute(\n            \"captureGroupScreenshot\",\n            { windowId: windowIds[0], options: { groupWindowIds: windowIds, ...options } }\n        )).data;\n\n        return base64screenshot;\n    }\n\n    public async flash(resultWindow: Glue42.Windows.GDWindow, options: FlashOptions): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\n            \"flash\",\n            { windowId: resultWindow.id, options: { ...options } }\n        );\n\n        return resultWindow;\n    }\n\n    public execute(\n        command: string,\n        options: any\n    ): Promise<any> {\n        return new Promise((resolve, reject) => {\n            const args: any = { ...options, command };\n            this.agm\n                .invoke(\"T42.Wnd.Execute\", args, this.agmTarget)\n                .then((i: Glue42Core.AGM.InvocationResult<any>) => {\n                    if (i.returned && i.returned.errorMsg) {\n                        reject(i);\n                    } else {\n                        resolve(i.returned);\n                    }\n                })\n                .catch((i: Glue42Core.AGM.InvocationResult<any>) => {\n                    reject(i);\n                });\n        });\n    }\n\n    /** Groups */\n    public setGroupHeaderVisible(\n        windowId: string,\n        toShow: boolean\n    ): Promise<Glue42Core.AGM.InvocationResult<any>> {\n        return this.execute(\"setGroupHeaderVisibility\", {\n            windowId,\n            options: {\n                toShow\n            }\n        });\n    }\n\n    public onClosing(callback: (success: () => void, error: () => void) => void, id: string): () => void {\n        const glue42gd = typeof window !== \"undefined\" && (window as any).glue42gd;\n        if (glue42gd) {\n            return glue42gd.addCloseHandler(callback, id);\n        }\n    }\n\n    public onRefreshing(callback: (success: () => void, error: () => void, prevent: () => void) => void, id: string): () => void {\n        const glue42gd = typeof window !== \"undefined\" && (window as any).glue42gd;\n        if (glue42gd) {\n            return glue42gd.addRefreshHandler(callback, id);\n        }\n    }\n\n    private reformatFlydownOptions(windowId: string, options: Glue42.Windows.FlydownOptions) {\n        const assignGeneralIfUnassigned = (zone: Glue42.Windows.FlydownZone, prop: keyof Glue42.Windows.FlydownZone & keyof Glue42.Windows.FlydownOptions) => {\n            if (options[prop] && (zone[prop] === undefined || zone[prop] === null)) {\n                const valueFromOptions = options[prop];\n                (zone[prop] as any) = valueFromOptions;\n            }\n        };\n\n        const zones: ReformatedFlydownOptions[\"zones\"] = options.zones.map((z) => {\n            assignGeneralIfUnassigned(z, \"windowId\");\n            assignGeneralIfUnassigned(z, \"targetLocation\");\n\n            if (options.size && (z.flydownSize === undefined || z.flydownSize === null)) {\n                z.flydownSize = options.size;\n            }\n\n            (z as ReformatedFlydownZone).flydownBounds = z.flydownSize as any;\n            (z as ReformatedFlydownZone).flydownId = z.windowId;\n\n            if (!z.targetLocation) {\n                z.targetLocation = \"bottom\" as Glue42.Windows.PopupTargetLocation.Bottom;\n            }\n\n            return z;\n        });\n\n        return {\n            ...options,\n            zones,\n            targetId: windowId,\n            flydownBounds: options.size,\n            flydownActiveArea: options.activeArea\n        };\n    }\n\n    private clearFlydownArea(windowId: string, areaIds: string[]) {\n        return this.execute(\"clearFlydownWindowArea\", {\n            windowId,\n            options: {}\n        }).then(() => {\n            areaIds.forEach((id) => {\n                this._registry.clearKey(`${windowId}_${id}`);\n            });\n        });\n    }\n}\n\nexport default new GDExecutor();\n","import { default as windowStore } from \"../store\";\nimport { WindowWrapper } from \"../types\";\n\nexport function getWindowsByTabGroupId(windowId: string, tabGroupId: string) {\n    const windows = windowStore.list;\n    return Object.keys(windows).reduce((memo: { [key: string]: WindowWrapper }, id) => {\n        const win = windows[id];\n        if (win.API.tabGroupId === tabGroupId && win.API.id !== windowId) {\n            memo[id] = win;\n        }\n        return memo;\n    }, {});\n}\n","import { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../../../glue\";\nimport { default as windowStore } from \"../../store\";\nimport { Environment, Executor, WindowConstructorOptions, WindowEvents, WindowWrapper } from \"../../types\";\nimport windowFactory from \"../../window\";\nimport { default as executor } from \"./executor\";\nimport { CallbackRegistry, UnsubscribeFunction, default as CallbackFactory } from \"callback-registry\";\nimport {\n    FullInfoEvent,\n    StreamEvent,\n    WindowInfo,\n    GroupHeaderVisibilityChanged,\n    UrlChanged,\n    TitleChanged,\n    BoundsChanged,\n    FocusChanged,\n    CompositionChanged,\n    ExtendedStreamEvent,\n    ShowFlydownData,\n    EventWithResponseData,\n    ResponseTypes\n} from \"./types\";\nimport { getWindowsByTabGroupId } from \"../helpers\";\n\nexport default class GDEnvironment implements Environment {\n\n    private _registry: CallbackRegistry = CallbackFactory();\n    private _agm: Glue42Core.AGM.API;\n    private _logger: Glue42Core.Logger.API;\n    private _waitTimeout: number = 10000;\n    private _agmInstance: Glue42Core.AGM.Instance | \"best\" | \"all\";\n    private _windowId: string;\n    private _appManagerGetter: () => Glue42.AppManager.API;\n\n    constructor(agm: Glue42Core.AGM.API, logger: Glue42Core.Logger.API, appManagerGetter: () => Glue42.AppManager.API, instance?: Glue42Core.AGM.Instance, wndId?: string) {\n        this._agm = agm;\n        this._logger = logger.subLogger(\"gd-env\");\n        this._agmInstance = this.normalizeInstance(instance);\n        this._windowId = wndId;\n        this._appManagerGetter = appManagerGetter;\n    }\n\n    public init(): Promise<GDEnvironment> {\n        return new Promise((resolve, reject) => {\n            // if we don't have an Instance, thats means that we are running outside from any Tick42 Containers\n            // so our target is best\n            if (typeof this._agmInstance === \"undefined\") {\n                this._agmInstance = \"best\";\n            }\n\n            this._agm.registerAsync(\"T42.Wnd.OnEventWithResponse\", (args, caller, success, err) => {\n                this.respondToEvent(args as any).then(success).catch(err);\n            });\n\n            const streamPromise = new Promise<void>((streamResolve, streamReject) => {\n                this._agm.subscribe(\"T42.Wnd.OnEvent\", {\n                    waitTimeoutMs: this._waitTimeout,\n                    target: this._agmInstance,\n                    onData: (streamData: any) => {\n                        this.updateWindow(streamData.data);\n                    },\n                    onConnected: (instance) => {\n                        this._agmInstance = this.normalizeInstance(instance);\n                        // Init the executor\n                        executor.init(this._agm, this._agmInstance);\n                        resolve(this);\n                    }\n                }).catch((err: any) => {\n                    reject(\"Can not subscribe for stream T42.Wnd.OnEvent. Err: \" + err);\n                });\n            });\n        });\n\n    }\n\n    public get executor(): Executor {\n        return executor;\n    }\n\n    public open(name: string, url: string, options: any, success: (id: string) => void, error: (error: object | string) => void): void {\n        options = options || {};\n        const copyOptions = { ...options };\n\n        // relativeTo fix\n        if (name === undefined) {\n            error({ message: \"The name is undefined\" });\n            return;\n        }\n\n        if (copyOptions.relativeTo !== undefined && typeof copyOptions.relativeTo !== \"string\") {\n            copyOptions.relativeTo = copyOptions.relativeTo.id || \"\";\n        }\n\n        copyOptions.name = name;\n        copyOptions.url = url;\n\n        // This is for compatibility between gd2 and gd3\n        copyOptions.windowState = options.windowState || options.state;\n        // Otherwise glue desktop throws an error for extra properties\n        delete copyOptions.state;\n\n        this._agm.invoke<{ id: string }>(\"T42.Wnd.Create\", copyOptions, this._agmInstance)\n            .then((message) => {\n                if (message.returned !== undefined) {\n                    const id: string = message.returned.id;\n                    success(id);\n                } else {\n                    error({ message: \"failed to execute T42.Wnd.Create - unknown reason\" });\n                }\n            })\n            .catch(error);\n    }\n\n    public createFlydown(windowId: string, options: Glue42.Windows.FlydownOptions): Promise<Glue42.Windows.Flydown> {\n        return this.executor.createFlydown(windowId, options);\n    }\n\n    public async showPopup(windowId: string, options: Glue42.Windows.PopupOptions): Promise<void> {\n        const window = windowStore.get(windowId);\n        await this.executor.showPopup(window.API, options);\n    }\n\n    public tabAttached(callback: (tabWindow: Glue42.Windows.GDWindow, newTabGroupId: string, tabHeaderVisible: boolean) => void): UnsubscribeFunction {\n        return this._registry.add(\"tab-attached\", callback);\n    }\n\n    public tabDetached(callback: (window: Glue42.Windows.GDWindow, tabGroupId: string, oldTabGroupId: string) => void): UnsubscribeFunction {\n        return this._registry.add(\"tab-detached\", callback);\n    }\n\n    public onWindowFrameColorChanged(callback: (window: Glue42.Windows.GDWindow) => void) {\n        return this._registry.add(\"frame-color-changed\", callback);\n    }\n\n    public onEvent(callback: (windowInfo: any) => void): UnsubscribeFunction {\n        return this._registry.add(\"window-event\", callback);\n    }\n\n    public my(): string {\n        return this._windowId;\n    }\n\n    public execute<T>(command: string, windowId: string, options: {}): Promise<Glue42Core.AGM.InvocationResult<T>> {\n        return this._agm.invoke<T>(\"T42.Wnd.Execute\", {\n            command,\n            options,\n            windowId,\n        });\n    }\n\n    /** Groups */\n    public setGroupHeaderVisible(windowId: string, toShow: boolean): Promise<Glue42Core.AGM.InvocationResult<Glue42.Windows.Group>> {\n        return this._agm.invoke<Glue42.Windows.Group>(\"T42.Wnd.SetGroupHeaderVisible\", {\n            windowId,\n            toShow,\n        }, this._agmInstance);\n    }\n\n    public onCompositionChanged(callback: (windowInfo: any) => void): UnsubscribeFunction {\n        return this._registry.add(\"composition-changed\", callback);\n    }\n\n    public onGroupHeaderVisibilityChanged(callback: (stream: any) => void): UnsubscribeFunction {\n        return this._registry.add(\"group-header-changed\", callback);\n    }\n\n    public onWindowGotFocus(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return this._registry.add(\"got-focus\", callback);\n    }\n\n    public onWindowLostFocus(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return this._registry.add(\"lost-focus\", callback);\n    }\n\n    // TODO revise it\n    private normalizeInstance(instance: Glue42Core.AGM.Instance) {\n        if (!instance) {\n            return undefined;\n        }\n        return {\n            application: instance.application,\n            machine: instance.machine,\n            user: instance.user,\n        };\n    }\n    private respondToEvent(args: EventWithResponseData): Promise<ResponseTypes> {\n        if (args.type === \"ShowFlydownBoundsRequested\") {\n            return this.executor.handleFlydownBoundsRequested(args.data.windowId, args.data);\n        }\n\n        return Promise.reject(`There isn't a handler for ${args.type}`);\n    }\n\n    private updateWindow(windowInfo: StreamEvent) {\n        const extendedStreamEvent = this.getExtendedStreamEvent(windowInfo);\n\n        // this is the snapshot of all windows\n        if (windowInfo.type === \"Snapshot\") {\n            const windowInfoFullInfoEvent = (windowInfo as FullInfoEvent);\n            windowInfoFullInfoEvent.windows.forEach((w) => {\n                const win = this.createWindow(w.id, w);\n                windowStore.markReadyToShow(win.API.id);\n                this._registry.execute(\"window-event\", extendedStreamEvent);\n            });\n\n            return;\n        }\n        // if new window handle it separately\n        if (windowInfo.type === \"Created\") {\n            const windowInfoCreatedEvent = (windowInfo as StreamEvent);\n            const win = this.createWindow(windowInfoCreatedEvent.windowId, windowInfoCreatedEvent.data || {});\n            windowStore.setReadyState(win.API.id);\n            this._registry.execute(\"window-event\", extendedStreamEvent);\n            return;\n        }\n\n        // otherwise check if the window is in our internal collections and update its state\n        const windowObjectAndEvents: WindowWrapper = windowStore.get((windowInfo as StreamEvent).windowId);\n        if (!windowObjectAndEvents) {\n            this._logger.error(`received update for unknown window. Stream:', ${JSON.stringify(windowInfo, null, 4)}`);\n            return;\n        }\n\n        const theWindow: Glue42.Windows.GDWindow = windowObjectAndEvents.API;\n        const theWindowEvents: WindowEvents = windowObjectAndEvents.Events;\n\n        // handle bounds changed\n        if (windowInfo.type === \"BoundsChanged\") {\n            const windowInfoBoundsChangedEvent = (windowInfo as BoundsChanged);\n            theWindowEvents.handleBoundsChanged(windowInfoBoundsChangedEvent.data);\n        }\n\n        // handle url changed\n        if (windowInfo.type === \"UrlChanged\") {\n            const windowInfoUrlChangedEvent = (windowInfo as UrlChanged);\n            windowStore.setUrlChangedState(windowInfoUrlChangedEvent.windowId);\n            theWindowEvents.handleUrlChanged(windowInfoUrlChangedEvent.data);\n        }\n\n        // handle title changed\n        if (windowInfo.type === \"TitleChanged\") {\n            const windowInfoTitleChanged = (windowInfo as TitleChanged);\n            theWindowEvents.handleTitleChanged(windowInfoTitleChanged.data);\n        }\n\n        // handle visibility changed\n        if (windowInfo.type === \"VisibilityChanged\") {\n            theWindowEvents.handleVisibilityChanged(windowInfo.data);\n        }\n\n        // handle context changed\n        if (windowInfo.type === \"ContextChanged\") {\n            theWindowEvents.handleContextUpdated(windowInfo.data);\n        }\n\n        // handle window state changed\n        if (windowInfo.type === \"StateChanged\") {\n            theWindowEvents.handleWindowChangeState(windowInfo.data);\n        }\n\n        // handle frame color changed\n        if (windowInfo.type === \"FrameColorChanged\") {\n            theWindowEvents.handleFrameColorChanged(windowInfo.data);\n            this._registry.execute(\"frame-color-changed\", theWindow);\n        }\n\n        // handle composition changed - groups API\n        if (windowInfo.type === \"CompositionChanged\") {\n            const windowInfoCompositionChanged = windowInfo as CompositionChanged;\n            theWindowEvents.handleCompositionChanged(windowInfoCompositionChanged.data.neighbors, windowInfoCompositionChanged.data.groupId);\n            this._registry.execute(\"composition-changed\", windowInfoCompositionChanged.data);\n        }\n\n        if (windowInfo.type === \"GroupHeaderVisibilityChanged\") {\n            const info = windowInfo as GroupHeaderVisibilityChanged;\n            theWindowEvents.handleGroupHeaderVisibilityChanged(info.data.groupHeaderVisible);\n            this._registry.execute(\"group-header-changed\", info.data);\n        }\n\n        // handle focus changed\n        if (windowInfo.type === \"FocusChanged\") {\n            const windowInfoFocusChanged = (windowInfo as FocusChanged);\n            this.focusChanged(theWindowEvents, theWindow, windowInfoFocusChanged.data);\n        }\n\n        if (windowInfo.type === \"WindowFrameChanged\") {\n            theWindowEvents.handleFrameAttached(windowInfo.data.frameId, windowInfo.data.isTabHeaderVisible);\n            this._registry.execute(\"frame-changed\");\n        }\n\n        if (windowInfo.type === \"WindowFrameAdded\") {\n            theWindowEvents.handleAttached(windowInfo.data.frameId, windowInfo.data.isTabHeaderVisible);\n            const winsToBeNotified: { [key: string]: WindowWrapper } = getWindowsByTabGroupId(theWindow.id, windowInfo.data.frameId);\n            // Getting all windows, except current, with same tabGroupId\n            Object.keys(winsToBeNotified).forEach((id: string) => {\n                const win = winsToBeNotified[id];\n                // Executing event windowAttached to all windows\n                win.Events.handleWindowAttached(theWindow);\n            });\n            this._registry.execute(\"tab-attached\", theWindow, windowInfo.data.frameId, windowInfo.data.isTabHeaderVisible);\n        }\n\n        if (windowInfo.type === \"WindowFrameRemoved\") {\n            // In the event, tabGroupId is empty, will be update on the next event FrameAttached\n            const oldTabGroupId = theWindow.tabGroupId;\n            theWindowEvents.handleDetached(windowInfo.data.frameId);\n            const winsToBeNotified: { [key: string]: WindowWrapper } = getWindowsByTabGroupId(theWindow.id, oldTabGroupId);\n\n            Object.keys(winsToBeNotified).forEach((id: string) => {\n                const win = winsToBeNotified[id];\n                win.Events.handleWindowDetached(theWindow);\n            });\n\n            const un = this._registry.add(\"frame-changed\", () => {\n                un();\n                this._registry.execute(\"tab-detached\", theWindow, windowInfo.data.frameId, theWindow.tabGroupId);\n            });\n\n        }\n\n        if (windowInfo.type === \"TabHeaderVisibilityChanged\") {\n            theWindowEvents.handleTabHeaderVisibilityChanged(windowInfo.data.isTabHeaderVisible);\n        }\n\n        if (windowInfo.type === \"FrameSelectionChanged\") {\n            theWindowEvents.handleFrameSelectionChanged(windowInfo.data.newWindowId, windowInfo.data.prevWindowId);\n        }\n\n        if (windowInfo.type === \"ButtonClicked\") {\n            theWindowEvents.handleFrameButtonClicked(windowInfo.data);\n        }\n\n        if (windowInfo.type === \"ButtonAdded\") {\n            theWindowEvents.handleFrameButtonAdded(windowInfo.data);\n        }\n\n        if (windowInfo.type === \"ButtonRemoved\") {\n            theWindowEvents.handleFrameButtonRemoved(windowInfo.data);\n        }\n        if (windowInfo.type === \"WindowZoomFactorChanged\") {\n            theWindowEvents.handleZoomFactorChanged(windowInfo.data);\n        }\n\n        // Clear the window on close event\n        if (windowInfo.type === \"Closed\") {\n            windowStore.remove(windowObjectAndEvents);\n            theWindowEvents.handleWindowClose();\n        }\n\n        if (windowInfo.type === \"FrameIsLockedChanged\") {\n            theWindowEvents.handleFrameIsLockedChanged(windowInfo.data);\n        }\n\n        // expose to external listeners\n        this._registry.execute(\"window-event\", extendedStreamEvent);\n    }\n\n    private createWindow(windowId: string, options: WindowInfo): WindowWrapper {\n        const windowObjAndEvents: WindowWrapper = windowFactory(windowId, this.mapToWindowConstructorOptions(options), executor, this._logger, this._appManagerGetter, this._agm);\n        windowStore.add(windowObjAndEvents);\n        return windowObjAndEvents;\n    }\n\n    private focusChanged(theWindowEvents: WindowEvents, theWindow: Glue42.Windows.GDWindow, focus: boolean) {\n        theWindowEvents.handleFocusChanged(focus);\n        if (focus) {\n            this._registry.execute(\"got-focus\", theWindow);\n        } else {\n            this._registry.execute(\"lost-focus\", theWindow);\n        }\n    }\n\n    private mapToWindowConstructorOptions(args: WindowInfo): WindowConstructorOptions {\n        // TODO\n        return {\n            name: args.name,\n            context: args.context,\n            bounds: args.bounds,\n            url: args.url,\n            title: args.title,\n            isVisible: args.isVisible,\n            focus: args.isFocused,\n            state: args.state,\n            frameColor: args.frameColor,\n            groupId: args.groupId,\n            neighbours: args.neighbors,\n            isFocused: args.isFocused,\n            isGroupHeaderVisible: args.groupHeaderVisible,\n            isCollapsed: args.isCollapsed,\n            tabGroupId: args.frameId,\n            mode: args.mode,\n            isTabHeaderVisible: args.isTabHeaderVisible,\n            isTabSelected: args.isActiveTab,\n            settings: args.settings,\n            windowType: args.windowType,\n            zoomFactor: args.zoomFactor,\n            // focus: args.focus,\n            isLocked: args.isLocked,\n            // settings: windowStyleAttributes,\n        };\n    }\n\n    private getExtendedStreamEvent(streamEvent: StreamEvent): StreamEvent | ExtendedStreamEvent {\n        try {\n            const result: ExtendedStreamEvent = {\n                state: streamEvent.type,\n                windowName: windowStore.get(streamEvent.windowId).API.name,\n                ...streamEvent\n            };\n\n            if (result.state === \"WindowFrameAdded\") {\n                result.state = \"TabAttached\";\n            }\n\n            if (result.state === \"StateChanged\") {\n                result.state = result.data.charAt(0).toUpperCase() + result.data.slice(1);\n            }\n\n            if (result.state === \"ButtonAdded\") {\n                result.state = \"FrameButtonAdded\";\n            }\n\n            if (result.state === \"ButtonRemoved\") {\n                result.state = \"FrameButtonRemoved\";\n            }\n\n            return result;\n        } catch (error) {\n            return streamEvent;\n        }\n    }\n}\n","import { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../../../glue\";\nimport { Executor } from \"../../types\";\nimport { ShowFlydownData } from \"../gd/types\";\n\nexport class HcExecutor implements Executor {\n    private agm: Glue42Core.AGM.API;\n    private agmTarget: \"best\" | \"all\" | Glue42Core.AGM.Instance;\n\n    public get hostInstance() {\n        return this.agmTarget;\n    }\n\n    public init(agm: Glue42Core.AGM.API, instance: \"best\" | \"all\" | Glue42Core.AGM.Instance) {\n        this.agm = agm;\n        this.agmTarget = instance;\n    }\n\n    public close(resultWindow: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            const conditionFunc = () => {\n                return resultWindow.url === undefined;\n            };\n\n            function successHandler(w: Glue42.Windows.GDWindow) {\n                resolve(w);\n            }\n\n            function errorHandler(e: string) {\n                reject(e);\n            }\n            return this.agmAction(resultWindow, \"T42.Wnd.Close\", successHandler, errorHandler, {}, conditionFunc, resultWindow.onClose);\n        });\n    }\n\n    public navigate(resultWindow: Glue42.Windows.GDWindow, newUrl: string): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            const conditionFunc = () => {\n                return resultWindow.url === newUrl;\n            };\n            function successHandler(w: Glue42.Windows.GDWindow) {\n                resolve(w);\n            }\n\n            function errorHandler(e: string) {\n                reject(e);\n            }\n            return this.agmAction(resultWindow, \"T42.Html.OpenUrl\", successHandler, errorHandler, { url: newUrl }, conditionFunc, resultWindow.onUrlChanged, true);\n        });\n    }\n\n    public setStyle(resultWindow: Glue42.Windows.GDWindow, style: Glue42.Windows.WindowSettings): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            function successHandler(w: Glue42.Windows.GDWindow) {\n                resolve(w);\n            }\n\n            function errorHandler(e: string) {\n                reject(e);\n            }\n            return this.agmAction(resultWindow, \"T42.Wnd.SetWindowStyle\", successHandler, errorHandler, { windowStyleAttributes: JSON.stringify(style) });\n        });\n    }\n\n    public setTitle(resultWindow: Glue42.Windows.GDWindow, newTitle: string): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            const conditionFunc = () => {\n                return resultWindow.title === newTitle;\n            };\n\n            function successHandler(w: Glue42.Windows.GDWindow) {\n                resolve(w);\n            }\n\n            function errorHandler(e: string) {\n                reject(e);\n            }\n            return this.agmAction(resultWindow, \"T42.Wnd.SetWindowTitle\", successHandler, errorHandler, { title: newTitle }, conditionFunc, resultWindow.onTitleChanged);\n        });\n    }\n\n    public moveResize(resultWindow: Glue42.Windows.GDWindow, dimensions: Glue42.Windows.Bounds): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n\n            function successHandler(w: Glue42.Windows.GDWindow) {\n                resolve(w);\n            }\n\n            function errorHandler(e: string) {\n                reject(e);\n            }\n            return this.agmAction(resultWindow, \"T42.Wnd.ResizeAndMove\", successHandler, errorHandler, dimensions);\n        });\n    }\n\n    public addFrameButton(resultWindow: Glue42.Windows.GDWindow, buttonInfo: Glue42.Windows.ButtonInfo): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            const conditionFunc = () => {\n                return false;\n            };\n\n            function successHandler(w: Glue42.Windows.GDWindow) {\n                resolve(w);\n            }\n\n            function errorHandler(e: string) {\n                reject(e);\n            }\n\n            return this.agmAction(resultWindow, \"T42.Wnd.AddFrameButton\", successHandler, errorHandler, { buttonInfo }, conditionFunc, resultWindow.onFrameButtonAdded);\n        });\n    }\n\n    public removeFrameButton(resultWindow: Glue42.Windows.GDWindow, buttonId: string): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            const conditionFunc = () => {\n                return false;\n            };\n\n            function successHandler(w: Glue42.Windows.GDWindow) {\n                resolve(w);\n            }\n\n            function errorHandler(e: string) {\n                reject(e);\n            }\n            return this.agmAction(resultWindow, \"T42.Wnd.RemoveFrameButton\", successHandler, errorHandler, { buttonId }, conditionFunc, resultWindow.onFrameButtonRemoved);\n        });\n    }\n\n    public activate(resultWindow: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            const conditionFunc = () => {\n                return resultWindow.isFocused;\n            };\n\n            function successHandler(w: Glue42.Windows.GDWindow) {\n                resolve(w);\n            }\n\n            function errorHandler(e: string) {\n                reject(e);\n            }\n            return this.agmAction(resultWindow, \"T42.Wnd.Activate\", successHandler, errorHandler, {}, conditionFunc, resultWindow.onFocusChanged);\n        });\n    }\n\n    public focus(resultWindow: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            const conditionFunc = () => {\n                return resultWindow.isFocused;\n            };\n\n            function successHandler(w: Glue42.Windows.GDWindow) {\n                resolve(w);\n            }\n\n            function errorHandler(e: string) {\n                reject(e);\n            }\n            return this.agmAction(resultWindow, \"T42.Wnd.Activate\", successHandler, errorHandler, { focus: true }, conditionFunc, resultWindow.onFocusChanged);\n        });\n    }\n\n    public maximizeRestore(resultWindow: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            const eventToSubscribe = resultWindow.state !== \"maximized\" ? resultWindow.onNormal : resultWindow.onMaximized;\n            const conditionFunc = () => {\n                return false;\n            };\n\n            function successHandler(w: Glue42.Windows.GDWindow) {\n                resolve(w);\n            }\n\n            function errorHandler(e: string) {\n                reject(e);\n            }\n            return this.agmAction(resultWindow, \"T42.Wnd.MaximizeOrRestoreDown\", successHandler, errorHandler, {}, conditionFunc, eventToSubscribe);\n        });\n    }\n\n    public maximize(resultWindow: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            const conditionFunc = () => {\n                return resultWindow.state === \"maximized\";\n            };\n\n            function successHandler(w: Glue42.Windows.GDWindow) {\n                resolve(w);\n            }\n\n            function errorHandler(e: string) {\n                reject(e);\n            }\n\n            return this.agmAction(resultWindow, \"T42.Wnd.Maximize\", successHandler, errorHandler, {}, conditionFunc, resultWindow.onMaximized);\n        });\n    }\n\n    public restore(resultWindow: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            const conditionFunc = () => {\n                return resultWindow.state === \"normal\";\n            };\n\n            function successHandler(w: Glue42.Windows.GDWindow) {\n                resolve(w);\n            }\n\n            function errorHandler(e: string) {\n                reject(e);\n            }\n            return this.agmAction(resultWindow, \"T42.Wnd.Restore\", successHandler, errorHandler, {}, conditionFunc, resultWindow.onNormal);\n        });\n    }\n\n    public minimize(resultWindow: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            const conditionFunc = () => {\n                return resultWindow.state === \"minimized\";\n            };\n\n            function successHandler(w: Glue42.Windows.GDWindow) {\n                resolve(w);\n            }\n\n            function errorHandler(e: string) {\n                reject(e);\n            }\n            return this.agmAction(resultWindow, \"T42.Wnd.Minimize\", successHandler, errorHandler, {}, conditionFunc, resultWindow.onMinimized);\n        });\n    }\n\n    public collapse(resultWindow: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            const conditionFunc = () => {\n                return resultWindow.isCollapsed;\n            };\n\n            function successHandler(w: Glue42.Windows.GDWindow) {\n                resolve(w);\n            }\n\n            function errorHandler(e: string) {\n                reject(e);\n            }\n            return this.agmAction(resultWindow, \"T42.Wnd.SetCollapsed\", successHandler, errorHandler, { collapsed: true }, conditionFunc, resultWindow.onCollapsed);\n        });\n    }\n\n    public expand(resultWindow: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            const conditionFunc = () => {\n                return !resultWindow.isCollapsed;\n            };\n\n            function successHandler(w: Glue42.Windows.GDWindow) {\n                resolve(w);\n            }\n\n            function errorHandler(e: string) {\n                reject(e);\n            }\n            return this.agmAction(resultWindow, \"T42.Wnd.SetCollapsed\", successHandler, errorHandler, { collapsed: false }, conditionFunc, resultWindow.onExpanded);\n        });\n    }\n\n    public toggleCollapse(resultWindow: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            const conditionFunc = () => {\n                return false;\n            };\n\n            function successHandler(w: Glue42.Windows.GDWindow) {\n                resolve(w);\n            }\n\n            function errorHandler(e: string) {\n                reject(e);\n            }\n            const subscribeFunc = resultWindow.isCollapsed ? resultWindow.onExpanded : resultWindow.onCollapsed;\n\n            return this.agmAction(resultWindow, \"T42.Wnd.SetCollapsed\", successHandler, errorHandler, { title: \"\" }, conditionFunc, subscribeFunc);\n        });\n    }\n\n    public snap(resultWindow: Glue42.Windows.GDWindow, target: string | Glue42.Windows.GDWindow, direction: Glue42.Windows.RelativeDirection): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            const sourceWindowId = resultWindow.id;\n            let targetWindowId;\n            const errorMessage = \"Invalid target parameter - should be an object with property id or a string. Invoked for source window id:\" + resultWindow.id;\n            if (!target) {\n                reject(errorMessage);\n                return;\n            }\n\n            if (typeof target === \"string\") {\n                targetWindowId = target;\n            } else if (typeof target.id !== \"undefined\") {\n                targetWindowId = target.id;\n            } else {\n                reject(errorMessage);\n                return;\n            }\n\n            const args: any = {\n                sourceWindowId,\n                targetWindowId,\n            };\n\n            if (direction) {\n                args.snappingEdge = direction;\n            }\n            function successHandler(w: Glue42.Windows.GDWindow) {\n                resolve(w);\n            }\n\n            function errorHandler(e: string) {\n                reject(e);\n            }\n            return this.agmAction(resultWindow, \"T42.Wnd.Snap\", successHandler, errorHandler, args);\n        });\n    }\n\n    public attachTab(resultWindow: Glue42.Windows.GDWindow, args: any): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n\n            function successHandler(w: Glue42.Windows.GDWindow) {\n                resolve(w);\n            }\n\n            function errorHandler(e: string) {\n                reject(e);\n            }\n\n            return this.agmAction(resultWindow, \"T42.Wnd.AttachTab\", successHandler, errorHandler, args);\n        });\n    }\n\n    public detachTab(resultWindow: Glue42.Windows.GDWindow, args: any): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            const _options: Glue42.Windows.DetachOptions = args || {};\n            function successHandler(w: Glue42.Windows.GDWindow) {\n                resolve(w);\n            }\n\n            function errorHandler(e: string) {\n                reject(e);\n            }\n            return this.agmAction(resultWindow, \"T42.Wnd.DettachTab\", successHandler, errorHandler, args);\n        });\n    }\n\n    public setVisible(resultWindow: Glue42.Windows.GDWindow, toBeVisible?: boolean): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            if (typeof toBeVisible === \"undefined\") {\n                toBeVisible = true;\n            }\n\n            const conditionFunc = () => {\n                return resultWindow.isVisible === toBeVisible;\n            };\n\n            const styles = { Hidden: !toBeVisible };\n\n            function successHandler(w: Glue42.Windows.GDWindow) {\n                resolve(w);\n            }\n\n            function errorHandler(e: string) {\n                reject(e);\n            }\n            return this.agmAction(resultWindow, \"T42.Wnd.SetWindowStyle\", successHandler, errorHandler, { windowStyleAttributes: JSON.stringify(styles) }, conditionFunc, resultWindow.onVisibilityChanged);\n        });\n    }\n\n    public showLoader(resultWindow: Glue42.Windows.GDWindow, loader?: Glue42.Windows.Loader): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            const opt = loader || {};\n            opt.enabled = true;\n            opt.timeout = opt.timeout || -1; // by default show the loader forever\n            const argsForSend = { loader: opt };\n\n            function successHandler(w: Glue42.Windows.GDWindow) {\n                resolve(w);\n            }\n\n            function errorHandler(e: string) {\n                reject(e);\n            }\n            return this.agmAction(resultWindow, \"T42.Wnd.UpdateLoader\", successHandler, errorHandler, argsForSend);\n        });\n    }\n\n    public hideLoader(resultWindow: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n\n            function successHandler(w: Glue42.Windows.GDWindow) {\n                resolve(w);\n            }\n\n            function errorHandler(e: string) {\n                reject(e);\n            }\n            return this.agmAction(resultWindow, \"T42.Wnd.UpdateLoader\", successHandler, errorHandler, { loader: { enabled: false } });\n        });\n    }\n\n    public updateContext(resultWindow: Glue42.Windows.GDWindow, context: any): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            if (!context) {\n                reject(\"Invalid context parameter - should be an object. Invoked for source window id:\" + resultWindow.id);\n                return;\n            }\n            const conditionFunc = () => {\n                return false;\n            };\n\n            function successHandler(w: Glue42.Windows.GDWindow) {\n                resolve(w);\n            }\n\n            function errorHandler(e: string) {\n                reject(e);\n            }\n            return this.agmAction(resultWindow, \"T42.Wnd.UpdateContext\", successHandler, errorHandler, { context }, conditionFunc, resultWindow.onContextUpdated);\n        });\n    }\n\n    public lock(resultWindow: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            const conditionFunc = () => {\n                return false;\n            };\n\n            function successHandler(w: Glue42.Windows.GDWindow) {\n                resolve(w);\n            }\n\n            function errorHandler(e: string) {\n                reject(e);\n            }\n            return this.agmAction(resultWindow, \"T42.Wnd.Lock\", successHandler, errorHandler, {}, conditionFunc, resultWindow.onLockingChanged);\n        });\n    }\n\n    public unlock(resultWindow: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            const conditionFunc = () => {\n                return false;\n            };\n\n            function successHandler(w: Glue42.Windows.GDWindow) {\n                resolve(w);\n            }\n\n            function errorHandler(e: string) {\n                reject(e);\n            }\n            return this.agmAction(resultWindow, \"T42.Wnd.Unlock\", successHandler, errorHandler, {}, conditionFunc, resultWindow.onLockingChanged);\n        });\n    }\n\n    public getIcon(resultWindow: Glue42.Windows.GDWindow): Promise<string> {\n        return new Promise((resolve, reject) => {\n            // TODO check it in HC\n            function successHandler(w: any) {\n                resolve(w);\n            }\n\n            function errorHandler(e: string) {\n                reject(e);\n            }\n            return this.agmAction(resultWindow, \"T42.Wnd.GetIcon\", successHandler, errorHandler);\n        });\n    }\n\n    public setIcon(resultWindow: Glue42.Windows.GDWindow, base64Image: string): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            if (!base64Image) {\n                reject(\"Invalid base64Image parameter. Invoked for source window id:\" + resultWindow.id);\n                return;\n            }\n\n            function successHandler(w: Glue42.Windows.GDWindow) {\n                resolve(w);\n            }\n\n            function errorHandler(e: string) {\n                reject(e);\n            }\n            return this.agmAction(resultWindow, \"T42.Wnd.SetIcon\", successHandler, errorHandler, { base64ImageSource: base64Image });\n        });\n    }\n\n    public setFrameColor(resultWindow: Glue42.Windows.GDWindow, frameColor: string): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            if (!frameColor) {\n                reject(\"Invalid frameColor parameter. Invoked for source window id:\" + resultWindow.id);\n                return;\n            }\n\n            const conditionFunc = () => {\n                return false;\n            };\n\n            function successHandler(w: Glue42.Windows.GDWindow) {\n                resolve(w);\n            }\n\n            function errorHandler(e: string) {\n                reject(e);\n            }\n            return this.agmAction(resultWindow, \"T42.Wnd.SetWindowStyle\", successHandler, errorHandler, { windowStyleAttributes: JSON.stringify({ stickyFrameColor: frameColor }) }, conditionFunc, resultWindow.onFrameColorChanged);\n        });\n    }\n\n    public setTabHeaderVisible(resultWindow: Glue42.Windows.GDWindow, toBeTabHeaderVisible: boolean): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            if (typeof toBeTabHeaderVisible === \"undefined\") {\n                toBeTabHeaderVisible = true;\n            }\n\n            const conditionFunc = () => {\n                return resultWindow.isTabHeaderVisible === toBeTabHeaderVisible;\n            };\n\n            function successHandler(w: Glue42.Windows.GDWindow) {\n                resolve(w);\n            }\n\n            function errorHandler(e: string) {\n                reject(e);\n            }\n            return this.agmAction(resultWindow, \"T42.Wnd.SetTabHeaderVisible\", successHandler, errorHandler, { toShow: toBeTabHeaderVisible }, conditionFunc, resultWindow.onTabHeaderVisibilityChanged);\n        });\n    }\n\n    public showPopup(targetWindow: Glue42.Windows.GDWindow, options: Glue42.Windows.PopupOptions): Promise<Glue42.Windows.GDWindow> {\n        throw new Error(\"Not implemented\");\n    }\n\n    public createFlydown(windowId: string, options: Glue42.Windows.FlydownOptions): Promise<Glue42.Windows.Flydown> {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    public setModalState(windowId: string, isModal: boolean): Promise<void> {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    public handleFlydownBoundsRequested(targetId: string, data: ShowFlydownData): Promise<ShowFlydownData> {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    public execute<T>(command: string, options: {}): Promise<Glue42Core.AGM.InvocationResult<T>> {\n        return this.agm.invoke<T>(\"T42.Wnd.Execute\", {\n            command,\n            options,\n        });\n    }\n\n    /** Groups */\n    public setGroupHeaderVisible(windowId: string, toShow: boolean): Promise<any> {\n        return this.agm.invoke(\"T42.Wnd.SetGroupHeaderVisible\", {\n            windowId,\n            toShow,\n        }, this.agmTarget);\n\n    }\n\n    public onClosing(callback: (success: () => void, error: () => void) => void, id: string): () => void {\n        return () => { // DO NOTHING\n        };\n    }\n\n    public onRefreshing(callback: (success: () => void, error: () => void, prevent: () => void) => void, id: string): () => void {\n        return () => { // DO NOTHING\n        };\n    }\n\n    public zoomIn(resultWindow: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        // tslint:disable-next-line: no-console\n        console.warn(`zoomIn method is not supported`);\n        return Promise.resolve(resultWindow);\n    }\n    public zoomOut(resultWindow: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        // tslint:disable-next-line: no-console\n        console.warn(`zoomIn method is not supported`);\n        return Promise.resolve(resultWindow);\n    }\n    public setZoomFactor(resultWindow: Glue42.Windows.GDWindow, factor: number): Promise<Glue42.Windows.GDWindow> {\n        // tslint:disable-next-line: no-console\n        console.warn(`zoomIn method is not supported`);\n        return Promise.resolve(resultWindow);\n    }\n\n    public showDevTools(window: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        return Promise.resolve(window);\n    }\n\n    public setSizeConstraints(resultWindow: Glue42.Windows.GDWindow, constraints: Glue42.Windows.SizeConstraints): Promise<Glue42.Windows.GDWindow> {\n        // tslint:disable-next-line: no-console\n        console.warn(`setSizeConstraints method is not supported`);\n        return Promise.resolve(resultWindow);\n    }\n\n    public resetButtons(resultWindow: Glue42.Windows.GDWindow, buttonsConfig: Glue42.Windows.WindowButtons): Promise<Glue42.Windows.GDWindow> {\n        // tslint:disable-next-line: no-console\n        console.warn(`resetButtons method is not supported`);\n        return Promise.resolve(resultWindow);\n    }\n\n    public setOnTop(resultWindow: Glue42.Windows.GDWindow, onTop: boolean): Promise<Glue42.Windows.GDWindow> {\n        // tslint:disable-next-line: no-console\n        console.warn(`setOnTop method is not supported`);\n        return Promise.resolve(resultWindow);\n    }\n\n    public capture(window: Glue42.Windows.GDWindow, options: Glue42.Windows.CaptureOptions): Promise<string> {\n        // tslint:disable-next-line:no-console\n        console.warn(`capture method is not supported`);\n        return Promise.resolve(undefined);\n    }\n\n    public captureGroup(windowIds: string[], options: Glue42.Windows.CaptureOptions): Promise<string> {\n        // tslint:disable-next-line:no-console\n        console.warn(`captureGroup method is not supported`);\n        return Promise.resolve(undefined);\n    }\n\n    public flash(window: Glue42.Windows.GDWindow, options: any): Promise<Glue42.Windows.GDWindow> {\n        // tslint:disable-next-line:no-console\n        console.warn(`flash method is not supported`);\n        return Promise.resolve(undefined);\n    }\n\n    private agmAction(resultWindow: Glue42.Windows.GDWindow, action: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void, args?: any, conditionFunc?: () => void, subscribeFunc?: any, ignoreTimeout?: boolean) {\n        // Stop if the window is closed\n        ignoreTimeout = ignoreTimeout || false;\n\n        if (resultWindow.url === undefined) {\n            if (typeof error === \"function\") {\n                error(\"Cannot execute a command on a closed window.\");\n            }\n            return;\n        }\n\n        if (typeof conditionFunc === \"undefined\" || conditionFunc()) {\n            this.agmInvoke(resultWindow, action, args, success, error);\n        } else {\n            let removeCallback = () => {\n                return;\n            };\n\n            let isResolved = false;\n            const successHandler = () => {\n                isResolved = true;\n                removeCallback();\n                if (typeof success === \"function\") {\n                    success(resultWindow);\n                }\n            };\n\n            removeCallback = subscribeFunc(successHandler);\n            if (!ignoreTimeout) {\n                setTimeout(() => {\n                    if (!isResolved) {\n                        if (typeof error === \"function\") {\n                            error(\"Agm invoke timeout! action: \" + action);\n                        }\n                    }\n                }, 2000);\n            }\n\n            this.agmInvoke(resultWindow, action, args, () => {\n                return;\n            }, error);\n        }\n    }\n\n    private agmInvoke(resultWindow: Glue42.Windows.GDWindow, action: string, args?: any, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void) {\n        // Add the window ID to the arguments\n        args = args || {};\n        args.windowId = resultWindow.id;\n\n        // Invoke the AGM method\n        this.agm.invoke(action, args, this.agmTarget, {}, successHandler, errorHandler);\n\n        function successHandler() {\n            if (typeof success === \"function\") {\n                success(resultWindow);\n            }\n        }\n\n        function errorHandler(err: any) {\n            if (typeof error === \"function\") {\n                if (err.all_return_values && err.all_return_values.length > 0) {\n                    error(err.all_return_values[0].message);\n                } else {\n                    error(err);\n                }\n            }\n        }\n    }\n}\n\nexport default new HcExecutor();\n","import { Glue42Core } from \"@glue42/core\";\nimport { CallbackRegistry, UnsubscribeFunction, default as CallbackFactory } from \"callback-registry\";\n\nimport { Glue42 } from \"../../../../glue\";\nimport { default as windowStore } from \"../../store\";\nimport { Environment, WindowConstructorOptions, WindowEvents, WindowWrapper } from \"../../types\";\nimport windowFactory from \"../../window\";\nimport { default as executor } from \"./executor\";\n\nimport { CompositionChanged, WindowInfoStreamFullEvent } from \"./types\";\nimport { getWindowsByTabGroupId } from \"../helpers\";\n\nexport default (agm: Glue42Core.AGM.API, logger: Glue42Core.Logger.API, appManagerGetter: () => Glue42.AppManager.API, cntName?: string, wndId?: string): Promise<Environment> => {\n    return new Promise<any>((resolve, reject) => {\n        const _registry: CallbackRegistry = CallbackFactory();\n        const _logger = logger.subLogger(\"hc-env\");\n        const waitTimeout: number = 10000;\n\n        const _windowId: string = wndId;\n        let hcEnv: Environment;\n        let instance: Glue42Core.AGM.Instance | \"best\" | \"all\";\n\n        // We have two cases here:\n        // 1. when we are in HC\n        // 2. when we are in Browser/Node, but we have also started  HC/GD\n        if (typeof cntName !== \"undefined\") {\n            instance = { application: \"HtmlContainer.\" + cntName };\n        } else {\n            instance = \"best\";\n        }\n\n        const streamPromise = new Promise<void>((streamResolve, streamReject) => {\n            agm.subscribe(\"T42.Wnd.WindowStateChanged\", {\n                waitTimeoutMs: waitTimeout,\n                target: instance,\n            })\n                .then((stream: Glue42Core.AGM.Subscription) => {\n                    stream.onData((streamData: any) => {\n                        instance = streamData.server;\n                        updateWindow(streamData.data.state, streamData.data);\n                    });\n                    stream.onFailed((err: any) => {\n                        streamReject(err);\n                    });\n                    streamResolve();\n                })\n                .catch((err: any) => {\n                    streamReject(\"Can not subscribe for stream T42.Wnd.WindowStateChanged. Err: \" + err);\n                });\n        });\n\n        const listWindowsPromise = new Promise<void>((listWndResolve, listWndReject) => {\n            agm.invoke(\"T42.Wnd.ListWindows\", {}, instance, { waitTimeoutMs: waitTimeout })\n                .then((result: any) => {\n                    // add the server object\n                    instance = result.executed_by;\n                    // populate windows\n                    Object.keys(result.returned).forEach((existingWindow) => {\n                        const windowInfo = result.returned[existingWindow];\n                        const windowObjAndEvents: WindowWrapper = createWindow(windowInfo.windowId, windowInfo);\n\n                        // Added to store, showing to world\n                        windowStore.markReadyToShow(windowObjAndEvents.API.id);\n                    });\n                    listWndResolve();\n                })\n                .catch((e: any) => {\n                    listWndReject(\"Can not invoke T42.Wnd.ListWindows method. Err: \" + e);\n                });\n        });\n\n        Promise.all([streamPromise, listWindowsPromise])\n            .then(() => {\n                // Init the executor, if we have container name - use it, if not get the first one from the collection\n                executor.init(agm, instance);\n                resolve(hcEnv);\n            })\n            .catch((e: any) => {\n                reject(\"can not subscribe for stream T42.Wnd.WindowStateChanged or can not invoke T42.Wnd.ListWindows \");\n            });\n\n        function updateWindow(eventType: string, windowInfo: any) {\n            // if new window handle it separately\n            if (eventType === \"Created\") {\n                const win = createWindow(windowInfo.windowId, windowInfo);\n                _registry.execute(\"window-event\", windowInfo);\n\n                // if the window has focus, trigger got focus event\n                if (windowInfo.focus) {\n                    focusChanged(win.Events, win.API, true);\n                }\n                return;\n            }\n\n            // otherwise check if the window is in our internal collections and update its state\n            const windowObjectAndEvents: WindowWrapper = windowStore.get(windowInfo.windowId);\n\n            if (!windowObjectAndEvents) {\n                _logger.error(`received update for unknown window. Stream:', ${JSON.stringify(windowInfo, null, 4)}`);\n                return;\n            }\n\n            const theWindow: Glue42.Windows.GDWindow = windowObjectAndEvents.API;\n            const theWindowEvents: WindowEvents = windowObjectAndEvents.Events;\n            const oldFrameColor: string = theWindow.frameColor;\n\n            // const property: string = \"handle\" + eventType;\n\n            // // Try the generic handlers\n            // if (theWindowEvents.hasOwnProperty(property)) {\n            //     theWindowEvents[property](windowInfo);\n            // }\n\n            if (eventType === \"Ready\") {\n                windowStore.setReadyState(windowObjectAndEvents.API.id);\n            }\n\n            if (eventType === \"TitleChanged\") {\n                theWindowEvents.handleTitleChanged(windowInfo.windowTitle);\n            }\n\n            if (eventType === \"UrlChanged\") {\n                windowStore.setUrlChangedState(windowObjectAndEvents.API.id);\n                theWindowEvents.handleUrlChanged(windowInfo.url);\n            }\n\n            if (eventType === \"WindowStyleChanged\") {\n                const parsedWsa = parseWindowStyleAttributes(windowInfo.windowStyleAttributes);\n                theWindowEvents.handleWindowSettingsChanged(parsedWsa);\n                theWindowEvents.handleVisibilityChanged(!parsedWsa.hidden);\n            }\n\n            if (eventType === \"Normal\" ||\n                eventType === \"Maximized\" ||\n                eventType === \"Minimized\" ||\n                eventType === \"Collapsed\" ||\n                eventType === \"Expanded\") {\n                const state: string | Glue42.Windows.WindowState = eventType.toLowerCase();\n                theWindowEvents.handleWindowChangeState(state);\n            }\n\n            if (eventType === \"ContextUpdated\") {\n                theWindowEvents.handleContextUpdated(windowInfo.context);\n            }\n\n            if (eventType === \"FrameButtonAdded\") {\n                theWindowEvents.handleFrameButtonAdded(windowInfo);\n            }\n\n            if (eventType === \"FrameButtonRemoved\") {\n                theWindowEvents.handleFrameButtonRemoved(windowInfo.buttonId);\n            }\n\n            if (eventType === \"FrameButtonClicked\") {\n                theWindowEvents.handleFrameButtonClicked(windowInfo);\n            }\n\n            if (eventType === \"FrameSelectionChanged\") {\n                theWindowEvents.handleFrameSelectionChanged(windowInfo.newWindow, windowInfo.prevWindow);\n            }\n\n            if (eventType === \"FrameIsLockedChanged\") {\n                theWindowEvents.handleFrameIsLockedChanged(windowInfo.isLocked);\n            }\n\n            if (eventType === \"TabHeaderVisibilityChanged\") {\n                theWindowEvents.handleTabHeaderVisibilityChanged(windowInfo.tabHeaderVisible);\n            }\n\n            if (eventType === \"BoundsChanged\") {\n                const bounds: Glue42.Windows.Bounds = {\n                    height: windowInfo.height,\n                    left: windowInfo.left,\n                    top: windowInfo.top,\n                    width: windowInfo.width,\n                };\n\n                theWindowEvents.handleBoundsChanged(bounds);\n            }\n\n            if (eventType === \"FocusChanged\") {\n                focusChanged(theWindowEvents, theWindow, windowInfo.focus);\n            }\n\n            if (eventType === \"FrameColorChanged\") {\n                if (oldFrameColor !== windowInfo.frameColor) {\n                    theWindowEvents.handleFrameColorChanged(windowInfo.frameColor);\n                    _registry.execute(\"frame-color-changed\", theWindow);\n                }\n            }\n\n            if (eventType === \"FrameAttached\") {\n                theWindowEvents.handleFrameAttached(windowInfo.tabGroupId, windowInfo.tabHeaderVisible);\n            }\n\n            if (eventType === \"TabAttached\") {\n                theWindowEvents.handleAttached(windowInfo.tabGroupId, windowInfo.tabHeaderVisible);\n                const winsToBeNotified: { [key: string]: WindowWrapper } = getWindowsByTabGroupId(theWindow.id, windowInfo.tabGroupId);\n                // Getting all windows, except current, with same tabGroupId\n                Object.keys(winsToBeNotified).forEach((id: string) => {\n                    const win = winsToBeNotified[id];\n                    // Executing event windowAttached to all windows\n                    win.Events.handleWindowAttached(theWindow);\n                });\n                _registry.execute(\"tab-attached\", theWindow, windowInfo.tabGroupId, windowInfo.tabHeaderVisible);\n            }\n\n            if (eventType === \"TabDettached\") {\n                // In the event, tabGroupId is empty, will be update on the next event FrameAttached\n                const oldTabGroupId = theWindow.tabGroupId;\n                theWindowEvents.handleDetached(windowInfo.tabGroupId);\n                const winsToBeNotified: { [key: string]: WindowWrapper } = getWindowsByTabGroupId(theWindow.id, oldTabGroupId);\n                Object.keys(winsToBeNotified).forEach((id: string) => {\n                    const win = winsToBeNotified[id];\n                    win.Events.handleWindowDetached(theWindow);\n                });\n                _registry.execute(\"tab-detached\", theWindow, windowInfo.tabGroupId, theWindow.tabGroupId);\n            }\n\n            if (eventType === \"CompositionChanged\") {\n                theWindowEvents.handleCompositionChanged(windowInfo.neighbours, windowInfo.groupId);\n                _registry.execute(\"composition-changed\", windowInfo);\n            }\n\n            if (eventType === \"GroupHeaderVisibilityChanged\") {\n                theWindowEvents.handleGroupHeaderVisibilityChanged(windowInfo.groupHeaderVisible);\n                _registry.execute(\"group-header-changed\", windowInfo);\n            }\n\n            // Clear the window on close event\n            if (eventType === \"Closed\") {\n                if (windowInfo.focus) {\n                    // raise lost focus event\n                    focusChanged(theWindowEvents, theWindow, false);\n                }\n                windowStore.remove(windowObjectAndEvents);\n                theWindowEvents.handleWindowClose();\n            }\n\n            // expose to external listeners\n            _registry.execute(\"window-event\", windowInfo);\n        }\n\n        function focusChanged(theWindowEvents: WindowEvents, theWindow: Glue42.Windows.GDWindow, focus: boolean) {\n            theWindowEvents.handleFocusChanged(focus);\n            if (focus) {\n                _registry.execute(\"got-focus\", theWindow);\n            } else {\n                _registry.execute(\"lost-focus\", theWindow);\n            }\n        }\n\n        function createWindow(windowId: string, args: WindowInfoStreamFullEvent): WindowWrapper {\n            const windowObjAndEvents: WindowWrapper = windowFactory(windowId, mapToWindowConstructorOptions(args), executor, _logger, appManagerGetter, agm);\n            windowStore.add(windowObjAndEvents);\n            return windowObjAndEvents;\n        }\n\n        function open(name: string, url: string, options: any, success?: (id: string) => void, error?: (error: object | string) => void): void {\n\n            options = options || {};\n            // relativeTo fix\n\n            if (typeof options.relativeTo !== \"undefined\" && typeof options.relativeTo !== \"string\") {\n                options.relativeTo = options.relativeTo.id || \"\";\n            }\n\n            options.windowName = name;\n            options.url = url;\n\n            agm.invoke<{ id: string }>(\"T42.Html.CreateWindow\", options)\n                .then((message) => {\n                    if (message.returned !== undefined) {\n                        const id: string = message.returned.id;\n                        success(id);\n                    } else {\n                        error(\"failed to execute T42.Html.CreateWindow - unknown reason\");\n                    }\n                }).catch((e: any) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                });\n        }\n\n        function tabAttached(callback: (tabWindow: Glue42.Windows.GDWindow, newTabGroupId: string, tabHeaderVisible: boolean) => void): UnsubscribeFunction {\n            return _registry.add(\"tab-attached\", callback);\n        }\n\n        function tabDetached(callback: (window: Glue42.Windows.GDWindow, tabGroupId: string, oldTabGroupId: string) => void): UnsubscribeFunction {\n            return _registry.add(\"tab-detached\", callback);\n        }\n\n        function onWindowFrameColorChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n            return _registry.add(\"frame-color-changed\", callback);\n        }\n\n        function onWindowGotFocus(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n            return _registry.add(\"got-focus\", callback);\n        }\n\n        function onWindowLostFocus(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n            return _registry.add(\"lost-focus\", callback);\n        }\n\n        function onEvent(callback: (windowInfo: any) => void): UnsubscribeFunction {\n            return _registry.add(\"window-event\", callback);\n        }\n\n        function my(): string {\n            return _windowId;\n        }\n\n        function onCompositionChanged(callback: (windowInfo: CompositionChanged) => void): UnsubscribeFunction {\n            return _registry.add(\"composition-changed\", callback);\n        }\n\n        function onGroupHeaderVisibilityChanged(callback: (stream: any) => void): UnsubscribeFunction {\n            return _registry.add(\"group-header-changed\", callback);\n        }\n\n        function mapToWindowConstructorOptions(args: WindowInfoStreamFullEvent): WindowConstructorOptions {\n            const _state: Glue42.Windows.WindowState = typeof args.WindowState !== \"undefined\" ? args.WindowState.toLowerCase() as Glue42.Windows.WindowState : \"normal\";\n            const windowStyleAttributes: Glue42.Windows.WindowSettings = parseWindowStyleAttributes(args.windowStyleAttributes);\n            return {\n                name: args.windowName,\n                url: args.url,\n                title: args.windowTitle,\n                context: args.context,\n                bounds: {\n                    height: args.height,\n                    left: args.left,\n                    top: args.top,\n                    width: args.width,\n                },\n                focus: args.focus,\n                frameColor: args.frameColor,\n                groupId: args.groupId,\n                isCollapsed: args.isCollapsed,\n                isGroupHeaderVisible: args.isGroupHeaderVisible,\n                isLocked: args.isLocked,\n                isTabHeaderVisible: args.isTabHeaderVisible,\n                isTabSelected: args.isTabSelected,\n                isVisible: !windowStyleAttributes.hidden,\n                isFocused: windowStyleAttributes.focus,\n                mode: windowStyleAttributes.mode,\n                settings: windowStyleAttributes,\n                state: _state,\n                tabGroupId: args.tabGroupId,\n                neighbours: args.neighbours,\n            };\n        }\n\n        function parseWindowStyleAttributes(windowStyles: Glue42.Windows.WindowSettings | string): Glue42.Windows.WindowSettings {\n            if (windowStyles === undefined) {\n                return {} as Glue42.Windows.WindowSettings;\n            }\n            if (typeof windowStyles !== \"object\") {\n                return JSON.parse(windowStyles);\n            }\n            return windowStyles;\n        }\n\n        function createFlydown(targetWindowId: string, config: Glue42.Windows.FlydownOptions): Promise<Glue42.Windows.Flydown> {\n            throw new Error(\"Not implemented\");\n        }\n\n        function showPopup(targetWindowId: string, config: Glue42.Windows.PopupOptions): Promise<void> {\n            throw new Error(\"Not implemented\");\n        }\n\n        hcEnv = {\n            my,\n            onEvent,\n            open,\n            tabAttached,\n            tabDetached,\n            onWindowFrameColorChanged,\n            executor,\n            onCompositionChanged,\n            onGroupHeaderVisibilityChanged,\n            onWindowGotFocus,\n            onWindowLostFocus,\n            createFlydown,\n            showPopup\n        };\n    });\n};\n","import callbackRegistry, { CallbackRegistry } from \"callback-registry\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../glue\";\nimport { default as windowStore } from \"./store\";\nimport { Executor, GroupWrapper, WindowWrapper } from \"./types\";\n\nexport default (id: string, executor: Executor): GroupWrapper => {\n\n    const _registry: CallbackRegistry = callbackRegistry();\n\n    const _windowsId: string[] = [];\n\n    //#region \"API functions\"\n\n    function addWindow(winId: string): void {\n        if (_windowsId.indexOf(winId) === -1) {\n            _windowsId.push(winId);\n            const window: WindowWrapper = windowStore.get(winId);\n            window.Events.handleGroupAssociation(groupObject);\n            _registry.execute(\"window-added\", groupObject, window.API);\n        }\n    }\n\n    function removeWindow(winId: string): void {\n        const index: number = _windowsId.indexOf(winId);\n        if (index !== -1) {\n            _windowsId.splice(index, 1);\n            const window: Glue42.Windows.GDWindow = _mapToWindowObject(winId);\n            _registry.execute(\"window-removed\", groupObject, window);\n        }\n    }\n\n    function find(window: string | Glue42.Windows.GDWindow, success?: (window: Glue42.Windows.GDWindow) => void): Glue42.Windows.GDWindow {\n        let winId: string;\n        if (typeof window === \"string\") {\n            winId = window;\n        } else {\n            winId = window.id;\n        }\n        const index: number = _windowsId.indexOf(winId);\n        if (index !== -1) {\n            const mappedWindow: Glue42.Windows.GDWindow = _mapToWindowObject(_windowsId[index]);\n            if (typeof success === \"function\") {\n                success(mappedWindow);\n            }\n            return mappedWindow;\n        }\n    }\n\n    function windows(success?: (windows: Glue42.Windows.GDWindow[]) => void): Glue42.Windows.GDWindow[] {\n        const mappedWindows: Glue42.Windows.GDWindow[] = _mapToWindowObjects();\n        if (typeof success === \"function\") {\n            success(mappedWindows);\n        }\n        return mappedWindows;\n    }\n\n    function showHeader(success?: (group: Glue42.Windows.Group) => void, error?: Glue42Core.AGM.InvokeErrorHandler): Promise<Glue42.Windows.Group> {\n        return new Promise((resolve, reject) => {\n            Promise.all([\n                    executor.setGroupHeaderVisible(_windowsId[0], true),\n                    waitForHeaderVisibilityChanged()\n                ])\n                .then(() => {\n                    if (typeof success === \"function\") {\n                        success(groupObject);\n                    }\n                    resolve(groupObject);\n                })\n                .catch((e: any) => {\n                    reject(e);\n                });\n        });\n    }\n\n    function hideHeader(success?: (group: Glue42.Windows.Group) => void, error?: () => void): Promise<Glue42.Windows.Group> {\n        return new Promise((resolve, reject) => {\n            Promise.all([\n                    executor.setGroupHeaderVisible(_windowsId[0], false),\n                    waitForHeaderVisibilityChanged()\n                ])\n                .then(() => {\n                    if (typeof success === \"function\") {\n                        success(groupObject);\n                    }\n                    resolve(groupObject);\n                })\n                .catch((e: any) => {\n                    return;\n                });\n        });\n    }\n\n    function capture(captureOptions: Glue42.Windows.CaptureOptions): Promise<string> {\n        return executor.captureGroup(_windowsId, captureOptions);\n    }\n\n    function waitForHeaderVisibilityChanged(): Promise<void> {\n        return new Promise((resolve, reject) => {\n            const unsub = onHeaderVisibilityChanged((group) => {\n                unsub();\n                resolve();\n            });\n\n            // setTimeout(() => {\n            //     resolve();\n            // }, 1500);\n        });\n    }\n\n    function execute(command: string, options?: object, success?: (group: Glue42.Windows.Group) => void, error?: (err?: any) => void): Promise<Glue42.Windows.Group> {\n        return new Promise((resolve, reject) => {\n            executor.execute<Glue42.Windows.Group>(command, options)\n                .then((w) => {\n                    if (typeof success === \"function\") {\n                        success(groupObject);\n                    }\n                    resolve(groupObject);\n                })\n                .catch((e: any) => {\n                    reject(e);\n                });\n        });\n    }\n\n    //#endregion \"API functions\"\n\n    //#region \"Stream function\"\n\n    function handleGroupHeaderVisibilityChanged(windowInfo: any): void {\n        _registry.execute(\"header-visibility-changed\", groupObject);\n    }\n\n    //#endregion \"Stream function\"\n\n    //#region \"Internal function\"\n\n    function _mapToWindowObjects(): Glue42.Windows.GDWindow[] {\n        const winObjects: Glue42.Windows.GDWindow[] = [];\n\n        _windowsId.forEach((winId) => {\n            const windowObject = _mapToWindowObject(winId);\n            if (typeof windowObject !== \"undefined\") {\n                winObjects.push(windowObject);\n            }\n        });\n\n        return winObjects;\n    }\n\n    function _mapToWindowObject(windowId: string): Glue42.Windows.GDWindow {\n        return windowStore.get(windowId) ? windowStore.get(windowId).API : undefined;\n    }\n\n    function _getGroupHeaderVisibility(): boolean {\n        // if one of the windows has a flag hideGroupHeader the group header should be off.\n        const windowWithHiddenHeader = _mapToWindowObjects().find((w) => !w.isGroupHeaderVisible);\n        const _isGroupHeaderVisible = windowWithHiddenHeader === undefined;\n\n        return _isGroupHeaderVisible;\n    }\n\n    //#endregion \"Internal function\"\n\n    //#region \"Events\"\n\n    function onHeaderVisibilityChanged(callback?: (group: Glue42.Windows.Group) => void): () => void {\n        return _registry.add(\"header-visibility-changed\", callback);\n    }\n\n    function onWindowAdded(callback?: (group: Glue42.Windows.Group, window: Glue42.Windows.GDWindow) => void): () => void {\n        return _registry.add(\"window-added\", callback);\n    }\n\n    function onWindowRemoved(callback?: (group: Glue42.Windows.Group, window: Glue42.Windows.GDWindow) => void): () => void {\n        return _registry.add(\"window-removed\", callback);\n    }\n\n    //#endregion \"Events\"\n\n    //#region \"API\"\n\n    const groupObject: Glue42.Windows.Group = {\n        id,\n        get windows() {\n            return windows();\n        },\n        find,\n        get isHeaderVisible() {\n            return _getGroupHeaderVisibility();\n        },\n\n        showHeader,\n        hideHeader,\n        capture,\n        maximize: (success, error) => {\n            return execute(\"maximize\", { groupId: id }, success, error);\n        },\n        restore: (success, error) => {\n            return execute(\"restore\", { groupId: id }, success, error);\n        },\n\n        onHeaderVisibilityChanged,\n        onWindowAdded,\n        onWindowRemoved,\n    };\n\n    const internal = {\n        addWindow,\n        removeWindow,\n        handleGroupHeaderVisibilityChanged,\n    };\n\n    return {\n        groupAPI: groupObject,\n        groupInternal: internal,\n    };\n\n    //#endregion \"API\"\n};\n","import { Glue42Core } from \"@glue42/core\";\nimport callbackRegistry, { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport { Glue42 } from \"../../glue\";\nimport groupFactory from \"./group\";\nimport { default as windowStore } from \"./store\";\nimport {\n    Environment,\n    GroupInternal,\n    GroupsInternal,\n    GroupsWrapper,\n    GroupWrapper,\n    WindowsLibrary,\n    WindowWrapper\n} from \"./types\";\n\nexport default (environment: Environment, logger: Glue42Core.Logger.API): GroupsWrapper => {\n    const _logger = logger.subLogger(\"groups\");\n    const _registry: CallbackRegistry = callbackRegistry();\n    const _groups: { [key: string]: GroupWrapper } = {};\n    let heardForWindowsCounter: number = -1;\n\n    // Getting already existing windows and create Group API for each window\n    const windows = windowStore.list;\n    Object.keys(windows).forEach((k) => {\n        addNewWindow(windows[k]);\n    });\n\n    environment.onCompositionChanged((windowInfo: any) => {\n        handleCompositionChanged(windowInfo);\n    });\n\n    environment.onGroupHeaderVisibilityChanged((windowInfo) => {\n        const windowId = windowInfo.windowId;\n        const group: Glue42.Windows.Group = findGroupByWindow(windowId);\n        if (typeof group !== \"undefined\") {\n            const groupEvents: GroupWrapper = _groups[group.id];\n\n            if (heardForWindowsCounter === -1) {\n                heardForWindowsCounter = group.windows.length;\n            }\n\n            heardForWindowsCounter--;\n            if (heardForWindowsCounter === 0) {\n                heardForWindowsCounter = -1;\n                groupEvents.groupInternal.handleGroupHeaderVisibilityChanged(windowInfo);\n            }\n        }\n    });\n\n    windowStore.onAdded((win) => {\n        addNewWindow(win);\n    });\n    windowStore.onRemoved((win) => {\n        removeWindow(win);\n    });\n\n    // Methods\n\n    function my(): Glue42.Windows.Group {\n        return findGroupByWindow(environment.my());\n    }\n\n    function list(success?: (groups: Glue42.Windows.Group[]) => void): Glue42.Windows.Group[] {\n        const result: Glue42.Windows.Group[] = Object.keys(_groups).map((groupId) => {\n            if (_groups[groupId]) {\n                return _groups[groupId].groupAPI;\n            }\n\n        });\n\n        if (typeof success === \"function\") {\n            success(result);\n        }\n        return result;\n    }\n\n    function findGroupByWindow(winId: string | Glue42.Windows.GDWindow, success?: (group: Glue42.Windows.Group) => void): Glue42.Windows.Group {\n        let windowId: string;\n        if (typeof winId === \"undefined\") {\n            logger.debug(\"trying to find a group by a window, but winId is undefined\");\n            return;\n        }\n        if (typeof winId === \"string\") {\n            windowId = winId;\n        } else {\n            windowId = winId.id;\n        }\n        let groupFound: Glue42.Windows.Group;\n        Object.keys(_groups).forEach((groupId: string) => {\n            const group: Glue42.Windows.Group = _groups[groupId].groupAPI;\n            if (group.find(windowId) !== undefined) {\n                groupFound = group;\n                return;\n            }\n        });\n\n        if (typeof success === \"function\") {\n            success(groupFound);\n        }\n\n        return groupFound;\n    }\n\n    // Events\n\n    function onWindowMoved(callback?: (windowId: string, oldGroup: Glue42.Windows.Group, newGroupId: string) => void): UnsubscribeFunction {\n        return _registry.add(\"window-moved\", callback);\n    }\n\n    // Private\n\n    function createOrGetGroup(groupId: string): GroupWrapper {\n        if (!_groups.hasOwnProperty(groupId)) {\n            const createdGroup: GroupWrapper = groupFactory(groupId, environment.executor);\n            _groups[groupId] = createdGroup;\n            return createdGroup;\n        } else {\n            return _groups[groupId];\n        }\n    }\n\n    function deleteGroup(groupId: string): void {\n        if (_groups.hasOwnProperty(groupId) && typeof _groups[groupId] !== \"undefined\") {\n            if (_groups[groupId].groupAPI.windows.length === 0) {\n                delete _groups[groupId];\n            }\n        }\n    }\n\n    function addNewWindow(win: WindowWrapper) {\n        _logger.trace(`Adding new window ${win.API.id} to win.API.groupId ${win.API.groupId}`);\n        const group = addWindow(win);\n        if (group) {\n            _logger.trace(`handleGroupAssociation ${win.API.id} to group.groupAPI.id ${group.groupAPI.id}`);\n            win.Events.handleGroupAssociation(group.groupAPI);\n        }\n    }\n\n    function addWindow(win: WindowWrapper, groupId?: string): GroupWrapper {\n        const windowGroupId: string = groupId || win.API.groupId;\n        const windowId: string = win.API.id;\n        if (typeof windowGroupId === \"undefined\" || typeof windowId === \"undefined\") {\n            _logger.debug(`trying to add a window without group - winId: ${windowId}`);\n            return;\n        }\n\n        const group = createOrGetGroup(windowGroupId);\n        group.groupInternal.addWindow(windowId);\n        return group;\n    }\n\n    function removeWindow(win: WindowWrapper, groupId?: string) {\n        const windowId: string = win.API.id;\n        const windowGroupId: string = groupId || win.API.groupId;\n        if (typeof windowGroupId !== \"undefined\") {\n            const group = _groups[windowGroupId];\n            group.groupInternal.removeWindow(windowId);\n            win.Events.handleGroupAssociation(undefined);\n            deleteGroup(windowGroupId);\n        }\n    }\n\n    function handleCompositionChanged(windowInfo: any): void {\n        const newGroupId: string = windowInfo.groupId;\n        const windowId: string = windowInfo.windowId;\n        const oldGroup: Glue42.Windows.Group = findGroupByWindow(windowId);\n        const oldGroupId = oldGroup ? oldGroup.id : undefined;\n        _logger.trace(`handleCompositionChanged newGroupId: ${newGroupId} windowId: ${windowId} oldGroup: ${oldGroupId}`);\n        if (oldGroupId === newGroupId) {\n            _logger.trace(`handleCompositionChanged newGroupId: ${newGroupId} windowId: ${windowId} oldGroup: ${oldGroupId} are the same - returning...`);\n            return;\n        }\n\n        const win = windowStore.get(windowId) || windowStore.get(windowId);\n        const newGroup = addWindow(win, newGroupId);\n        if (oldGroup) {\n            removeWindow(win, oldGroupId);\n            _registry.execute(\"window-moved\", windowId, oldGroup, newGroupId);\n        }\n        win.Events.handleGroupChanged(newGroup.groupAPI, oldGroup);\n    }\n\n    //#region \"API\"\n\n    const groups = {\n        get my() {\n            return my();\n        },\n        list,\n        findGroupByWindow,\n    };\n\n    //#endregion \"API\n\n    const events: GroupsInternal = { onWindowMoved };\n\n    return {\n        groupsAPI: groups,\n        groupsEvents: events,\n    };\n};\n","import { Glue42Core } from \"@glue42/core\";\nimport { CallbackRegistry, UnsubscribeFunction, default as CallbackFactory } from \"callback-registry\";\nimport { Glue42 } from \"../../glue\";\nimport { Environment, GroupsWrapper, WindowWrapper } from \"./types\";\n\nimport { default as envDetector } from \"./environment/detector\";\nimport groupsFactory from \"./groups\";\nimport { default as windowStore } from \"./store\";\n\nexport default (agm: Glue42Core.AGM.API, logger: Glue42Core.Logger.API, appManagerGetter: () => Glue42.AppManager.API, gdMajorVersion: number): Glue42.Windows.API => {\n    const _registry: CallbackRegistry = CallbackFactory();\n    const _logger = logger;\n    let groups: GroupsWrapper;\n    let environment: Environment;\n\n    windowStore.init(_logger);\n\n    const isReady = new Promise((resolve, reject) => {\n        envDetector(agm, _logger, appManagerGetter, gdMajorVersion)\n            .then((env) => {\n                environment = env;\n                groups = groupsFactory(env, _logger);\n                resolve();\n            })\n            .catch((e) => {\n                const err = `Environment detector fails with: ${e}`;\n                _logger.error(err);\n                reject(err);\n            });\n    });\n\n    function ready() {\n        return isReady;\n    }\n\n    function my(): Glue42.Windows.GDWindow {\n        const myWindow = windowStore.getIfReady(environment.my());\n        return myWindow ? myWindow.API : undefined;\n    }\n\n    function open(name: string, url: string, options?: Glue42.Windows.WindowSettings, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: object) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n\n            const errorHandler = (errorResponse: object) => {\n                if (typeof error === \"function\") {\n                    error(errorResponse);\n                }\n                reject(errorResponse);\n            };\n\n            const successHandler = (id: string) => {\n                windowStore.waitFor(id)\n                    .then((win) => {\n                        if (typeof success === \"function\") {\n                            success(win.API);\n                        }\n                        resolve(win.API);\n\n                        if (win.API.windowType === \"electron\") {\n                            // on normal windows urlCHanged has to be detected first in orer for the window to be ready\n                            // that causes the user callbacks to miss urlChanged since they are not registered yet\n                            // here we 'replay' the urlChanged event\n                            win.Events.handleUrlChanged(win.API.url);\n                        }\n                    })\n                    .catch(errorHandler);\n            };\n\n            environment.open(name, url, options, successHandler, errorHandler);\n        });\n    }\n\n    function find(name: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Glue42.Windows.GDWindow {\n        const windows: { [key: string]: WindowWrapper } = windowStore.list;\n\n        const windowsForListing: Glue42.Windows.GDWindow[] = Object.keys(windows).reduce((memo, winId) => {\n            const window: WindowWrapper = windows[winId];\n            if (window && window.API.name === name) {\n                memo.push(window.API);\n            }\n            return memo;\n        }, []);\n\n        if (typeof success !== \"function\") {\n            return windowsForListing[0];\n        }\n\n        if (windowsForListing.length > 0) {\n            success(windowsForListing[0]);\n        } else {\n            if (typeof error === \"function\") {\n                error(\"There is no window with name:\" + name);\n            }\n        }\n    }\n\n    function findById(id: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Glue42.Windows.GDWindow {\n        const windows: { [key: string]: WindowWrapper } = windowStore.list;\n        const windowsForListing: Glue42.Windows.GDWindow[] = Object.keys(windows).reduce((memo, winId) => {\n            const window: WindowWrapper = windows[winId];\n            if (typeof window !== \"undefined\" && window.API.id === id) {\n                memo.push(window.API);\n            }\n            return memo;\n        }, []);\n\n        if (typeof success !== \"function\") {\n            return windowsForListing[0];\n        }\n\n        if (windowsForListing.length > 0) {\n            success(windowsForListing[0]);\n        } else {\n            if (typeof error === \"function\") {\n                error(\"There is no window with such id:\" + id);\n            }\n        }\n    }\n\n    function list(success?: (window: Glue42.Windows.GDWindow[]) => void): Glue42.Windows.GDWindow[] {\n        const windows: { [key: string]: WindowWrapper } = windowStore.list;\n\n        const windowsForListing: Glue42.Windows.GDWindow[] = Object.keys(windows)\n            .map((k) => {\n                return windows[k].API;\n            });\n\n        if (typeof success !== \"function\") {\n            return windowsForListing;\n        }\n\n        success(windowsForListing);\n    }\n\n    function windowAdded(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"window-added\", callback);\n    }\n\n    function windowRemoved(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"window-removed\", callback);\n    }\n\n    function tabAttached(callback: (tabWindow: Glue42.Windows.GDWindow, newTabGroupId: string, tabHeaderVisible: boolean) => void): Promise<void> {\n        return isReady.then(() => {\n            environment.tabAttached(callback);\n        });\n    }\n\n    function tabDetached(callback: (window: Glue42.Windows.GDWindow, tabGroupId: string, oldTabGroupId: string) => void): Promise<void> {\n        return isReady.then(() => {\n            environment.tabDetached(callback);\n        });\n    }\n\n    function onWindowFrameColorChanged(callback: (window: Glue42.Windows.GDWindow) => void): Promise<UnsubscribeFunction> {\n        return isReady.then(() => {\n            return environment.onWindowFrameColorChanged(callback);\n        });\n    }\n\n    function onWindowGotFocus(callback: (window: Glue42.Windows.GDWindow) => void) {\n        let unsubscribe: UnsubscribeFunction;\n        isReady.then(() => {\n            unsubscribe = environment.onWindowGotFocus(callback);\n        });\n\n        return () => {\n            if (unsubscribe) {\n                unsubscribe();\n            }\n        };\n    }\n\n    function onWindowLostFocus(callback: (window: Glue42.Windows.GDWindow) => void) {\n        let unsubscribe: UnsubscribeFunction;\n\n        isReady.then(() => {\n            unsubscribe = environment.onWindowLostFocus(callback);\n        });\n\n        return () => {\n            if (unsubscribe) {\n                unsubscribe();\n            }\n        };\n    }\n\n    function onEvent(callback: (stream: any) => void): UnsubscribeFunction {\n        let unsubFunc: UnsubscribeFunction;\n        let unsubscribed = false;\n        isReady.then(() => {\n            if (unsubscribed) {\n                return;\n            }\n            unsubFunc = environment.onEvent(callback);\n        });\n\n        return () => {\n            unsubscribed = true;\n            if (unsubFunc) {\n                unsubFunc();\n            }\n\n        };\n    }\n\n    function createFlydown(targetId: string, config: Glue42.Windows.FlydownOptions): Promise<Glue42.Windows.Flydown> {\n        return environment.createFlydown(targetId, config);\n    }\n\n    function showPopup(targetId: string, config: Glue42.Windows.PopupOptions): Promise<void> {\n        return environment.showPopup(targetId, config);\n    }\n\n    function handleWindowAdded(w: WindowWrapper) {\n        _registry.execute(\"window-added\", w.API);\n    }\n\n    function handleWindowRemoved(w: WindowWrapper) {\n        _registry.execute(\"window-removed\", w.API);\n    }\n\n    windowStore.onReadyWindow(handleWindowAdded);\n    windowStore.onRemoved(handleWindowRemoved);\n\n    // The API itself\n    return {\n        my,\n        open,\n        find,\n        findById,\n        list,\n        ready,\n        onWindowAdded: windowAdded,\n        windowAdded,\n        onWindowRemoved: windowRemoved,\n        windowRemoved,\n        onTabAttached: tabAttached,\n        onTabDetached: tabDetached,\n        onWindowFrameColorChanged,\n\n        get groups() {\n            return groups.groupsAPI;\n        },\n        onWindowGotFocus,\n        onWindowLostFocus,\n        onEvent,\n        createFlydown,\n        showPopup\n    };\n};\n","import { Glue42Core } from \"@glue42/core\";\nimport { Environment } from \"./../types\";\nimport { default as GD } from \"./gd/gd\";\nimport { default as hc } from \"./hc/hc\";\nimport { Glue42 } from \"../../../glue\";\n\nexport default (agm: Glue42Core.AGM.API, logger: Glue42Core.Logger.API, appManagerGetter: () => Glue42.AppManager.API, gdMajorVersion: number): Promise<Environment> => {\n    const _logger = logger;\n    return new Promise((resolve, reject) => {\n        if (gdMajorVersion === 2) {\n            // We are running in HC\n            _logger.trace(\"running in HC\");\n            hc(agm, _logger, appManagerGetter, window.htmlContainer.containerName, window.htmlContainer.windowId)\n                .then(resolve)\n                .catch(reject);\n        } else if (gdMajorVersion >= 3) {\n            // We are running in GD 3\n            // TODO expose instance in glu42gd\n            _logger.trace(\"running in GD\");\n            const gd = new GD(agm, _logger, appManagerGetter, undefined, window.glue42gd.windowId);\n            gd.init()\n                .then(resolve)\n                .catch(reject);\n        } else {\n            // We are running in Browser or Node, we should check which stream is available\n            // But we need to pass the container as dependency\n            const hcPromise = hc(agm, _logger, appManagerGetter);\n            const gdPromise = new GD(agm, _logger, appManagerGetter).init();\n            const wait = (ms: number) => new Promise((res, rej) => setTimeout(() => { rej(\"timeout waiting for streams\"); }, ms));\n            Promise.race([hcPromise, gdPromise, wait(10000)])\n                .then(resolve)\n                .catch(reject);\n        }\n    });\n};\n","import { Glue42 } from \"../../glue\";\n\n// provides a unified way to access layouts array\nexport class LayoutStore {\n    private layouts: Glue42.Layouts.Layout[] = [];\n\n    public removeWhere(condition: (l: Glue42.Layouts.Layout) => boolean) {\n        this.layouts = this.layouts.filter(condition);\n    }\n\n    public add(item: Glue42.Layouts.Layout) {\n        this.layouts.push(item);\n    }\n\n    public get all(): Glue42.Layouts.Layout[] {\n        return this.layouts;\n    }\n\n    public where(condition: (l: Glue42.Layouts.Layout) => boolean): Glue42.Layouts.Layout[] {\n        return this.layouts.filter(condition);\n    }\n\n    public first(condition: (l: Glue42.Layouts.Layout) => boolean): Glue42.Layouts.Layout {\n        return this.where(condition)[0];\n    }\n}\n\nexport default new LayoutStore();\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nmodule.exports = {\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nfunction randomByte() {\n    if (!crypto || !crypto.getRandomValues) {\n        return Math.floor(Math.random() * 256) & 0x30;\n    }\n    var dest = new Uint8Array(1);\n    crypto.getRandomValues(dest);\n    return dest[0] & 0x30;\n}\n\nmodule.exports = randomByte;\n","'use strict';\n\nvar randomByte = require('./random/random-byte');\n\nfunction encode(lookup, number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + lookup( ( (number >> (4 * loopCounter)) & 0x0f ) | randomByte() );\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = encode;\n","'use strict';\nvar alphabet = require('./alphabet');\n\n/**\n * Decode the id to get the version and worker\n * Mainly for debugging and testing.\n * @param id - the shortid-generated id.\n */\nfunction decode(id) {\n    var characters = alphabet.shuffled();\n    return {\n        version: characters.indexOf(id.substr(0, 1)) & 0x0f,\n        worker: characters.indexOf(id.substr(1, 1)) & 0x0f\n    };\n}\n\nmodule.exports = decode;\n","'use strict';\n\nvar encode = require('./encode');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1459707606518;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 6;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + encode(alphabet.lookup, version);\n    str = str + encode(alphabet.lookup, clusterWorkerId);\n    if (counter > 0) {\n        str = str + encode(alphabet.lookup, counter);\n    }\n    str = str + encode(alphabet.lookup, seconds);\n\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var characters = alphabet.characters();\n    var len = id.length;\n    for(var i = 0; i < len;i++) {\n        if (characters.indexOf(id[i]) === -1) {\n            return false;\n        }\n    }\n    return true;\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar encode = require('./encode');\nvar decode = require('./decode');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.decode = decode;\nmodule.exports.isValid = isValid;\n","'use strict';\nmodule.exports = require('./lib/index');\n","import { Glue42 } from \"../../glue\";\nimport { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport { Glue42Core } from \"@glue42/core\";\n\nconst SaveContextMethodName = \"T42.HC.GetSaveContext\";\ndeclare var htmlContainer: any;\n\n/**\n * Logic for apps that want to provide custom context on save\n */\nexport default class ContextProvider {\n\n    private registeredRequestsMethods = false;\n\n    constructor(private agm: Glue42Core.AGM.API, private activitiesGetter: () => Glue42.Activities.API, private callbacks: CallbackRegistry) {\n    }\n\n    public onSaveRequested(callback: (context?: object) => Glue42.Layouts.SaveRequestResponse) {\n        if (!this.registeredRequestsMethods) {\n            this.registerRequestMethods();\n            this.registeredRequestsMethods = true;\n        }\n        return this.callbacks.add(\"saveRequested\", callback);\n    }\n\n    private isActivityOwner() {\n        // fallback for GD2 - remove once the bellow code is tested\n        if (typeof htmlContainer !== \"undefined\") {\n            const context = htmlContainer.getContext();\n            return context && context._t42 && context._t42.activityIsOwner;\n        }\n\n        // check if we're the activity owners\n        const activities = this.activitiesGetter();\n        if (!activities) {\n            return false;\n        }\n\n        if (!activities.inActivity) {\n            return false;\n        }\n\n        const myWindow = activities.my.window;\n        const myActivity = activities.my.activity;\n\n        if (!myActivity && !myWindow) {\n            return false;\n        }\n\n        // TODO - fix activities typings\n        return (myActivity.owner as any).id === (myWindow as any).id;\n    }\n\n    private registerRequestMethods() {\n        this.agm.register(SaveContextMethodName, (args) => {\n            const requestResult: Glue42.Layouts.SaveRequestResponse = this.callbacks.execute(\"saveRequested\", args)[0] as Glue42.Layouts.SaveRequestResponse;\n            if (!requestResult) {\n                return {};\n            }\n\n            requestResult.activityContext = requestResult.activityContext || {};\n            requestResult.windowContext = requestResult.windowContext || {};\n\n            // always include the window context\n            const result: Glue42.Layouts.SaveRequestResponse = { windowContext: requestResult.windowContext, activityContext: undefined };\n\n            // if we're the activity owner put the context too\n            if (this.isActivityOwner()) {\n                result.activityContext = requestResult.activityContext;\n            }\n\n            return result;\n        });\n    }\n}\n","// A simple transformation that makes object to start with lowercase\n// Note that this is not full implementation as it supports only:\n// undefined, null, arrays, number, string, bool. Anything out of this\n// list is considered Object\nexport default function transformACSLayout(something: { [key: string]: any }): { [key: string]: any } {\n    if (!something) {\n        return something;\n    }\n\n    if (Array.isArray(something)) {\n        return something.map((item) => {\n            return transformACSLayout(item);\n        });\n    }\n\n    if (typeof something === \"string\" || typeof something === \"number\" || typeof something === \"boolean\") {\n        return something;\n    }\n\n    const initial: { [key: string]: any } = {};\n    return Object.keys(something).reduce((accumulator, current) => {\n        const value = something[current];\n        const convertedValue = transformACSLayout(value);\n\n        let key = current;\n        if (current[0].toLowerCase() !== current[0]) {\n            key = current[0].toLowerCase() + current.substr(1);\n        }\n\n        accumulator[key] = convertedValue;\n        return accumulator;\n    }, initial);\n}\n","import { Glue42 } from \"../../glue\";\n\nexport default class LayoutImpl implements Glue42.Layouts.Layout {\n    /** Name of the layout */\n    public name: string;\n\n    /** Type of the layout */\n    public type: Glue42.Layouts.LayoutType;\n\n    /** Array of components describing the applications that are saved in the layout */\n    public components: Glue42.Layouts.LayoutComponent[];\n\n    /** Context passed when the layout was saved */\n    public context: any;\n\n    /** Metadata passed when the layout was saved */\n    public metadata: any;\n\n    constructor(data: any) {\n        this.name = data.name;\n        this.type = data.type;\n        this.components = data.components;\n        this.context = data.context;\n        this.metadata = data.metadata;\n    }\n}\n","import { Glue42 } from \"../../glue\";\nimport callbackRegistry, { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport { LayoutsStream, HibernationResumeMessage } from \"./types\";\nimport store from \"./store\";\nimport generate from \"shortid\";\nimport { ACSSaveLayoutMessage, ACSRestoreMessage, ACSRestoreMessageContext, ACSRestoreMessageInstanceInfo, ACSMessage, ACSRenameMessage, ACSRemoveLayoutMessage, ACSImportMessage, ExportResultMessage } from \"./types\";\nimport { Glue42Core } from \"@glue42/core\";\nimport ContextProvider from \"./contextProvider\";\nimport transformACSLayout from \"./transform\";\nimport LayoutImpl from \"./layout\";\n\nexport default class LayoutsAPIImpl implements Glue42.Layouts.API {\n    private appManager: Glue42.AppManager.API;\n    private provider: ContextProvider;\n\n    constructor(private config: Glue42.Layouts.Configuration, private stream: LayoutsStream, private callbacks: CallbackRegistry) {\n        this.appManager = config.appManager;\n        this.onEvent = stream.onEvent;\n        this.provider = new ContextProvider(config.agm, config.activityGetter, callbacks);\n        stream.subscribe();\n    }\n\n    public ready(): Promise<void> {\n        if (this.config.mode === \"fullWaitSnapshot\") {\n            return this.stream.gotSnapshot;\n        }\n        return this.stream.ready;\n    }\n\n    public save(layout: Glue42.Layouts.NewLayoutOptions): Promise<Glue42.Layouts.Layout> {\n        return new Promise<Glue42.Layouts.Layout>((resolve, reject) => {\n\n            this.verifyNotSlimMode();\n\n            if (!layout.name) {\n                throw Error(\"layout.name argument is required\");\n            }\n\n            if (!layout.type) {\n                layout.type = \"Global\";\n            }\n\n            if (layout.activityId) {\n                layout.type = \"Activity\";\n            }\n\n            if (typeof layout.ignoreHidden === \"undefined\") {\n                layout.ignoreHidden = true; // default to true\n            }\n\n            const layoutObject: ACSSaveLayoutMessage = {\n                name: layout.name,\n                actIds: [],\n                appIds: [],\n                type: layout.type,\n                context: layout.context,\n                metadata: layout.metadata || {},\n                options: { ignoreLayoutRestrictions: false },\n            };\n\n            if (layout.type === \"Activity\") {\n                let actId = layout.activityId;\n                if (!actId) {\n                    if (!this.appManager.myInstance.inActivity) {\n                        throw new Error(\"Current application is not in activity. Can not save activity layout for it\");\n                    }\n                    actId = this.appManager.myInstance.activityId;\n                }\n\n                layoutObject.actIds.push(actId);\n                layoutObject.options = { ignoreLayoutRestrictions: true };\n            } else if (layout.type === \"Global\") {\n                if (this.config.gdMajorVersion === 2) {\n                    let instances: any[] = this.appManager.instances();\n\n                    if (layout.ignoreHidden) {\n                        instances = instances.filter((i) => this.isVisibleWindow(i));\n                    }\n\n                    if (layout.ignoreMyInstance && this.appManager.myInstance) {\n                        instances = instances.filter((i) => i.id !== this.appManager.myInstance.id);\n                    }\n\n                    instances.reduce((prev, current) => {\n                        if (!current.id) {\n                            return prev;\n                        }\n\n                        if (current.inActivity) {\n                            const actId = current.activityId;\n\n                            if (prev.actIds.indexOf(actId) === -1) {\n                                prev.actIds.push(actId);\n                            }\n                        } else {\n                            prev.appIds.push(current.id);\n                        }\n\n                        return prev;\n                    }, layoutObject);\n                } else {\n                    layoutObject.autoCollectApps = true;\n                }\n            } else {\n                throw new Error(\"layout type \" + layout.type + \" not supported\");\n            }\n\n            this.invokeMethodAndTrack(\"T42.ACS.SaveLayout\", layoutObject, resolve, reject);\n        });\n    }\n\n    public restore(options: Glue42.Layouts.RestoreOptions): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            this.verifyNotSlimMode();\n\n            if (typeof options === \"undefined\") {\n                throw Error(\"options argument is required\");\n            }\n\n            if (!options.name) {\n                throw Error(\"options.name argument is required\");\n            }\n\n            if (!options.type) {\n                options.type = \"Global\";\n            }\n\n            if (options.activityIdToJoin) {\n                options.type = \"Activity\";\n            }\n\n            if (typeof options.restoreActivityOwner === \"undefined\") {\n                options.restoreActivityOwner = false;\n            }\n\n            if (typeof options.ignoreActivityWindowTypes === \"undefined\") {\n                options.ignoreActivityWindowTypes = [];\n            }\n\n            if (typeof options.setActivityContext === \"undefined\") {\n                options.setActivityContext = true;\n            }\n\n            // if no closeOwnRunning we set closeRunningInstance to true; if\n            if (typeof options.closeRunningInstance === \"undefined\") {\n                if (options.type === \"Global\") {\n                    options.closeRunningInstance = true;\n                } else if (options.type === \"Activity\") {\n                    // we don't close anything in case of activity layout type\n                    options.closeRunningInstance = false;\n                }\n            }\n\n            if (typeof options.reuseWindows === \"undefined\") {\n                options.reuseWindows = true;\n            }\n\n            options.context = options.context || {};\n\n            const t42: ACSRestoreMessageContext = {\n                restoreOptions: {\n                    activityToJoin: options.activityIdToJoin,\n                    setActivityContext: options.setActivityContext,\n                    ignoreActivityWindowTypes: options.ignoreActivityWindowTypes,\n                    restoreActivityOwner: options.restoreActivityOwner,\n                    closeOldWindows: true,\n                    reuseExistingWindows: options.reuseWindows\n                }\n            };\n\n            const arg: ACSRestoreMessage = {\n                type: options.type,\n                name: options.name,\n                context: options.context,\n                toClose: [],\n                splash: options.splash\n            };\n\n            // getting instance for closing is necessary only for GD2\n            // G4E-2418 - A global layout including swimlane app can not be restored, when the activities configuration is set to false\n            if (this.config.gdMajorVersion === 2) {\n                if (options.closeRunningInstance) {\n                    arg.toClose = this.getInstancesToClose(options);\n                }\n            }\n\n            if (options.timeout) {\n                arg.timeout = options.timeout;\n            }\n\n            arg.context._t42 = t42;\n\n            this.invokeMethodAndTrack(\"T42.ACS.RestoreLayout\", arg, resolve, reject, true);\n        });\n    }\n\n    public remove(type: string, name: string): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            this.verifyNotSlimMode();\n\n            if (!name) {\n                throw Error(\"name argument is required\");\n            }\n\n            if (!type) {\n                throw Error(\"type argument is required\");\n            }\n\n            const msg: ACSRemoveLayoutMessage = {\n                type,\n                name,\n            };\n\n            this.invokeMethodAndTrack(\"T42.ACS.RemoveLayout\", msg, resolve, reject);\n        });\n    }\n\n    public list(): Glue42.Layouts.Layout[] {\n        this.verifyNotSlimMode();\n        return store.all;\n    }\n\n    public import(layouts: Glue42.Layouts.Layout[], mode?: Glue42.Layouts.ImportMode): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            this.verifyNotSlimMode();\n\n            const msg: ACSImportMessage = {\n                mode: mode || \"replace\",\n                layouts\n            };\n\n            this.invokeMethodAndTrack(\"T42.ACS.ImportLayouts\", msg, resolve, reject);\n        });\n    }\n\n    public export(): Promise<Glue42.Layouts.Layout[]> {\n        return new Promise<Glue42.Layouts.Layout[]>((resolve, reject) => {\n            const handleResult = (result: ExportResultMessage) => {\n                const layouts: Glue42.Layouts.Layout[] = this.getObjectValues(result.Layouts).map((t) => new LayoutImpl(transformACSLayout(t)));\n                resolve(layouts);\n            };\n\n            this.invokeMethodAndTrack(\"T42.ACS.ExportLayouts\", {}, handleResult, reject, true);\n        });\n    }\n\n    public rename(layout: Glue42.Layouts.Layout, newName: string): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            this.verifyNotSlimMode();\n\n            if (!layout) {\n                throw Error(\"layout argument is required\");\n            }\n\n            if (!layout.name) {\n                throw Error(\"name argument is required\");\n            }\n\n            if (!layout.type) {\n                throw Error(\"type argument is required\");\n            }\n\n            const msg: ACSRenameMessage = { type: layout.type, oldName: layout.name, newName };\n\n            this.invokeMethodAndTrack(\"T42.ACS.RenameLayout\", msg, resolve, reject);\n        });\n    }\n\n    public updateMetadata(layout: Glue42.Layouts.Layout): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (!layout) {\n                throw Error(\"layout argument is required\");\n            }\n\n            if (!layout.name) {\n                throw Error(\"name argument is required\");\n            }\n\n            if (!layout.type) {\n                throw Error(\"type argument is required\");\n            }\n\n            if (!layout.metadata) {\n                throw Error(\"metadata argument is required\");\n            }\n\n            const layoutObject: any = {\n                name: layout.name,\n                type: layout.type,\n                metadata: layout.metadata\n            };\n\n            this.invokeMethodAndTrack(\"T42.ACS.UpdateMetadata\", layoutObject, resolve, reject, true);\n        });\n    }\n\n    public hibernate(name: string, options?: Glue42.Layouts.HibernationOptions): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (!name) {\n                return reject(\"name cannot be empty\");\n            }\n            options = options || {};\n            const request: HibernationResumeMessage = {\n                name,\n                type: \"Global\",\n                context: options.context || {},\n                metadata: options.metadata || {},\n            };\n            this.invokeMethodAndTrack(\"T42.ACS.HibernateLayout\", request, resolve, reject, true);\n        });\n    }\n\n    public resume(name: string, context?: any, options?: Glue42.Layouts.ResumeOptions): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (!name) {\n                return reject(\"name cannot be empty\");\n            }\n            const request: HibernationResumeMessage = {\n                name,\n                type: \"Global\",\n                context,\n                ...options\n            };\n            this.invokeMethodAndTrack(\"T42.ACS.ResumeLayout\", request, resolve, reject, true);\n        });\n    }\n\n    public onAdded(callback: (layout: Glue42.Layouts.Layout) => void): () => void {\n        const result = this.callbacks.add(\"added\", callback);\n\n        if (store.all.length > 0) {\n            store.all.forEach((layout) => {\n                try {\n                    callback(layout);\n                } catch (err) { /** */ }\n            });\n        }\n\n        return result;\n    }\n\n    public onRemoved(callback: (layout: Glue42.Layouts.Layout) => void): () => void {\n        return this.callbacks.add(\"removed\", callback);\n    }\n\n    public onChanged(callback: (layout: Glue42.Layouts.Layout) => void): () => void {\n        return this.callbacks.add(\"changed\", callback);\n    }\n\n    public onRenamed(callback: (layout: Glue42.Layouts.Layout) => void): () => void {\n        return this.callbacks.add(\"renamed\", callback);\n    }\n\n    public onEvent(callback: (event: any) => void): () => void {\n        return this.stream.onEvent(callback);\n    }\n\n    public onSaveRequested(callback: (context?: object) => Glue42.Layouts.SaveRequestResponse): UnsubscribeFunction {\n        return this.provider.onSaveRequested(callback);\n    }\n\n    private verifyNotSlimMode() {\n        if (this.config.mode === \"slim\") {\n            throw Error(\"Operation not allowed in slim mode. Run in full mode.\");\n        }\n    }\n\n    private isVisibleWindow(instance: Glue42.AppManager.Instance) {\n        // GD3\n        // allow exes to participate in layouts (TODO - check if the app is layouts aware (has the layouts methods) - if not treat it as not visible window)\n        if (instance.application.type === \"exe\" || instance.application.type === \"node\") {\n            return true;\n        }\n        // allow activities to participate in layouts\n        if (instance.application.type === \"activity\") {\n            return true;\n        }\n\n        if (!instance || !instance.window) {\n            return false;\n        }\n\n        return instance.window.isVisible;\n    }\n\n    private invokeMethodAndTrack(methodName: string, args: ACSMessage, resolve: (result: any) => void, reject: (err: any) => void, skipStreamEvent?: boolean) {\n        let streamEventReceived = skipStreamEvent;\n        let agmResult: any;\n\n        const token = generate();\n        args.token = token;\n\n        const handleResult = () => {\n            if (streamEventReceived && agmResult) {\n                resolve(agmResult);\n            }\n        };\n\n        if (!skipStreamEvent) {\n            this.stream.waitFor(token)\n                .then(() => {\n                    streamEventReceived = true;\n                    handleResult();\n                })\n                .catch((err: any) => {\n                    reject(err);\n                });\n        }\n\n        const responseHandler = (result: Glue42Core.AGM.InvocationResult<any>) => {\n            if (!result.returned) {\n                reject(\"No result from method \" + methodName);\n            }\n\n            if (result.returned.status && (result.returned.status !== \"Success\" && result.returned.status !== \"PartialSuccess\")) {\n                reject(result.returned);\n            }\n\n            agmResult = result.returned;\n            handleResult();\n        };\n\n        this.config.agm.invoke(methodName, args, \"best\", { methodResponseTimeoutMs: 120 * 1000 })\n            .then(responseHandler)\n            .catch((err: any) => reject(err));\n    }\n\n    private getInstancesToClose(options: Glue42.Layouts.RestoreOptions) {\n        const instances: ACSRestoreMessageInstanceInfo[] = [];\n        const shellApp = this.appManager.applications().filter((a: any) => a.isShell)[0];\n        const shellApplicationName = shellApp ? shellApp.name : \"AppManager\";\n\n        this.appManager.instances().forEach((i: any) => {\n\n            // ignore my instance\n            if (this.appManager.myInstance && i.id === this.appManager.myInstance.id) {\n                return;\n            }\n\n            // ignore shell app\n            if (i.application.name === shellApplicationName) {\n                return;\n            }\n\n            // ignore hidden windows\n            if (!this.isVisibleWindow(i)) {\n                return;\n            }\n\n            // if activity layout stop only the instances\n            // running in the same activity\n            if (options.type === \"Activity\") {\n                if (i.activityId !== options.activityIdToJoin) {\n                    return;\n                }\n            }\n            instances.push({ application: i.application.name, instance: i.id });\n        });\n\n        return instances;\n    }\n\n    private getObjectValues(obj: any) {\n        if (!obj) {\n            return [];\n        }\n\n        return Object.keys(obj).map((k) => obj[k]);\n    }\n}\n","import { LayoutsStream } from \"../types\";\nimport store, { LayoutStore } from \"../store\";\nimport { ACSStreamData, ACSLayout } from \"./messages\";\nimport LayoutImpl from \"../layout\";\nimport { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport transformACSLayout from \"../transform\";\n\nimport { Glue42Core } from \"@glue42/core\";\n\n/**\n * ACS event stream related to layouts\n */\nexport default class ACSStream implements LayoutsStream {\n\n    public ready: Promise<void>;\n    public gotSnapshot: Promise<void>;\n\n    private resolveReady: () => void;\n    private rejectReady: (err: any) => void;\n\n    private resolveGotSnapshot: () => void;\n    private rejectGotSnapshot: (err: any) => void;\n\n    constructor(private agm: Glue42Core.AGM.API, private callbacks: CallbackRegistry) {\n\n        this.ready = new Promise<void>((resolve, reject) => {\n            this.resolveReady = resolve;\n            this.rejectReady = reject;\n        });\n\n        this.gotSnapshot = new Promise<void>((resolve, reject) => {\n            this.resolveGotSnapshot = resolve;\n            this.rejectGotSnapshot = reject;\n        });\n    }\n\n    public subscribe(noRetry?: boolean) {\n        const transform = (obj: object) => {\n            return this.getObjectValues(obj).map((t) => transformACSLayout(t));\n        };\n\n        // if we don't have OnLayoutEvent stream  we're running pre 2.1 GD version or outside GD,\n        if (!this.checkForLayoutEventMethod()) {\n            // if no retry resolve right away\n            if (noRetry) {\n                this.resolveReady();\n            }\n\n            // if we should retry, schedule  one more time\n            setTimeout(() => {\n                this.subscribe(true);\n            }, 500);\n        } else {\n            this.agm.subscribe(\"T42.ACS.OnLayoutEvent\", { waitTimeoutMs: 10000 })\n                .then((subs) => {\n                    subs.onData((args) => {\n                        const data = args.data as ACSStreamData;\n                        if (data.IsSnapshot) {\n                            this.resolveGotSnapshot();\n                        }\n\n                        this.addLayouts(transform(data.OnLayoutAdded));\n                        this.removeLayouts(transform(data.OnLayoutRemoved));\n                        this.changeLayouts(transform(data.OnLayoutChanged));\n                        this.renameLayouts(transform(data.OnLayoutRenamed));\n                        this.callbacks.execute(\"streamEvent\", data);\n                    });\n\n                    subs.onFailed((err) => {\n                        const msg = \"can not subscribe to T42.ACS.OnLayoutEvent \" + err;\n                        this.rejectReady(msg);\n                        this.rejectGotSnapshot(msg);\n                    });\n\n                    this.resolveReady();\n                })\n                .catch((err) => {\n                    const msg = \"Error subscribing for T42.ACS.OnLayoutEvent stream. Err: \" + err;\n                    this.rejectReady(msg);\n                    this.rejectGotSnapshot(msg);\n                });\n        }\n    }\n\n    public onEvent(callback: (streamEvent: ACSStreamData) => void): UnsubscribeFunction {\n        return this.callbacks.add(\"streamEvent\", callback);\n    }\n\n    public waitFor(token: string, timeout?: number): Promise<void> {\n        if (!timeout) {\n            timeout = 10000; // default timeout is 10 seconds\n        }\n        return new Promise<void>((resolve, reject) => {\n            let done = false;\n            const unsubscribe = this.onEvent((streamEvent) => {\n                if (streamEvent.Token === token) {\n                    done = true;\n                    unsubscribe();\n                    resolve();\n                }\n            });\n\n            setTimeout(() => {\n                if (!done) {\n                    reject(\"timed out\");\n                }\n            }, timeout);\n        });\n    }\n\n    private checkForLayoutEventMethod() {\n        try {\n            return this.agm\n                .methods()\n                .map((m) => m.name)\n                .indexOf(\"T42.ACS.OnLayoutEvent\") !== -1;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    private addLayouts(layoutsData: any[]) {\n        if (!layoutsData) {\n            return;\n        }\n\n        layoutsData.forEach((layoutData) => {\n            const layout = new LayoutImpl(layoutData);\n            store.add(layout);\n            this.callbacks.execute(\"added\", layout);\n        });\n    }\n\n    private removeLayouts(removedLayouts: any[]) {\n        if (!removedLayouts) {\n            return;\n        }\n        removedLayouts.forEach((removedLayout) => {\n            store.removeWhere((existingLayout) => !this.compareLayouts(existingLayout, removedLayout));\n\n            this.callbacks.execute(\"removed\", removedLayout);\n        });\n    }\n\n    private changeLayouts(changedLayouts: any[]) {\n        if (!changedLayouts) {\n            return;\n        }\n\n        changedLayouts.forEach((changedLayout) => {\n            // removed the changed layout and push it again\n            store.removeWhere((existingLayout) => !this.compareLayouts(existingLayout, changedLayout));\n            store.add(new LayoutImpl(changedLayout));\n            // execute callback\n            this.callbacks.execute(\"changed\", changedLayout);\n        });\n\n    }\n\n    private renameLayouts(renamedLayouts: any[]) {\n        if (!renamedLayouts) {\n            return;\n        }\n\n        renamedLayouts.forEach((renamedLayout) => {\n            const existingLayout = store.first((current) => this.compareLayouts(current, { type: renamedLayout.type, name: renamedLayout.oldName }));\n\n            if (!existingLayout) {\n                throw Error(\"received rename event for unknown layout with type \" + renamedLayout.type + \" and name \" + renamedLayout.oldName);\n            }\n\n            existingLayout.name = renamedLayout.newName;\n\n            this.callbacks.execute(\"renamed\", existingLayout);\n        });\n    }\n\n    private compareLayouts(layout1: { name: string, type: string }, layout2: { name: string, type: string }) {\n        return layout1.name === layout2.name && layout1.type === layout2.type;\n    }\n\n    private getObjectValues(obj: any) {\n        if (!obj) {\n            return [];\n        }\n\n        return Object.keys(obj).map((k) => obj[k]);\n    }\n}\n","import contextProviderFactory from \"./contextProvider\";\nimport Layouts from \"./layouts\";\nimport store from \"./store\";\nimport ACSStream from \"./stream/acsStream\";\nimport streamNull from \"./stream/nullStream\";\nimport { Glue42 } from \"../../glue\";\nimport { LayoutsStream } from \"./types\";\nimport callbackRegistry, { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\n\nexport default function(config: Glue42.Layouts.Configuration): Layouts {\n\n    if (!config.agm) {\n        throw Error(\"config.agm is required\");\n    }\n\n    if (!config.logger) {\n        throw Error(\"config.logger is required\");\n    }\n\n    // default mode to slim\n    config.mode = config.mode || \"slim\";\n\n    const logger = config.logger;\n    const callbacks: CallbackRegistry = callbackRegistry();\n\n    let acsStream: LayoutsStream;\n\n    if (config.mode === \"full\" || \"fullWaitSnapshot\") {\n        acsStream = new ACSStream(config.agm, callbacks);\n    } else {\n        acsStream = streamNull();\n    }\n\n    return new Layouts(config, acsStream, callbacks);\n}\n","import { Glue42 } from \"../../glue\";\nimport { Glue42Core } from \"@glue42/core\";\nimport CaptureOptions = Glue42.Displays.CaptureOptions;\n\nconst T42DisplayCommand = \"T42.Displays.Command\";\n\nexport default class DisplayManager implements Glue42.Displays.API {\n    constructor(\n        private _agm: Glue42Core.AGM.API,\n        private _logger: Glue42Core.Logger.API,\n    ) {\n        //\n    }\n\n    public all = async (): Promise<Glue42.Displays.Display[]> => {\n        const displays = await this.callGD<Glue42.Displays.Display[]>(DisplayCommand.GetAll, {});\n        return displays.map(this.decorateDisplay);\n    }\n\n    public get = async (id: number): Promise<Glue42.Displays.Display> => {\n        const display = await this.callGD<Glue42.Displays.Display>(DisplayCommand.Get, {id});\n        return this.decorateDisplay(display);\n    }\n\n    public getPrimary = async (): Promise<Glue42.Displays.Display> => {\n        const primary = (await this.all()).find((d) => d.isPrimary);\n        return primary;\n    }\n\n    public capture = async (options: CaptureOptions): Promise<string> => {\n        const screenshot = await this.callGD<string>(DisplayCommand.Capture, { ...options });\n        return screenshot;\n    }\n\n    public captureAll = async (options: Glue42.Displays.CaptureAllOptions): Promise<string | string[]> => {\n        const screenshots = await this.callGD<string | string[]>(DisplayCommand.CaptureAll, { ...options });\n        return screenshots;\n    }\n\n    public getMousePosition = async (): Promise<Glue42.Displays.Point> => {\n        const point = await this.callGD<Glue42.Displays.Point>(DisplayCommand.GetMousePosition);\n        return point;\n    }\n\n    private callGD = async <T>(command: string, options?: object): Promise<T> => {\n        // Consider targetting only GD\n        const invocationResult = await this._agm.invoke(T42DisplayCommand, { options: {...options}, command });\n        return invocationResult.returned.data;\n    }\n\n    private decorateDisplay = (original: Glue42.Displays.Display): Glue42.Displays.Display => {\n        return {\n            ...original,\n            capture: (size: SizeOptions) => this.capture({ id: original.id, size })\n        };\n    }\n}\n\ntype SizeOptions =  Glue42.Displays.ScaleOptions |  Glue42.Displays.AbsoluteSizeOptions;\n\nenum DisplayCommand {\n    Capture = \"capture\",\n    CaptureAll = \"captureAll\",\n    GetAll = \"getAll\",\n    Get = \"get\",\n    GetMousePosition = \"getMousePosition\",\n}\n","import { Glue42 } from \"../../glue\";\n\nconst CONTEXT_PREFIX = \"___channel___\";\n\nexport class SharedContextSubscriber {\n    private unsubscribeFunc: () => void = undefined;\n    private current: string = undefined;\n    private callback: any;\n\n    constructor(private contexts: Glue42.Contexts.API) {\n    }\n\n    public subscribe(callback: any) {\n        this.callback = callback;\n    }\n\n    public async subscribeFor(name: string, callback: (data: object, context: Glue42.Channels.ChannelContext, updaterId: string) => void): Promise<() => void> {\n        if (!await this.isChannel(name)) {\n            return Promise.reject(Error(`Channel with id: ${name} doesn't exist !`));\n        }\n        return this.contexts.subscribe(this.createContextName(name), (data: any, delta: any, removed: any, unsubscribe: any, extraData: any) => {\n            callback(data.data, data, extraData && extraData.updaterId);\n        });\n    }\n\n    public async switchChannel(name: string) {\n        this.unsubscribe();\n        this.current = name;\n        const sharedContextName = this.createContextName(name);\n        this.unsubscribeFunc = await this.contexts.subscribe(sharedContextName, (data) => {\n            if (this.callback) {\n                this.callback(data);\n            }\n        });\n    }\n\n    public unsubscribe(): Promise<void> {\n        if (this.unsubscribeFunc) {\n            this.unsubscribeFunc();\n        }\n        return Promise.resolve();\n    }\n\n    public async add(id: string, data: Glue42.Channels.ChannelContext): Promise<void> {\n        const name = this.createContextName(id);\n        return this.contexts.set(name, data);\n    }\n\n    public all(): Promise<string[]> {\n        const allContexts = this.contexts.all();\n        const channels = allContexts.filter((c: string) => c.startsWith(CONTEXT_PREFIX));\n        const ids = channels.map((c: string) => c.substr(CONTEXT_PREFIX.length));\n        return Promise.resolve(ids);\n    }\n\n    public async getContextData(name: string): Promise<Glue42.Channels.ChannelContext> {\n        if (!await this.isChannel(name)) {\n            return Promise.reject(Error(`A channel with name: ${name} doesn't exist !`));\n        }\n\n        return new Promise((resolve, reject) => {\n            this.contexts.subscribe(this.createContextName(name), (data) => {\n                resolve(data);\n            }).then((unsub) => unsub);\n        });\n    }\n\n    public update(id: string, data: any): Promise<void> {\n        const name = this.createContextName(id);\n        return this.contexts.update(name, data);\n    }\n\n    private createContextName(id: string) {\n        return CONTEXT_PREFIX + id;\n    }\n\n    private async isChannel(id: string): Promise<boolean> {\n        return (await this.all()).some((channelId) => channelId === id);\n    }\n}\n","import { Glue42 } from \"../../glue\";\nimport { default as CallbackRegistryFactory, CallbackRegistry } from \"callback-registry\";\nimport { SharedContextSubscriber } from \"./contexts\";\n\nexport class ChannelsImpl implements Glue42.Channels.API {\n    private subsKey = \"subs\";\n    private changedKey = \"changed\";\n\n    private registry: CallbackRegistry = CallbackRegistryFactory();\n    private currentContext: string;\n\n    constructor(private shared: SharedContextSubscriber) {\n        this.shared.subscribe(this.handler.bind(this));\n    }\n\n    public current(): string {\n        return this.currentContext;\n    }\n\n    public subscribe(callback: (data: object, context: Glue42.Channels.ChannelContext, updaterId: string) => void, channelContext?: Glue42.Channels.ChannelContext): () => void {\n        return this.registry.add(this.subsKey, callback);\n    }\n\n    public async subscribeFor(name: string, callback: (data: object, context: Glue42.Channels.ChannelContext, updateId: string) => void): Promise<() => void> {\n        const unsub = await this.shared.subscribeFor(name, callback);\n        return unsub;\n    }\n\n    public async publish(data: object, channelId?: string): Promise<void> {\n        if (channelId) {\n            if (typeof channelId !== \"string\") {\n                return Promise.reject(Error(\"Please provide the channelId as a string !\"));\n            }\n\n            const context: Glue42.Channels.ChannelContext = await this.get(channelId);\n\n            if (!context.name) {\n                return Promise.reject(Error(\"no name provided\")); // TODO: better error\n            }\n\n            return this.shared.update(context.name, {data});\n        }\n\n        if (!this.currentContext) {\n            throw new Error(\"not joined to any channel\");\n        }\n        return this.shared.update(this.currentContext, {data});\n    }\n\n    public join(id: string): Promise<void> {\n        this.currentContext = id;\n        this.registry.execute(this.changedKey, id);\n        return this.shared.switchChannel(id);\n    }\n\n    public leave(): Promise<void> {\n        this.currentContext = undefined;\n        this.registry.execute(this.changedKey, undefined);\n        return this.shared.unsubscribe();\n    }\n\n    public all(): Promise<string[]> {\n        return this.shared.all();\n    }\n\n    public get(channelName: string): Promise<Glue42.Channels.ChannelContext> {\n        return this.shared.getContextData(channelName);\n    }\n\n    public changed(callback: (channel: string) => () => void) {\n        this.registry.add(this.changedKey, callback);\n    }\n\n    public meta(name: string, meta: object): Promise<void> {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    public async add(info: Glue42.Channels.ChannelContext): Promise<Glue42.Channels.ChannelContext> {\n        if (!info) {\n            throw new Error(\"info argument can not be undefined\");\n        }\n\n        if (!info.name) {\n            throw new Error(\"info.name is missing\");\n        }\n\n        const context: Glue42.Channels.ChannelContext = {\n            name: info.name,\n            meta: info.meta || {},\n            data: info.data || {}\n        };\n\n        await this.shared.add(info.name, context);\n        return context;\n    }\n\n    public remove(id: string): void {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    public onChannelAdded(cb: () => void): void {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    public onChannelRemoved(cb: () => void): void {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    public apps(channelId?: string): Promise<any[]> {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    private handler(context: Glue42.Channels.ChannelContext, updaterId: string): any {\n        this.registry.execute(this.subsKey, context.data, context, updaterId);\n    }\n}\n","import { Glue42 } from \"../../glue\";\nimport { setupAGM } from \"./agm\";\nimport { SharedContextSubscriber } from \"./contexts\";\nimport { ChannelsImpl } from \"./channels\";\n\nexport function factory(contexts: Glue42.Contexts.API, agm: Glue42.AGM.API): Glue42.Channels.API & { ready: () => Promise<void>; } {\n    const sharedContexts = new SharedContextSubscriber(contexts);\n    const channels = new ChannelsImpl(sharedContexts);\n\n    setupAGM(agm, channels);\n\n    return {\n        subscribe: channels.subscribe.bind(channels),\n        subscribeFor: channels.subscribeFor.bind(channels),\n        publish: channels.publish.bind(channels),\n        all: channels.all.bind(channels),\n        current: channels.current.bind(channels),\n        join: channels.join.bind(channels),\n        leave: channels.leave.bind(channels),\n        add: channels.add.bind(channels),\n        get: channels.get.bind(channels),\n        changed: channels.changed.bind(channels),\n\n        ready: () => (contexts as any).ready()\n    };\n}\n","import { Glue42 } from \"../../glue\";\n\nexport async function setupAGM(agm: Glue42.AGM.API, channels: Glue42.Channels.API) {\n\n    let windowId;\n    if (typeof window !== \"undefined\") {\n        if (window.htmlContainer) {\n            windowId = window.htmlContainer.windowId;\n        } else if (window.glue42gd) {\n            windowId = window.glue42gd.windowId;\n        }\n    }\n\n    if (!windowId) {\n        // not supported\n        return;\n    }\n    await agm.register(\"T42.Channels.Command\", (args: any) => {\n        const command = args.command;\n        if (!command) {\n            throw new Error(\"missing command argument\");\n        }\n        if (command === \"join\") {\n            const id = args.channel;\n            if (!id) {\n                throw new Error(\"missing argument id\");\n            }\n            channels.join(id);\n            return;\n        }\n        if (command === \"leave\") {\n            channels.leave();\n            return;\n        }\n        if (command === \"get\") {\n            const id = channels.current();\n            return { id };\n        }\n        throw new Error(`unknown command ${command}`);\n    });\n\n    // agm interface is available for SW windows only\n    agm.invoke(\"T42.Channels.Announce\", { swId: windowId, instance: agm.instance.instance });\n}\n","import { Glue42 } from \"../../glue\";\r\nimport { default as CallbackRegistryFactory, CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\r\n\r\nconst CommandMethod = \"T42.Hotkeys.Command\";\r\nconst InvokeMethod = \"T42.Hotkeys.Invoke\";\r\n\r\nconst RegisterCommand = \"register\";\r\nconst UnregisterCommand = \"unregister\";\r\nconst UnregisterAllCommand = \"unregisterAll\";\r\n\r\nexport class HotkeysImpl implements Glue42.Hotkeys.API {\r\n\r\n    private registry: CallbackRegistry = CallbackRegistryFactory();\r\n    private firstHotkey = true;\r\n    private hotkeys = new Map<string, Glue42.Hotkeys.HotkeyInfo>();\r\n\r\n    constructor(private agm: Glue42.AGM.API) {\r\n    }\r\n\r\n    public async register(info: string | Glue42.Hotkeys.HotkeyInfo, callback: Glue42.Hotkeys.HotkeyCallback): Promise<void> {\r\n        if (typeof info === \"undefined\") {\r\n            throw new Error(\"Hotkey parameter missing\");\r\n        }\r\n\r\n        if (typeof info === \"string\") {\r\n            info = {\r\n                hotkey: info\r\n            };\r\n        } else {\r\n            if (!info.hotkey) {\r\n                throw new Error(\"Info's hotkey parameter missing\");\r\n            }\r\n\r\n            info = {\r\n                hotkey: info.hotkey,\r\n                description: info.description\r\n            };\r\n        }\r\n\r\n        const hkToLower = this.formatHotkey(info.hotkey);\r\n        if (this.hotkeys.has(hkToLower)) {\r\n            throw new Error(`Shortcut for ${hkToLower} already registered`);\r\n        }\r\n\r\n        // if very first a hotkey is registered by this application register invoke AGM method\r\n        if (this.firstHotkey) {\r\n            this.firstHotkey = false;\r\n            await this.registerInvokeAGMMethod();\r\n        }\r\n        // store the callback\r\n        this.registry.add(hkToLower, callback);\r\n\r\n        // invoke GD method\r\n        await this.agm.invoke(CommandMethod, { command: RegisterCommand, hotkey: hkToLower, description: info.description });\r\n\r\n        this.hotkeys.set(hkToLower, info);\r\n    }\r\n\r\n    public async unregister(hotkey: string): Promise<void> {\r\n        if (typeof hotkey === \"undefined\") {\r\n            throw new Error(\"hotkey parameter missing\");\r\n        }\r\n\r\n        if (typeof hotkey !== \"string\") {\r\n            throw new Error(\"hotkey parameter must be string\");\r\n        }\r\n\r\n        const hkToLower = this.formatHotkey(hotkey);\r\n        await this.agm.invoke(CommandMethod, { command: UnregisterCommand, hotkey: hkToLower });\r\n        this.hotkeys.delete(hkToLower);\r\n        this.registry.clearKey(hkToLower);\r\n    }\r\n\r\n    public async unregisterAll(): Promise<void> {\r\n        await this.agm.invoke(CommandMethod, { command: UnregisterAllCommand });\r\n        this.hotkeys.clear();\r\n        this.registry.clear();\r\n    }\r\n\r\n    /**\r\n     * Whether this application has registered accelerator.\r\n     * @param hotkey\r\n     */\r\n    public isRegistered(hotkey: string): boolean {\r\n        const hkToLower = this.formatHotkey(hotkey);\r\n        return this.hotkeys.has(hkToLower);\r\n    }\r\n\r\n    private registerInvokeAGMMethod(): void {\r\n        this.agm.register(InvokeMethod, (args: {\r\n            key: string;\r\n        }) => {\r\n            const hkToLower = args.key.toLowerCase();\r\n            const info = this.hotkeys.get(hkToLower);\r\n            this.registry.execute(hkToLower, info);\r\n        });\r\n    }\r\n\r\n    private formatHotkey(hotkey: string): string {\r\n        if (hotkey) {\r\n            return hotkey.replace(/\\s/g, \"\").toLowerCase();\r\n        }\r\n    }\r\n}\r\n","import { Glue42 } from \"../../glue\";\nimport generate from \"shortid\";\n\nconst T42_INTENTS_COMMAND = \"T42.Intents.Command\";\nconst T42_INTENTS_EVENTS = \"T42.Intents.Events\";\nlet agm: Glue42.AGM.API;\n\nenum IntentCommand {\n    Find = \"find\",\n    FindByContext = \"findByContext\",\n    GetAll = \"all\",\n    Raise = \"raise\",\n}\n\ninterface Handler {\n    unsubId: string;\n    callback: (context: object) => void;\n}\n\nconst intentListeners: { [intent: string]: Handler[] } = {};\n\nasync function raise(request: string | Glue42.Intents.IntentRequest): Promise<Glue42.Intents.IntentResult> {\n    if (typeof request === \"string\") {\n        request = { intent: request };\n    }\n\n    return invokeGlue<Glue42.Intents.IntentResult>(IntentCommand.Raise, request);\n}\n\nasync function find(intentFilter?: string | Glue42.Intents.IntentFilter): Promise<Glue42.Intents.Intent> {\n    if (typeof intentFilter === \"string\") {\n        intentFilter = { name: intentFilter };\n    }\n\n    // TODO: review filters\n    return invokeGlue<Glue42.Intents.Intent>(IntentCommand.Find, { intentFilter });\n}\n\nasync function findByContext(contextType: string): Promise<Glue42.Intents.Intent[]> {\n    if (!contextType || typeof contextType !== \"string\") {\n        return Promise.reject(Error(`findByContext called with invalid contextType: ${contextType}`));\n    }\n\n    return invokeGlue<Glue42.Intents.Intent[]>(IntentCommand.FindByContext, { contextType });\n}\n\nasync function all(): Promise<Glue42.Intents.Intent[]> {\n    return invokeGlue<Glue42.Intents.Intent[]>(IntentCommand.GetAll);\n}\n\nfunction addIntentListener(intent: string, handler: (context: object) => void): () => void {\n    if (!intentListeners[intent]) {\n        intentListeners[intent] = [];\n    }\n\n    const unsubId: string = generate();\n    intentListeners[intent].push({ unsubId, callback: handler });\n\n    return () => {\n        intentListeners[intent] = intentListeners[intent]\n            .filter((h) => h.unsubId !== unsubId);\n    };\n}\n\nasync function invokeGlue<T>(command: string, options?: object): Promise<T> {\n    // Consider targetting only GD\n    const invocationResult = await agm.invoke(T42_INTENTS_COMMAND, { options: { ...options }, command });\n    return invocationResult.returned.result;\n}\n\nexport function factory(agmAPI: Glue42.AGM.API): Glue42.Intents.API & { ready: () => Promise<void>; } {\n    agm = agmAPI;\n\n    agm.register(T42_INTENTS_EVENTS, handleEvent);\n\n    return {\n        raise,\n        find,\n        findByContext,\n        all,\n        addIntentListener,\n        ready: () => Promise.resolve()\n    };\n}\n\nenum IntentEvents {\n    IntentListenerRaised = \"intentListenerRaised\"\n}\n\ninterface IntentEventData {\n    type: IntentEvents;\n    intent: string;\n\n    [prop: string]: any;\n}\n\nfunction handleEvent(args: IntentEventData) {\n    const { type, intent, context } = args;\n\n    switch (type) {\n        case IntentEvents.IntentListenerRaised:\n            const callbacks = intentListeners[intent]?.map((handler) => handler.callback);\n            // Todo: What should happen when there is no context ?\n            if (callbacks && callbacks.length > 0) {\n                callbacks.forEach((cb) => cb(context));\n            }\n\n    }\n}\n","import { Glue42 } from \"../glue\";\nimport { ActivitiesLibConfigObject, LibConfigObject, InternalConfig } from \"./types\";\n\ntype MergeFunction = (userConfiguration: object, hardDefaults?: object) => { config: Glue42.Config, defaults: Glue42.Config };\n\ninterface InputModeObject {\n    mode?: boolean | string;\n    logger?: Glue42.LoggerConfig;\n}\n\nexport default (options: Glue42.Config): InternalConfig => {\n\n    // Possible options per lib (this is InputLibConfig type)\n    // * false - library is disabled (e.g. config.appManager = false)\n    // * true - library is enabled in running in default mode (e.g config.appManager = true).\n    //          Exception is if default mode is false - in that case it runs default true mode.\n    // * string - start in some mode (e.g. config.appManager = \"full\")\n    // * object - allows further customization (e.g config.appManager = {mode: \"full\", someSetting: 42})\n    //\n    // Some libs support different running modes, some do not.\n    //\n    // Currently defaults are:\n    // appManager: disabled\n    // layouts: enabled in 'slim' mode\n    // activities: enabled in 'trackMyTypeAndInitiatedFromMe' mode\n    // windows: enabled (does not support modes)\n    //\n    // InputLibConfig is transformed to LibConfigObject\n\n    type InputLibConfig = boolean | string | InputModeObject;\n\n    /**\n     * Transforms InputLibConfig (the config as specified from the user)\n     * to LibConfigObject(internal library configuration)\n     */\n    function getLibConfig<T extends LibConfigObject>(value: InputLibConfig, defaultMode: boolean | string, trueMode?: boolean | string): T {\n\n        // if value is false return undefined\n        if (typeof value === \"boolean\" && !value) {\n            return undefined;\n        }\n\n        // find the mode of the library\n        const mode = getModeAsString(value, defaultMode, trueMode);\n\n        // if object we will replace the mode because appManager = {mode: true, setting: 42}\n        // should be turned into appManager = {mode: 'slim', setting: 42}\n        if (typeof value === \"object\") {\n            value.mode = mode;\n            return value as T;\n        }\n\n        return {\n            mode,\n        } as T;\n    }\n\n    /**\n     * Finds the mode based for a given library\n     * 1. If object we call recursively using object.mode for value\n     * 1. If the user hasn't specified anything we use the hard coded defaults\n     * 3. If the value is false or it got defaulted to false, we return undefined\n     * 4. If the value is true we return trueMode or defaultMode (if trueMode is undefined)\n     */\n    function getModeAsString(value: InputLibConfig, defaultMode: boolean | string, trueMode?: boolean | string): string {\n\n        if (typeof value === \"object\") {\n            // 1. if object\n            return getModeAsString(value.mode, defaultMode, trueMode) + \"\";\n        } else if (typeof value === \"undefined\") {\n            // 2. if the user does not pass anything\n            if (typeof defaultMode === \"boolean\" && !defaultMode) {\n                // 3. if gets defaulted to false, the library should be off\n                return undefined;\n            } else {\n                return defaultMode + \"\";\n            }\n        } else if (typeof value === \"boolean\") {\n            // 4. if the user passes true, use trueMode or defaultMode\n            if (value) {\n                // if the user passes true, use trueMode or defaultMode\n                return ((trueMode === undefined) ? defaultMode : trueMode) + \"\";\n            } else {\n                // 3. if the user passes false, the library should be off\n                return undefined;\n            }\n        }\n\n        return value + \"\";\n    }\n\n    const appDefaultMode = false;\n    const appDefaultTrueMode = \"startOnly\";\n\n    const activitiesDefaultMode = \"trackMyTypeAndInitiatedFromMe\";\n\n    const layoutsDefaultMode = \"slim\";\n\n    return {\n        layouts: getLibConfig<LibConfigObject>(options.layouts, layoutsDefaultMode),\n        activities: getLibConfig<ActivitiesLibConfigObject>(options.activities, activitiesDefaultMode),\n        appManager: getLibConfig<LibConfigObject>(options.appManager, appDefaultMode, appDefaultTrueMode),\n        windows: getLibConfig<LibConfigObject>(options.windows, true),\n        channels: getLibConfig<LibConfigObject>(options.channels || false, false),\n        displays: getLibConfig<LibConfigObject>(options.displays, true),\n    };\n};\n","import CoreFactory, { Glue42Core } from \"@glue42/core\";\n\nimport { ActivityModule } from \"./activity/main\";\nimport AppManagerFactory from \"./app-manager/main\";\nimport WindowsFactory from \"./windows/main\";\nimport LayoutsFactory from \"./layouts/main\";\nimport DisplayManager from \"./displays/displayManager\";\nimport { factory as channels } from \"./channels/main\";\nimport { factory as hotkeys } from \"./hotkeys/main\";\n\nimport { Glue42 } from \"../glue\";\nimport { version } from \"../package.json\";\nimport prepareConfig from \"./config\";\nimport { LibConfigObject } from \"./types\";\nimport { ActivityMode } from \"./activity/activityConfig\";\nimport Utils from \"./utils\";\nimport { factory as intents } from \"./intents/main\";\n\nconst factory = (options: Glue42.Config): Promise<Glue42.Glue> => {\n    const gdMajorVersion = Utils.getGDMajorVersion();\n    // get config object\n    // basically selecting some properties (and defaulting them)\n    // it's used to extract things like layouts, appManager, activities etc things\n    // that glueCore itself doesn't know about\n    options = options || {};\n    const glueConfig = prepareConfig(options);\n    options.gateway = options.gateway || {};\n\n    // Init the GLUE namespace\n    const hc = typeof window !== \"undefined\" && window.htmlContainer;\n\n    let _appManager: any;\n    let _activity: any;\n    let _windows: any;\n    let _displays: any;\n\n    // dependency graph:\n    //   windows: agm, appManager (via getter)\n    //   activities: contexts, agm, logger, windows, appManager (via getter)\n    //   appManager: agm, windows, logger, activities\n    //   layouts: agm, appManager, logger\n    function createWindows(core: Glue42Core.GlueCore) {\n        if (glueConfig.windows) {\n\n            const windowsLogger = getLibLogger(\"windows\", core.logger, glueConfig.windows);\n\n            _windows = WindowsFactory(\n                core.agm,\n                windowsLogger,\n                () => {\n                    return _appManager;\n                },\n                gdMajorVersion);\n            debugLog(_windows);\n            return _windows;\n        }\n    }\n\n    function createActivities(core: Glue42Core.GlueCore) {\n        if (glueConfig.activities) {\n            if ((gdMajorVersion === 2) ||\n                (ActivityModule.checkIsUsingGW3Implementation &&\n                    ActivityModule.checkIsUsingGW3Implementation(core.connection))) {\n\n                const activityLogger = getLibLogger(\"activity\", core.logger, glueConfig.activities);\n\n                _activity = new ActivityModule({\n                    connection: core.connection,\n                    contexts: core.contexts,\n                    agm: core.agm,\n                    logger: activityLogger,\n                    logLevel: \"info\",\n                    disableAutoAnnounce: false,\n                    disposeRequestHandling: \"ignore\",\n                    announcementInfo: null,\n                    windows: _windows,\n                    appManagerGetter: () => {\n                        return _appManager;\n                    },\n                    mode: glueConfig.activities.mode as ActivityMode,\n                    typesToTrack: glueConfig.activities.typesToTrack,\n                    activityId: typeof window !== \"undefined\" && window.glue42gd && window.glue42gd.activityInfo && window.glue42gd.activityInfo.activityId,\n                    gdMajorVersion\n                }).api;\n                debugLog(_activity);\n                return _activity;\n            }\n        }\n    }\n\n    function createAppManager(core: Glue42Core.GlueCore) {\n        if (!glueConfig.appManager) {\n            return;\n        }\n\n        const logger = getLibLogger(\"appManager\", core.logger, glueConfig.appManager);\n\n        // AppManager v3\n        _appManager = AppManagerFactory({\n            agm: core.agm,\n            windows: _windows,\n            logger,\n            activities: _activity,\n            mode: glueConfig.appManager.mode as Glue42.AppManager.Mode,\n            gdMajorVersion\n        });\n        debugLog(_appManager);\n        return _appManager;\n    }\n\n    function createLayouts(core: Glue42Core.GlueCore) {\n        if (!glueConfig.layouts) {\n            return;\n        }\n\n        const logger = getLibLogger(\"layouts\", core.logger, glueConfig.layouts);\n        const lay = LayoutsFactory({\n            agm: core.agm,\n            appManager: _appManager,\n            activityGetter: () => _activity,\n            logger,\n            mode: glueConfig.layouts.mode as Glue42.Layouts.Mode,\n            gdMajorVersion\n        });\n        debugLog(lay);\n        return lay;\n    }\n\n    function createChannels(core: Glue42Core.GlueCore) {\n        if (!glueConfig.channels) {\n            return;\n        }\n\n        if (!core.contexts) {\n            // TODO log - notify the user that he can not use channels without context\n            return;\n        }\n\n        // Logger\n        const channelsAPI = channels(core.contexts, core.agm);\n\n        debugLog(channelsAPI);\n        return channelsAPI;\n    }\n\n    function createHotkeys(core: Glue42Core.GlueCore) {\n        const hotkeysAPI = hotkeys(core.agm);\n\n        debugLog(hotkeysAPI);\n        return hotkeysAPI;\n    }\n\n    function createIntents(core: Glue42Core.GlueCore) {\n        const intentsAPI = intents(core.agm);\n\n        debugLog(intentsAPI);\n        return intentsAPI;\n    }\n\n    function createDisplaysApi(core: Glue42Core.GlueCore) {\n        if (glueConfig.displays) {\n            const displaysLogger = getLibLogger(\"displays\", core.logger, glueConfig.displays);\n\n            _displays = new DisplayManager(core.agm, displaysLogger);\n            debugLog(_displays);\n            return _displays;\n        }\n    }\n\n    function getLibLogger(loggerName: string, logger: Glue42Core.Logger.API, config: LibConfigObject) {\n        const newLogger = logger.subLogger(loggerName);\n\n        if (config && config.logger) {\n            const loggerConfig = config.logger;\n            if (loggerConfig.console) {\n                newLogger.consoleLevel(loggerConfig.console);\n            }\n            if (loggerConfig.publish) {\n                newLogger.publishLevel(loggerConfig.publish);\n            }\n            if (loggerConfig.metrics) {\n                newLogger.metricsLevel(loggerConfig.metrics);\n            }\n        }\n\n        return newLogger;\n    }\n\n    const ext: Glue42Core.Extension = {\n        // define extra libraries for glue-core to raise\n        libs: [\n            { name: \"windows\", create: createWindows },\n            { name: \"activities\", create: createActivities },\n            { name: \"appManager\", create: createAppManager },\n            { name: \"layouts\", create: createLayouts },\n            { name: \"channels\", create: createChannels },\n            { name: \"hotkeys\", create: createHotkeys },\n            { name: \"displays\", create: createDisplaysApi },\n            { name: \"intents\", create: createIntents },\n        ],\n\n        version,\n\n        enrichGlue: (glue: Glue42Core.GlueCore) => {\n            // put some data to config\n            glue.config.activities = glueConfig.activities;\n            glue.config.windows = glueConfig.windows;\n            glue.config.appManager = glueConfig.appManager;\n            glue.config.layouts = glueConfig.layouts;\n            glue.config.channels = glueConfig.channels;\n            glue.config.displays = glueConfig.displays;\n        },\n    };\n\n    const currentLog: any[] = [];\n    if (typeof window !== \"undefined\") {\n        if (!(window as any).glueFactoryLog) {\n            (window as any).glueFactoryLog = [];\n        }\n        (window as any).glueFactoryLog.push(currentLog);\n    }\n\n    function debugLog(entry: any) {\n        currentLog.push(entry);\n    }\n\n    return CoreFactory(options, ext);\n};\n\nfactory.coreVersion = (CoreFactory as any).version;\nfactory.version = version;\n\nexport default factory;\n","import { Glue42 } from \"../../glue\";\nimport { HotkeysImpl } from \"./hotkeys\";\n\nexport function factory(agm: Glue42.AGM.API): Glue42.Hotkeys.API & { ready: () => Promise<void>; } {\n    const hotkeys = new HotkeysImpl(agm);\n\n    return {\n        register: hotkeys.register.bind(hotkeys),\n        unregister: hotkeys.unregister.bind(hotkeys),\n        unregisterAll: hotkeys.unregisterAll.bind(hotkeys),\n        isRegistered: hotkeys.isRegistered.bind(hotkeys),\n\n        ready: () => Promise.resolve()\n    };\n}\n","import CreateGlue from \"./glue\";\n\nlet whatToExpose = CreateGlue;\nlet shouldSetToWindow = true;\n\nif (typeof window !== \"undefined\") {\n    // if glue42gd (running in GD3) and autoInjected\n    const glue42gd = (window as any).glue42gd;\n    if (glue42gd && glue42gd.autoInjected) {\n        whatToExpose = (window as any).Glue;\n        // no need to set to window, it's already there\n        shouldSetToWindow = false;\n    }\n\n    if (shouldSetToWindow) {\n        (window as any).Glue = whatToExpose;\n    }\n\n    // remove GlueCore from the window object (injected by Glue-core)\n    delete (window as any).GlueCore;\n}\n// add default library for ES6 modules\n(whatToExpose as any).default = whatToExpose;\n\nexport default whatToExpose;\n"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__assign","assign","t","s","i","n","arguments","length","prototype","call","apply","this","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__spreadArrays","il","r","k","a","j","jl","MetricTypes","getMetricTypeByValue","metric","constructor","Date","type","getTypeByValue","serializeMetric","serializedMetrics","values","keys","reduce","memo","key","innerType","composite","defineNestedComposite","description","context","name","normalizeMetricName","path","join","getMetricValueByType","now","publishNestedComposite","getTime","Boolean","toString","composeMsgForRootStateMetric","system","merged","flatten","arr","flat","toFlatten","concat","isArray","root","getAggregateState","highestState","sort","state","msg","forEach","m","idx","slice","aggregateDescription","metricToMessage","definition","getMetricDefinition","period","resolution","conflation","_definition","getTypeFromValue","Composite","val","_valueTypes","id","instance","repo","serializeValue","_metric","indexOf","valueOf","CompositeValue","InnerMetricName","valueType","getValueType","undefined","gw1","connection","config","heartbeatTimer","Error","_connection","heartbeatInterval","send","message","sendFull","subSystems","sendFullSystem","createSystem","sub","metrics","createMetric","heartbeat","publishingInterval","parent","updateSystem","updateMetric","init","on","instanceInfo","Instance","disconnected","clearInterval","window","htmlContainer","setInterval","Helpers","transport","objectMetric","_transport","_value","_path","me","update","newValue","protocol","separator","_name","_description","_repo","_parent","_buildPath","shadowedSystem","_state","identity","_subSystems","_metrics","_getOrCreateMetric","expectedType","metricDefinition","def","_unionToMetricDef","matching","filter","shadowedMetric","existing","subSystem","nameSystem","descriptionSystem","match","_system","getState","setState","stateDescription","stringMetric","metricDef","statisticsMetric","rateMetric","timestampMetric","timespanMetric","start","stop","addressMetric","countMetric","incrementBy","num","increment","decrement","decrementBy","numberMetric","aggState","shadowedSubSystem","settings","options","logger","clickStream","service","_root","rootSystem","useClickStream","navigator","userAgent","document","clickStream_1","documentClickHandler","target","timestamp","className","tagName","toLowerCase","href","title","page","location","addEventListener","attachEvent","urlMetric","appNameMetric","startUrl","glue42gd","appName","_initSystemMetrics","repository","protocolVersion","joinPromise","session","replayRepo","replaySystem","ss","createMetricsMsg","Description","Value","metricClone","publishMetricsMsg","resolveReadyPromise","domain","onJoined","reconnect","defineRootMetricsMsg","shadowedUpdateMetric","stateObj","rootMetric","peer_id","peerId","gw3","createRegistry","errorHandling","_userErrorHandler","callbacks","_handleError","exceptionArtifact","errParam","stack","console","error","add","callback","callbacksForKey","allForKey","acc","element","index","execute","argumentsArr","_i","results","err","clear","clearKey","default","lib","ConnectionImpl","messageHandlers","ids","registry","_connected","isTrace","_settings","canPublish","_protocol","onConnectedChanged","handleConnectionChanged","bind","onMessage","handleTransportMessage","product","isObjectBasedTransport","createObjectMessage","trace","JSON","stringify","sendObject","strMessage","createStringMessage","messageHandler","off","info","defineProperty","get","enumerable","configurable","connected","ws","http","login","authRequest","_a","open","logout","close","loggedIn","toAPI","that","distributeMessage","_this","handlers","handlerId","handler","msgObj","processStringMessage","processObjectMessage","msgType","seed","alphabet","previousSeed","shuffled","randomFromSeed","nextValue","_seed_","ORIGINAL","reset","setCharacters","_alphabet_","unique","split","item","ind","lastIndexOf","getShuffled","characterIndex","sourceArray","targetArray","Math","floor","splice","shuffle","alphabet_1","characters","lookup","crypto","msCrypto","randomByteBrowser","getRandomValues","random","dest","Uint8Array","encode_1","number","loopCounter","str","pow","decode_1","version","substr","worker","isValid","len","lib$1","fn","module","exports","createCommonjsModule","counter","previousSeconds","clusterWorkerId","generate","seconds","seedValue","workerId","newCharacters","decode","shortid","domainSession","successMessages","errorMessages","_latestOptions","isJoined","tryReconnecting","_connectionOn","warn","debug","handleSuccessMessage","handleErrorMessage","sm","requestsMap","destination","wasReconnect","handleJoined","catch","requestId","request_id","entry","success","getNextRequestId","tag","skipPeerId","successMsg","_tag","errorMsg","leave","onLeft","sendFireAndForget","HCProtocol","messageObj","parse","application","Utils","getGDMajorVersion","glueDesktop","ver","Number","isNaN","isNode","_isNode","global","process","PromiseWrapper","resolved","promise","delay","time","setTimeout","WebSocketConstructor","require","WebSocket","WS","_running","_registry","waitForSocketConnection","maxRetries","retryInterval","pw","initiateSocket","onerror","reason","seen_1","WeakSet","has","notifyStatusChanged","onclose","onopen","onmessage","data","failed","retriesLeft","reconnectInterval","initiated","readyState","retries","status","MessageReplayerImpl","specs","specsNames","messages","subs","subsRefCount","specs_1","spec","name_1","_loop_1","refCount","this_1","processMessage","_b","_c","types","isDone","name_2","drain","GW3ConnectionImpl","_super","replaySpecs","replayer","__","create","__extends","gw3Protocol","superAPI","token","resolvedIdentity","availableDomains","gatewayToken","authToken","isLoggedIn","GW1Protocol","sendOptions","reconnectAttempts","HCTransport","connectionId","metricsFacade","loggingFacade","Inproc","gw","connect","_client","client","gatewayConnection","gdVersion","force","facade","subLogger","gw3Connection","gw3Port","globalDomain","pingTimer","loginConfig","datePrefixLen","dateMinLen","datePrefixFirstChar","shouldTryLogin","initialLogin","initialLoginAttempts","sessions","setLoggedIn","handleDisconnected","tokenRefreshPromise","getGWToken","ping","substring","milliseconds","parseInt","ex","oldToJson","toJSON","authentication","helloMsg","welcomeMsg","err_1","username","password","method","flowName","provider","flowCallback","sessionId","secret","Buffer","from","resolved_identity","available_domains","access_token","clearTimeout","domainName","domainLogger","res","LogLevel","level","restriction","order","Logger","metricSystem","logFn","_subloggers","_loggerFullName","metricsLevel","includeTimeAndLevel","existingSub","publishLevel","_publishLevel","consoleLevel","_consoleLevel","metricsSystem","_metricLevel","_metricSystem","log","publishMessage","toAPIObject","loggerName","prefix","date","getHours","getMinutes","getSeconds","getMilliseconds","toPrint","isInGd3","GetConnection","Interop","methods","InteropMethodName","invoke","Level","Message","Time","InstanceWrapper","wrapped","getMethods","getStreams","refreshWrappedObject","refresh","unwrap","user","applicationName","pid","machine","environment","region","windowId","isLocal","api","API","methodsForInstance","supportsStreaming","promisify","successCallback","errorCallback","NativeAGM","helpers","agmFacade","register","methodInfoAsObject","stringToObject","validateMethodInfo","arg","caller","methodResult","registerAsync","args","tracker","successArgs","unregister","argumentObj","targetArgToObject","invoke2","successProxy","errorProxy","parsed","createStream","methodDefinition","getServers","subscriptionRequestHandler","subscriptionAddedHandler","subscriptionRemovedHandler","createStream2","stream","subscribe","parameters","subscribe2","servers","jsonResult","agmParse","map","server","transformServerObject","transformMethodObject","methodAdded","subscribed","methodRemoved","serverAdded","serverRemoved","serverMethodAdded","serverMethodRemoved","displayName","display_name","objectTypes","object_types","Helpers$1","dateTimeIdentifier","jsonValueDatePrefix","lenOfIdentifier","unixTimestampMs","parseFloat","serverFilter","convertInstanceToRegex","instanceConverted","propValue","RegExp","source","methodInfo","param","stringPropName","obj","createConfig","configuration","metricsIdentity","metricsConfig","convertInfoToInstance","ApplicationName","Environment","MachineName","ProcessId","Region","ServiceName","UserName","started","ProcessStartTime","isStreamingFlagSet","flags","convertInstance","InvokeStatus","ServerStreaming","isStreamMsg","EventStreamAction","pushData","streamingMethod","branches","protocolState","branchKeyToStreamIdMap","streamIdList","br","streamId","sendResult","EventStreamSubject","globalEventStreamSubject","MethodName","Method","Name","MethodRequestSubject","ResultContextJson","Server","StreamId","closeAllSubscriptions","branchKey","streamList","Status","getBranchList","getUniqueBranchNames","getSubscriptionList","subscriptions","onSubAdded","handlerFunc","subAddedHandler","onSubRemoved","subRemovedHandler","onSubRequest","requestHandler","generateNewStreamId","streamingMethodName","rejectRequest","requestContext","MethodResponseSubject","MethodVersion","Version","ResultMessage","pushDataToSingle","subscription","privateEventStreamSubject","closeSingleSubscription","closeIndividualSubscription","acceptRequestOnBranch","branch","getStreamId","InvocationId","Context","processSubscriberMsg","clientWishesToSubscribe","clientWishesToUnsubscribe","clientAcknowledgesItDidSubscribe","clientPerSubHeartbeat","ArgumentsJson","Client","getBranchKey","methodResponseSubject","needle","needleBranch","sendKickMessage","subItem","initialLength","ResponseContextJson","keysWithDuplicates","seen","bKey","ServerProtocol","serverRepository","invocationMessagesMap","reqCounter","streaming","handleMethodInvocationMessage","stopTimers","sendHeartbeat","presenceTimer","sendPresence","repoMethod","reqSubj","nextRequestSubject","createNewMethodMessage","announceNewMethod","streamConverted","onInvoked","methodInvocationResult","executedMethod","invocationId","resultMessage","constructHeartbeat","PublishingInterval","constructPresence","getList","MethodDefinitions","subject","invocationArgs","methodIdentifier","InputSignature","accepts","ResultSignature","returns","DisplayName","ObjectTypeRestrictions","Flags","ClientStreaming","sendRequest","nextResponseSubject","subscriptionsList","params","targetServers","subscriptionId","pendingSub","registerSubscription","methodResponseTimeout","responseSubject","requestSubject","trackedServers","streamSubjects","private","methodRequestSubject","ExecutionServer","Timeout","getInfoForUser","ERR_MSG_SUB_FAILED","called_with","processPublisherMsg","serverIsKickingASubscriber","serverAcknowledgesGoodSubscription","serverHasPushedSomeDataIntoTheStream","timeout","onData","onClosed","queued","closers","timeoutId","closersCount","closingServer_1","requestArguments","deletionsList","isRejecting","isKicking","callArgs","acceptingServer","isFirstResponse","privateStreamSubject","generatePrivateStreamSubject","confirmatoryRequest","dataCallback","dataItem","closedCallback","onFailed","closeSubscription","serverInstance","isPrivateData","trackedServersFound","ls","receivedStreamData_1","onDataHandlers","queuedData","subId","methodName","rejectAfter","ms","callProtocolSubscribe","waitTimeoutMs","methodDef","method_response_timeout","wait_for_method_timeout","delayTillNow","currentServers","getServerMethodsByFilterAndTarget","retry_1","streamInfo","methodFilter","filterCopy","serverMethodMap","getMethodsForInstance","onMethodAdded","onMethodRemoved","onServerAdded","onServerRemoved","onServerMethodAdded","onServerMethodRemoved","additionalOptions","serversMethodMap","errorObj","invokePromises","invocationMessages","methodResponseTimeoutMs","tryToAwaitForMethods","executed_by","returned","serversMethodPair","invId","race","all","getInvocationResultObj","every","getInvokePromise","invocationResults","calledWith","all_return_values","invokeMessage","Success","allValues","currentValue","all_errors","allErrors","currError","invResult","interval","filterByTarget","matches","myMatches","serverMethodPair","instanceMatch","localMachine","find","instanceFilter","instanceDefinition","containsProps","methodMatch","prop","isMatch","filterValue","repoMethodValue","filterObjTypes","repoObjectTypes","objTypeToContains","object","objType","repoObjType","isFullfiled","containsAllFromFilter","String","matchingServers","resultMethodsObject","methodKey","prev","current","matchingMethods","getServerMethodsById","ClientProtocol","respCounter","timers","_pendingCallbacks","listenForEvents","onInvocationResult","stuff","executedBy","processInvocationResult","invocationInfo","drainSubscriptions","createServerInfo","createMethod","createServerId","serverInfo","processServerPresence","presence","isPresence","serverId","addServer","scheduleTimeout","getServerById","removeServerById","updateServerMethods","duration","timer","newMethods","oldMethods","newMethodsReduced","nm","createMethodId","removeServerMethod","addServerMethod","handleInvokeResultMessage","ServerStreaming$1","ERR_URI_SUBSCRIPTION_FAILED","nextStreamId","handleAddInterest","handleRemoveInterest","subscriptionsMap","subscription_id","subscribeMsg","stream_id","sendSubscriptionFailed","postMessage","dropSubscriptionMessage","closeMultipleSubscriptions","subscriptionsToClose","drop","allSubscriptions","onSubscriptionLifetimeEvent","getById","method_id","eventName","getNextStreamId","caller_id","arguments_kv","errorMessage","reason_uri","ServerProtocol$1","clientRepository","handleInvokeMessage","isStreaming","registerMsg","repoId","input_signature","result_signature","restrictions","methodId","invocation_id","callerId","UserSubscription","subscriptionData","pair","onConnected","setNewSubscription","newSub","ClientStreaming$1","subscriptionIdToLocalKeyMap","nextSubLocalKey","handleErrorSubscribing","errorResponse","subLocalKey","callOnClosedHandlers","handleSubscribed","reconnect_1","subsObject","handleEventData","oob","sendingServerId","receivedStreamData","handleSubscriptionCancelled","expectedNewLength","getNextSubscriptionLocalKey","server_id","ERR_MSG_SUB_FAILED$1","_d","subsInfo","localKey","closingServerId","closingServer","ClientProtocol$1","handlePeerAdded","handlePeerRemoved","handleMethodsAddedMessage","handleMethodsRemovedMessage","handleResultMessage","handleInvocationError","newPeerId","new_peer_id","remoteId","meta","local","removedPeerId","removed_id","methodIdList","gW3ProtocolFactory","libConfig","getAGM","readyPromise","registeredMethods","registeredMethods_1","streamCallbacks","theFunction","userCallback","userCallbackAsync","handleReconnect","ServerSubscription","Request","accept","acceptOnBranch","ServerStreaming$2","rc","rm","handleSubRequest","handleSubAdded","handleSubRemoved","request","ServerBranch","ServerStream","_repoMethod","_server","bList","def2","updateRepoMethod","invocations","currentlyUnregistering","onMethodInvoked","streamDef","existingStream","streamMethodDefinition","some","serverMethod","streamUserObject","remove","wrappedCallbackFunction","resultCallback","resultValue","e_1","registerCore","wrappedCallback","resultCalled_1","forStream","methodToBeRemoved","unregisterWithPredicate","removeMethodsOrStreams","filterPredicate","methodsOrStreamsToRemove","methodsToRemove","methodUnregPromises","addAsCurrentlyUnregistering","propNameToRemove","reducedObj","currProp","unregisterInProgress","filterProps","methodDefProps","Set","methodDefValue","firstObjType","secondObjTypes_1","methodToExecute","unStrException","_result","AGMImpl","updateInstance","newInstance","ClientRepository","methodsCount","serverEntry","methodEntity","createUserMethodInfo","getServersByMethod","allMethods","allServers","unsubscribeFunc","serversWithMethodsToReplay","returnUnsubWithDelayedReplay","methodsToReplay","unsubCalled","createUserServerInfo","collectionToReplay","ServerRepository","nextId","agm","forceGW","jsAgmFacade","cfgAsString","successInit","nativeAGM","create_stream","methods_for_instance","method_added","method_removed","server_added","server_removed","server_method_added","server_method_removed","initAsync","nativeAgm","protocolPromise","agmImpl","unsubscribe","gW1ProtocolFactory","removeEmptyValues","cleaned","Protocol","publish","topic","routingKey","routing_key","target_identity","response","watchOnEvent","obj1","obj2","keysObj1","allMatch","bus","ProtocolFactory","ContextMessageReplaySpec","prepareConfig","ext","hc","globalScope","nodeStartingContext","uid","startingContextString","env","_GD_STARTING_CONTEXT_","defaultProtocol","defaultWs","masterConfig","GLUE_CONFIG","dynamicDefaults","GLUE_DEFAULT_CONFIG","hardDefaults","containerName","browserWindowName","applicationConfig","agm_application","documentTitle","getIdentity","machineName","getMetricsDefaults","gateway","gwURL","auth","gwToken","getDefaultAuth","getConfigProp","disableAutoAppSystem","getApplication","prop1","prop2","masterConfigProp1","userProp1","dynamicDefaultsProp1","hardDefaultsProp1","connectionConfig","contextConfig","what","gwConfig","inproc","CLOSING","instanceId","uniqueAppName","appInstanceId","getGateway","contexts","getContexts","channels","contextsEnabled","channelsConfig","getChannels","getLogger","libs","customLogger","endTime","startTime","GW3ContextData","contextId","isAnnounced","activityId","updateCallbacks","hasCallbacks","applyContextDelta","delta","deepClone","added_1","added","updated_1","updated","removed","mergeObjectsProperties","hash","WeakMap","set","withWhat","right","left","deepEqual","x","GW3Bridge","_contextNameToData","_gw3Subscriptions","_nextCallbackSubscriptionNumber","_contextNameToId","_contextIdToName","_logger","_gw3Session","subscribeToContextCreatedMessages","subscribeToContextUpdatedMessages","subscribeToContextDestroyedMessages","handleContextCreatedMessage","handleContextUpdatedMessage","handleContextDestroyedMessage","dispose","contextName","createContext","lifetime","createContextMsg","context_id","contextData","sentExplicitSubscription","invokeUpdateCallbacks","currentContext","calculatedDelta","calculateContextDelta","gwResponse","handleUpdated","updaterId","resolveImmediately","un","thisCallbackSubscriptionNumber","hadCallbacks","joinedActivity","sendSubscribe","subscriptionKey","sendUnsubscribe","extraData","oldContext","createdMessageTypes_1","createdMessageType","contextCreatedMsg","activity_id","updatedMessageTypes_1","updatedMessageType","contextUpdatedMsg","justSeen","context_snapshot","updater_id","updateCallbackIndex","updateCallback","destroyedMessageTypes_1","destroyedMessageType","destroyedMsg","to","HCBridge","_facade","sharedContextFacade","allObj","snapshot","ContextsModule","gdMajorVersion","_bridge","checkName","ready","GlueCore","userConfig","preloadPromise","gdPreloadPromise","_interop","_rootMetrics","_contexts","_bus","glueInitTimer","internalConfig","registerLib","inner","initStartTime","initTime","initEndTime","setupMetrics","initTimer","_featureMetric_1","reportingSystem_1","def_1","featureMetric","action","payload","logEvents","setupContexts","hasActivities","activities","setupExternalLibs","externalLibs","createCallback","setupExternalLib","setupBus","busSettings","busLib","loggerConfig","getConnection","rootLoggerName","identityStr","mainLogger","authPromise","authConfig","agmConfig","agmLib","libsReadyPromises","glueVersion","glue","interop","feedback","feedbackInfo","performance","glueVer","glueConfig","browser","timing","memory","initTimes","extOptions","enrichGlue","perfDataNeeded","updatePerfData","perfDataDelay","_id","ActivityEntity","other","_updateCore","isString","isUndefined","isUndefinedOrNull","isFunction","ifNotUndefined","doWithIt","ownerWindow","helperWindows","_ownerWindow","_helperWindows","ActivityType","_manager","initiate","appByWindowTypeGetter","_appByWindowTypeGetter","WindowType","getWindows","activity","isIndependent","createWindow","entitiy","entity","eventType","newStatus","oldStatus","EntityEventType","StatusChange","EntityEventContext","ActivityContextChange","ActivityState","_activity","ActivityAGM","_ensureHasAgm","AGM","util.isUndefinedOrNull","windows","w","methodNames","methodsForWindow","currentWindowMethod","activityServers","util.isString","potentialTargets","util.isArray","firstElem","_isInstance","_isActivityWindow","win","manager","ownerActivityId","_ownerActivityId","AttachedActivityDescriptor","ownerId","windowIds","frameColor","descriptor","detachActivities","nextTick","cb","nodeify","util.isFunction","resp","actType","_actType","_status","_context","_ownerId","_agm","Activity","getActivityType","addWindowToActivity","windowType","windowTypes","createStackedWindows","leaveWindowFromActivity","setActivityContext","updateActivityContext","subscribeActivityEvents","ns","os","subscribeWindowEvents","subscribeActivityContextChanged","act","stopActivity","clone","attachActivities","subscribeActivitiesAttached","newActId","oldActId","subscribeActivitiesDetached","newAct","originalActivity","allStates","_attached","color","callbacksToWait","underlyingWindow","setFrameColor","GlueLogger","_glueLogger","owner","GetTypeName","Trace","_getMessage","Debug","Info","Warn","exec","windowGetter","hcWindowId","Get","_type","_activityId","_instance","_isIndependent","_windowGetter","_hcWindowId","ActivityWindow","getWindowBounds","getWindowType","util.isUndefined","getActivityById","isVisible","setWindowVisibility","focus","activateWindow","bounds","setWindowBounds","closeWindow","_subscribeForActivityWindowEvent","ActivityWindowJoinedActivity","ActivityWindowLeftActivity","event","ActivityStatus","_config","_sessionJoinedPromise","_sessionJoinedPromiseResolve","_activityJoinedPromise","_activityJoinedPromiseResolve","glue42gd_1","addRefreshHandler","setGWToken","nameToWindowType","windowName","owner_type","helper_types","peer_type","owner_id","activity_type","EntityEvent","ActivityStatusChangeEventContext","forwardActivityTypeMessagesToStatusEventHandlers","handleActivityCreatedMessage","handleActivityDestroyedMessage","forwardActivityMessagesToStatusEventHandlers","forwardActivityCreatedAndJoinedActivityToActivityWindowEventHandlers","forwardPeerFactoryMessagesToStatusEventHandlers","forwardPeerFactoryMessagesToPeerFactoryRequests","handlePeerFactoriesAdded","handlePeerFactoriesRemoved","forwardActivityWindowMessagesToEventHandlers","disposeRequestHandling","exit","mode","activity_types","typesToTrack","_activityTypeStatusChangeCallbacks","activityTypeName","toActivityPeerConfig","windowDefinition","activityType","activityTypeGwMessageEntityToActivityType","invokeCallbacks","Added","Removed","_windowTypeStatusChangeCallbacks","factory","_peerFactoriesRegisteredByUs","factories","peerFactoryGwMessageEntityToWindowType","factory_ids","_activityChangeCallbacks","initiateMsg","initial_context","isOverrideTypeDefinition","types_override","wd","sendCreateAndMapResultingMessagesToPromise","initMsg","_activityTypesInitiatedFromMe","fullReplace","removedKeys","removedKeys_1","activityWindowId","independent","shouldSendReady","activityInfo","_activityWindowChangeCallbacks","getAgmInstance","generateWindowGetter","layout","width","height","top","cellSize","peer_name","created_id","joinActivity","destroy_peer_id","announcementInfo","activityWindowType","activityWindowIndependent","activityWindowName","search","URLSearchParams","searchParams","maybeName","target_id","Updated","windowDefinitions","visible","cloneOptions","into","merge","newActivityInfo","addedMessageType","removedMessageType","mapper","getGetEntityEvent","isAdded","forwardMessageToEventHandler","messageType","getEntityEvent","ent","h","initiatedMessageType","initiatedMessageFilter","createdMessageFilter","cancelledMessageType","cancelledMessageFilter","createdMessageToPromiseResolution","resolveCreatedPromise","rejectCreatedPromise","initiatedSubscription","createdSubscription","cancelledSubscription","errorSubscription","reqId","getRandomRequestId","createdPromise","initiatedMessageAck","dropSubscriptions","dropSubscription","msg4","msg1","msg2","msg3","toReturn","factoryId","peerType","_peerIdAndFactoryIdToPeerType","_contextSubscriptions","subscribeToContext","ActivityContextChangedEventContext","unsubscribeContext","forwardAddedAndRemovedMessagesToEventHandler","activityCreatedMessage","participants","createdMessage","activityGwMessageToActivity","activityToActivityStatusChangeEvent","peerFactoryIdAndOwnerIdToWindowType","peer_factory","gateway_token","joinedMessage","joinedId","joined_id","joinedType","joined_type","joinedName","joined_name","left_id","list","signalsToWait","_signals","_callbacks","ReadyMarker","isSet","isError","_error","appManagerGetter","_windows","_appManagerGetter","_mode","_typesToTrack","hcActType","ownerWindowType","helperWindowTypes","decodeURIComponent","replace","_readyMarker","_htmlContainer","activityFacade","subscribeForJoinBreakEvents","_handleGenericEvents","initFunc","init2","jsAgmInstance","_hcEventHandler","signal","setCallback","getError","initReady","_processEventBySeq","eventJson","seq","sequence","_lastSeq","_processEvent","nextEvent","_eventQueue","genericEvent","_processGenericEvent","entityType","eventContext","_convertContext","contextUpdateRaceFixed","_activityTypeEntityName","_hcToJsActivityType","_publishActivityTypeStatusChange","_windowTypeEntityName","_hcToJsWindowType","_publishWindowTypeStatusChange","_activityEntityName","_hcToJsActivity","_publishActivityStatusChange","_windowEntityName","_hcToJsWindow","_publishActivityWindowEvent","getActivities","activityInEvent","contextAsString","hackEventContext","_activitiesAttachedHandler","_activitiesDetached","_activityAttachedDescriptorsRefreshed","hcContext","statusMessage","statusTime","ActivityWindowEvent","newContext","hcAct","hcWinType","wt","applications","app","getActivityTypes","infos","layoutConfig","registerActivityType","newActivityType","unregisterActivityType","getWindowTypes","windowTypeName","registerWindowFactory","getContext","_getURLParameter","announceWindow","activitiesStr","newContextString","wind","objToSend","functionToUse","createWindow2","newId","createStackedWindows2","_activityTypeCallbacks","_windowTypeCallbacks","_activityCallbacks","_windowCallbacks","registerWindow","cloneActivity","entityEvent","at","_publishStatusChange","newActivityId","getAttachedDescriptors","hcWindow","_m","am","_subscribeMyContextChanged","_subscribeMyWindowEvent","_subscribeActivitiesAttached","_subscribeActivitiesDetached","onWindowFrameColorChanged","_subscribeWindowFrameColorChanged","ActivityMy","_w","announcedWindows","myWin","updateContext","setContext","_myActivityJoinedCallbacks","_myActivityRemovedCallbacks","_myContextUpdateCallbacks","_myAttached","_myDetached","_myAttachedTo","_myDetachedFrom","attached","getFrameColor","_myActivityFrameColorChanged","myActivity","_notifyMyContextChanged","_notifyMyWindowEvent","callbackStore","detached","_notifyAttachedTo","_notifyAttached","oldAct","_notifyDetached","_notifyDetachedFrom","processNew","_processNew","EntityObservableCollection","items","_items","internalEntity","_updateInternalCollections","_notifyListeners","entityAddedHandler","getByName","_listeners","listener","entityAsAny","isActivityDestroy","Destroyed","isWindowClose","Closed","oldEntity","_beforeDelete","_update","bridge","autoAnnounce","_activityTypes","_grabEntity","_windowTypes","_activities","_dataReadyMarker","_descriptorsMarker","dataErr","_announcedWindows","errCatch","refreshDescriptors","onActivitiesAttached","_handleActivitiesAttached","onActivitiesDetached","_handleActivitiesDetached","onActivityAttachedDescriptorsRefreshed","_handleActivityDescriptorsRefreshed","_handleWindowFrameColorChanged","_subscribeForData","aw","_getInitialData","ActivityManager","bridgeType","ownerDefinition","helperDefinitions","relativeTo","relativeDirection","windowStyleAttributes","initiateActivity","actId","getOrWait","factoryMethod","getName","unregisterWindowFactory","array","predicate","util.some","getAnnouncementInfo","currentWindow","windowEventHandler_1","unsubscribeWindowEvents","window_1","wrappingHandler","_windowHandlers","found","windowTypeOrConfiguration","relativeToWindow","wid","relativeWindowTypes","relativeWindows","useExisting","activityWindows","alreadyCreated","leaveActivity","removedKey","descriptors","_updateDescriptors","stateWrapped","u","_attachedCallbacks","_detachedCallbacks","_frameColorChangesCallbacks","ac","getActivityWindows","onActivityTypeStatusChange","onWindowTypeStatusChange","onActivityStatusChange","onActivityWindowChange","descriptorAsObjectFromAPI","oldActivityId","my","_my","activityTypes","_getActivityTypesWrapper","subscribeActivityTypeEvents","_getWindowTypesWrapper","registerFactory","unregisterFactory","subscribeWindowTypeEvents","announce","instances","ActivityManagementAPI","subscribeActivityFrameColorChanged","_mgr","ActivityAPI","aware","inActivity","frameColors","getFrameColors","logLevel","_isUsingHCImplementation","_isUsingGW3Implementation","ActivityModule","checkIsUsingGW3Implementation","activityManager","disableAutoAnnounce","My","_api","_readyPromise","objectValues","objectClone","_appManager","CallbackRegistryFactory","onInstanceStarted","onInstanceStopped","onAppRemoved","onAppChanged","onAppAvailable","onAppUnavailable","ApplicationImpl","_props","Title","AutoStart","IsShell","Caption","IsHidden","ActivityWindowType","Arguments","AllowMultiple","IsReady","Icon","IconUrl","SortOrder","UserProperties","autoStart","caption","hidden","container","allowMultiple","Type","Mode","isActivity","styleAttributes","WindowStyleAttributes","modeIndex","startModeIndex","stopModeIndex","style","props","_t42","createWindowArgs","waitForAGMReady","waitForAGMInstance","waitForInstance","WaitForAgmInstance","WaitForInstance","acsResult","Instance_0","Id","handleInstanceStarted","unsub","check","filtered","isActivityInstance","waitFunc","onInstanceAgmServerReady","waitForApplicationInstance","_appName","startFailed","_addToRegistry","_unsubscribeInstanceStopped","_unsubscribeInstanceAgmServerReady","InstanceImpl","activityInstance","instWinCntx","activityIsOwner","activityOwnerInstance","_startUpContext","_title","_isActivityInstance","_inActivity","_agmInstance","ActivityId","updateAgmInstanceFromProps","AgmServers","GD3","agmInstances","gdAgmServers","propsAgmServer","propsAgm","userName","handleInstanceStopped","_gdMajorVersion","_apps","_instances","instanceId_1","myWindowId_1","matchingInstances","_getAppId","_updateAppFromProps","_getAppOrThrow","updateFromProps","available","_getInstanceId","_getInstanceAppName","_updateInstanceFromProps","_getInstanceOrThrow","_matchInstance","_replay","AppManagerImpl","_getInstanceByIdAndName","itemsToReplay","_agmInvoke","Branches","Branch","funct","Entitlement","Function","func","Result","transformFunction","appManager","entitlements","EntitlementsImpl","skipIcon","handleAppAdded","skipIcons","resolveFunc","rejectFunc","resultPromise","streamData","events","handleAppUpdated","handleAppRemoved","handleAppReady","handleInstanceStartFailed","handleInstanceUpdated","handleInstanceAgmServerReady","handleBranchModified","handleBranchesModified","subscriptionFactory","onAppAdded","myInstance","getMyInstance","onInstanceUpdated","onInstanceStartFailed","getRegion","getBranches","getCurrentBranch","getFunctionalEntitlement","getFunctionalEntitlementBranch","setCurrentBranch","setRegion","currentUser","canI","canIBranch","onBranchesChanged","restart","CallbackFactory","WindowStore","_pendingWindows","remote","_pendingWindowsStates","urlChanged","targetWindowState","markReadyToShow","waitForTimeoutInMilliseconds","onReadyWindow","fail","displays","monitor","totalOverlap","calculateTotalOverlap","display","max","workingAreaWidth","workingAreaHeight","r1","r2","r1x","r1y","r1xMax","r1yMax","r2x","r2y","r2xMax","r2yMax","min","executor","_group","resultWindow","_url","url","_bounds","_frameColor","_focus","_neighbours","neighbours","_groupId","groupId","_isGroupHeaderVisible","isGroupHeaderVisible","_isTabHeaderVisible","isTabHeaderVisible","_isTabSelected","isTabSelected","_isVisible","isCollapsed","_windowState","_tabGroupId","tabGroupId","_isLocked","isLocked","_frameButtons","_zoomFactor","zoomFactor","moveResize","dimensions","resolveTimeout","unsubscribeBoundsChanged","areBoundsEqual","onBoundsChanged","setVisible","toBeVisible","isVisibilityCorrect","onVisibilityChanged","waitForLockingChanged","onLockingChanged","onUrlChanged","onCollapsed","onExpanded","onMaximized","onMinimized","onNormal","onDetached","onTabHeaderVisibilityChanged","getNeighboursByDirection","direction","winId","windowStore","getApplicationName","_APPLICATION_NAME","getWindowInfo","requested","minHeight","maxHeight","minWidth","maxWidth","areHeightsEqual","areWidthsEqual","areLeftsEqual","areTopsEqual","handleWindowClose","handleWindowChangeState","handleTitleChanged","newTitle","handleVisibilityChanged","handleUrlChanged","newUrl","handleWindowSettingsChanged","handleContextUpdated","handleFrameIsLockedChanged","handleBoundsChanged","handleFocusChanged","isFocused","handleFrameButtonAdded","frameButton","buttonObj","btn","buttonId","handleFrameButtonRemoved","frameButtonId","button","handleFrameButtonClicked","handleFrameColorChanged","handleFrameAttached","handleFrameSelectionChanged","newWindow","prevWindow","selectedWindow","previousWindow","un_1","onTabSelectionChanged","newWin","prevWin","handleCompositionChanged","handleGroupHeaderVisibilityChanged","handleTabHeaderVisibilityChanged","handleGroupChanged","newGroup","oldGroup","handleGroupAssociation","group","handleAttached","newTabGroupId","tabHeaderVisible","handleDetached","handleWindowAttached","handleWindowDetached","handleZoomFactorChanged","hostInstance","agmInstance","frameButtons","opened","topNeighbours","leftNeighbours","rightNeighbours","bottomNeighbours","screen","utils","getMonitor","monitors","maximize","restore","minimize","maximizeRestore","currEvent","collapse","expand","toggleCollapse","activate","setTitle","setStyle","errMessage","callbackifyPromise","setOnTop","onTop","resetButtons","buttons","setSizeConstraints","constraints","navigate","addFrameButton","buttonInfo","imageBase64","removeFrameButton","show","hide","center","getDisplayCenterOfScreen","snap","targetWindowGroup","targetGroup","targetWindow","onWindowAdded","showLoader","loader","hideLoader","lock","unlock","getIcon","icon","setIcon","base64Image","attachTab","tab","sourceWindowId","targetWindowId","argsForSend","sourceWin","onAttached","detachTab","opt","_options","hideTabHeader","visibilityChangeHeard","detachedHeard","unVisibility","unDetached","setTabHeaderVisible","toBeTabHeaderVisible","showPopup","createFlydown","setModalState","isModal","setZoomFactor","zoomIn","zoomOut","showDevTools","capture","captureOptions","flash","suppliedOptions","flashOptions","shouldFlash","onClose","onTitleChanged","onFrameButtonAdded","onFrameButtonRemoved","onFrameButtonClicked","onContextUpdated","onFrameColorChanged","onFocusChanged","onGroupChanged","onWindowAttached","onWindowDetached","onClosing","onRefreshing","prevent","onZoomFactorChanged","tabs","allWindows","Events","GDExecutor","agmTarget","stylePromises","wait","allowClose","allowCollapse","allowLockUnlock","allowMaximize","allowMinimize","buttonsConfig","snappingEdge","command","dataURL","toShow","optionsCopy","targetLocation","reformatedOptions","popupBounds","size","targetId","popupId","horizontalOffset","verticalOffset","fullOptions","reformatFlydownOptions","zoneIds","zones","z","flydownSize","cancel","destroy","clearFlydownArea","cancelCallback","callbackData","zoneId","flydownId","flydownWindowBounds","flydownWindowId","responses","defaultResponse","groupWindowIds","addCloseHandler","assignGeneralIfUnassigned","zone","valueFromOptions","flydownBounds","flydownActiveArea","activeArea","areaIds","getWindowsByTabGroupId","wndId","normalizeInstance","_windowId","GDEnvironment","respondToEvent","streamResolve","streamReject","_waitTimeout","updateWindow","copyOptions","windowState","handleFlydownBoundsRequested","windowInfo","extendedStreamEvent","getExtendedStreamEvent","windowInfoCreatedEvent","setReadyState","windowObjectAndEvents","theWindow","theWindowEvents","windowInfoBoundsChangedEvent","windowInfoUrlChangedEvent","setUrlChangedState","windowInfoTitleChanged","windowInfoCompositionChanged","neighbors","groupHeaderVisible","windowInfoFocusChanged","focusChanged","frameId","winsToBeNotified_1","oldTabGroupId","winsToBeNotified_2","newWindowId","prevWindowId","windowObjAndEvents","windowFactory","mapToWindowConstructorOptions","isActiveTab","streamEvent","charAt","toUpperCase","HcExecutor","agmAction","eventToSubscribe","collapsed","subscribeFunc","styles","Hidden","enabled","base64ImageSource","stickyFrameColor","factor","conditionFunc","ignoreTimeout","agmInvoke","removeCallback_1","isResolved_1","cntName","hcEnv","streamPromise","oldFrameColor","windowTitle","parsedWsa","parseWindowStyleAttributes","listWindowsPromise","listWndResolve","listWndReject","existingWindow","WindowState","windowStyles","onEvent","tabAttached","tabDetached","onCompositionChanged","onGroupHeaderVisibilityChanged","onWindowGotFocus","onWindowLostFocus","callbackRegistry","_windowsId","waitForHeaderVisibilityChanged","onHeaderVisibilityChanged","groupObject","_mapToWindowObjects","winObjects","windowObject","_mapToWindowObject","mappedWindows","mappedWindow","isHeaderVisible","showHeader","setGroupHeaderVisible","hideHeader","captureGroup","onWindowRemoved","groupAPI","groupInternal","addWindow","removeWindow","window_2","_groups","heardForWindowsCounter","findGroupByWindow","groupFound","addNewWindow","windowGroupId","createdGroup","groupFactory","createOrGetGroup","deleteGroup","newGroupId","oldGroupId","groupEvents","onAdded","onRemoved","groupsAPI","groupsEvents","onWindowMoved","groups","isReady","GD","hcPromise","gdPromise","rej","envDetector","groupsFactory","windowAdded","windowRemoved","myWindow","getIfReady","errorHandler","waitFor","windowsForListing","findById","onTabAttached","onTabDetached","unsubFunc","unsubscribed","LayoutStore","condition","layouts","where","randomByte","encode","build","require$$0","activitiesGetter","ContextProvider","registeredRequestsMethods","registerRequestMethods","context_1","requestResult","activityContext","windowContext","isActivityOwner","transformACSLayout","something","accumulator","convertedValue","components","metadata","activityGetter","LayoutsAPIImpl","gotSnapshot","verifyNotSlimMode","ignoreHidden","layoutObject","actIds","appIds","ignoreLayoutRestrictions","isVisibleWindow","ignoreMyInstance","autoCollectApps","invokeMethodAndTrack","activityIdToJoin","restoreActivityOwner","ignoreActivityWindowTypes","closeRunningInstance","reuseWindows","t42","restoreOptions","activityToJoin","closeOldWindows","reuseExistingWindows","toClose","splash","getInstancesToClose","store","getObjectValues","Layouts","LayoutImpl","newName","oldName","onSaveRequested","skipStreamEvent","agmResult","streamEventReceived","handleResult","shellApp","isShell","shellApplicationName","resolveReady","rejectReady","resolveGotSnapshot","rejectGotSnapshot","ACSStream","noRetry","transform","checkForLayoutEventMethod","IsSnapshot","addLayouts","OnLayoutAdded","removeLayouts","OnLayoutRemoved","changeLayouts","OnLayoutChanged","renameLayouts","OnLayoutRenamed","Token","layoutsData","layoutData","removedLayouts","removedLayout","removeWhere","existingLayout","compareLayouts","changedLayouts","changedLayout","renamedLayouts","renamedLayout","first","layout1","layout2","acsStream","DisplayCommand","callGD","GetAll","decorateDisplay","isPrimary","Capture","CaptureAll","GetMousePosition","original","SharedContextSubscriber","isChannel","createContextName","sharedContextName","c","startsWith","channelId","shared","ChannelsImpl","channelContext","subsKey","subscribeFor","changedKey","switchChannel","channelName","getContextData","sharedContexts","channel","swId","setupAGM","changed","Map","HotkeysImpl","hotkey","hkToLower","formatHotkey","hotkeys","firstHotkey","registerInvokeAGMMethod","delete","IntentCommand","getLibConfig","defaultMode","trueMode","getModeAsString","IntentEvents","intentListeners","raise","intent","invokeGlue","Raise","intentFilter","Find","findByContext","contextType","FindByContext","addIntentListener","unsubId","handleEvent","IntentListenerRaised","_displays","getLibLogger","newLogger","core","windowsLogger","debugLog","WindowsFactory","activityLogger","AppManagerFactory","lay","LayoutsFactory","channelsAPI","hotkeysAPI","unregisterAll","isRegistered","displaysLogger","DisplayManager","agmAPI","intentsAPI","currentLog","glueFactoryLog","CoreFactory","coreVersion","whatToExpose","CreateGlue","shouldSetToWindow","autoInjected","Glue"],"mappings":"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"}