{"version":3,"file":"desktop.umd.min.js","sources":["../node_modules/@glue42/core/dist/core.es.js","../src/activity/entities/activityEntity.ts","../src/activity/helpers/util.ts","../src/activity/entities/activityType.ts","../src/activity/entities/windowType.ts","../src/activity/contracts/entityEvent.ts","../src/activity/core/activityAGM.ts","../src/activity/entities/attachedActivityDescriptor.ts","../src/activity/helpers/promiseExtensions.ts","../src/activity/entities/activity.ts","../src/activity/helpers/logger.ts","../src/activity/entities/activityWindow.ts","../src/activity/contracts/activityStatus.ts","../src/activity/bridges/gw3Bridge.ts","../src/activity/API/activityMyAPI.ts","../src/activity/helpers/readyMarker.ts","../src/activity/helpers/entityObservableCollection.ts","../src/activity/core/activityManager.ts","../src/activity/API/activityManagementAPI.ts","../src/activity/API/activityAPI.ts","../src/activity/activityModule.ts","../node_modules/callback-registry/lib/index.js","../src/app-manager/helper.ts","../src/app-manager/application.ts","../src/app-manager/const/agm-names.ts","../src/app-manager/instance.ts","../src/app-manager/app-manager.ts","../src/app-manager/entitlements.ts","../src/app-manager/main.ts","../src/app-manager/snapshot.ts","../src/app-manager/data-subscription.ts","../src/windows/store.ts","../src/utils.ts","../src/windows/window.ts","../src/windows/environment/gd/executor.ts","../src/windows/environment/helpers.ts","../src/windows/environment/gd/gd.ts","../src/windows/group.ts","../src/windows/groups.ts","../src/windows/main.ts","../src/windows/environment/detector.ts","../src/layouts/store.ts","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/alphabet.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/shortid/lib/encode.js","../node_modules/shortid/lib/decode.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/index.js","../src/layouts/contextProvider.ts","../src/layouts/transform.ts","../src/layouts/layout.ts","../src/layouts/layouts.ts","../src/layouts/stream/acsStream.ts","../src/layouts/main.ts","../src/displays/displayManager.ts","../src/channels/contexts.ts","../src/channels/channels.ts","../src/channels/main.ts","../src/channels/agm.ts","../src/hotkeys/hotkeys.ts","../src/intents/main.ts","../src/config.ts","../src/glue.ts","../src/hotkeys/main.ts","../src/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\n\nvar MetricTypes = {\r\n    STRING: 1,\r\n    NUMBER: 2,\r\n    TIMESTAMP: 3,\r\n    OBJECT: 4\r\n};\n\nfunction getMetricTypeByValue(metric) {\r\n    if (metric.type === MetricTypes.TIMESTAMP) {\r\n        return \"timestamp\";\r\n    }\r\n    else if (metric.type === MetricTypes.NUMBER) {\r\n        return \"number\";\r\n    }\r\n    else if (metric.type === MetricTypes.STRING) {\r\n        return \"string\";\r\n    }\r\n    else if (metric.type === MetricTypes.OBJECT) {\r\n        return \"object\";\r\n    }\r\n    return \"unknown\";\r\n}\r\nfunction getTypeByValue(value) {\r\n    if (value.constructor === Date) {\r\n        return \"timestamp\";\r\n    }\r\n    else if (typeof value === \"number\") {\r\n        return \"number\";\r\n    }\r\n    else if (typeof value === \"string\") {\r\n        return \"string\";\r\n    }\r\n    else if (typeof value === \"object\") {\r\n        return \"object\";\r\n    }\r\n    else {\r\n        return \"string\";\r\n    }\r\n}\r\nfunction serializeMetric(metric) {\r\n    var serializedMetrics = {};\r\n    var type = getMetricTypeByValue(metric);\r\n    if (type === \"object\") {\r\n        var values = Object.keys(metric.value).reduce(function (memo, key) {\r\n            var innerType = getTypeByValue(metric.value[key]);\r\n            if (innerType === \"object\") {\r\n                var composite = defineNestedComposite(metric.value[key]);\r\n                memo[key] = {\r\n                    type: \"object\",\r\n                    description: \"\",\r\n                    context: {},\r\n                    composite: composite,\r\n                };\r\n            }\r\n            else {\r\n                memo[key] = {\r\n                    type: innerType,\r\n                    description: \"\",\r\n                    context: {},\r\n                };\r\n            }\r\n            return memo;\r\n        }, {});\r\n        serializedMetrics.composite = values;\r\n    }\r\n    serializedMetrics.name = normalizeMetricName(metric.path.join(\"/\") + \"/\" + metric.name);\r\n    serializedMetrics.type = type;\r\n    serializedMetrics.description = metric.description;\r\n    serializedMetrics.context = {};\r\n    return serializedMetrics;\r\n}\r\nfunction defineNestedComposite(values) {\r\n    return Object.keys(values).reduce(function (memo, key) {\r\n        var type = getTypeByValue(values[key]);\r\n        if (type === \"object\") {\r\n            memo[key] = {\r\n                type: \"object\",\r\n                description: \"\",\r\n                context: {},\r\n                composite: defineNestedComposite(values[key]),\r\n            };\r\n        }\r\n        else {\r\n            memo[key] = {\r\n                type: type,\r\n                description: \"\",\r\n                context: {},\r\n            };\r\n        }\r\n        return memo;\r\n    }, {});\r\n}\r\nfunction normalizeMetricName(name) {\r\n    if (typeof name !== \"undefined\" && name.length > 0 && name[0] !== \"/\") {\r\n        return \"/\" + name;\r\n    }\r\n    else {\r\n        return name;\r\n    }\r\n}\r\nfunction getMetricValueByType(metric) {\r\n    var type = getMetricTypeByValue(metric);\r\n    if (type === \"timestamp\") {\r\n        return Date.now();\r\n    }\r\n    else {\r\n        return publishNestedComposite(metric.value);\r\n    }\r\n}\r\nfunction publishNestedComposite(values) {\r\n    if (typeof values !== \"object\") {\r\n        return values;\r\n    }\r\n    return Object.keys(values).reduce(function (memo, key) {\r\n        var value = values[key];\r\n        if (typeof value === \"object\" && value.constructor !== Date) {\r\n            memo[key] = publishNestedComposite(value);\r\n        }\r\n        else if (value.constructor === Date) {\r\n            memo[key] = new Date(value).getTime();\r\n        }\r\n        else if (value.constructor === Boolean) {\r\n            memo[key] = value.toString();\r\n        }\r\n        else {\r\n            memo[key] = value;\r\n        }\r\n        return memo;\r\n    }, {});\r\n}\r\nfunction flatten(arr) {\r\n    return arr.reduce(function (flat, toFlatten) {\r\n        return flat.concat(Array.isArray(toFlatten) ? flatten(toFlatten) : toFlatten);\r\n    }, []);\r\n}\r\nfunction getHighestState(arr) {\r\n    return arr.sort(function (a, b) {\r\n        if (!a.state) {\r\n            return 1;\r\n        }\r\n        if (!b.state) {\r\n            return -1;\r\n        }\r\n        return b.state - a.state;\r\n    })[0];\r\n}\r\nfunction aggregateDescription(arr) {\r\n    var msg = \"\";\r\n    arr.forEach(function (m, idx, a) {\r\n        var path = m.path.join(\".\");\r\n        if (idx === a.length - 1) {\r\n            msg += path + \".\" + m.name + \": \" + m.description;\r\n        }\r\n        else {\r\n            msg += path + \".\" + m.name + \": \" + m.description + \",\";\r\n        }\r\n    });\r\n    if (msg.length > 100) {\r\n        return msg.slice(0, 100) + \"...\";\r\n    }\r\n    else {\r\n        return msg;\r\n    }\r\n}\r\nfunction composeMsgForRootStateMetric(system) {\r\n    var aggregatedState = system.root.getAggregateState();\r\n    var merged = flatten(aggregatedState);\r\n    var highestState = getHighestState(merged);\r\n    var aggregateDesc = aggregateDescription(merged);\r\n    return {\r\n        description: aggregateDesc,\r\n        value: highestState.state,\r\n    };\r\n}\n\nfunction gw3 (connection, config) {\r\n    if (!connection || typeof connection !== \"object\") {\r\n        throw new Error(\"Connection is required parameter\");\r\n    }\r\n    var joinPromise;\r\n    var session;\r\n    var init = function (repo) {\r\n        var resolveReadyPromise;\r\n        joinPromise = new Promise(function (resolve) {\r\n            resolveReadyPromise = resolve;\r\n        });\r\n        session = connection.domain(\"metrics\");\r\n        session.onJoined(function (reconnect) {\r\n            if (!reconnect && resolveReadyPromise) {\r\n                resolveReadyPromise();\r\n                resolveReadyPromise = undefined;\r\n            }\r\n            var rootStateMetric = {\r\n                name: \"/State\",\r\n                type: \"object\",\r\n                composite: {\r\n                    Description: {\r\n                        type: \"string\",\r\n                        description: \"\",\r\n                    },\r\n                    Value: {\r\n                        type: \"number\",\r\n                        description: \"\",\r\n                    },\r\n                },\r\n                description: \"System state\",\r\n                context: {},\r\n            };\r\n            var defineRootMetricsMsg = {\r\n                type: \"define\",\r\n                metrics: [rootStateMetric],\r\n            };\r\n            session.send(defineRootMetricsMsg);\r\n            if (reconnect) {\r\n                replayRepo(repo);\r\n            }\r\n        });\r\n        session.join();\r\n    };\r\n    var replayRepo = function (repo) {\r\n        replaySystem(repo.root);\r\n    };\r\n    var replaySystem = function (system) {\r\n        createSystem(system);\r\n        system.metrics.forEach(function (m) {\r\n            createMetric(m);\r\n        });\r\n        system.subSystems.forEach(function (ss) {\r\n            replaySystem(ss);\r\n        });\r\n    };\r\n    var createSystem = function (system) {\r\n        if (system.parent === undefined) {\r\n            return;\r\n        }\r\n        joinPromise.then(function () {\r\n            var metric = {\r\n                name: normalizeMetricName(system.path.join(\"/\") + \"/\" + system.name + \"/State\"),\r\n                type: \"object\",\r\n                composite: {\r\n                    Description: {\r\n                        type: \"string\",\r\n                        description: \"\",\r\n                    },\r\n                    Value: {\r\n                        type: \"number\",\r\n                        description: \"\",\r\n                    },\r\n                },\r\n                description: \"System state\",\r\n                context: {},\r\n            };\r\n            var createMetricsMsg = {\r\n                type: \"define\",\r\n                metrics: [metric],\r\n            };\r\n            session.send(createMetricsMsg);\r\n        });\r\n    };\r\n    var updateSystem = function (system, state) {\r\n        joinPromise.then(function () {\r\n            var shadowedUpdateMetric = {\r\n                type: \"publish\",\r\n                values: [{\r\n                        name: normalizeMetricName(system.path.join(\"/\") + \"/\" + system.name + \"/State\"),\r\n                        value: {\r\n                            Description: state.description,\r\n                            Value: state.state,\r\n                        },\r\n                        timestamp: Date.now(),\r\n                    }],\r\n            };\r\n            session.send(shadowedUpdateMetric);\r\n            var stateObj = composeMsgForRootStateMetric(system);\r\n            var rootMetric = {\r\n                type: \"publish\",\r\n                peer_id: connection.peerId,\r\n                values: [{\r\n                        name: \"/State\",\r\n                        value: {\r\n                            Description: stateObj.description,\r\n                            Value: stateObj.value,\r\n                        },\r\n                        timestamp: Date.now(),\r\n                    }],\r\n            };\r\n            session.send(rootMetric);\r\n        });\r\n    };\r\n    var createMetric = function (metric) {\r\n        var metricClone = cloneMetric(metric);\r\n        joinPromise.then(function () {\r\n            var m = serializeMetric(metricClone);\r\n            var createMetricsMsg = {\r\n                type: \"define\",\r\n                metrics: [m],\r\n            };\r\n            session.send(createMetricsMsg);\r\n            if (typeof metricClone.value !== \"undefined\") {\r\n                updateMetricCore(metricClone);\r\n            }\r\n        });\r\n    };\r\n    var updateMetric = function (metric) {\r\n        var metricClone = cloneMetric(metric);\r\n        joinPromise.then(function () { return updateMetricCore(metricClone); });\r\n    };\r\n    var updateMetricCore = function (metric) {\r\n        var value = getMetricValueByType(metric);\r\n        var publishMetricsMsg = {\r\n            type: \"publish\",\r\n            values: [{\r\n                    name: normalizeMetricName(metric.path.join(\"/\") + \"/\" + metric.name),\r\n                    value: value,\r\n                    timestamp: Date.now(),\r\n                }],\r\n        };\r\n        session.send(publishMetricsMsg);\r\n    };\r\n    var cloneMetric = function (metric) {\r\n        var metricClone = __assign({}, metric);\r\n        if (typeof metric.value === \"object\" && metric.value !== null) {\r\n            metricClone.value = __assign({}, metric.value);\r\n        }\r\n        return metricClone;\r\n    };\r\n    return {\r\n        init: init,\r\n        createSystem: createSystem,\r\n        updateSystem: updateSystem,\r\n        createMetric: createMetric,\r\n        updateMetric: updateMetric,\r\n    };\r\n}\n\nvar Helpers = {\r\n    validate: function (definition, parent, transport) {\r\n        if (definition === null || typeof definition !== \"object\") {\r\n            throw new Error(\"Missing definition\");\r\n        }\r\n        if (parent === null || typeof parent !== \"object\") {\r\n            throw new Error(\"Missing parent\");\r\n        }\r\n        if (transport === null || typeof transport !== \"object\") {\r\n            throw new Error(\"Missing transport\");\r\n        }\r\n    },\r\n};\n\nvar BaseMetric = (function () {\r\n    function BaseMetric(definition, system, transport, value, type) {\r\n        this.definition = definition;\r\n        this.system = system;\r\n        this.transport = transport;\r\n        this.value = value;\r\n        this.type = type;\r\n        this.path = [];\r\n        Helpers.validate(definition, system, transport);\r\n        this.path = system.path.slice(0);\r\n        this.path.push(system.name);\r\n        this.name = definition.name;\r\n        this.description = definition.description;\r\n        transport.createMetric(this);\r\n    }\r\n    Object.defineProperty(BaseMetric.prototype, \"repo\", {\r\n        get: function () {\r\n            var _a;\r\n            return (_a = this.system) === null || _a === void 0 ? void 0 : _a.repo;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BaseMetric.prototype, \"id\", {\r\n        get: function () { return this.system.path + \"/\" + name; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    BaseMetric.prototype.update = function (newValue) {\r\n        this.value = newValue;\r\n        this.transport.updateMetric(this);\r\n    };\r\n    return BaseMetric;\r\n}());\n\nvar NumberMetric = (function (_super) {\r\n    __extends(NumberMetric, _super);\r\n    function NumberMetric(definition, system, transport, value) {\r\n        return _super.call(this, definition, system, transport, value, MetricTypes.NUMBER) || this;\r\n    }\r\n    NumberMetric.prototype.incrementBy = function (num) {\r\n        this.update(this.value + num);\r\n    };\r\n    NumberMetric.prototype.increment = function () {\r\n        this.incrementBy(1);\r\n    };\r\n    NumberMetric.prototype.decrement = function () {\r\n        this.incrementBy(-1);\r\n    };\r\n    NumberMetric.prototype.decrementBy = function (num) {\r\n        this.incrementBy(num * -1);\r\n    };\r\n    return NumberMetric;\r\n}(BaseMetric));\n\nvar ObjectMetric = (function (_super) {\r\n    __extends(ObjectMetric, _super);\r\n    function ObjectMetric(definition, system, transport, value) {\r\n        return _super.call(this, definition, system, transport, value, MetricTypes.OBJECT) || this;\r\n    }\r\n    ObjectMetric.prototype.update = function (newValue) {\r\n        this.mergeValues(newValue);\r\n        this.transport.updateMetric(this);\r\n    };\r\n    ObjectMetric.prototype.mergeValues = function (values) {\r\n        var _this = this;\r\n        return Object.keys(this.value).forEach(function (k) {\r\n            if (typeof values[k] !== \"undefined\") {\r\n                _this.value[k] = values[k];\r\n            }\r\n        });\r\n    };\r\n    return ObjectMetric;\r\n}(BaseMetric));\n\nvar StringMetric = (function (_super) {\r\n    __extends(StringMetric, _super);\r\n    function StringMetric(definition, system, transport, value) {\r\n        return _super.call(this, definition, system, transport, value, MetricTypes.STRING) || this;\r\n    }\r\n    return StringMetric;\r\n}(BaseMetric));\n\nvar TimestampMetric = (function (_super) {\r\n    __extends(TimestampMetric, _super);\r\n    function TimestampMetric(definition, system, transport, value) {\r\n        return _super.call(this, definition, system, transport, value, MetricTypes.TIMESTAMP) || this;\r\n    }\r\n    TimestampMetric.prototype.now = function () {\r\n        this.update(new Date());\r\n    };\r\n    return TimestampMetric;\r\n}(BaseMetric));\n\nfunction system(name, repo, protocol, parent, description) {\r\n    if (!repo) {\r\n        throw new Error(\"Repository is required\");\r\n    }\r\n    if (!protocol) {\r\n        throw new Error(\"Transport is required\");\r\n    }\r\n    var _transport = protocol;\r\n    var _name = name;\r\n    var _description = description || \"\";\r\n    var _repo = repo;\r\n    var _parent = parent;\r\n    var _path = _buildPath(parent);\r\n    var _state = {};\r\n    var id = _arrayToString(_path, \"/\") + name;\r\n    var root = repo.root;\r\n    var _subSystems = [];\r\n    var _metrics = [];\r\n    function subSystem(nameSystem, descriptionSystem) {\r\n        if (!nameSystem || nameSystem.length === 0) {\r\n            throw new Error(\"name is required\");\r\n        }\r\n        var match = _subSystems.filter(function (s) { return s.name === nameSystem; });\r\n        if (match.length > 0) {\r\n            return match[0];\r\n        }\r\n        var _system = system(nameSystem, _repo, _transport, me, descriptionSystem);\r\n        _subSystems.push(_system);\r\n        return _system;\r\n    }\r\n    function setState(state, stateDescription) {\r\n        _state = { state: state, description: stateDescription };\r\n        _transport.updateSystem(me, _state);\r\n    }\r\n    function stringMetric(definition, value) {\r\n        return _getOrCreateMetric(definition, MetricTypes.STRING, value, function (metricDef) { return new StringMetric(metricDef, me, _transport, value); });\r\n    }\r\n    function numberMetric(definition, value) {\r\n        return _getOrCreateMetric(definition, MetricTypes.NUMBER, value, function (metricDef) { return new NumberMetric(metricDef, me, _transport, value); });\r\n    }\r\n    function objectMetric(definition, value) {\r\n        return _getOrCreateMetric(definition, MetricTypes.OBJECT, value, function (metricDef) { return new ObjectMetric(metricDef, me, _transport, value); });\r\n    }\r\n    function timestampMetric(definition, value) {\r\n        return _getOrCreateMetric(definition, MetricTypes.TIMESTAMP, value, function (metricDef) { return new TimestampMetric(metricDef, me, _transport, value); });\r\n    }\r\n    function _getOrCreateMetric(metricObject, expectedType, value, createMetric) {\r\n        var metricDef = { name: \"\" };\r\n        if (typeof metricObject === \"string\") {\r\n            metricDef = { name: metricObject };\r\n        }\r\n        else {\r\n            metricDef = metricObject;\r\n        }\r\n        var matching = _metrics.filter(function (shadowedMetric) { return shadowedMetric.name === metricDef.name; });\r\n        if (matching.length > 0) {\r\n            var existing = matching[0];\r\n            if (existing.type !== expectedType) {\r\n                throw new Error(\"A metric named \" + metricDef.name + \" is already defined with different type.\");\r\n            }\r\n            if (typeof value !== \"undefined\") {\r\n                existing.update(value);\r\n            }\r\n            return existing;\r\n        }\r\n        var metric = createMetric(metricDef);\r\n        _metrics.push(metric);\r\n        return metric;\r\n    }\r\n    function _buildPath(shadowedSystem) {\r\n        if (!shadowedSystem || !shadowedSystem.parent) {\r\n            return [];\r\n        }\r\n        var path = _buildPath(shadowedSystem.parent);\r\n        path.push(shadowedSystem.name);\r\n        return path;\r\n    }\r\n    function _arrayToString(path, separator) {\r\n        return ((path && path.length > 0) ? path.join(separator) : \"\");\r\n    }\r\n    function getAggregateState() {\r\n        var aggState = [];\r\n        if (Object.keys(_state).length > 0) {\r\n            aggState.push({\r\n                name: _name,\r\n                path: _path,\r\n                state: _state.state,\r\n                description: _state.description,\r\n            });\r\n        }\r\n        _subSystems.forEach(function (shadowedSubSystem) {\r\n            var result = shadowedSubSystem.getAggregateState();\r\n            if (result.length > 0) {\r\n                aggState.push.apply(aggState, result);\r\n            }\r\n        });\r\n        return aggState;\r\n    }\r\n    var me = {\r\n        get name() {\r\n            return _name;\r\n        },\r\n        get description() {\r\n            return _description;\r\n        },\r\n        get repo() {\r\n            return _repo;\r\n        },\r\n        get parent() {\r\n            return _parent;\r\n        },\r\n        path: _path,\r\n        id: id,\r\n        root: root,\r\n        get subSystems() {\r\n            return _subSystems;\r\n        },\r\n        get metrics() {\r\n            return _metrics;\r\n        },\r\n        subSystem: subSystem,\r\n        getState: function () {\r\n            return _state;\r\n        },\r\n        setState: setState,\r\n        stringMetric: stringMetric,\r\n        timestampMetric: timestampMetric,\r\n        objectMetric: objectMetric,\r\n        numberMetric: numberMetric,\r\n        getAggregateState: getAggregateState,\r\n    };\r\n    _transport.createSystem(me);\r\n    return me;\r\n}\n\nvar Repository = (function () {\r\n    function Repository(options, protocol) {\r\n        protocol.init(this);\r\n        this.root = system(\"\", this, protocol);\r\n        this.addSystemMetrics(this.root, options.clickStream || options.clickStream === undefined);\r\n    }\r\n    Repository.prototype.addSystemMetrics = function (rootSystem, useClickStream) {\r\n        if (typeof navigator !== \"undefined\") {\r\n            rootSystem.stringMetric(\"UserAgent\", navigator.userAgent);\r\n        }\r\n        if (useClickStream && typeof document !== \"undefined\") {\r\n            var clickStream_1 = rootSystem.subSystem(\"ClickStream\");\r\n            var documentClickHandler = function (e) {\r\n                if (!e.target) {\r\n                    return;\r\n                }\r\n                var target = e.target;\r\n                clickStream_1.objectMetric(\"LastBrowserEvent\", {\r\n                    type: \"click\",\r\n                    timestamp: new Date(),\r\n                    target: {\r\n                        className: e.target ? target.className : \"\",\r\n                        id: target.id,\r\n                        type: \"<\" + target.tagName.toLowerCase() + \">\",\r\n                        href: target.href || \"\",\r\n                    },\r\n                });\r\n            };\r\n            clickStream_1.objectMetric(\"Page\", {\r\n                title: document.title,\r\n                page: window.location.href,\r\n            });\r\n            if (document.addEventListener) {\r\n                document.addEventListener(\"click\", documentClickHandler);\r\n            }\r\n            else {\r\n                document.attachEvent(\"onclick\", documentClickHandler);\r\n            }\r\n        }\r\n        var startTime = rootSystem.stringMetric(\"StartTime\", (new Date()).toString());\r\n        var urlMetric = rootSystem.stringMetric(\"StartURL\", \"\");\r\n        var appNameMetric = rootSystem.stringMetric(\"AppName\", \"\");\r\n        if (typeof window !== \"undefined\") {\r\n            if (typeof window.location !== \"undefined\") {\r\n                var startUrl = window.location.href;\r\n                urlMetric.update(startUrl);\r\n            }\r\n            if (typeof window.glue42gd !== \"undefined\") {\r\n                appNameMetric.update(window.glue42gd.appName);\r\n            }\r\n        }\r\n    };\r\n    return Repository;\r\n}());\n\nvar NullProtocol = (function () {\r\n    function NullProtocol() {\r\n    }\r\n    NullProtocol.prototype.init = function (repo) {\r\n    };\r\n    NullProtocol.prototype.createSystem = function (system) {\r\n    };\r\n    NullProtocol.prototype.updateSystem = function (metric, state) {\r\n    };\r\n    NullProtocol.prototype.createMetric = function (metric) {\r\n    };\r\n    NullProtocol.prototype.updateMetric = function (metric) {\r\n    };\r\n    return NullProtocol;\r\n}());\n\nvar metrics = (function (options) {\r\n    var protocol;\r\n    if (!options.connection || typeof options.connection !== \"object\") {\r\n        protocol = new NullProtocol();\r\n    }\r\n    else {\r\n        protocol = gw3(options.connection);\r\n    }\r\n    var repo = new Repository(options, protocol);\r\n    return repo.root;\r\n});\r\nfunction addFAVSupport(system) {\r\n    var reportingSystem = system.subSystem(\"reporting\");\r\n    var def = {\r\n        name: \"features\"\r\n    };\r\n    var featureMetric;\r\n    var featureMetricFunc = function (name, action, payload) {\r\n        if (typeof name === \"undefined\" || name === \"\") {\r\n            throw new Error(\"name is mandatory\");\r\n        }\r\n        else if (typeof action === \"undefined\" || action === \"\") {\r\n            throw new Error(\"action is mandatory\");\r\n        }\r\n        else if (typeof payload === \"undefined\" || payload === \"\") {\r\n            throw new Error(\"payload is mandatory\");\r\n        }\r\n        if (!featureMetric) {\r\n            featureMetric = reportingSystem.objectMetric(def, { name: name, action: action, payload: payload });\r\n        }\r\n        else {\r\n            featureMetric.update({\r\n                name: name,\r\n                action: action,\r\n                payload: payload\r\n            });\r\n        }\r\n    };\r\n    system.featureMetric = featureMetricFunc;\r\n    return system;\r\n}\n\nfunction createRegistry(options) {\r\n    if (options && options.errorHandling\r\n        && typeof options.errorHandling !== \"function\"\r\n        && options.errorHandling !== \"log\"\r\n        && options.errorHandling !== \"silent\"\r\n        && options.errorHandling !== \"throw\") {\r\n        throw new Error(\"Invalid options passed to createRegistry. Prop errorHandling should be [\\\"log\\\" | \\\"silent\\\" | \\\"throw\\\" | (err) => void], but \" + typeof options.errorHandling + \" was passed\");\r\n    }\r\n    var _userErrorHandler = options && typeof options.errorHandling === \"function\" && options.errorHandling;\r\n    var callbacks = {};\r\n    function add(key, callback) {\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey) {\r\n            callbacksForKey = [];\r\n            callbacks[key] = callbacksForKey;\r\n        }\r\n        callbacksForKey.push(callback);\r\n        return function () {\r\n            var allForKey = callbacks[key];\r\n            if (!allForKey) {\r\n                return;\r\n            }\r\n            allForKey = allForKey.reduce(function (acc, element, index) {\r\n                if (!(element === callback && acc.length === index)) {\r\n                    acc.push(element);\r\n                }\r\n                return acc;\r\n            }, []);\r\n            callbacks[key] = allForKey;\r\n        };\r\n    }\r\n    function execute(key) {\r\n        var argumentsArr = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            argumentsArr[_i - 1] = arguments[_i];\r\n        }\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey || callbacksForKey.length === 0) {\r\n            return [];\r\n        }\r\n        var results = [];\r\n        callbacksForKey.forEach(function (callback) {\r\n            try {\r\n                var result = callback.apply(undefined, argumentsArr);\r\n                results.push(result);\r\n            }\r\n            catch (err) {\r\n                results.push(undefined);\r\n                _handleError(err, key);\r\n            }\r\n        });\r\n        return results;\r\n    }\r\n    function _handleError(exceptionArtifact, key) {\r\n        var errParam = exceptionArtifact instanceof Error ? exceptionArtifact : new Error(exceptionArtifact);\r\n        if (_userErrorHandler) {\r\n            _userErrorHandler(errParam);\r\n            return;\r\n        }\r\n        var msg = \"[ERROR] callback-registry: User callback for key \\\"\" + key + \"\\\" failed: \" + errParam.stack;\r\n        if (options) {\r\n            switch (options.errorHandling) {\r\n                case \"log\":\r\n                    return console.error(msg);\r\n                case \"silent\":\r\n                    return;\r\n                case \"throw\":\r\n                    throw new Error(msg);\r\n            }\r\n        }\r\n        console.error(msg);\r\n    }\r\n    function clear() {\r\n        callbacks = {};\r\n    }\r\n    function clearKey(key) {\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey) {\r\n            return;\r\n        }\r\n        delete callbacks[key];\r\n    }\r\n    return {\r\n        add: add,\r\n        execute: execute,\r\n        clear: clear,\r\n        clearKey: clearKey\r\n    };\r\n}\r\ncreateRegistry.default = createRegistry;\r\nvar lib = createRegistry;\n\nvar InProcTransport = (function () {\r\n    function InProcTransport(settings, logger) {\r\n        var _this = this;\r\n        this.registry = lib();\r\n        this.gw = settings.facade;\r\n        this.gw.connect(function (_client, message) {\r\n            _this.messageHandler(message);\r\n        }).then(function (client) {\r\n            _this.client = client;\r\n        });\r\n    }\r\n    Object.defineProperty(InProcTransport.prototype, \"isObjectBasedTransport\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    InProcTransport.prototype.sendObject = function (msg) {\r\n        if (this.client) {\r\n            this.client.send(msg);\r\n            return Promise.resolve(undefined);\r\n        }\r\n        else {\r\n            return Promise.reject(\"not connected\");\r\n        }\r\n    };\r\n    InProcTransport.prototype.send = function (_msg) {\r\n        return Promise.reject(\"not supported\");\r\n    };\r\n    InProcTransport.prototype.onMessage = function (callback) {\r\n        return this.registry.add(\"onMessage\", callback);\r\n    };\r\n    InProcTransport.prototype.onConnectedChanged = function (callback) {\r\n        callback(true);\r\n    };\r\n    InProcTransport.prototype.close = function () {\r\n        return Promise.resolve();\r\n    };\r\n    InProcTransport.prototype.open = function () {\r\n        return Promise.resolve();\r\n    };\r\n    InProcTransport.prototype.name = function () {\r\n        return \"in-memory\";\r\n    };\r\n    InProcTransport.prototype.reconnect = function () {\r\n        return Promise.resolve();\r\n    };\r\n    InProcTransport.prototype.messageHandler = function (msg) {\r\n        this.registry.execute(\"onMessage\", msg);\r\n    };\r\n    return InProcTransport;\r\n}());\n\nvar SharedWorkerTransport = (function () {\r\n    function SharedWorkerTransport(workerFile, logger) {\r\n        var _this = this;\r\n        this.logger = logger;\r\n        this.registry = lib();\r\n        this.worker = new SharedWorker(workerFile);\r\n        this.worker.port.onmessage = function (e) {\r\n            _this.messageHandler(e.data);\r\n        };\r\n    }\r\n    Object.defineProperty(SharedWorkerTransport.prototype, \"isObjectBasedTransport\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SharedWorkerTransport.prototype.sendObject = function (msg) {\r\n        this.worker.port.postMessage(msg);\r\n        return Promise.resolve();\r\n    };\r\n    SharedWorkerTransport.prototype.send = function (_msg) {\r\n        return Promise.reject(\"not supported\");\r\n    };\r\n    SharedWorkerTransport.prototype.onMessage = function (callback) {\r\n        return this.registry.add(\"onMessage\", callback);\r\n    };\r\n    SharedWorkerTransport.prototype.onConnectedChanged = function (callback) {\r\n        callback(true);\r\n    };\r\n    SharedWorkerTransport.prototype.close = function () {\r\n        return Promise.resolve();\r\n    };\r\n    SharedWorkerTransport.prototype.open = function () {\r\n        return Promise.resolve();\r\n    };\r\n    SharedWorkerTransport.prototype.name = function () {\r\n        return \"shared-worker\";\r\n    };\r\n    SharedWorkerTransport.prototype.reconnect = function () {\r\n        return Promise.resolve();\r\n    };\r\n    SharedWorkerTransport.prototype.messageHandler = function (msg) {\r\n        this.registry.execute(\"onMessage\", msg);\r\n    };\r\n    return SharedWorkerTransport;\r\n}());\n\nvar Utils = (function () {\r\n    function Utils() {\r\n    }\r\n    Utils.getGDMajorVersion = function () {\r\n        if (typeof window === \"undefined\") {\r\n            return undefined;\r\n        }\r\n        if (!window.glueDesktop) {\r\n            return undefined;\r\n        }\r\n        if (!window.glueDesktop.version) {\r\n            return undefined;\r\n        }\r\n        var ver = Number(window.glueDesktop.version.substr(0, 1));\r\n        return isNaN(ver) ? undefined : ver;\r\n    };\r\n    Utils.isNode = function () {\r\n        if (typeof Utils._isNode !== \"undefined\") {\r\n            return Utils._isNode;\r\n        }\r\n        try {\r\n            Utils._isNode = Object.prototype.toString.call(global.process) === \"[object process]\";\r\n        }\r\n        catch (e) {\r\n            Utils._isNode = false;\r\n        }\r\n        return Utils._isNode;\r\n    };\r\n    return Utils;\r\n}());\n\nvar PromiseWrapper = (function () {\r\n    function PromiseWrapper() {\r\n        var _this = this;\r\n        this.rejected = false;\r\n        this.resolved = false;\r\n        this.promise = new Promise(function (resolve, reject) {\r\n            _this.resolve = function (t) {\r\n                _this.resolved = true;\r\n                resolve(t);\r\n            };\r\n            _this.reject = function (err) {\r\n                _this.rejected = true;\r\n                reject(err);\r\n            };\r\n        });\r\n    }\r\n    PromiseWrapper.delay = function (time) {\r\n        return new Promise(function (resolve) { return setTimeout(resolve, time); });\r\n    };\r\n    Object.defineProperty(PromiseWrapper.prototype, \"ended\", {\r\n        get: function () {\r\n            return this.rejected || this.resolved;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return PromiseWrapper;\r\n}());\n\nvar WebSocketConstructor = Utils.isNode() ? require(\"ws\") : window.WebSocket;\r\nvar WS = (function () {\r\n    function WS(settings, logger) {\r\n        this._running = true;\r\n        this._registry = lib();\r\n        this.wsRequests = [];\r\n        this.settings = settings;\r\n        this.logger = logger;\r\n        if (!this.settings.ws) {\r\n            throw new Error(\"ws is missing\");\r\n        }\r\n    }\r\n    WS.prototype.onMessage = function (callback) {\r\n        return this._registry.add(\"onMessage\", callback);\r\n    };\r\n    WS.prototype.send = function (msg, options) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.waitForSocketConnection(function () {\r\n                var _a;\r\n                try {\r\n                    (_a = _this.ws) === null || _a === void 0 ? void 0 : _a.send(msg);\r\n                    resolve();\r\n                }\r\n                catch (e) {\r\n                    reject(e);\r\n                }\r\n            }, reject);\r\n        });\r\n    };\r\n    WS.prototype.open = function () {\r\n        var _this = this;\r\n        this.logger.info(\"opening ws...\");\r\n        this._running = true;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.waitForSocketConnection(resolve, reject);\r\n        });\r\n    };\r\n    WS.prototype.close = function () {\r\n        this._running = false;\r\n        if (this.ws) {\r\n            this.ws.close();\r\n        }\r\n        return Promise.resolve();\r\n    };\r\n    WS.prototype.onConnectedChanged = function (callback) {\r\n        return this._registry.add(\"onConnectedChanged\", callback);\r\n    };\r\n    WS.prototype.name = function () {\r\n        return \"ws \" + this.settings.ws;\r\n    };\r\n    WS.prototype.reconnect = function () {\r\n        var _a;\r\n        (_a = this.ws) === null || _a === void 0 ? void 0 : _a.close();\r\n        var pw = new PromiseWrapper();\r\n        this.waitForSocketConnection(function () {\r\n            pw.resolve();\r\n        });\r\n        return pw.promise;\r\n    };\r\n    WS.prototype.waitForSocketConnection = function (callback, failed) {\r\n        var _a;\r\n        failed = (failed !== null && failed !== void 0 ? failed : (function () { }));\r\n        if (!this._running) {\r\n            failed(\"wait for socket on \" + this.settings.ws + \" failed - socket closed by user\");\r\n            return;\r\n        }\r\n        if (((_a = this.ws) === null || _a === void 0 ? void 0 : _a.readyState) === 1) {\r\n            callback();\r\n            return;\r\n        }\r\n        this.wsRequests.push({ callback: callback, failed: failed });\r\n        if (this.wsRequests.length > 1) {\r\n            return;\r\n        }\r\n        this.openSocket();\r\n    };\r\n    WS.prototype.openSocket = function (retryInterval, retriesLeft) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            var _this = this;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        if (retryInterval === undefined) {\r\n                            retryInterval = this.settings.reconnectInterval;\r\n                        }\r\n                        if (retriesLeft !== undefined) {\r\n                            if (retriesLeft === 0) {\r\n                                this.notifyForSocketState(\"wait for socket on \" + this.settings.ws + \" failed - no more retries left\");\r\n                                return [2];\r\n                            }\r\n                            this.logger.debug(\"will retry \" + retriesLeft + \" more times (every \" + retryInterval + \" ms)\");\r\n                        }\r\n                        _b.label = 1;\r\n                    case 1:\r\n                        _b.trys.push([1, 3, , 4]);\r\n                        return [4, this.initiateSocket()];\r\n                    case 2:\r\n                        _b.sent();\r\n                        this.notifyForSocketState();\r\n                        return [3, 4];\r\n                    case 3:\r\n                        _a = _b.sent();\r\n                        setTimeout(function () {\r\n                            var retries = retriesLeft === undefined ? undefined : retriesLeft - 1;\r\n                            _this.openSocket(retryInterval, retries);\r\n                        }, retryInterval);\r\n                        return [3, 4];\r\n                    case 4: return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    WS.prototype.initiateSocket = function () {\r\n        var _this = this;\r\n        var pw = new PromiseWrapper();\r\n        this.logger.debug(\"initiating ws to \" + this.settings.ws + \"...\");\r\n        this.ws = new WebSocketConstructor(this.settings.ws || \"\");\r\n        this.ws.onerror = function (err) {\r\n            var reason = \"\";\r\n            try {\r\n                reason = JSON.stringify(err);\r\n            }\r\n            catch (error) {\r\n                var seen_1 = new WeakSet();\r\n                var replacer = function (key, value) {\r\n                    if (typeof value === \"object\" && value !== null) {\r\n                        if (seen_1.has(value)) {\r\n                            return;\r\n                        }\r\n                        seen_1.add(value);\r\n                    }\r\n                    return value;\r\n                };\r\n                reason = JSON.stringify(err, replacer);\r\n            }\r\n            pw.reject(\"error\");\r\n            _this.notifyStatusChanged(false, reason);\r\n        };\r\n        this.ws.onclose = function (err) {\r\n            _this.logger.info(\"ws closed \" + err);\r\n            pw.reject(\"closed\");\r\n            _this.notifyStatusChanged(false);\r\n        };\r\n        this.ws.onopen = function () {\r\n            var _a;\r\n            _this.logger.info(\"ws opened \" + ((_a = _this.settings.identity) === null || _a === void 0 ? void 0 : _a.application));\r\n            pw.resolve();\r\n            _this.notifyStatusChanged(true);\r\n        };\r\n        this.ws.onmessage = function (message) {\r\n            _this._registry.execute(\"onMessage\", message.data);\r\n        };\r\n        return pw.promise;\r\n    };\r\n    WS.prototype.notifyForSocketState = function (error) {\r\n        this.wsRequests.forEach(function (wsRequest) {\r\n            if (error) {\r\n                if (wsRequest.failed) {\r\n                    wsRequest.failed(error);\r\n                }\r\n            }\r\n            else {\r\n                wsRequest.callback();\r\n            }\r\n        });\r\n        this.wsRequests = [];\r\n    };\r\n    WS.prototype.notifyStatusChanged = function (status, reason) {\r\n        this._registry.execute(\"onConnectedChanged\", status, reason);\r\n    };\r\n    return WS;\r\n}());\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nvar randomFromSeed = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed$1(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nvar alphabet_1 = {\n    characters: characters,\n    seed: setSeed$1,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nfunction randomByte() {\n    if (!crypto || !crypto.getRandomValues) {\n        return Math.floor(Math.random() * 256) & 0x30;\n    }\n    var dest = new Uint8Array(1);\n    crypto.getRandomValues(dest);\n    return dest[0] & 0x30;\n}\n\nvar randomByteBrowser = randomByte;\n\nfunction encode(lookup, number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + lookup( ( (number >> (4 * loopCounter)) & 0x0f ) | randomByteBrowser() );\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nvar encode_1 = encode;\n\n/**\n * Decode the id to get the version and worker\n * Mainly for debugging and testing.\n * @param id - the shortid-generated id.\n */\nfunction decode(id) {\n    var characters = alphabet_1.shuffled();\n    return {\n        version: characters.indexOf(id.substr(0, 1)) & 0x0f,\n        worker: characters.indexOf(id.substr(1, 1)) & 0x0f\n    };\n}\n\nvar decode_1 = decode;\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var characters = alphabet_1.characters();\n    var len = id.length;\n    for(var i = 0; i < len;i++) {\n        if (characters.indexOf(id[i]) === -1) {\n            return false;\n        }\n    }\n    return true;\n}\n\nvar isValid = isShortId;\n\nvar lib$1 = createCommonjsModule(function (module) {\n\n\n\n\n\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1459707606518;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 6;\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId =  0;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + encode_1(alphabet_1.lookup, version);\n    str = str + encode_1(alphabet_1.lookup, clusterWorkerId);\n    if (counter > 0) {\n        str = str + encode_1(alphabet_1.lookup, counter);\n    }\n    str = str + encode_1(alphabet_1.lookup, seconds);\n\n    return str;\n}\n\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet_1.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet_1.characters(newCharacters);\n    }\n\n    return alphabet_1.shuffled();\n}\n\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.decode = decode_1;\nmodule.exports.isValid = isValid;\n});\nvar lib_1 = lib$1.generate;\nvar lib_2 = lib$1.seed;\nvar lib_3 = lib$1.worker;\nvar lib_4 = lib$1.characters;\nvar lib_5 = lib$1.decode;\nvar lib_6 = lib$1.isValid;\n\nvar shortid = lib$1;\n\nfunction domainSession (domain, connection, logger, successMessages, errorMessages) {\r\n    if (domain == null) {\r\n        domain = \"global\";\r\n    }\r\n    successMessages = successMessages || [\"success\"];\r\n    errorMessages = errorMessages || [\"error\"];\r\n    var isJoined = false;\r\n    var tryReconnecting = false;\r\n    var _latestOptions;\r\n    var _connectionOn = false;\r\n    var callbacks = lib();\r\n    connection.disconnected(handleConnectionDisconnected);\r\n    connection.loggedIn(handleConnectionLoggedIn);\r\n    connection.on(\"success\", function (msg) { return handleSuccessMessage(msg); });\r\n    connection.on(\"error\", function (msg) { return handleErrorMessage(msg); });\r\n    connection.on(\"result\", function (msg) { return handleSuccessMessage(msg); });\r\n    if (successMessages) {\r\n        successMessages.forEach(function (sm) {\r\n            connection.on(sm, function (msg) { return handleSuccessMessage(msg); });\r\n        });\r\n    }\r\n    if (errorMessages) {\r\n        errorMessages.forEach(function (sm) {\r\n            connection.on(sm, function (msg) { return handleErrorMessage(msg); });\r\n        });\r\n    }\r\n    var requestsMap = {};\r\n    function join(options) {\r\n        _latestOptions = options;\r\n        return new Promise(function (resolve, reject) {\r\n            if (isJoined) {\r\n                resolve();\r\n                return;\r\n            }\r\n            var joinPromise;\r\n            if (domain === \"global\") {\r\n                joinPromise = _connectionOn ? Promise.resolve({}) : Promise.reject(\"not connected to gateway\");\r\n            }\r\n            else {\r\n                logger.debug(\"joining domain \" + domain);\r\n                var joinMsg = {\r\n                    type: \"join\",\r\n                    destination: domain,\r\n                    domain: \"global\",\r\n                    options: options,\r\n                };\r\n                joinPromise = send(joinMsg);\r\n            }\r\n            joinPromise\r\n                .then(function () {\r\n                handleJoined();\r\n                resolve();\r\n            })\r\n                .catch(function (err) {\r\n                logger.debug(\"error joining \" + domain + \" domain: \" + JSON.stringify(err));\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n    function leave() {\r\n        if (domain === \"global\") {\r\n            return Promise.resolve();\r\n        }\r\n        logger.debug(\"stopping session \" + domain + \"...\");\r\n        var leaveMsg = {\r\n            type: \"leave\",\r\n            destination: domain,\r\n            domain: \"global\",\r\n        };\r\n        tryReconnecting = false;\r\n        return send(leaveMsg).then(function () {\r\n            isJoined = false;\r\n            callbacks.execute(\"onLeft\");\r\n        });\r\n    }\r\n    function handleJoined() {\r\n        logger.debug(\"did join \" + domain);\r\n        isJoined = true;\r\n        var wasReconnect = tryReconnecting;\r\n        tryReconnecting = false;\r\n        callbacks.execute(\"onJoined\", wasReconnect);\r\n    }\r\n    function handleConnectionDisconnected() {\r\n        _connectionOn = false;\r\n        logger.debug(\"connection is down\");\r\n        isJoined = false;\r\n        tryReconnecting = true;\r\n        callbacks.execute(\"onLeft\", { disconnected: true });\r\n    }\r\n    function handleConnectionLoggedIn() {\r\n        _connectionOn = true;\r\n        if (tryReconnecting) {\r\n            logger.debug(\"connection is now up - trying to reconnect...\");\r\n            join(_latestOptions);\r\n        }\r\n    }\r\n    function onJoined(callback) {\r\n        if (isJoined) {\r\n            callback(false);\r\n        }\r\n        return callbacks.add(\"onJoined\", callback);\r\n    }\r\n    function onLeft(callback) {\r\n        if (!isJoined) {\r\n            callback();\r\n        }\r\n        return callbacks.add(\"onLeft\", callback);\r\n    }\r\n    function handleErrorMessage(msg) {\r\n        if (domain !== msg.domain) {\r\n            return;\r\n        }\r\n        var requestId = msg.request_id;\r\n        if (!requestId) {\r\n            return;\r\n        }\r\n        var entry = requestsMap[requestId];\r\n        if (!entry) {\r\n            return;\r\n        }\r\n        entry.error(msg);\r\n    }\r\n    function handleSuccessMessage(msg) {\r\n        if (msg.domain !== domain) {\r\n            return;\r\n        }\r\n        var requestId = msg.request_id;\r\n        if (!requestId) {\r\n            return;\r\n        }\r\n        var entry = requestsMap[requestId];\r\n        if (!entry) {\r\n            return;\r\n        }\r\n        entry.success(msg);\r\n    }\r\n    function getNextRequestId() {\r\n        return shortid();\r\n    }\r\n    function send(msg, tag, options) {\r\n        options = options || {};\r\n        msg.request_id = msg.request_id || getNextRequestId();\r\n        msg.domain = msg.domain || domain;\r\n        if (!options.skipPeerId) {\r\n            msg.peer_id = connection.peerId;\r\n        }\r\n        var requestId = msg.request_id;\r\n        return new Promise(function (resolve, reject) {\r\n            requestsMap[requestId] = {\r\n                success: function (successMsg) {\r\n                    delete requestsMap[requestId];\r\n                    successMsg._tag = tag;\r\n                    resolve(successMsg);\r\n                },\r\n                error: function (errorMsg) {\r\n                    logger.warn(\"GW error - \" + JSON.stringify(errorMsg) + \" for request \" + JSON.stringify(msg));\r\n                    delete requestsMap[requestId];\r\n                    errorMsg._tag = tag;\r\n                    reject(errorMsg);\r\n                },\r\n            };\r\n            connection\r\n                .send(msg, options)\r\n                .catch(function (err) {\r\n                requestsMap[requestId].error({ err: err });\r\n            });\r\n        });\r\n    }\r\n    function sendFireAndForget(msg) {\r\n        msg.request_id = msg.request_id ? msg.request_id : getNextRequestId();\r\n        msg.domain = msg.domain || domain;\r\n        msg.peer_id = connection.peerId;\r\n        connection.send(msg);\r\n    }\r\n    return {\r\n        join: join,\r\n        leave: leave,\r\n        onJoined: onJoined,\r\n        onLeft: onLeft,\r\n        send: send,\r\n        sendFireAndForget: sendFireAndForget,\r\n        on: function (type, callback) {\r\n            connection.on(type, function (msg) {\r\n                if (msg.domain !== domain) {\r\n                    return;\r\n                }\r\n                try {\r\n                    callback(msg);\r\n                }\r\n                catch (e) {\r\n                    logger.error(\"Callback  failed: \" + e + \" \\n \" + e.stack + \" \\n msg was: \" + JSON.stringify(msg));\r\n                }\r\n            });\r\n        },\r\n        loggedIn: function (callback) { return connection.loggedIn(callback); },\r\n        connected: function (callback) { return connection.connected(callback); },\r\n        disconnected: function (callback) { return connection.disconnected(callback); },\r\n        get peerId() {\r\n            return connection.peerId;\r\n        },\r\n        get domain() {\r\n            return domain;\r\n        },\r\n    };\r\n}\n\nvar GW3ProtocolImpl = (function () {\r\n    function GW3ProtocolImpl(connection, settings, logger) {\r\n        var _this = this;\r\n        this.connection = connection;\r\n        this.settings = settings;\r\n        this.logger = logger;\r\n        this.protocolVersion = 3;\r\n        this.datePrefix = \"#T42_DATE#\";\r\n        this.datePrefixLen = this.datePrefix.length;\r\n        this.dateMinLen = this.datePrefixLen + 1;\r\n        this.datePrefixFirstChar = this.datePrefix[0];\r\n        this.registry = lib();\r\n        this._isLoggedIn = false;\r\n        this.shouldTryLogin = true;\r\n        this.initialLogin = true;\r\n        this.initialLoginAttempts = 3;\r\n        this.sessions = [];\r\n        connection.disconnected(function () {\r\n            _this.handleDisconnected();\r\n        });\r\n        this.ping();\r\n    }\r\n    Object.defineProperty(GW3ProtocolImpl.prototype, \"isLoggedIn\", {\r\n        get: function () {\r\n            return this._isLoggedIn;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    GW3ProtocolImpl.prototype.processStringMessage = function (message) {\r\n        var _this = this;\r\n        var msg = JSON.parse(message, function (key, value) {\r\n            if (typeof value !== \"string\") {\r\n                return value;\r\n            }\r\n            if (value.length < _this.dateMinLen) {\r\n                return value;\r\n            }\r\n            if (value[0] !== _this.datePrefixFirstChar) {\r\n                return value;\r\n            }\r\n            if (value.substring(0, _this.datePrefixLen) !== _this.datePrefix) {\r\n                return value;\r\n            }\r\n            try {\r\n                var milliseconds = parseInt(value.substring(_this.datePrefixLen, value.length), 10);\r\n                if (isNaN(milliseconds)) {\r\n                    return value;\r\n                }\r\n                return new Date(milliseconds);\r\n            }\r\n            catch (ex) {\r\n                return value;\r\n            }\r\n        });\r\n        return {\r\n            msg: msg,\r\n            msgType: msg.type,\r\n        };\r\n    };\r\n    GW3ProtocolImpl.prototype.createStringMessage = function (message) {\r\n        var oldToJson = Date.prototype.toJSON;\r\n        try {\r\n            var datePrefix_1 = this.datePrefix;\r\n            Date.prototype.toJSON = function () {\r\n                return datePrefix_1 + this.getTime();\r\n            };\r\n            var result = JSON.stringify(message);\r\n            return result;\r\n        }\r\n        finally {\r\n            Date.prototype.toJSON = oldToJson;\r\n        }\r\n    };\r\n    GW3ProtocolImpl.prototype.processObjectMessage = function (message) {\r\n        if (!message.type) {\r\n            throw new Error(\"Object should have type property\");\r\n        }\r\n        return {\r\n            msg: message,\r\n            msgType: message.type,\r\n        };\r\n    };\r\n    GW3ProtocolImpl.prototype.createObjectMessage = function (message) {\r\n        return message;\r\n    };\r\n    GW3ProtocolImpl.prototype.login = function (config, reconnect) {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var authentication, token, e_1, _b, helloMsg, sendOptions, welcomeMsg, msg, token, _c, err_1;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        this.logger.debug(\"logging in...\");\r\n                        this.loginConfig = config;\r\n                        if (!this.loginConfig) {\r\n                            this.loginConfig = { username: \"\", password: \"\" };\r\n                        }\r\n                        this.shouldTryLogin = true;\r\n                        authentication = {};\r\n                        this.connection.gatewayToken = config.gatewayToken;\r\n                        if (!config.gatewayToken) return [3, 5];\r\n                        if (!reconnect) return [3, 4];\r\n                        _d.label = 1;\r\n                    case 1:\r\n                        _d.trys.push([1, 3, , 4]);\r\n                        return [4, this.getNewGWToken()];\r\n                    case 2:\r\n                        token = _d.sent();\r\n                        config.gatewayToken = token;\r\n                        return [3, 4];\r\n                    case 3:\r\n                        e_1 = _d.sent();\r\n                        this.logger.warn(\"failed to get GW token when reconnecting \" + (((_a = e_1) === null || _a === void 0 ? void 0 : _a.message) || e_1));\r\n                        return [3, 4];\r\n                    case 4:\r\n                        authentication.method = \"gateway-token\";\r\n                        authentication.token = config.gatewayToken;\r\n                        this.connection.gatewayToken = config.gatewayToken;\r\n                        return [3, 10];\r\n                    case 5:\r\n                        if (!(config.flowName === \"sspi\")) return [3, 9];\r\n                        authentication.provider = \"win\";\r\n                        authentication.method = \"access-token\";\r\n                        if (!(config.flowCallback && config.sessionId)) return [3, 7];\r\n                        _b = authentication;\r\n                        return [4, config.flowCallback(config.sessionId, null)];\r\n                    case 6:\r\n                        _b.token =\r\n                            (_d.sent())\r\n                                .data\r\n                                .toString(\"base64\");\r\n                        return [3, 8];\r\n                    case 7: throw new Error(\"Invalid SSPI config\");\r\n                    case 8: return [3, 10];\r\n                    case 9:\r\n                        if (config.token) {\r\n                            authentication.method = \"access-token\";\r\n                            authentication.token = config.token;\r\n                        }\r\n                        else if (config.username) {\r\n                            authentication.method = \"secret\";\r\n                            authentication.login = config.username;\r\n                            authentication.secret = config.password;\r\n                        }\r\n                        else {\r\n                            throw new Error(\"invalid auth message\" + JSON.stringify(config));\r\n                        }\r\n                        _d.label = 10;\r\n                    case 10:\r\n                        helloMsg = {\r\n                            type: \"hello\",\r\n                            identity: this.settings.identity,\r\n                            authentication: authentication\r\n                        };\r\n                        if (config.sessionId) {\r\n                            helloMsg.request_id = config.sessionId;\r\n                        }\r\n                        this.globalDomain = domainSession(\"global\", this.connection, this.logger.subLogger(\"global-domain\"), [\r\n                            \"welcome\",\r\n                            \"token\",\r\n                            \"authentication-request\"\r\n                        ]);\r\n                        sendOptions = { skipPeerId: true };\r\n                        if (this.initialLogin) {\r\n                            sendOptions.retryInterval = this.settings.reconnectInterval;\r\n                            sendOptions.maxRetries = this.settings.reconnectAttempts;\r\n                        }\r\n                        _d.label = 11;\r\n                    case 11:\r\n                        _d.trys.push([11, 19, 20, 21]);\r\n                        welcomeMsg = void 0;\r\n                        _d.label = 12;\r\n                    case 12:\r\n                        return [4, this.globalDomain.send(helloMsg, undefined, sendOptions)];\r\n                    case 13:\r\n                        msg = _d.sent();\r\n                        if (!(msg.type === \"authentication-request\")) return [3, 16];\r\n                        token = Buffer.from(msg.authentication.token, \"base64\");\r\n                        if (!(config.flowCallback && config.sessionId)) return [3, 15];\r\n                        _c = helloMsg.authentication;\r\n                        return [4, config.flowCallback(config.sessionId, token)];\r\n                    case 14:\r\n                        _c.token =\r\n                            (_d.sent())\r\n                                .data\r\n                                .toString(\"base64\");\r\n                        _d.label = 15;\r\n                    case 15:\r\n                        helloMsg.request_id = config.sessionId;\r\n                        return [3, 12];\r\n                    case 16:\r\n                        if (msg.type === \"welcome\") {\r\n                            welcomeMsg = msg;\r\n                            return [3, 18];\r\n                        }\r\n                        else if (msg.type === \"error\") {\r\n                            throw new Error(\"Authentication failed: \" + msg.reason);\r\n                        }\r\n                        else {\r\n                            throw new Error(\"Unexpected message type during authentication: \" + msg.type);\r\n                        }\r\n                    case 17: return [3, 12];\r\n                    case 18:\r\n                        this.initialLogin = false;\r\n                        this.logger.info(\"login successful with peerId \" + welcomeMsg.peer_id);\r\n                        this.connection.peerId = welcomeMsg.peer_id;\r\n                        this.connection.resolvedIdentity = welcomeMsg.resolved_identity;\r\n                        this.connection.availableDomains = welcomeMsg.available_domains;\r\n                        if (welcomeMsg.options) {\r\n                            this.connection.token = welcomeMsg.options.access_token;\r\n                            this.connection.info = welcomeMsg.options.info;\r\n                        }\r\n                        this.setLoggedIn(true);\r\n                        return [2, welcomeMsg.resolved_identity];\r\n                    case 19:\r\n                        err_1 = _d.sent();\r\n                        this.logger.error(\"error sending hello message - \" + (err_1.message || err_1.msg || err_1.reason || err_1));\r\n                        throw err_1;\r\n                    case 20:\r\n                        if (config && config.flowCallback && config.sessionId) {\r\n                            config.flowCallback(config.sessionId, null);\r\n                        }\r\n                        return [7];\r\n                    case 21: return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    GW3ProtocolImpl.prototype.logout = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var promises;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.logger.debug(\"logging out...\");\r\n                        this.shouldTryLogin = false;\r\n                        if (this.pingTimer) {\r\n                            clearTimeout(this.pingTimer);\r\n                        }\r\n                        promises = this.sessions.map(function (session) {\r\n                            session.leave();\r\n                        });\r\n                        return [4, Promise.all(promises)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    GW3ProtocolImpl.prototype.loggedIn = function (callback) {\r\n        if (this._isLoggedIn) {\r\n            callback();\r\n        }\r\n        return this.registry.add(\"onLoggedIn\", callback);\r\n    };\r\n    GW3ProtocolImpl.prototype.domain = function (domainName, domainLogger, successMessages, errorMessages) {\r\n        var session = this.sessions.filter(function (s) { return s.domain === domainName; })[0];\r\n        if (!session) {\r\n            session = domainSession(domainName, this.connection, domainLogger, successMessages, errorMessages);\r\n            this.sessions.push(session);\r\n        }\r\n        return session;\r\n    };\r\n    GW3ProtocolImpl.prototype.handleDisconnected = function () {\r\n        var _this = this;\r\n        this.setLoggedIn(false);\r\n        var tryToLogin = this.shouldTryLogin;\r\n        if (tryToLogin && this.initialLogin) {\r\n            if (this.initialLoginAttempts <= 0) {\r\n                return;\r\n            }\r\n            this.initialLoginAttempts--;\r\n        }\r\n        this.logger.debug(\"disconnected - will try new login?\" + this.shouldTryLogin);\r\n        if (this.shouldTryLogin) {\r\n            if (!this.loginConfig) {\r\n                throw new Error(\"no login info\");\r\n            }\r\n            this.connection.login(this.loginConfig, true)\r\n                .catch(function () {\r\n                setTimeout(_this.handleDisconnected, 1000);\r\n            });\r\n        }\r\n    };\r\n    GW3ProtocolImpl.prototype.setLoggedIn = function (value) {\r\n        this._isLoggedIn = value;\r\n        if (this._isLoggedIn) {\r\n            this.registry.execute(\"onLoggedIn\");\r\n        }\r\n    };\r\n    GW3ProtocolImpl.prototype.ping = function () {\r\n        if (!this.shouldTryLogin) {\r\n            return;\r\n        }\r\n        if (this._isLoggedIn) {\r\n            this.connection.send({ type: \"ping\" });\r\n        }\r\n        this.pingTimer = setTimeout(this.ping, 30 * 1000);\r\n    };\r\n    GW3ProtocolImpl.prototype.authToken = function () {\r\n        var createTokenReq = {\r\n            type: \"create-token\"\r\n        };\r\n        if (!this.globalDomain) {\r\n            return Promise.reject(new Error(\"no global domain session\"));\r\n        }\r\n        return this.globalDomain.send(createTokenReq)\r\n            .then(function (res) {\r\n            return res.token;\r\n        });\r\n    };\r\n    GW3ProtocolImpl.prototype.getNewGWToken = function () {\r\n        if (typeof window !== undefined) {\r\n            var glue42gd = window.glue42gd;\r\n            if (glue42gd) {\r\n                return glue42gd.getGWToken();\r\n            }\r\n        }\r\n        return Promise.reject(new Error(\"not running in GD\"));\r\n    };\r\n    return GW3ProtocolImpl;\r\n}());\n\nvar MessageReplayerImpl = (function () {\r\n    function MessageReplayerImpl(specs) {\r\n        this.specsNames = [];\r\n        this.messages = {};\r\n        this.subs = {};\r\n        this.subsRefCount = {};\r\n        this.specs = {};\r\n        for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {\r\n            var spec = specs_1[_i];\r\n            this.specs[spec.name] = spec;\r\n            this.specsNames.push(spec.name);\r\n        }\r\n    }\r\n    MessageReplayerImpl.prototype.init = function (connection) {\r\n        var _this = this;\r\n        this.connection = connection;\r\n        for (var _i = 0, _a = this.specsNames; _i < _a.length; _i++) {\r\n            var name_1 = _a[_i];\r\n            var _loop_1 = function (type) {\r\n                var refCount = this_1.subsRefCount[type];\r\n                if (!refCount) {\r\n                    refCount = 0;\r\n                }\r\n                refCount += 1;\r\n                this_1.subsRefCount[type] = refCount;\r\n                if (refCount > 1) {\r\n                    return \"continue\";\r\n                }\r\n                var sub = connection.on(type, function (msg) { return _this.processMessage(type, msg); });\r\n                this_1.subs[type] = sub;\r\n            };\r\n            var this_1 = this;\r\n            for (var _b = 0, _c = this.specs[name_1].types; _b < _c.length; _b++) {\r\n                var type = _c[_b];\r\n                _loop_1(type);\r\n            }\r\n        }\r\n    };\r\n    MessageReplayerImpl.prototype.processMessage = function (type, msg) {\r\n        if (this.isDone || !msg) {\r\n            return;\r\n        }\r\n        for (var _i = 0, _a = this.specsNames; _i < _a.length; _i++) {\r\n            var name_2 = _a[_i];\r\n            if (this.specs[name_2].types.indexOf(type) !== -1) {\r\n                var messages = this.messages[name_2] || [];\r\n                this.messages[name_2] = messages;\r\n                messages.push(msg);\r\n            }\r\n        }\r\n    };\r\n    MessageReplayerImpl.prototype.drain = function (name, callback) {\r\n        var _a;\r\n        if (callback) {\r\n            (this.messages[name] || []).forEach(callback);\r\n        }\r\n        delete this.messages[name];\r\n        for (var _i = 0, _b = this.specs[name].types; _i < _b.length; _i++) {\r\n            var type = _b[_i];\r\n            this.subsRefCount[type] -= 1;\r\n            if (this.subsRefCount[type] <= 0) {\r\n                (_a = this.connection) === null || _a === void 0 ? void 0 : _a.off(this.subs[type]);\r\n                delete this.subs[type];\r\n                delete this.subsRefCount[type];\r\n            }\r\n        }\r\n        delete this.specs[name];\r\n        if (!this.specs.length) {\r\n            this.isDone = true;\r\n        }\r\n    };\r\n    return MessageReplayerImpl;\r\n}());\n\nvar Connection = (function () {\r\n    function Connection(settings, logger) {\r\n        this.settings = settings;\r\n        this.logger = logger;\r\n        this.messageHandlers = {};\r\n        this.ids = 1;\r\n        this.registry = lib();\r\n        this._connected = false;\r\n        this.isTrace = false;\r\n        settings = settings || {};\r\n        settings.reconnectAttempts = settings.reconnectAttempts || 10;\r\n        settings.reconnectInterval = settings.reconnectInterval || 1000;\r\n        if (settings.inproc) {\r\n            this.transport = new InProcTransport(settings.inproc, logger.subLogger(\"inMemory\"));\r\n        }\r\n        else if (settings.sharedWorker) {\r\n            this.transport = new SharedWorkerTransport(settings.sharedWorker, logger.subLogger(\"shared-worker\"));\r\n        }\r\n        else if (settings.ws !== undefined) {\r\n            this.transport = new WS(settings, logger.subLogger(\"ws\"));\r\n        }\r\n        else {\r\n            throw new Error(\"No connection information specified\");\r\n        }\r\n        this.isTrace = logger.canPublish(\"trace\");\r\n        logger.info(\"starting with \" + this.transport.name() + \" transport\");\r\n        this.protocol = new GW3ProtocolImpl(this, settings, logger.subLogger(\"protocol\"));\r\n        this.transport.onConnectedChanged(this.handleConnectionChanged.bind(this));\r\n        this.transport.onMessage(this.handleTransportMessage.bind(this));\r\n        if (settings.replaySpecs && settings.replaySpecs.length) {\r\n            this.replayer = new MessageReplayerImpl(settings.replaySpecs);\r\n            this.replayer.init(this);\r\n        }\r\n    }\r\n    Object.defineProperty(Connection.prototype, \"protocolVersion\", {\r\n        get: function () {\r\n            var _a;\r\n            return (_a = this.protocol) === null || _a === void 0 ? void 0 : _a.protocolVersion;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Connection.prototype.send = function (message, options) {\r\n        if (this.transport.sendObject &&\r\n            this.transport.isObjectBasedTransport) {\r\n            var msg = this.protocol.createObjectMessage(message);\r\n            if (this.isTrace) {\r\n                this.logger.trace(\">> \" + JSON.stringify(msg));\r\n            }\r\n            return this.transport.sendObject(msg, options);\r\n        }\r\n        else {\r\n            var strMessage = this.protocol.createStringMessage(message);\r\n            if (this.isTrace) {\r\n                this.logger.trace(\">> \" + strMessage);\r\n            }\r\n            return this.transport.send(strMessage, options);\r\n        }\r\n    };\r\n    Connection.prototype.on = function (type, messageHandler) {\r\n        type = type.toLowerCase();\r\n        if (this.messageHandlers[type] === undefined) {\r\n            this.messageHandlers[type] = {};\r\n        }\r\n        var id = this.ids++;\r\n        this.messageHandlers[type][id] = messageHandler;\r\n        return {\r\n            type: type,\r\n            id: id,\r\n        };\r\n    };\r\n    Connection.prototype.off = function (info) {\r\n        delete this.messageHandlers[info.type.toLowerCase()][info.id];\r\n    };\r\n    Object.defineProperty(Connection.prototype, \"isConnected\", {\r\n        get: function () {\r\n            return this.protocol.isLoggedIn;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Connection.prototype.connected = function (callback) {\r\n        var _this = this;\r\n        return this.protocol.loggedIn(function () {\r\n            callback(_this.settings.ws || _this.settings.sharedWorker || \"\");\r\n        });\r\n    };\r\n    Connection.prototype.disconnected = function (callback) {\r\n        return this.registry.add(\"disconnected\", callback);\r\n    };\r\n    Connection.prototype.login = function (authRequest, reconnect) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var identity;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4, this.transport.open()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        identity = this.protocol.login(authRequest, reconnect);\r\n                        return [2, identity];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Connection.prototype.logout = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4, this.protocol.logout()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [4, this.transport.close()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Connection.prototype.loggedIn = function (callback) {\r\n        return this.protocol.loggedIn(callback);\r\n    };\r\n    Connection.prototype.domain = function (domain, successMessages, errorMessages) {\r\n        return this.protocol.domain(domain, this.logger.subLogger(\"domain=\" + domain), successMessages, errorMessages);\r\n    };\r\n    Connection.prototype.authToken = function () {\r\n        return this.protocol.authToken();\r\n    };\r\n    Connection.prototype.reconnect = function () {\r\n        return this.transport.reconnect();\r\n    };\r\n    Connection.prototype.distributeMessage = function (message, type) {\r\n        var _this = this;\r\n        var handlers = this.messageHandlers[type.toLowerCase()];\r\n        if (handlers !== undefined) {\r\n            Object.keys(handlers).forEach(function (handlerId) {\r\n                var handler = handlers[handlerId];\r\n                if (handler !== undefined) {\r\n                    try {\r\n                        handler(message);\r\n                    }\r\n                    catch (error) {\r\n                        _this.logger.error(\"Message handler failed with \" + error.stack);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    Connection.prototype.handleConnectionChanged = function (connected) {\r\n        if (this._connected === connected) {\r\n            return;\r\n        }\r\n        this._connected = connected;\r\n        if (connected) {\r\n            this.registry.execute(\"connected\");\r\n        }\r\n        else {\r\n            this.registry.execute(\"disconnected\");\r\n        }\r\n    };\r\n    Connection.prototype.handleTransportMessage = function (msg) {\r\n        var msgObj;\r\n        if (typeof msg === \"string\") {\r\n            msgObj = this.protocol.processStringMessage(msg);\r\n        }\r\n        else {\r\n            msgObj = this.protocol.processObjectMessage(msg);\r\n        }\r\n        if (this.isTrace) {\r\n            this.logger.trace(\"<< \" + JSON.stringify(msgObj));\r\n        }\r\n        this.distributeMessage(msgObj.msg, msgObj.msgType);\r\n    };\r\n    return Connection;\r\n}());\n\nvar order = [\"trace\", \"debug\", \"info\", \"warn\", \"error\", \"off\"];\r\nvar Logger = (function () {\r\n    function Logger(name, parent, logFn) {\r\n        this.name = name;\r\n        this.parent = parent;\r\n        this.subLoggers = [];\r\n        this.logFn = console;\r\n        this.customLogFn = false;\r\n        this.name = name;\r\n        if (parent) {\r\n            this.path = parent.path + \".\" + name;\r\n        }\r\n        else {\r\n            this.path = name;\r\n        }\r\n        this.loggerFullName = \"[\" + this.path + \"]\";\r\n        this.includeTimeAndLevel = !logFn;\r\n        if (logFn) {\r\n            this.logFn = logFn;\r\n            this.customLogFn = true;\r\n        }\r\n    }\r\n    Logger.prototype.subLogger = function (name) {\r\n        var existingSub = this.subLoggers.filter(function (subLogger) {\r\n            return subLogger.name === name;\r\n        })[0];\r\n        if (existingSub !== undefined) {\r\n            return existingSub;\r\n        }\r\n        Object.keys(this).forEach(function (key) {\r\n            if (key === name) {\r\n                throw new Error(\"This sub logger name is not allowed.\");\r\n            }\r\n        });\r\n        var sub = new Logger(name, this, this.customLogFn ? this.logFn : undefined);\r\n        this.subLoggers.push(sub);\r\n        return sub;\r\n    };\r\n    Logger.prototype.publishLevel = function (level) {\r\n        var _a;\r\n        if (level) {\r\n            this._publishLevel = level;\r\n        }\r\n        return this._publishLevel || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.publishLevel());\r\n    };\r\n    Logger.prototype.consoleLevel = function (level) {\r\n        var _a;\r\n        if (level) {\r\n            this._consoleLevel = level;\r\n        }\r\n        return this._consoleLevel || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.consoleLevel());\r\n    };\r\n    Logger.prototype.log = function (message, level) {\r\n        this.publishMessage(level || \"info\", message);\r\n    };\r\n    Logger.prototype.trace = function (message) {\r\n        this.log(message, \"trace\");\r\n    };\r\n    Logger.prototype.debug = function (message) {\r\n        this.log(message, \"debug\");\r\n    };\r\n    Logger.prototype.info = function (message) {\r\n        this.log(message, \"info\");\r\n    };\r\n    Logger.prototype.warn = function (message) {\r\n        this.log(message, \"warn\");\r\n    };\r\n    Logger.prototype.error = function (message) {\r\n        this.log(message, \"error\");\r\n    };\r\n    Logger.prototype.canPublish = function (level, compareWith) {\r\n        var levelIdx = order.indexOf(level);\r\n        var restrictionIdx = order.indexOf(compareWith || this.consoleLevel() || \"trace\");\r\n        return levelIdx >= restrictionIdx;\r\n    };\r\n    Logger.prototype.publishMessage = function (level, message) {\r\n        var _a, _b;\r\n        var loggerName = this.loggerFullName;\r\n        if (level === \"error\") {\r\n            var e = new Error();\r\n            if (e.stack) {\r\n                message =\r\n                    message +\r\n                        \"\\n\" +\r\n                        e.stack\r\n                            .split(\"\\n\")\r\n                            .slice(3)\r\n                            .join(\"\\n\");\r\n            }\r\n        }\r\n        if (this.canPublish(level, this.publishLevel())) {\r\n            if ((_a = Logger.Interop) === null || _a === void 0 ? void 0 : _a.methods({ name: Logger.InteropMethodName })) {\r\n                (_b = Logger.Interop) === null || _b === void 0 ? void 0 : _b.invoke(Logger.InteropMethodName, {\r\n                    msg: \"\" + message,\r\n                    logger: loggerName,\r\n                    level: level\r\n                });\r\n            }\r\n        }\r\n        if (this.canPublish(level)) {\r\n            var prefix = \"\";\r\n            if (this.includeTimeAndLevel) {\r\n                var date = new Date();\r\n                var time = date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds() + \":\" + date.getMilliseconds();\r\n                prefix = \"[\" + time + \"] [\" + level + \"] \";\r\n            }\r\n            var toPrint = \"\" + prefix + loggerName + \": \" + message;\r\n            switch (level) {\r\n                case \"trace\":\r\n                    this.logFn.debug(toPrint);\r\n                    break;\r\n                case \"debug\":\r\n                    if (this.logFn.debug) {\r\n                        this.logFn.debug(toPrint);\r\n                    }\r\n                    else {\r\n                        this.logFn.log(toPrint);\r\n                    }\r\n                    break;\r\n                case \"info\":\r\n                    this.logFn.info(toPrint);\r\n                    break;\r\n                case \"warn\":\r\n                    this.logFn.warn(toPrint);\r\n                    break;\r\n                case \"error\":\r\n                    this.logFn.error(toPrint);\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n    Logger.InteropMethodName = \"T42.AppLogger.Log\";\r\n    return Logger;\r\n}());\n\nvar GW_MESSAGE_CREATE_CONTEXT = \"create-context\";\r\nvar GW_MESSAGE_ACTIVITY_CREATED = \"created\";\r\nvar GW_MESSAGE_ACTIVITY_DESTROYED = \"destroyed\";\r\nvar GW_MESSAGE_CONTEXT_CREATED = \"context-created\";\r\nvar GW_MESSAGE_CONTEXT_ADDED = \"context-added\";\r\nvar GW_MESSAGE_SUBSCRIBE_CONTEXT = \"subscribe-context\";\r\nvar GW_MESSAGE_SUBSCRIBED_CONTEXT = \"subscribed-context\";\r\nvar GW_MESSAGE_UNSUBSCRIBE_CONTEXT = \"unsubscribe-context\";\r\nvar GW_MESSAGE_DESTROY_CONTEXT = \"destroy-context\";\r\nvar GW_MESSAGE_CONTEXT_DESTROYED = \"context-destroyed\";\r\nvar GW_MESSAGE_UPDATE_CONTEXT = \"update-context\";\r\nvar GW_MESSAGE_CONTEXT_UPDATED = \"context-updated\";\r\nvar GW_MESSAGE_JOINED_ACTIVITY = \"joined\";\n\nvar ContextMessageReplaySpec = {\r\n    get name() {\r\n        return \"context\";\r\n    },\r\n    get types() {\r\n        return [\r\n            GW_MESSAGE_CREATE_CONTEXT,\r\n            GW_MESSAGE_ACTIVITY_CREATED,\r\n            GW_MESSAGE_ACTIVITY_DESTROYED,\r\n            GW_MESSAGE_CONTEXT_CREATED,\r\n            GW_MESSAGE_CONTEXT_ADDED,\r\n            GW_MESSAGE_SUBSCRIBE_CONTEXT,\r\n            GW_MESSAGE_SUBSCRIBED_CONTEXT,\r\n            GW_MESSAGE_UNSUBSCRIBE_CONTEXT,\r\n            GW_MESSAGE_DESTROY_CONTEXT,\r\n            GW_MESSAGE_CONTEXT_DESTROYED,\r\n            GW_MESSAGE_UPDATE_CONTEXT,\r\n            GW_MESSAGE_CONTEXT_UPDATED,\r\n            GW_MESSAGE_JOINED_ACTIVITY\r\n        ];\r\n    }\r\n};\n\nvar version = \"5.0.0-beta.11\";\n\nfunction prepareConfig (configuration, ext, glue42gd) {\r\n    var _a, _b, _c, _d;\r\n    var nodeStartingContext;\r\n    if (Utils.isNode()) {\r\n        var startingContextString = process.env._GD_STARTING_CONTEXT_;\r\n        if (startingContextString) {\r\n            try {\r\n                nodeStartingContext = JSON.parse(startingContextString);\r\n            }\r\n            catch (_e) {\r\n            }\r\n        }\r\n    }\r\n    function getConnection() {\r\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\r\n        var gwConfig = configuration.gateway;\r\n        var protocolVersion = (_b = (_a = gwConfig) === null || _a === void 0 ? void 0 : _a.protocolVersion, (_b !== null && _b !== void 0 ? _b : 3));\r\n        var reconnectInterval = (_c = gwConfig) === null || _c === void 0 ? void 0 : _c.reconnectInterval;\r\n        var reconnectAttempts = (_d = gwConfig) === null || _d === void 0 ? void 0 : _d.reconnectAttempts;\r\n        var defaultWs = \"ws://localhost:8385\";\r\n        var ws = (_e = gwConfig) === null || _e === void 0 ? void 0 : _e.ws;\r\n        var sharedWorker = (_f = gwConfig) === null || _f === void 0 ? void 0 : _f.sharedWorker;\r\n        var inproc = (_g = gwConfig) === null || _g === void 0 ? void 0 : _g.inproc;\r\n        if (glue42gd) {\r\n            ws = glue42gd.gwURL;\r\n        }\r\n        if (Utils.isNode() && nodeStartingContext && nodeStartingContext.gwURL) {\r\n            ws = nodeStartingContext.gwURL;\r\n        }\r\n        if (!ws && !sharedWorker && !inproc) {\r\n            ws = defaultWs;\r\n        }\r\n        var instanceId;\r\n        var windowId;\r\n        var pid;\r\n        var environment;\r\n        var region;\r\n        var appName = getApplication();\r\n        var uniqueAppName = appName;\r\n        if (typeof glue42gd !== \"undefined\") {\r\n            windowId = glue42gd.windowId;\r\n            pid = glue42gd.pid;\r\n            if (glue42gd.env) {\r\n                environment = glue42gd.env.env;\r\n                region = glue42gd.env.region;\r\n            }\r\n            uniqueAppName = (_h = glue42gd.application, (_h !== null && _h !== void 0 ? _h : \"glue-app\"));\r\n            instanceId = glue42gd.appInstanceId;\r\n        }\r\n        else if (Utils.isNode()) {\r\n            pid = process.pid;\r\n            if (nodeStartingContext) {\r\n                environment = nodeStartingContext.env;\r\n                region = nodeStartingContext.region;\r\n                instanceId = nodeStartingContext.instanceId;\r\n            }\r\n        }\r\n        else {\r\n            windowId = window.name || shortid();\r\n        }\r\n        var replaySpecs = (_k = (_j = configuration.gateway) === null || _j === void 0 ? void 0 : _j.replaySpecs, (_k !== null && _k !== void 0 ? _k : []));\r\n        replaySpecs.push(ContextMessageReplaySpec);\r\n        return {\r\n            identity: {\r\n                application: uniqueAppName,\r\n                applicationName: appName,\r\n                windowId: windowId,\r\n                instance: instanceId,\r\n                process: pid,\r\n                region: region,\r\n                environment: environment,\r\n                api: ext.version || version\r\n            },\r\n            reconnectInterval: reconnectInterval,\r\n            ws: ws,\r\n            sharedWorker: sharedWorker,\r\n            inproc: inproc,\r\n            protocolVersion: protocolVersion,\r\n            reconnectAttempts: reconnectAttempts,\r\n            replaySpecs: replaySpecs,\r\n        };\r\n    }\r\n    function getApplication() {\r\n        if (configuration.application) {\r\n            return configuration.application;\r\n        }\r\n        if (glue42gd) {\r\n            return glue42gd.applicationName;\r\n        }\r\n        var uid = shortid();\r\n        if (Utils.isNode()) {\r\n            if (nodeStartingContext) {\r\n                return nodeStartingContext.applicationConfig.name;\r\n            }\r\n            return \"NodeJS\" + uid;\r\n        }\r\n        if (typeof window !== \"undefined\" && typeof document !== \"undefined\") {\r\n            return document.title + (\" (\" + uid + \")\");\r\n        }\r\n        return uid;\r\n    }\r\n    function getAuth() {\r\n        var _a, _b;\r\n        if (typeof configuration.auth === \"string\") {\r\n            return {\r\n                token: configuration.auth\r\n            };\r\n        }\r\n        if (configuration.auth) {\r\n            return configuration.auth;\r\n        }\r\n        if (Utils.isNode() && nodeStartingContext && nodeStartingContext.gwToken) {\r\n            return {\r\n                gatewayToken: nodeStartingContext.gwToken\r\n            };\r\n        }\r\n        if (((_a = configuration.gateway) === null || _a === void 0 ? void 0 : _a.inproc) || ((_b = configuration.gateway) === null || _b === void 0 ? void 0 : _b.sharedWorker)) {\r\n            return {\r\n                username: \"glue42\", password: \"glue42\"\r\n            };\r\n        }\r\n    }\r\n    function getLogger() {\r\n        var _a, _b;\r\n        var config = configuration.logger;\r\n        var defaultLevel = \"error\";\r\n        if (!config) {\r\n            config = defaultLevel;\r\n        }\r\n        if (typeof config === \"string\") {\r\n            return { console: config, publish: defaultLevel };\r\n        }\r\n        return {\r\n            console: (_a = config.console, (_a !== null && _a !== void 0 ? _a : defaultLevel)),\r\n            publish: (_b = config.publish, (_b !== null && _b !== void 0 ? _b : defaultLevel))\r\n        };\r\n    }\r\n    var connection = getConnection();\r\n    return {\r\n        bus: (_a = configuration.bus, (_a !== null && _a !== void 0 ? _a : false)),\r\n        auth: getAuth(),\r\n        logger: getLogger(),\r\n        connection: connection,\r\n        metrics: (_b = configuration.metrics, (_b !== null && _b !== void 0 ? _b : true)),\r\n        contexts: (_c = configuration.contexts, (_c !== null && _c !== void 0 ? _c : true)),\r\n        version: ext.version || version,\r\n        libs: (_d = ext.libs, (_d !== null && _d !== void 0 ? _d : [])),\r\n        customLogger: configuration.customLogger\r\n    };\r\n}\n\nfunction timer () {\r\n    function now() {\r\n        return new Date().getTime();\r\n    }\r\n    var startTime = now();\r\n    var endTime;\r\n    var period;\r\n    function stop() {\r\n        endTime = now();\r\n        period = now() - startTime;\r\n        return period;\r\n    }\r\n    return {\r\n        get startTime() {\r\n            return startTime;\r\n        },\r\n        get endTime() {\r\n            return endTime;\r\n        },\r\n        get period() {\r\n            return period;\r\n        },\r\n        stop: stop\r\n    };\r\n}\n\nvar GW3ContextData = (function () {\r\n    function GW3ContextData(contextId, name, isAnnounced, activityId) {\r\n        this.updateCallbacks = {};\r\n        this.contextId = contextId;\r\n        this.name = name;\r\n        this.isAnnounced = isAnnounced;\r\n        this.activityId = activityId;\r\n        this.context = {};\r\n    }\r\n    GW3ContextData.prototype.hasCallbacks = function () {\r\n        return Object.keys(this.updateCallbacks).length > 0;\r\n    };\r\n    GW3ContextData.prototype.getState = function () {\r\n        if (this.isAnnounced && this.hasCallbacks()) {\r\n            return 3;\r\n        }\r\n        if (this.isAnnounced) {\r\n            return 2;\r\n        }\r\n        if (this.hasCallbacks()) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    };\r\n    return GW3ContextData;\r\n}());\n\nfunction applyContextDelta(context, delta) {\r\n    if (delta) {\r\n        if (delta.reset) {\r\n            context = __assign({}, delta.reset);\r\n            return context;\r\n        }\r\n        context = deepClone(context, undefined);\r\n        var added_1 = delta.added;\r\n        var updated_1 = delta.updated;\r\n        var removed = delta.removed;\r\n        if (added_1) {\r\n            Object.keys(added_1).forEach(function (key) {\r\n                context[key] = added_1[key];\r\n            });\r\n        }\r\n        if (updated_1) {\r\n            Object.keys(updated_1).forEach(function (key) {\r\n                mergeObjectsProperties(key, context, updated_1);\r\n            });\r\n        }\r\n        if (removed) {\r\n            removed.forEach(function (key) {\r\n                delete context[key];\r\n            });\r\n        }\r\n    }\r\n    return context;\r\n}\r\nfunction deepClone(obj, hash) {\r\n    hash = hash || new WeakMap();\r\n    if (Object(obj) !== obj) {\r\n        return obj;\r\n    }\r\n    if (obj instanceof Set) {\r\n        return new Set(obj);\r\n    }\r\n    if (hash.has(obj)) {\r\n        return hash.get(obj);\r\n    }\r\n    var result = obj instanceof Date ? new Date(obj)\r\n        : obj instanceof RegExp ? new RegExp(obj.source, obj.flags)\r\n            : obj.constructor ? new obj.constructor()\r\n                : Object.create(null);\r\n    hash.set(obj, result);\r\n    return Object.assign.apply(Object, __spreadArrays([result], Object.keys(obj).map(function (key) {\r\n        var _a;\r\n        return (_a = {}, _a[key] = deepClone(obj[key], hash), _a);\r\n    })));\r\n}\r\nvar mergeObjectsProperties = function (key, what, withWhat) {\r\n    var right = withWhat[key];\r\n    if (right === undefined) {\r\n        return what;\r\n    }\r\n    var left = what[key];\r\n    if (!left || !right) {\r\n        what[key] = right;\r\n        return what;\r\n    }\r\n    if (typeof left === \"string\" ||\r\n        typeof left === \"number\" ||\r\n        typeof left === \"boolean\" ||\r\n        typeof right === \"string\" ||\r\n        typeof right === \"number\" ||\r\n        typeof right === \"boolean\" ||\r\n        Array.isArray(left) ||\r\n        Array.isArray(right)) {\r\n        what[key] = right;\r\n        return what;\r\n    }\r\n    what[key] = Object.assign({}, left, right);\r\n    return what;\r\n};\r\nfunction deepEqual(x, y) {\r\n    if (x === y) {\r\n        return true;\r\n    }\r\n    if (!(x instanceof Object) || !(y instanceof Object)) {\r\n        return false;\r\n    }\r\n    if (x.constructor !== y.constructor) {\r\n        return false;\r\n    }\r\n    for (var p in x) {\r\n        if (!x.hasOwnProperty(p)) {\r\n            continue;\r\n        }\r\n        if (!y.hasOwnProperty(p)) {\r\n            return false;\r\n        }\r\n        if (x[p] === y[p]) {\r\n            continue;\r\n        }\r\n        if (typeof (x[p]) !== \"object\") {\r\n            return false;\r\n        }\r\n        if (!deepEqual(x[p], y[p])) {\r\n            return false;\r\n        }\r\n    }\r\n    for (var p in y) {\r\n        if (y.hasOwnProperty(p) && !x.hasOwnProperty(p)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\n\nvar GW3Bridge = (function () {\r\n    function GW3Bridge(config) {\r\n        var _this = this;\r\n        var _a;\r\n        this._contextNameToData = {};\r\n        this._gw3Subscriptions = [];\r\n        this._nextCallbackSubscriptionNumber = 0;\r\n        this._contextNameToId = {};\r\n        this._contextIdToName = {};\r\n        this._connection = config.connection;\r\n        this._logger = config.logger;\r\n        this._gw3Session = this._connection.domain(\"global\", [\r\n            GW_MESSAGE_CONTEXT_CREATED,\r\n            GW_MESSAGE_SUBSCRIBED_CONTEXT,\r\n            GW_MESSAGE_CONTEXT_DESTROYED,\r\n            GW_MESSAGE_CONTEXT_UPDATED,\r\n        ]);\r\n        this.subscribeToContextCreatedMessages();\r\n        this.subscribeToContextUpdatedMessages();\r\n        this.subscribeToContextDestroyedMessages();\r\n        (_a = this._connection.replayer) === null || _a === void 0 ? void 0 : _a.drain(ContextMessageReplaySpec.name, function (message) {\r\n            var type = message.type;\r\n            if (!type) {\r\n                return;\r\n            }\r\n            if (type === GW_MESSAGE_CONTEXT_CREATED ||\r\n                type === GW_MESSAGE_CONTEXT_ADDED ||\r\n                type === GW_MESSAGE_ACTIVITY_CREATED) {\r\n                _this.handleContextCreatedMessage(message);\r\n            }\r\n            else if (type === GW_MESSAGE_SUBSCRIBED_CONTEXT ||\r\n                type === GW_MESSAGE_CONTEXT_UPDATED ||\r\n                type === GW_MESSAGE_JOINED_ACTIVITY) {\r\n                _this.handleContextUpdatedMessage(message);\r\n            }\r\n            else if (type === GW_MESSAGE_CONTEXT_DESTROYED ||\r\n                type === GW_MESSAGE_ACTIVITY_DESTROYED) {\r\n                _this.handleContextDestroyedMessage(message);\r\n            }\r\n        });\r\n    }\r\n    GW3Bridge.prototype.dispose = function () {\r\n        for (var _i = 0, _a = this._gw3Subscriptions; _i < _a.length; _i++) {\r\n            var sub = _a[_i];\r\n            this._connection.off(sub);\r\n        }\r\n        this._gw3Subscriptions.length = 0;\r\n        for (var contextName in this._contextNameToData) {\r\n            if (this._contextNameToId.hasOwnProperty(contextName)) {\r\n                delete this._contextNameToData[contextName];\r\n            }\r\n        }\r\n    };\r\n    GW3Bridge.prototype.createContext = function (name, data) {\r\n        var _this = this;\r\n        return this._gw3Session\r\n            .send({\r\n            type: GW_MESSAGE_CREATE_CONTEXT,\r\n            domain: \"global\",\r\n            name: name,\r\n            data: data,\r\n            lifetime: \"retained\",\r\n        })\r\n            .then(function (createContextMsg) {\r\n            _this._contextNameToId[name] = createContextMsg.context_id;\r\n            if (!_this._contextIdToName[createContextMsg.context_id]) {\r\n                _this._contextIdToName[createContextMsg.context_id] = name;\r\n                var contextData = _this._contextNameToData[name] || new GW3ContextData(createContextMsg.context_id, name, true, undefined);\r\n                contextData.isAnnounced = true;\r\n                contextData.name = name;\r\n                contextData.contextId = createContextMsg.context_id;\r\n                _this._contextNameToData[name] = contextData;\r\n                contextData.context = createContextMsg.data;\r\n                contextData.sentExplicitSubscription = true;\r\n                if (contextData.context) {\r\n                    _this.invokeUpdateCallbacks(contextData, contextData.context, undefined);\r\n                }\r\n                return _this.update(name, data).then(function () { return createContextMsg.context_id; });\r\n            }\r\n            return createContextMsg.context_id;\r\n        });\r\n    };\r\n    GW3Bridge.prototype.all = function () {\r\n        var _this = this;\r\n        return Object.keys(this._contextNameToData)\r\n            .filter(function (name) { return _this._contextNameToData[name].isAnnounced; });\r\n    };\r\n    GW3Bridge.prototype.update = function (name, delta) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var contextData, currentContext, calculatedDelta;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        contextData = this._contextNameToData[name];\r\n                        if (!contextData || !contextData.isAnnounced) {\r\n                            return [2, this.createContext(name, delta)];\r\n                        }\r\n                        currentContext = contextData.context;\r\n                        if (!!contextData.hasCallbacks()) return [3, 2];\r\n                        return [4, this.get(contextData.name, false)];\r\n                    case 1:\r\n                        currentContext = _a.sent();\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        calculatedDelta = this.calculateContextDelta(currentContext, delta);\r\n                        if (!Object.keys(calculatedDelta.added).length\r\n                            && !Object.keys(calculatedDelta.updated).length\r\n                            && !calculatedDelta.removed.length) {\r\n                            return [2, Promise.resolve()];\r\n                        }\r\n                        return [2, this._gw3Session\r\n                                .send({\r\n                                type: GW_MESSAGE_UPDATE_CONTEXT,\r\n                                domain: \"global\",\r\n                                context_id: contextData.contextId,\r\n                                delta: calculatedDelta,\r\n                            }, {}, { skipPeerId: false })\r\n                                .then(function (gwResponse) {\r\n                                _this.handleUpdated(contextData, calculatedDelta, {\r\n                                    updaterId: gwResponse.peer_id\r\n                                });\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    GW3Bridge.prototype.set = function (name, data) {\r\n        var _this = this;\r\n        var contextData = this._contextNameToData[name];\r\n        if (!contextData || !contextData.isAnnounced) {\r\n            return this.createContext(name, data);\r\n        }\r\n        return this._gw3Session\r\n            .send({\r\n            type: GW_MESSAGE_UPDATE_CONTEXT,\r\n            domain: \"global\",\r\n            context_id: contextData.contextId,\r\n            delta: { reset: data },\r\n        }, {}, { skipPeerId: false })\r\n            .then(function (gwResponse) {\r\n            _this.handleUpdated(contextData, { reset: data, added: {}, removed: [], updated: {} }, { updaterId: gwResponse.peer_id });\r\n        });\r\n    };\r\n    GW3Bridge.prototype.get = function (name, resolveImmediately) {\r\n        var _this = this;\r\n        if (resolveImmediately === undefined) {\r\n            resolveImmediately = true;\r\n        }\r\n        var contextData = this._contextNameToData[name];\r\n        if (!contextData ||\r\n            !contextData.isAnnounced ||\r\n            !contextData.hasCallbacks()) {\r\n            if (!resolveImmediately) {\r\n                return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                    var _this = this;\r\n                    return __generator(this, function (_a) {\r\n                        this.subscribe(name, function (data, delta, removed, un) {\r\n                            _this.unsubscribe(un);\r\n                            resolve(data);\r\n                        });\r\n                        return [2];\r\n                    });\r\n                }); });\r\n            }\r\n        }\r\n        return Promise.resolve(contextData && contextData.context);\r\n    };\r\n    GW3Bridge.prototype.subscribe = function (name, callback) {\r\n        var thisCallbackSubscriptionNumber = this._nextCallbackSubscriptionNumber;\r\n        this._nextCallbackSubscriptionNumber += 1;\r\n        var contextData = this._contextNameToData[name];\r\n        if (!contextData ||\r\n            !contextData.isAnnounced) {\r\n            contextData = contextData || new GW3ContextData(undefined, name, false, undefined);\r\n            this._contextNameToData[name] = contextData;\r\n            contextData.updateCallbacks[thisCallbackSubscriptionNumber] = callback;\r\n            return Promise.resolve(thisCallbackSubscriptionNumber);\r\n        }\r\n        var hadCallbacks = contextData.hasCallbacks();\r\n        contextData.updateCallbacks[thisCallbackSubscriptionNumber] = callback;\r\n        if (!hadCallbacks) {\r\n            if (!contextData.joinedActivity) {\r\n                if (contextData.context &&\r\n                    contextData.sentExplicitSubscription) {\r\n                    callback(contextData.context, contextData.context, [], thisCallbackSubscriptionNumber);\r\n                    return Promise.resolve(thisCallbackSubscriptionNumber);\r\n                }\r\n                return this.sendSubscribe(contextData)\r\n                    .then(function () { return thisCallbackSubscriptionNumber; });\r\n            }\r\n            else {\r\n                callback(contextData.context, contextData.context, [], thisCallbackSubscriptionNumber);\r\n                return Promise.resolve(thisCallbackSubscriptionNumber);\r\n            }\r\n        }\r\n        else {\r\n            callback(contextData.context, contextData.context, [], thisCallbackSubscriptionNumber);\r\n            return Promise.resolve(thisCallbackSubscriptionNumber);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.unsubscribe = function (subscriptionKey) {\r\n        for (var _i = 0, _a = Object.keys(this._contextNameToData); _i < _a.length; _i++) {\r\n            var name_1 = _a[_i];\r\n            var contextId = this._contextNameToId[name_1];\r\n            var contextData = this._contextNameToData[name_1];\r\n            if (!contextData) {\r\n                return;\r\n            }\r\n            var hadCallbacks = contextData.hasCallbacks();\r\n            delete contextData.updateCallbacks[subscriptionKey];\r\n            if (contextData.isAnnounced &&\r\n                hadCallbacks &&\r\n                !contextData.hasCallbacks() &&\r\n                contextData.sentExplicitSubscription) {\r\n                this.sendUnsubscribe(contextData);\r\n            }\r\n            if (!contextData.isAnnounced &&\r\n                !contextData.hasCallbacks()) {\r\n                delete this._contextNameToData[name_1];\r\n            }\r\n        }\r\n    };\r\n    GW3Bridge.prototype.handleUpdated = function (contextData, delta, extraData) {\r\n        var oldContext = contextData.context;\r\n        contextData.context = applyContextDelta(contextData.context, delta);\r\n        if (this._contextNameToData[contextData.name] === contextData &&\r\n            !deepEqual(oldContext, contextData.context)) {\r\n            this.invokeUpdateCallbacks(contextData, contextData.context, delta, extraData);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.subscribeToContextCreatedMessages = function () {\r\n        var createdMessageTypes = [\r\n            GW_MESSAGE_CONTEXT_ADDED,\r\n            GW_MESSAGE_CONTEXT_CREATED,\r\n            GW_MESSAGE_ACTIVITY_CREATED,\r\n        ];\r\n        for (var _i = 0, createdMessageTypes_1 = createdMessageTypes; _i < createdMessageTypes_1.length; _i++) {\r\n            var createdMessageType = createdMessageTypes_1[_i];\r\n            var sub = this._connection.on(createdMessageType, this.handleContextCreatedMessage.bind(this));\r\n            this._gw3Subscriptions.push(sub);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.handleContextCreatedMessage = function (contextCreatedMsg) {\r\n        var createdMessageType = contextCreatedMsg.type;\r\n        if (createdMessageType === GW_MESSAGE_ACTIVITY_CREATED) {\r\n            this._contextNameToId[contextCreatedMsg.activity_id] = contextCreatedMsg.context_id;\r\n            this._contextIdToName[contextCreatedMsg.context_id] = contextCreatedMsg.activity_id;\r\n        }\r\n        else if (createdMessageType === GW_MESSAGE_CONTEXT_ADDED) {\r\n            this._contextNameToId[contextCreatedMsg.name] = contextCreatedMsg.context_id;\r\n            this._contextIdToName[contextCreatedMsg.context_id] = contextCreatedMsg.name;\r\n        }\r\n        var name = this._contextIdToName[contextCreatedMsg.context_id];\r\n        if (!name) {\r\n            throw new Error(\"Received created event for context with unknown name: \" + contextCreatedMsg.context_id);\r\n        }\r\n        if (!this._contextNameToId[name]) {\r\n            throw new Error(\"Received created event for context with unknown id: \" + contextCreatedMsg.context_id);\r\n        }\r\n        var contextData = this._contextNameToData[name];\r\n        if (contextData) {\r\n            if (contextData.isAnnounced) {\r\n                return;\r\n            }\r\n            else {\r\n                if (!contextData.hasCallbacks()) {\r\n                    throw new Error(\"Assertion failure: contextData.hasCallbacks()\");\r\n                }\r\n                contextData.isAnnounced = true;\r\n                contextData.contextId = contextCreatedMsg.context_id;\r\n                contextData.activityId = contextCreatedMsg.activity_id;\r\n                if (!contextData.sentExplicitSubscription) {\r\n                    this.sendSubscribe(contextData);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this._contextNameToData[name] = contextData =\r\n                new GW3ContextData(contextCreatedMsg.context_id, name, true, contextCreatedMsg.activity_id);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.subscribeToContextUpdatedMessages = function () {\r\n        var updatedMessageTypes = [\r\n            GW_MESSAGE_CONTEXT_UPDATED,\r\n            GW_MESSAGE_SUBSCRIBED_CONTEXT,\r\n            GW_MESSAGE_JOINED_ACTIVITY,\r\n        ];\r\n        for (var _i = 0, updatedMessageTypes_1 = updatedMessageTypes; _i < updatedMessageTypes_1.length; _i++) {\r\n            var updatedMessageType = updatedMessageTypes_1[_i];\r\n            var sub = this._connection.on(updatedMessageType, this.handleContextUpdatedMessage.bind(this));\r\n            this._gw3Subscriptions.push(sub);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.handleContextUpdatedMessage = function (contextUpdatedMsg) {\r\n        var updatedMessageType = contextUpdatedMsg.type;\r\n        var contextId = contextUpdatedMsg.context_id;\r\n        var contextData = this._contextNameToData[this._contextIdToName[contextId]];\r\n        var justSeen = !contextData || !contextData.isAnnounced;\r\n        if (updatedMessageType === GW_MESSAGE_JOINED_ACTIVITY) {\r\n            if (!contextData) {\r\n                contextData = new GW3ContextData(contextId, contextUpdatedMsg.activity_id, true, contextUpdatedMsg.activity_id);\r\n                this._contextNameToData[contextUpdatedMsg.activity_id] = contextData;\r\n                this._contextIdToName[contextId] = contextUpdatedMsg.activity_id;\r\n                this._contextNameToId[contextUpdatedMsg.activity_id] = contextId;\r\n            }\r\n            else {\r\n                contextData.contextId = contextId;\r\n                contextData.isAnnounced = true;\r\n                contextData.activityId = contextUpdatedMsg.activity_id;\r\n            }\r\n            contextData.joinedActivity = true;\r\n        }\r\n        else {\r\n            if (!contextData || !contextData.isAnnounced) {\r\n                if (updatedMessageType === GW_MESSAGE_SUBSCRIBED_CONTEXT) {\r\n                    contextData = contextData || new GW3ContextData(contextId, contextUpdatedMsg.name, true, undefined);\r\n                    contextData.sentExplicitSubscription = true;\r\n                    this._contextNameToData[contextUpdatedMsg.name] = contextData;\r\n                    this._contextIdToName[contextId] = contextUpdatedMsg.name;\r\n                    this._contextNameToId[contextUpdatedMsg.name] = contextId;\r\n                }\r\n                else {\r\n                    this._logger.error(\"Received 'update' for unknown context: \" + contextId);\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        var oldContext = contextData.context;\r\n        if (updatedMessageType === GW_MESSAGE_SUBSCRIBED_CONTEXT) {\r\n            contextData.context = contextUpdatedMsg.data || {};\r\n        }\r\n        else if (updatedMessageType === GW_MESSAGE_JOINED_ACTIVITY) {\r\n            contextData.context = contextUpdatedMsg.context_snapshot || {};\r\n        }\r\n        else if (updatedMessageType === GW_MESSAGE_CONTEXT_UPDATED) {\r\n            contextData.context = applyContextDelta(contextData.context, contextUpdatedMsg.delta);\r\n        }\r\n        else {\r\n            throw new Error(\"Unrecognized context update message \" + updatedMessageType);\r\n        }\r\n        if (justSeen ||\r\n            !deepEqual(contextData.context, oldContext) ||\r\n            updatedMessageType === GW_MESSAGE_SUBSCRIBED_CONTEXT) {\r\n            this.invokeUpdateCallbacks(contextData, contextData.context, contextUpdatedMsg.delta, { updaterId: contextUpdatedMsg.updater_id });\r\n        }\r\n    };\r\n    GW3Bridge.prototype.invokeUpdateCallbacks = function (contextData, data, delta, extraData) {\r\n        delta = delta || { added: {}, updated: {}, reset: {}, removed: [] };\r\n        for (var updateCallbackIndex in contextData.updateCallbacks) {\r\n            if (contextData.updateCallbacks.hasOwnProperty(updateCallbackIndex)) {\r\n                try {\r\n                    var updateCallback = contextData.updateCallbacks[updateCallbackIndex];\r\n                    updateCallback(deepClone(data), Object.assign({}, delta.added || {}, delta.updated || {}, delta.reset || {}), delta.removed, parseInt(updateCallbackIndex, 10), extraData);\r\n                }\r\n                catch (err) {\r\n                    this._logger.debug(\"callback error: \" + JSON.stringify(err));\r\n                }\r\n            }\r\n        }\r\n    };\r\n    GW3Bridge.prototype.subscribeToContextDestroyedMessages = function () {\r\n        var destroyedMessageTypes = [\r\n            GW_MESSAGE_CONTEXT_DESTROYED,\r\n            GW_MESSAGE_ACTIVITY_DESTROYED,\r\n        ];\r\n        for (var _i = 0, destroyedMessageTypes_1 = destroyedMessageTypes; _i < destroyedMessageTypes_1.length; _i++) {\r\n            var destroyedMessageType = destroyedMessageTypes_1[_i];\r\n            var sub = this._connection.on(destroyedMessageType, this.handleContextDestroyedMessage.bind(this));\r\n            this._gw3Subscriptions.push(sub);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.handleContextDestroyedMessage = function (destroyedMsg) {\r\n        var destroyedMessageType = destroyedMsg.type;\r\n        var contextId;\r\n        var name;\r\n        if (destroyedMessageType === GW_MESSAGE_ACTIVITY_DESTROYED) {\r\n            name = destroyedMsg.activity_id;\r\n            contextId = this._contextNameToId[name];\r\n            if (!contextId) {\r\n                this._logger.error(\"Received 'destroyed' for unknown activity: \" + destroyedMsg.activity_id);\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            contextId = destroyedMsg.context_id;\r\n            name = this._contextIdToName[contextId];\r\n            if (!name) {\r\n                this._logger.error(\"Received 'destroyed' for unknown context: \" + destroyedMsg.context_id);\r\n                return;\r\n            }\r\n        }\r\n        delete this._contextIdToName[contextId];\r\n        delete this._contextNameToId[name];\r\n        var contextData = this._contextNameToData[name];\r\n        delete this._contextNameToData[name];\r\n        if (!contextData || !contextData.isAnnounced) {\r\n            this._logger.error(\"Received 'destroyed' for unknown context: \" + contextId);\r\n            return;\r\n        }\r\n    };\r\n    GW3Bridge.prototype.sendSubscribe = function (contextData) {\r\n        contextData.sentExplicitSubscription = true;\r\n        return this._gw3Session\r\n            .send({\r\n            type: GW_MESSAGE_SUBSCRIBE_CONTEXT,\r\n            domain: \"global\",\r\n            context_id: contextData.contextId,\r\n        }).then(function (_) { return undefined; });\r\n    };\r\n    GW3Bridge.prototype.sendUnsubscribe = function (contextData) {\r\n        contextData.sentExplicitSubscription = false;\r\n        return this._gw3Session\r\n            .send({\r\n            type: GW_MESSAGE_UNSUBSCRIBE_CONTEXT,\r\n            domain: \"global\",\r\n            context_id: contextData.contextId,\r\n        }).then(function (_) { return undefined; });\r\n    };\r\n    GW3Bridge.prototype.calculateContextDelta = function (from, to) {\r\n        var delta = { added: {}, updated: {}, removed: [], reset: undefined };\r\n        if (from) {\r\n            for (var _i = 0, _a = Object.keys(from); _i < _a.length; _i++) {\r\n                var x = _a[_i];\r\n                if (Object.keys(to).indexOf(x) !== -1\r\n                    && to[x] !== null\r\n                    && !deepEqual(from[x], to[x])) {\r\n                    delta.updated[x] = to[x];\r\n                }\r\n            }\r\n        }\r\n        for (var _b = 0, _c = Object.keys(to); _b < _c.length; _b++) {\r\n            var x = _c[_b];\r\n            if (!from || (Object.keys(from).indexOf(x) === -1)) {\r\n                if (to[x] !== null) {\r\n                    delta.added[x] = to[x];\r\n                }\r\n            }\r\n            else if (to[x] === null) {\r\n                delta.removed.push(x);\r\n            }\r\n        }\r\n        return delta;\r\n    };\r\n    return GW3Bridge;\r\n}());\n\nvar ContextsModule = (function () {\r\n    function ContextsModule(config) {\r\n        this._bridge = new GW3Bridge(config);\r\n    }\r\n    ContextsModule.prototype.all = function () {\r\n        return this._bridge.all();\r\n    };\r\n    ContextsModule.prototype.update = function (name, delta) {\r\n        this.checkName(name);\r\n        return this._bridge.update(name, delta);\r\n    };\r\n    ContextsModule.prototype.set = function (name, data) {\r\n        this.checkName(name);\r\n        return this._bridge.set(name, data);\r\n    };\r\n    ContextsModule.prototype.subscribe = function (name, callback) {\r\n        var _this = this;\r\n        this.checkName(name);\r\n        return this._bridge\r\n            .subscribe(name, function (data, delta, removed, key, extraData) { return callback(data, delta, removed, function () { return _this._bridge.unsubscribe(key); }, extraData); })\r\n            .then(function (key) {\r\n            return function () {\r\n                _this._bridge.unsubscribe(key);\r\n            };\r\n        });\r\n    };\r\n    ContextsModule.prototype.get = function (name, resolveImmediately) {\r\n        if (resolveImmediately === undefined) {\r\n            resolveImmediately = true;\r\n        }\r\n        return this._bridge.get(name, resolveImmediately);\r\n    };\r\n    ContextsModule.prototype.ready = function () {\r\n        return Promise.resolve(this);\r\n    };\r\n    ContextsModule.prototype.checkName = function (name) {\r\n        if (typeof name !== \"string\" ||\r\n            name === \"\") {\r\n            throw new Error(\"'name' must be non-empty string, got '\" + name + \"'\");\r\n        }\r\n    };\r\n    return ContextsModule;\r\n}());\n\nfunction promisify (promise, successCallback, errorCallback) {\r\n    if (typeof successCallback !== \"function\" && typeof errorCallback !== \"function\") {\r\n        return promise;\r\n    }\r\n    if (typeof successCallback !== \"function\") {\r\n        successCallback = function () { };\r\n    }\r\n    else if (typeof errorCallback !== \"function\") {\r\n        errorCallback = function () { };\r\n    }\r\n    return promise.then(successCallback, errorCallback);\r\n}\n\nfunction rejectAfter(ms, error) {\r\n    if (ms === void 0) { ms = 0; }\r\n    return new Promise(function (resolve, reject) { return setTimeout(function () { return reject(error); }, ms); });\r\n}\n\nvar InvokeStatus;\r\n(function (InvokeStatus) {\r\n    InvokeStatus[InvokeStatus[\"Success\"] = 0] = \"Success\";\r\n    InvokeStatus[InvokeStatus[\"Error\"] = 1] = \"Error\";\r\n})(InvokeStatus || (InvokeStatus = {}));\r\nvar Client = (function () {\r\n    function Client(protocol, repo, instance, configuration) {\r\n        this.protocol = protocol;\r\n        this.repo = repo;\r\n        this.instance = instance;\r\n        this.configuration = configuration;\r\n    }\r\n    Client.prototype.subscribe = function (method, options, successCallback, errorCallback, existingSub) {\r\n        var _this = this;\r\n        var callProtocolSubscribe = function (targetServers, stream, successProxy, errorProxy) {\r\n            var _a;\r\n            options.methodResponseTimeout = (_a = options.methodResponseTimeout, (_a !== null && _a !== void 0 ? _a : options.waitTimeoutMs));\r\n            _this.protocol.client.subscribe(stream, options, targetServers, successProxy, errorProxy, existingSub);\r\n        };\r\n        var promise = new Promise(function (resolve, reject) {\r\n            var successProxy = function (sub) {\r\n                resolve(sub);\r\n            };\r\n            var errorProxy = function (err) {\r\n                reject(err);\r\n            };\r\n            if (!method) {\r\n                reject(\"Method definition is required. Please, provide either a unique string for a method name or a \\u201CmethodDefinition\\u201D object with a required \\u201Cname\\u201D property.\");\r\n                return;\r\n            }\r\n            var methodDef;\r\n            if (typeof method === \"string\") {\r\n                methodDef = { name: method };\r\n            }\r\n            else {\r\n                methodDef = method;\r\n            }\r\n            if (!methodDef.name) {\r\n                reject(\"Method definition is required. Please, provide either a unique string for a method name or a \\u201CmethodDefinition\\u201D object with a required \\u201Cname\\u201D property.\");\r\n                return;\r\n            }\r\n            if (options === undefined) {\r\n                options = {};\r\n            }\r\n            var target = options.target;\r\n            if (target === undefined) {\r\n                target = \"best\";\r\n            }\r\n            if (typeof target === \"string\" && target !== \"all\" && target !== \"best\") {\r\n                reject(new Error(\"\\\"\" + target + \"\\\" is not a valid target. Valid targets are \\\"all\\\", \\\"best\\\", or an instance.\"));\r\n                return;\r\n            }\r\n            if (options.methodResponseTimeout === undefined) {\r\n                options.methodResponseTimeout = options.method_response_timeout;\r\n                if (options.methodResponseTimeout === undefined) {\r\n                    options.methodResponseTimeout = _this.configuration.methodResponseTimeout;\r\n                }\r\n            }\r\n            if (options.waitTimeoutMs === undefined) {\r\n                options.waitTimeoutMs = options.wait_for_method_timeout;\r\n                if (options.waitTimeoutMs === undefined) {\r\n                    options.waitTimeoutMs = _this.configuration.waitTimeoutMs;\r\n                }\r\n            }\r\n            var delayStep = 500;\r\n            var delayTillNow = 0;\r\n            var currentServers = _this.getServerMethodsByFilterAndTarget(methodDef, target);\r\n            if (currentServers.length > 0) {\r\n                callProtocolSubscribe(currentServers, currentServers[0].methods[0], successProxy, errorProxy);\r\n            }\r\n            else {\r\n                var retry_1 = function () {\r\n                    if (!target || !(options.waitTimeoutMs)) {\r\n                        return;\r\n                    }\r\n                    delayTillNow += delayStep;\r\n                    currentServers = _this.getServerMethodsByFilterAndTarget(methodDef, target);\r\n                    if (currentServers.length > 0) {\r\n                        var streamInfo = currentServers[0].methods[0];\r\n                        callProtocolSubscribe(currentServers, streamInfo, successProxy, errorProxy);\r\n                    }\r\n                    else if (delayTillNow >= options.waitTimeoutMs) {\r\n                        var def = typeof method === \"string\" ? { name: method } : method;\r\n                        callProtocolSubscribe(currentServers, def, successProxy, errorProxy);\r\n                    }\r\n                    else {\r\n                        setTimeout(retry_1, delayStep);\r\n                    }\r\n                };\r\n                setTimeout(retry_1, delayStep);\r\n            }\r\n        });\r\n        return promisify(promise, successCallback, errorCallback);\r\n    };\r\n    Client.prototype.servers = function (methodFilter) {\r\n        var filterCopy = methodFilter === undefined\r\n            ? undefined\r\n            : __assign({}, methodFilter);\r\n        return this.getServers(filterCopy).map(function (serverMethodMap) {\r\n            return serverMethodMap.server.instance;\r\n        });\r\n    };\r\n    Client.prototype.methods = function (methodFilter) {\r\n        var filterCopy = __assign({}, methodFilter);\r\n        return this.getMethods(filterCopy);\r\n    };\r\n    Client.prototype.methodsForInstance = function (instance) {\r\n        return this.getMethodsForInstance(instance);\r\n    };\r\n    Client.prototype.methodAdded = function (callback) {\r\n        return this.repo.onMethodAdded(callback);\r\n    };\r\n    Client.prototype.methodRemoved = function (callback) {\r\n        return this.repo.onMethodRemoved(callback);\r\n    };\r\n    Client.prototype.serverAdded = function (callback) {\r\n        return this.repo.onServerAdded(callback);\r\n    };\r\n    Client.prototype.serverRemoved = function (callback) {\r\n        return this.repo.onServerRemoved(function (server, reason) {\r\n            callback(server, reason);\r\n        });\r\n    };\r\n    Client.prototype.serverMethodAdded = function (callback) {\r\n        return this.repo.onServerMethodAdded(function (server, method) {\r\n            callback({ server: server, method: method });\r\n        });\r\n    };\r\n    Client.prototype.serverMethodRemoved = function (callback) {\r\n        return this.repo.onServerMethodRemoved(function (server, method) {\r\n            callback({ server: server, method: method });\r\n        });\r\n    };\r\n    Client.prototype.invoke = function (methodFilter, argumentObj, target, additionalOptions, success, error) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var getInvokePromise;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                getInvokePromise = function () { return __awaiter(_this, void 0, void 0, function () {\r\n                    var methodDefinition, serversMethodMap, err_1, errorObj, timeout, additionalOptionsCopy, invokePromises, invocationMessages, results, allRejected;\r\n                    var _this = this;\r\n                    return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0:\r\n                                if (typeof methodFilter === \"string\") {\r\n                                    methodDefinition = { name: methodFilter };\r\n                                }\r\n                                else {\r\n                                    methodDefinition = __assign({}, methodFilter);\r\n                                }\r\n                                if (!methodDefinition.name) {\r\n                                    return [2, Promise.reject(\"Method definition is required. Please, provide either a unique string for a method name or a \\u201CmethodDefinition\\u201D object with a required \\u201Cname\\u201D property.\")];\r\n                                }\r\n                                if (!argumentObj) {\r\n                                    argumentObj = {};\r\n                                }\r\n                                if (!target) {\r\n                                    target = \"best\";\r\n                                }\r\n                                if (typeof target === \"string\" && target !== \"all\" && target !== \"best\" && target !== \"skipMine\") {\r\n                                    return [2, Promise.reject(new Error(\"\\\"\" + target + \"\\\" is not a valid target. Valid targets are \\\"all\\\" and \\\"best\\\".\"))];\r\n                                }\r\n                                if (!additionalOptions) {\r\n                                    additionalOptions = {};\r\n                                }\r\n                                if (additionalOptions.methodResponseTimeoutMs === undefined) {\r\n                                    additionalOptions.methodResponseTimeoutMs = additionalOptions.method_response_timeout;\r\n                                    if (additionalOptions.methodResponseTimeoutMs === undefined) {\r\n                                        additionalOptions.methodResponseTimeoutMs = this.configuration.methodResponseTimeout;\r\n                                    }\r\n                                }\r\n                                if (additionalOptions.waitTimeoutMs === undefined) {\r\n                                    additionalOptions.waitTimeoutMs = additionalOptions.wait_for_method_timeout;\r\n                                    if (additionalOptions.waitTimeoutMs === undefined) {\r\n                                        additionalOptions.waitTimeoutMs = this.configuration.waitTimeoutMs;\r\n                                    }\r\n                                }\r\n                                if (additionalOptions.waitTimeoutMs !== undefined && typeof additionalOptions.waitTimeoutMs !== \"number\") {\r\n                                    return [2, Promise.reject(new Error(\"\\\"\" + additionalOptions.waitTimeoutMs + \"\\\" is not a valid number for \\\"waitTimeoutMs\\\" \"))];\r\n                                }\r\n                                if (typeof argumentObj !== \"object\") {\r\n                                    return [2, Promise.reject(new Error(\"The method arguments must be an object. method: \" + methodDefinition.name))];\r\n                                }\r\n                                serversMethodMap = this.getServerMethodsByFilterAndTarget(methodDefinition, target);\r\n                                if (!(serversMethodMap.length === 0)) return [3, 4];\r\n                                _a.label = 1;\r\n                            case 1:\r\n                                _a.trys.push([1, 3, , 4]);\r\n                                return [4, this.tryToAwaitForMethods(methodDefinition, target, additionalOptions)];\r\n                            case 2:\r\n                                serversMethodMap = _a.sent();\r\n                                return [3, 4];\r\n                            case 3:\r\n                                err_1 = _a.sent();\r\n                                errorObj = {\r\n                                    method: methodDefinition,\r\n                                    called_with: argumentObj,\r\n                                    message: \"Can not find a method matching \" + JSON.stringify(methodFilter) + \" with server filter \" + JSON.stringify(target) + \". Is the object a valid instance ?\",\r\n                                    executed_by: undefined,\r\n                                    returned: undefined,\r\n                                    status: undefined,\r\n                                };\r\n                                return [2, Promise.reject(errorObj)];\r\n                            case 4:\r\n                                timeout = additionalOptions.methodResponseTimeoutMs;\r\n                                additionalOptionsCopy = additionalOptions;\r\n                                invokePromises = serversMethodMap.map(function (serversMethodPair) {\r\n                                    var invId = shortid();\r\n                                    return Promise.race([\r\n                                        _this.protocol.client.invoke(invId, serversMethodPair.methods[0], argumentObj, serversMethodPair.server, additionalOptionsCopy),\r\n                                        rejectAfter(timeout, {\r\n                                            invocationId: invId,\r\n                                            message: \"Invocation timeout (\" + timeout + \" ms) reached\",\r\n                                            status: InvokeStatus.Error,\r\n                                        })\r\n                                    ]);\r\n                                });\r\n                                return [4, Promise.all(invokePromises)];\r\n                            case 5:\r\n                                invocationMessages = _a.sent();\r\n                                results = this.getInvocationResultObj(invocationMessages, methodDefinition, argumentObj);\r\n                                allRejected = invocationMessages.every(function (result) { return result.status === InvokeStatus.Error; });\r\n                                if (allRejected) {\r\n                                    return [2, Promise.reject(results)];\r\n                                }\r\n                                return [2, results];\r\n                        }\r\n                    });\r\n                }); };\r\n                return [2, promisify(getInvokePromise(), success, error)];\r\n            });\r\n        });\r\n    };\r\n    Client.prototype.getInvocationResultObj = function (invocationResults, method, calledWith) {\r\n        var all_return_values = invocationResults\r\n            .filter(function (invokeMessage) { return invokeMessage.status === InvokeStatus.Success; })\r\n            .reduce(function (allValues, currentValue) {\r\n            allValues = __spreadArrays(allValues, [\r\n                {\r\n                    executed_by: currentValue.instance,\r\n                    returned: currentValue.result,\r\n                    called_with: calledWith,\r\n                    method: method,\r\n                    message: currentValue.message,\r\n                    status: currentValue.status,\r\n                }\r\n            ]);\r\n            return allValues;\r\n        }, []);\r\n        var all_errors = invocationResults\r\n            .filter(function (invokeMessage) { return invokeMessage.status === InvokeStatus.Error; })\r\n            .reduce(function (allErrors, currError) {\r\n            allErrors = __spreadArrays(allErrors, [\r\n                {\r\n                    executed_by: currError.instance,\r\n                    called_with: calledWith,\r\n                    name: method.name,\r\n                    message: currError.message,\r\n                }\r\n            ]);\r\n            return allErrors;\r\n        }, []);\r\n        var invResult = invocationResults[0];\r\n        var result = {\r\n            method: method,\r\n            called_with: calledWith,\r\n            returned: invResult.result,\r\n            executed_by: invResult.instance,\r\n            all_return_values: all_return_values,\r\n            all_errors: all_errors,\r\n            message: invResult.message,\r\n            status: invResult.status\r\n        };\r\n        return result;\r\n    };\r\n    Client.prototype.tryToAwaitForMethods = function (methodDefinition, target, additionalOptions) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (additionalOptions.waitTimeoutMs === 0) {\r\n                reject();\r\n                return;\r\n            }\r\n            var delayStep = 500;\r\n            var delayTillNow = 0;\r\n            var retry = function () {\r\n                delayTillNow += delayStep;\r\n                var serversMethodMap = _this.getServerMethodsByFilterAndTarget(methodDefinition, target);\r\n                if (serversMethodMap.length > 0) {\r\n                    clearInterval(interval);\r\n                    resolve(serversMethodMap);\r\n                }\r\n                else if (delayTillNow >= (additionalOptions.waitTimeoutMs || 10000)) {\r\n                    clearInterval(interval);\r\n                    reject();\r\n                    return;\r\n                }\r\n            };\r\n            var interval = setInterval(retry, delayStep);\r\n        });\r\n    };\r\n    Client.prototype.filterByTarget = function (target, serverMethodMap) {\r\n        var _this = this;\r\n        if (typeof target === \"string\") {\r\n            if (target === \"all\") {\r\n                return __spreadArrays(serverMethodMap);\r\n            }\r\n            else if (target === \"best\") {\r\n                var localMachine = serverMethodMap\r\n                    .find(function (s) { return s.server.instance.isLocal; });\r\n                if (localMachine) {\r\n                    return [localMachine];\r\n                }\r\n                if (serverMethodMap[0] !== undefined) {\r\n                    return [serverMethodMap[0]];\r\n                }\r\n            }\r\n            else if (target === \"skipMine\") {\r\n                return serverMethodMap.filter(function (_a) {\r\n                    var server = _a.server;\r\n                    return server.instance.peerId !== _this.instance.peerId;\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            var targetArray = void 0;\r\n            if (!Array.isArray(target)) {\r\n                targetArray = [target];\r\n            }\r\n            else {\r\n                targetArray = target;\r\n            }\r\n            var allServersMatching = targetArray.reduce(function (matches, filter) {\r\n                var myMatches = serverMethodMap.filter(function (serverMethodPair) {\r\n                    return _this.instanceMatch(filter, serverMethodPair.server.instance);\r\n                });\r\n                return matches.concat(myMatches);\r\n            }, []);\r\n            return allServersMatching;\r\n        }\r\n        return [];\r\n    };\r\n    Client.prototype.instanceMatch = function (instanceFilter, instanceDefinition) {\r\n        return this.containsProps(instanceFilter, instanceDefinition);\r\n    };\r\n    Client.prototype.methodMatch = function (methodFilter, methodDefinition) {\r\n        return this.containsProps(methodFilter, methodDefinition);\r\n    };\r\n    Client.prototype.containsProps = function (filter, repoMethod) {\r\n        var filterProps = Object.keys(filter)\r\n            .filter(function (prop) {\r\n            return filter[prop] !== undefined\r\n                && typeof filter[prop] !== \"function\"\r\n                && prop !== \"object_types\"\r\n                && prop !== \"display_name\"\r\n                && prop !== \"id\"\r\n                && prop !== \"gatewayId\"\r\n                && prop !== \"identifier\"\r\n                && prop[0] !== \"_\";\r\n        });\r\n        return filterProps.reduce(function (isMatch, prop) {\r\n            var filterValue = filter[prop];\r\n            var repoMethodValue = repoMethod[prop];\r\n            if (prop === \"objectTypes\") {\r\n                var containsAllFromFilter = function (filterObjTypes, repoObjectTypes) {\r\n                    var objTypeToContains = filterObjTypes.reduce(function (object, objType) {\r\n                        object[objType] = false;\r\n                        return object;\r\n                    }, {});\r\n                    repoObjectTypes.forEach(function (repoObjType) {\r\n                        if (objTypeToContains[repoObjType] !== undefined) {\r\n                            objTypeToContains[repoObjType] = true;\r\n                        }\r\n                    });\r\n                    var filterIsFullfilled = function () { return Object.keys(objTypeToContains).reduce(function (isFullfiled, objType) {\r\n                        if (!objTypeToContains[objType]) {\r\n                            isFullfiled = false;\r\n                        }\r\n                        return isFullfiled;\r\n                    }, true); };\r\n                    return filterIsFullfilled();\r\n                };\r\n                if (filterValue.length > repoMethodValue.length\r\n                    || containsAllFromFilter(filterValue, repoMethodValue) === false) {\r\n                    isMatch = false;\r\n                }\r\n            }\r\n            else if (String(filterValue).toLowerCase() !== String(repoMethodValue).toLowerCase()) {\r\n                isMatch = false;\r\n            }\r\n            return isMatch;\r\n        }, true);\r\n    };\r\n    Client.prototype.getMethods = function (methodFilter) {\r\n        var _this = this;\r\n        if (methodFilter === undefined) {\r\n            return this.repo.getMethods();\r\n        }\r\n        if (typeof methodFilter === \"string\") {\r\n            methodFilter = { name: methodFilter };\r\n        }\r\n        var methods = this.repo.getMethods().filter(function (method) {\r\n            return _this.methodMatch(methodFilter, method);\r\n        });\r\n        return methods;\r\n    };\r\n    Client.prototype.getMethodsForInstance = function (instanceFilter) {\r\n        var _this = this;\r\n        var allServers = this.repo.getServers();\r\n        var matchingServers = allServers.filter(function (server) {\r\n            return _this.instanceMatch(instanceFilter, server.instance);\r\n        });\r\n        if (matchingServers.length === 0) {\r\n            return [];\r\n        }\r\n        var resultMethodsObject = {};\r\n        if (matchingServers.length === 1) {\r\n            resultMethodsObject = matchingServers[0].methods;\r\n        }\r\n        else {\r\n            matchingServers.forEach(function (server) {\r\n                Object.keys(server.methods).forEach(function (methodKey) {\r\n                    var method = server.methods[methodKey];\r\n                    resultMethodsObject[method.identifier] = method;\r\n                });\r\n            });\r\n        }\r\n        return Object.keys(resultMethodsObject)\r\n            .map(function (key) {\r\n            return resultMethodsObject[key];\r\n        });\r\n    };\r\n    Client.prototype.getServers = function (methodFilter) {\r\n        var _this = this;\r\n        var servers = this.repo.getServers();\r\n        if (methodFilter === undefined) {\r\n            return servers.map(function (server) {\r\n                return { server: server, methods: [] };\r\n            });\r\n        }\r\n        return servers.reduce(function (prev, current) {\r\n            var methodsForServer = _this.repo.getServerMethodsById(current.id);\r\n            var matchingMethods = methodsForServer.filter(function (method) {\r\n                return _this.methodMatch(methodFilter, method);\r\n            });\r\n            if (matchingMethods.length > 0) {\r\n                prev.push({ server: current, methods: matchingMethods });\r\n            }\r\n            return prev;\r\n        }, []);\r\n    };\r\n    Client.prototype.getServerMethodsByFilterAndTarget = function (methodFilter, target) {\r\n        var serversMethodMap = this.getServers(methodFilter);\r\n        return this.filterByTarget(target, serversMethodMap);\r\n    };\r\n    return Client;\r\n}());\n\nvar ServerSubscription = (function () {\r\n    function ServerSubscription(protocol, repoMethod, subscription) {\r\n        this.protocol = protocol;\r\n        this.repoMethod = repoMethod;\r\n        this.subscription = subscription;\r\n    }\r\n    Object.defineProperty(ServerSubscription.prototype, \"stream\", {\r\n        get: function () {\r\n            if (!this.repoMethod.stream) {\r\n                throw new Error(\"no stream\");\r\n            }\r\n            return this.repoMethod.stream;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ServerSubscription.prototype, \"arguments\", {\r\n        get: function () { return this.subscription.arguments || {}; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ServerSubscription.prototype, \"branchKey\", {\r\n        get: function () { return this.subscription.branchKey; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ServerSubscription.prototype, \"instance\", {\r\n        get: function () {\r\n            if (!this.subscription.instance) {\r\n                throw new Error(\"no instance\");\r\n            }\r\n            return this.subscription.instance;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ServerSubscription.prototype.close = function () {\r\n        this.protocol.server.closeSingleSubscription(this.repoMethod, this.subscription);\r\n    };\r\n    ServerSubscription.prototype.push = function (data) {\r\n        this.protocol.server.pushDataToSingle(this.repoMethod, this.subscription, data);\r\n    };\r\n    return ServerSubscription;\r\n}());\n\nvar Request = (function () {\r\n    function Request(protocol, repoMethod, requestContext) {\r\n        this.protocol = protocol;\r\n        this.repoMethod = repoMethod;\r\n        this.requestContext = requestContext;\r\n        this.arguments = requestContext.arguments;\r\n        this.instance = requestContext.instance;\r\n    }\r\n    Request.prototype.accept = function () {\r\n        this.protocol.server.acceptRequestOnBranch(this.requestContext, this.repoMethod, \"\");\r\n    };\r\n    Request.prototype.acceptOnBranch = function (branch) {\r\n        this.protocol.server.acceptRequestOnBranch(this.requestContext, this.repoMethod, branch);\r\n    };\r\n    Request.prototype.reject = function (reason) {\r\n        this.protocol.server.rejectRequest(this.requestContext, this.repoMethod, reason);\r\n    };\r\n    return Request;\r\n}());\n\nvar ServerStreaming = (function () {\r\n    function ServerStreaming(protocol, server) {\r\n        var _this = this;\r\n        this.protocol = protocol;\r\n        this.server = server;\r\n        protocol.server.onSubRequest(function (rc, rm) { return _this.handleSubRequest(rc, rm); });\r\n        protocol.server.onSubAdded(function (sub, rm) { return _this.handleSubAdded(sub, rm); });\r\n        protocol.server.onSubRemoved(function (sub, rm) { return _this.handleSubRemoved(sub, rm); });\r\n    }\r\n    ServerStreaming.prototype.handleSubRequest = function (requestContext, repoMethod) {\r\n        if (!(repoMethod &&\r\n            repoMethod.streamCallbacks &&\r\n            typeof repoMethod.streamCallbacks.subscriptionRequestHandler === \"function\")) {\r\n            return;\r\n        }\r\n        var request = new Request(this.protocol, repoMethod, requestContext);\r\n        repoMethod.streamCallbacks.subscriptionRequestHandler(request);\r\n    };\r\n    ServerStreaming.prototype.handleSubAdded = function (subscription, repoMethod) {\r\n        if (!(repoMethod &&\r\n            repoMethod.streamCallbacks &&\r\n            typeof repoMethod.streamCallbacks.subscriptionAddedHandler === \"function\")) {\r\n            return;\r\n        }\r\n        var sub = new ServerSubscription(this.protocol, repoMethod, subscription);\r\n        repoMethod.streamCallbacks.subscriptionAddedHandler(sub);\r\n    };\r\n    ServerStreaming.prototype.handleSubRemoved = function (subscription, repoMethod) {\r\n        if (!(repoMethod &&\r\n            repoMethod.streamCallbacks &&\r\n            typeof repoMethod.streamCallbacks.subscriptionRemovedHandler === \"function\")) {\r\n            return;\r\n        }\r\n        var sub = new ServerSubscription(this.protocol, repoMethod, subscription);\r\n        repoMethod.streamCallbacks.subscriptionRemovedHandler(sub);\r\n    };\r\n    return ServerStreaming;\r\n}());\n\nvar ServerBranch = (function () {\r\n    function ServerBranch(key, protocol, repoMethod) {\r\n        this.key = key;\r\n        this.protocol = protocol;\r\n        this.repoMethod = repoMethod;\r\n    }\r\n    ServerBranch.prototype.subscriptions = function () {\r\n        var _this = this;\r\n        var subList = this.protocol.server.getSubscriptionList(this.repoMethod, this.key);\r\n        return subList.map(function (sub) {\r\n            return new ServerSubscription(_this.protocol, _this.repoMethod, sub);\r\n        });\r\n    };\r\n    ServerBranch.prototype.close = function () {\r\n        this.protocol.server.closeAllSubscriptions(this.repoMethod, this.key);\r\n    };\r\n    ServerBranch.prototype.push = function (data) {\r\n        this.protocol.server.pushData(this.repoMethod, data, [this.key]);\r\n    };\r\n    return ServerBranch;\r\n}());\n\nvar ServerStream = (function () {\r\n    function ServerStream(_protocol, _repoMethod, _server) {\r\n        this._protocol = _protocol;\r\n        this._repoMethod = _repoMethod;\r\n        this._server = _server;\r\n        this.name = this._repoMethod.definition.name;\r\n    }\r\n    ServerStream.prototype.branches = function (key) {\r\n        var _this = this;\r\n        var bList = this._protocol.server.getBranchList(this._repoMethod);\r\n        if (key) {\r\n            if (bList.indexOf(key) > -1) {\r\n                return new ServerBranch(key, this._protocol, this._repoMethod);\r\n            }\r\n            return undefined;\r\n        }\r\n        else {\r\n            return bList.map(function (branchKey) {\r\n                return new ServerBranch(branchKey, _this._protocol, _this._repoMethod);\r\n            });\r\n        }\r\n    };\r\n    ServerStream.prototype.branch = function (key) {\r\n        return this.branches(key);\r\n    };\r\n    ServerStream.prototype.subscriptions = function () {\r\n        var _this = this;\r\n        var subList = this._protocol.server.getSubscriptionList(this._repoMethod);\r\n        return subList.map(function (sub) {\r\n            return new ServerSubscription(_this._protocol, _this._repoMethod, sub);\r\n        });\r\n    };\r\n    Object.defineProperty(ServerStream.prototype, \"definition\", {\r\n        get: function () {\r\n            var def2 = this._repoMethod.definition;\r\n            return {\r\n                accepts: def2.accepts,\r\n                description: def2.description,\r\n                displayName: def2.displayName,\r\n                name: def2.name,\r\n                objectTypes: def2.objectTypes,\r\n                returns: def2.returns,\r\n                supportsStreaming: def2.supportsStreaming,\r\n            };\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ServerStream.prototype.close = function () {\r\n        this._protocol.server.closeAllSubscriptions(this._repoMethod);\r\n        this._server.unregister(this._repoMethod.definition, true);\r\n    };\r\n    ServerStream.prototype.push = function (data, branches) {\r\n        if (typeof branches !== \"string\" && !Array.isArray(branches) && branches !== undefined) {\r\n            throw new Error(\"invalid branches should be string or string array\");\r\n        }\r\n        if (typeof data !== \"object\") {\r\n            throw new Error(\"Invalid arguments. Data must be an object.\");\r\n        }\r\n        this._protocol.server.pushData(this._repoMethod, data, branches);\r\n    };\r\n    ServerStream.prototype.updateRepoMethod = function (repoMethod) {\r\n        this._repoMethod = repoMethod;\r\n    };\r\n    return ServerStream;\r\n}());\n\nvar Server = (function () {\r\n    function Server(protocol, serverRepository) {\r\n        this.protocol = protocol;\r\n        this.serverRepository = serverRepository;\r\n        this.invocations = 0;\r\n        this.currentlyUnregistering = {};\r\n        this.streaming = new ServerStreaming(protocol, this);\r\n        this.protocol.server.onInvoked(this.onMethodInvoked.bind(this));\r\n    }\r\n    Server.prototype.createStream = function (streamDef, callbacks, successCallback, errorCallback, existingStream) {\r\n        var _this = this;\r\n        var promise = new Promise(function (resolve, reject) {\r\n            if (!streamDef) {\r\n                reject(\"The stream name must be unique! Please, provide either a unique string for a stream name to \\u201Cglue.interop.createStream()\\u201D or a \\u201CmethodDefinition\\u201D object with a unique \\u201Cname\\u201D property for the stream.\");\r\n                return;\r\n            }\r\n            var streamMethodDefinition;\r\n            if (typeof streamDef === \"string\") {\r\n                streamMethodDefinition = { name: \"\" + streamDef };\r\n            }\r\n            else {\r\n                streamMethodDefinition = __assign({}, streamDef);\r\n            }\r\n            if (!streamMethodDefinition.name) {\r\n                return reject(\"The \\u201Cname\\u201D property is required for the \\u201CstreamDefinition\\u201D object and must be unique. Stream definition: \" + JSON.stringify(streamMethodDefinition));\r\n            }\r\n            var nameAlreadyExists = _this.serverRepository.getList()\r\n                .some(function (serverMethod) { return serverMethod.definition.name === streamMethodDefinition.name; });\r\n            if (nameAlreadyExists) {\r\n                return reject(\"A stream with the name \\\"\" + streamMethodDefinition.name + \"\\\" already exists! Please, provide a unique name for the stream.\");\r\n            }\r\n            streamMethodDefinition.supportsStreaming = true;\r\n            if (!callbacks) {\r\n                callbacks = {};\r\n            }\r\n            if (typeof callbacks.subscriptionRequestHandler !== \"function\") {\r\n                callbacks.subscriptionRequestHandler = function (request) {\r\n                    request.accept();\r\n                };\r\n            }\r\n            var repoMethod = _this.serverRepository.add({\r\n                definition: streamMethodDefinition,\r\n                streamCallbacks: callbacks,\r\n                protocolState: {},\r\n            });\r\n            _this.protocol.server.createStream(repoMethod)\r\n                .then(function () {\r\n                var streamUserObject;\r\n                if (existingStream) {\r\n                    streamUserObject = existingStream;\r\n                    existingStream.updateRepoMethod(repoMethod);\r\n                }\r\n                else {\r\n                    streamUserObject = new ServerStream(_this.protocol, repoMethod, _this);\r\n                }\r\n                repoMethod.stream = streamUserObject;\r\n                resolve(streamUserObject);\r\n            })\r\n                .catch(function (err) {\r\n                if (repoMethod.repoId) {\r\n                    _this.serverRepository.remove(repoMethod.repoId);\r\n                }\r\n                reject(err);\r\n            });\r\n        });\r\n        return promisify(promise, successCallback, errorCallback);\r\n    };\r\n    Server.prototype.register = function (methodDefinition, callback) {\r\n        var _this = this;\r\n        if (!methodDefinition) {\r\n            return Promise.reject(\"Method definition is required. Please, provide either a unique string for a method name or a \\u201CmethodDefinition\\u201D object with a required \\u201Cname\\u201D property.\");\r\n        }\r\n        if (typeof callback !== \"function\") {\r\n            return Promise.reject(\"The second parameter must be a callback function. Method: \" + (typeof methodDefinition === \"string\" ? methodDefinition : methodDefinition.name));\r\n        }\r\n        var wrappedCallbackFunction = function (context, resultCallback) { return __awaiter(_this, void 0, void 0, function () {\r\n            var result, resultValue, e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 4, , 5]);\r\n                        result = callback(context.args, context.instance);\r\n                        if (!(result && typeof result.then === \"function\")) return [3, 2];\r\n                        return [4, result];\r\n                    case 1:\r\n                        resultValue = _a.sent();\r\n                        resultCallback(undefined, resultValue);\r\n                        return [3, 3];\r\n                    case 2:\r\n                        resultCallback(undefined, result);\r\n                        _a.label = 3;\r\n                    case 3: return [3, 5];\r\n                    case 4:\r\n                        e_1 = _a.sent();\r\n                        if (!e_1) {\r\n                            e_1 = \"\";\r\n                        }\r\n                        resultCallback(e_1, e_1);\r\n                        return [3, 5];\r\n                    case 5: return [2];\r\n                }\r\n            });\r\n        }); };\r\n        wrappedCallbackFunction.userCallback = callback;\r\n        return this.registerCore(methodDefinition, wrappedCallbackFunction);\r\n    };\r\n    Server.prototype.registerAsync = function (methodDefinition, callback) {\r\n        if (!methodDefinition) {\r\n            return Promise.reject(\"Method definition is required. Please, provide either a unique string for a method name or a \\u201CmethodDefinition\\u201D object with a required \\u201Cname\\u201D property.\");\r\n        }\r\n        if (typeof callback !== \"function\") {\r\n            return Promise.reject(\"The second parameter must be a callback function. Method: \" + (typeof methodDefinition === \"string\" ? methodDefinition : methodDefinition.name));\r\n        }\r\n        var wrappedCallback = function (context, resultCallback) {\r\n            try {\r\n                var resultCalled_1 = false;\r\n                var success = function (result) {\r\n                    if (!resultCalled_1) {\r\n                        resultCallback(undefined, result);\r\n                    }\r\n                    resultCalled_1 = true;\r\n                };\r\n                var error = function (e) {\r\n                    if (!resultCalled_1) {\r\n                        if (!e) {\r\n                            e = \"\";\r\n                        }\r\n                        resultCallback(e, e);\r\n                    }\r\n                    resultCalled_1 = true;\r\n                };\r\n                var methodResult = callback(context.args, context.instance, success, error);\r\n                if (methodResult && typeof methodResult.then === \"function\") {\r\n                    methodResult\r\n                        .then(success)\r\n                        .catch(error);\r\n                }\r\n            }\r\n            catch (e) {\r\n                resultCallback(e, undefined);\r\n            }\r\n        };\r\n        wrappedCallback.userCallbackAsync = callback;\r\n        return this.registerCore(methodDefinition, wrappedCallback);\r\n    };\r\n    Server.prototype.unregister = function (methodFilter, forStream) {\r\n        if (forStream === void 0) { forStream = false; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var methodDefinition, methodToBeRemoved;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (methodFilter === undefined) {\r\n                            return [2, Promise.reject(\"Please, provide either a unique string for a name or an object containing a \\u201Cname\\u201D property.\")];\r\n                        }\r\n                        if (!(typeof methodFilter === \"function\")) return [3, 2];\r\n                        return [4, this.unregisterWithPredicate(methodFilter, forStream)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2];\r\n                    case 2:\r\n                        if (typeof methodFilter === \"string\") {\r\n                            methodDefinition = { name: methodFilter };\r\n                        }\r\n                        else {\r\n                            methodDefinition = methodFilter;\r\n                        }\r\n                        if (methodDefinition.name === undefined) {\r\n                            return [2, Promise.reject(\"Method name is required. Cannot find a method if the method name is undefined!\")];\r\n                        }\r\n                        methodToBeRemoved = this.serverRepository.getList().find(function (serverMethod) {\r\n                            return serverMethod.definition.name === methodDefinition.name\r\n                                && (serverMethod.definition.supportsStreaming || false) === forStream;\r\n                        });\r\n                        if (!methodToBeRemoved) {\r\n                            return [2, Promise.reject(\"Method with a name \\\"\" + methodDefinition.name + \"\\\" does not exist or is not registered by your application!\")];\r\n                        }\r\n                        return [4, this.removeMethodsOrStreams([methodToBeRemoved])];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Server.prototype.unregisterWithPredicate = function (filterPredicate, forStream) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var methodsOrStreamsToRemove;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        methodsOrStreamsToRemove = this.serverRepository.getList()\r\n                            .filter(function (sm) { return filterPredicate(sm.definition); })\r\n                            .filter(function (serverMethod) {\r\n                            return (serverMethod.definition.supportsStreaming || false) === forStream;\r\n                        });\r\n                        if (!methodsOrStreamsToRemove || methodsOrStreamsToRemove.length === 0) {\r\n                            return [2, Promise.reject(\"Could not find a \" + (forStream ? \"stream\" : \"method\") + \" matching the specified condition!\")];\r\n                        }\r\n                        return [4, this.removeMethodsOrStreams(methodsOrStreamsToRemove)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Server.prototype.removeMethodsOrStreams = function (methodsToRemove) {\r\n        var _this = this;\r\n        var methodUnregPromises = [];\r\n        methodsToRemove.forEach(function (method) {\r\n            var promise = _this.protocol.server.unregister(method)\r\n                .then(function () {\r\n                if (method.repoId) {\r\n                    _this.serverRepository.remove(method.repoId);\r\n                }\r\n            });\r\n            methodUnregPromises.push(promise);\r\n            _this.addAsCurrentlyUnregistering(method.definition.name, promise);\r\n        });\r\n        return Promise.all(methodUnregPromises);\r\n    };\r\n    Server.prototype.addAsCurrentlyUnregistering = function (methodName, promise) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var timeout;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                timeout = new Promise(function (resolve) { return setTimeout(resolve, 5000); });\r\n                this.currentlyUnregistering[methodName] = Promise.race([promise, timeout]).then(function () {\r\n                    delete _this.currentlyUnregistering[methodName];\r\n                });\r\n                return [2];\r\n            });\r\n        });\r\n    };\r\n    Server.prototype.registerCore = function (method, theFunction) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var methodDefinition, unregisterInProgress, nameAlreadyExists, repoMethod;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (typeof method === \"string\") {\r\n                            methodDefinition = { name: \"\" + method };\r\n                        }\r\n                        else {\r\n                            methodDefinition = __assign({}, method);\r\n                        }\r\n                        if (!methodDefinition.name) {\r\n                            return [2, Promise.reject(\"Please, provide a (unique) string value for the \\u201Cname\\u201D property in the \\u201CmethodDefinition\\u201D object: \" + JSON.stringify(method))];\r\n                        }\r\n                        unregisterInProgress = this.currentlyUnregistering[methodDefinition.name];\r\n                        if (!unregisterInProgress) return [3, 2];\r\n                        return [4, unregisterInProgress];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        nameAlreadyExists = this.serverRepository.getList()\r\n                            .some(function (serverMethod) { return serverMethod.definition.name === methodDefinition.name; });\r\n                        if (nameAlreadyExists) {\r\n                            return [2, Promise.reject(\"A method with the name \\\"\" + methodDefinition.name + \"\\\" already exists! Please, provide a unique name for the method.\")];\r\n                        }\r\n                        if (methodDefinition.supportsStreaming) {\r\n                            return [2, Promise.reject(\"When you create methods with \\u201Cglue.interop.register()\\u201D or \\u201Cglue.interop.registerAsync()\\u201D the property \\u201CsupportsStreaming\\u201D cannot be \\u201Ctrue\\u201D. If you want \\u201C\" + methodDefinition.name + \"\\u201D to be a stream, please use the \\u201Cglue.interop.createStream()\\u201D method.\")];\r\n                        }\r\n                        repoMethod = this.serverRepository.add({\r\n                            definition: methodDefinition,\r\n                            theFunction: theFunction,\r\n                            protocolState: {},\r\n                        });\r\n                        return [2, this.protocol.server.register(repoMethod)\r\n                                .catch(function (err) {\r\n                                var _a;\r\n                                if ((_a = repoMethod) === null || _a === void 0 ? void 0 : _a.repoId) {\r\n                                    _this.serverRepository.remove(repoMethod.repoId);\r\n                                }\r\n                                throw err;\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Server.prototype.onMethodInvoked = function (methodToExecute, invocationId, invocationArgs) {\r\n        var _this = this;\r\n        if (!methodToExecute || !methodToExecute.theFunction) {\r\n            return;\r\n        }\r\n        methodToExecute.theFunction(invocationArgs, function (err, result) {\r\n            if (err !== undefined && err !== null) {\r\n                if (err.message && typeof err.message === \"string\") {\r\n                    err = err.message;\r\n                }\r\n                else if (typeof err !== \"string\") {\r\n                    try {\r\n                        err = JSON.stringify(err);\r\n                    }\r\n                    catch (unStrException) {\r\n                        err = \"un-stringifyable error in onMethodInvoked! Top level prop names: \" + Object.keys(err);\r\n                    }\r\n                }\r\n            }\r\n            if (typeof result !== \"object\" || result.constructor === Array) {\r\n                result = { _value: result };\r\n            }\r\n            if (!result) {\r\n                result = {};\r\n            }\r\n            _this.protocol.server.methodInvocationResult(methodToExecute, invocationId, err, result);\r\n        });\r\n    };\r\n    return Server;\r\n}());\n\nvar InstanceWrapper = (function () {\r\n    function InstanceWrapper(instance, connection) {\r\n        var _this = this;\r\n        this.wrapped = {\r\n            getMethods: getMethods,\r\n            getStreams: getStreams,\r\n        };\r\n        if (instance) {\r\n            this.refreshWrappedObject(instance);\r\n        }\r\n        if (connection) {\r\n            connection.loggedIn(function () {\r\n                _this.refresh(connection);\r\n            });\r\n            this.refresh(connection);\r\n        }\r\n    }\r\n    InstanceWrapper.prototype.unwrap = function () {\r\n        return this.wrapped;\r\n    };\r\n    InstanceWrapper.prototype.refresh = function (connection) {\r\n        var _a, _b;\r\n        if (!connection) {\r\n            return;\r\n        }\r\n        var resolvedIdentity = (_a = connection) === null || _a === void 0 ? void 0 : _a.resolvedIdentity;\r\n        var instance = Object.assign({}, (resolvedIdentity !== null && resolvedIdentity !== void 0 ? resolvedIdentity : {}), { peerId: (_b = connection) === null || _b === void 0 ? void 0 : _b.peerId });\r\n        this.refreshWrappedObject(instance);\r\n    };\r\n    InstanceWrapper.prototype.refreshWrappedObject = function (resolvedIdentity) {\r\n        var _a, _b, _c;\r\n        this.wrapped.user = resolvedIdentity.user;\r\n        this.wrapped.instance = resolvedIdentity.instance;\r\n        this.wrapped.application = (_a = resolvedIdentity.application, (_a !== null && _a !== void 0 ? _a : shortid()));\r\n        this.wrapped.applicationName = resolvedIdentity.applicationName;\r\n        this.wrapped.pid = (_c = (_b = resolvedIdentity.pid, (_b !== null && _b !== void 0 ? _b : resolvedIdentity.process)), (_c !== null && _c !== void 0 ? _c : Math.floor(Math.random() * 10000000000)));\r\n        this.wrapped.machine = resolvedIdentity.machine;\r\n        this.wrapped.environment = resolvedIdentity.environment;\r\n        this.wrapped.region = resolvedIdentity.region;\r\n        this.wrapped.windowId = resolvedIdentity.windowId;\r\n        this.wrapped.isLocal = true;\r\n        this.wrapped.api = resolvedIdentity.api;\r\n        this.wrapped.service = resolvedIdentity.service;\r\n        this.wrapped.peerId = resolvedIdentity.peerId;\r\n    };\r\n    return InstanceWrapper;\r\n}());\r\nfunction getMethods() {\r\n    var _a;\r\n    return (_a = InstanceWrapper.API) === null || _a === void 0 ? void 0 : _a.methodsForInstance(this);\r\n}\r\nfunction getStreams() {\r\n    var _a;\r\n    return (_a = InstanceWrapper.API) === null || _a === void 0 ? void 0 : _a.methodsForInstance(this).filter(function (m) { return m.supportsStreaming; });\r\n}\n\nvar ClientRepository = (function () {\r\n    function ClientRepository(logger) {\r\n        this.logger = logger;\r\n        this.servers = {};\r\n        this.methodsCount = {};\r\n        this.callbacks = lib();\r\n    }\r\n    ClientRepository.prototype.addServer = function (info, serverId) {\r\n        this.logger.debug(\"adding server \" + serverId);\r\n        var current = this.servers[serverId];\r\n        if (current) {\r\n            return current.id;\r\n        }\r\n        var wrapper = new InstanceWrapper(info);\r\n        var serverEntry = {\r\n            id: serverId,\r\n            methods: {},\r\n            instance: wrapper.unwrap(),\r\n            wrapper: wrapper,\r\n        };\r\n        this.servers[serverId] = serverEntry;\r\n        this.callbacks.execute(\"onServerAdded\", serverEntry.instance);\r\n        return serverId;\r\n    };\r\n    ClientRepository.prototype.removeServerById = function (id, reason) {\r\n        var _this = this;\r\n        var server = this.servers[id];\r\n        if (!server) {\r\n            this.logger.warn(\"not aware of server \" + id + \", my state \" + JSON.stringify(Object.keys(this.servers)));\r\n            return;\r\n        }\r\n        else {\r\n            this.logger.debug(\"removing server \" + id);\r\n        }\r\n        Object.keys(server.methods).forEach(function (methodId) {\r\n            _this.removeServerMethod(id, methodId);\r\n        });\r\n        delete this.servers[id];\r\n        this.callbacks.execute(\"onServerRemoved\", server.instance, reason);\r\n    };\r\n    ClientRepository.prototype.addServerMethod = function (serverId, method) {\r\n        var server = this.servers[serverId];\r\n        if (!server) {\r\n            throw new Error(\"server does not exists\");\r\n        }\r\n        if (server.methods[method.id]) {\r\n            return;\r\n        }\r\n        var identifier = this.createMethodIdentifier(method);\r\n        var methodDefinition = {\r\n            identifier: identifier,\r\n            gatewayId: method.id,\r\n            name: method.name,\r\n            displayName: method.display_name,\r\n            description: method.description,\r\n            version: method.version,\r\n            objectTypes: method.object_types || [],\r\n            accepts: method.input_signature,\r\n            returns: method.result_signature,\r\n            supportsStreaming: typeof method.flags !== \"undefined\" ? method.flags.streaming : false,\r\n        };\r\n        methodDefinition.object_types = methodDefinition.objectTypes;\r\n        methodDefinition.display_name = methodDefinition.displayName;\r\n        methodDefinition.version = methodDefinition.version;\r\n        var that = this;\r\n        methodDefinition.getServers = function () {\r\n            return that.getServersByMethod(method.id);\r\n        };\r\n        server.methods[method.id] = methodDefinition;\r\n        if (!this.methodsCount[identifier]) {\r\n            this.methodsCount[identifier] = 0;\r\n            this.callbacks.execute(\"onMethodAdded\", methodDefinition);\r\n        }\r\n        this.methodsCount[identifier] = this.methodsCount[identifier] + 1;\r\n        this.callbacks.execute(\"onServerMethodAdded\", server.instance, methodDefinition);\r\n        return methodDefinition;\r\n    };\r\n    ClientRepository.prototype.removeServerMethod = function (serverId, methodId) {\r\n        var server = this.servers[serverId];\r\n        if (!server) {\r\n            throw new Error(\"server does not exists\");\r\n        }\r\n        var method = server.methods[methodId];\r\n        delete server.methods[methodId];\r\n        this.methodsCount[method.identifier] = this.methodsCount[method.identifier] - 1;\r\n        if (this.methodsCount[method.identifier] === 0) {\r\n            this.callbacks.execute(\"onMethodRemoved\", method);\r\n        }\r\n        this.callbacks.execute(\"onServerMethodRemoved\", server.instance, method);\r\n    };\r\n    ClientRepository.prototype.getMethods = function () {\r\n        var _this = this;\r\n        var allMethods = {};\r\n        Object.keys(this.servers).forEach(function (serverId) {\r\n            var server = _this.servers[serverId];\r\n            Object.keys(server.methods).forEach(function (methodId) {\r\n                var method = server.methods[methodId];\r\n                allMethods[method.identifier] = method;\r\n            });\r\n        });\r\n        var methodsAsArray = Object.keys(allMethods).map(function (id) {\r\n            return allMethods[id];\r\n        });\r\n        return methodsAsArray;\r\n    };\r\n    ClientRepository.prototype.getServers = function () {\r\n        var _this = this;\r\n        var allServers = [];\r\n        Object.keys(this.servers).forEach(function (serverId) {\r\n            var server = _this.servers[serverId];\r\n            allServers.push(server);\r\n        });\r\n        return allServers;\r\n    };\r\n    ClientRepository.prototype.getServerMethodsById = function (serverId) {\r\n        var server = this.servers[serverId];\r\n        return Object.keys(server.methods).map(function (id) {\r\n            return server.methods[id];\r\n        });\r\n    };\r\n    ClientRepository.prototype.onServerAdded = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onServerAdded\", callback);\r\n        var serversWithMethodsToReplay = this.getServers().map(function (s) { return s.instance; });\r\n        return this.returnUnsubWithDelayedReplay(unsubscribeFunc, serversWithMethodsToReplay, callback);\r\n    };\r\n    ClientRepository.prototype.onMethodAdded = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onMethodAdded\", callback);\r\n        var methodsToReplay = this.getMethods();\r\n        return this.returnUnsubWithDelayedReplay(unsubscribeFunc, methodsToReplay, callback);\r\n    };\r\n    ClientRepository.prototype.onServerMethodAdded = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onServerMethodAdded\", callback);\r\n        var unsubCalled = false;\r\n        var servers = this.getServers();\r\n        setTimeout(function () {\r\n            servers.forEach(function (server) {\r\n                var methods = server.methods;\r\n                Object.keys(methods).forEach(function (methodId) {\r\n                    if (!unsubCalled) {\r\n                        callback(server.instance, methods[methodId]);\r\n                    }\r\n                });\r\n            });\r\n        }, 0);\r\n        return function () {\r\n            unsubCalled = true;\r\n            unsubscribeFunc();\r\n        };\r\n    };\r\n    ClientRepository.prototype.onMethodRemoved = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onMethodRemoved\", callback);\r\n        return unsubscribeFunc;\r\n    };\r\n    ClientRepository.prototype.onServerRemoved = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onServerRemoved\", callback);\r\n        return unsubscribeFunc;\r\n    };\r\n    ClientRepository.prototype.onServerMethodRemoved = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onServerMethodRemoved\", callback);\r\n        return unsubscribeFunc;\r\n    };\r\n    ClientRepository.prototype.getServerById = function (id) {\r\n        return this.servers[id];\r\n    };\r\n    ClientRepository.prototype.reset = function () {\r\n        var _this = this;\r\n        Object.keys(this.servers).forEach(function (key) {\r\n            _this.removeServerById(key, \"reset\");\r\n        });\r\n        this.servers = {};\r\n        this.methodsCount = {};\r\n    };\r\n    ClientRepository.prototype.createMethodIdentifier = function (methodInfo) {\r\n        var accepts = methodInfo.input_signature !== undefined ? methodInfo.input_signature : \"\";\r\n        var returns = methodInfo.result_signature !== undefined ? methodInfo.result_signature : \"\";\r\n        return (methodInfo.name + accepts + returns).toLowerCase();\r\n    };\r\n    ClientRepository.prototype.getServersByMethod = function (id) {\r\n        var _this = this;\r\n        var allServers = [];\r\n        Object.keys(this.servers).forEach(function (serverId) {\r\n            var server = _this.servers[serverId];\r\n            Object.keys(server.methods).forEach(function (methodId) {\r\n                if (methodId === id) {\r\n                    allServers.push(server.instance);\r\n                }\r\n            });\r\n        });\r\n        return allServers;\r\n    };\r\n    ClientRepository.prototype.returnUnsubWithDelayedReplay = function (unsubscribeFunc, collectionToReplay, callback) {\r\n        var unsubCalled = false;\r\n        setTimeout(function () {\r\n            collectionToReplay.forEach(function (item) {\r\n                if (!unsubCalled) {\r\n                    callback(item);\r\n                }\r\n            });\r\n        }, 0);\r\n        return function () {\r\n            unsubCalled = true;\r\n            unsubscribeFunc();\r\n        };\r\n    };\r\n    return ClientRepository;\r\n}());\n\nvar ServerRepository = (function () {\r\n    function ServerRepository() {\r\n        this.nextId = 0;\r\n        this.methods = [];\r\n    }\r\n    ServerRepository.prototype.add = function (method) {\r\n        method.repoId = String(this.nextId);\r\n        this.nextId += 1;\r\n        this.methods.push(method);\r\n        return method;\r\n    };\r\n    ServerRepository.prototype.remove = function (repoId) {\r\n        if (typeof repoId !== \"string\") {\r\n            return new TypeError(\"Expecting a string\");\r\n        }\r\n        this.methods = this.methods.filter(function (m) {\r\n            return m.repoId !== repoId;\r\n        });\r\n    };\r\n    ServerRepository.prototype.getById = function (id) {\r\n        if (typeof id !== \"string\") {\r\n            return undefined;\r\n        }\r\n        return this.methods.find(function (m) {\r\n            return m.repoId === id;\r\n        });\r\n    };\r\n    ServerRepository.prototype.getList = function () {\r\n        return this.methods.map(function (m) { return m; });\r\n    };\r\n    ServerRepository.prototype.length = function () {\r\n        return this.methods.length;\r\n    };\r\n    ServerRepository.prototype.reset = function () {\r\n        this.methods = [];\r\n    };\r\n    return ServerRepository;\r\n}());\n\nvar SUBSCRIPTION_REQUEST = \"onSubscriptionRequest\";\r\nvar SUBSCRIPTION_ADDED = \"onSubscriptionAdded\";\r\nvar SUBSCRIPTION_REMOVED = \"onSubscriptionRemoved\";\r\nvar ServerStreaming$1 = (function () {\r\n    function ServerStreaming(session, repository, serverRepository) {\r\n        var _this = this;\r\n        this.session = session;\r\n        this.repository = repository;\r\n        this.serverRepository = serverRepository;\r\n        this.ERR_URI_SUBSCRIPTION_FAILED = \"com.tick42.agm.errors.subscription.failure\";\r\n        this.callbacks = lib();\r\n        this.nextStreamId = 0;\r\n        session.on(\"add-interest\", function (msg) {\r\n            _this.handleAddInterest(msg);\r\n        });\r\n        session.on(\"remove-interest\", function (msg) {\r\n            _this.handleRemoveInterest(msg);\r\n        });\r\n    }\r\n    ServerStreaming.prototype.acceptRequestOnBranch = function (requestContext, streamingMethod, branch) {\r\n        if (typeof branch !== \"string\") {\r\n            branch = \"\";\r\n        }\r\n        if (typeof streamingMethod.protocolState.subscriptionsMap !== \"object\") {\r\n            throw new TypeError(\"The streaming method is missing its subscriptions.\");\r\n        }\r\n        if (!Array.isArray(streamingMethod.protocolState.branchKeyToStreamIdMap)) {\r\n            throw new TypeError(\"The streaming method is missing its branches.\");\r\n        }\r\n        var streamId = this.getStreamId(streamingMethod, branch);\r\n        var key = requestContext.msg.subscription_id;\r\n        var subscription = {\r\n            id: key,\r\n            arguments: requestContext.arguments,\r\n            instance: requestContext.instance,\r\n            branchKey: branch,\r\n            streamId: streamId,\r\n            subscribeMsg: requestContext.msg,\r\n        };\r\n        streamingMethod.protocolState.subscriptionsMap[key] = subscription;\r\n        this.session.sendFireAndForget({\r\n            type: \"accepted\",\r\n            subscription_id: key,\r\n            stream_id: streamId,\r\n        });\r\n        this.callbacks.execute(SUBSCRIPTION_ADDED, subscription, streamingMethod);\r\n    };\r\n    ServerStreaming.prototype.rejectRequest = function (requestContext, streamingMethod, reason) {\r\n        if (typeof reason !== \"string\") {\r\n            reason = \"\";\r\n        }\r\n        this.sendSubscriptionFailed(\"Subscription rejected by user. \" + reason, requestContext.msg.subscription_id);\r\n    };\r\n    ServerStreaming.prototype.pushData = function (streamingMethod, data, branches) {\r\n        var _this = this;\r\n        if (typeof streamingMethod !== \"object\" || !Array.isArray(streamingMethod.protocolState.branchKeyToStreamIdMap)) {\r\n            return;\r\n        }\r\n        if (typeof data !== \"object\") {\r\n            throw new Error(\"Invalid arguments. Data must be an object.\");\r\n        }\r\n        if (typeof branches === \"string\") {\r\n            branches = [branches];\r\n        }\r\n        else if (!Array.isArray(branches) || branches.length <= 0) {\r\n            branches = [];\r\n        }\r\n        var streamIdList = streamingMethod.protocolState.branchKeyToStreamIdMap\r\n            .filter(function (br) {\r\n            if (!branches || branches.length === 0) {\r\n                return true;\r\n            }\r\n            return branches.indexOf(br.key) >= 0;\r\n        }).map(function (br) {\r\n            return br.streamId;\r\n        });\r\n        streamIdList.forEach(function (streamId) {\r\n            var publishMessage = {\r\n                type: \"publish\",\r\n                stream_id: streamId,\r\n                data: data,\r\n            };\r\n            _this.session.sendFireAndForget(publishMessage);\r\n        });\r\n    };\r\n    ServerStreaming.prototype.pushDataToSingle = function (method, subscription, data) {\r\n        if (typeof data !== \"object\") {\r\n            throw new Error(\"Invalid arguments. Data must be an object.\");\r\n        }\r\n        var postMessage = {\r\n            type: \"post\",\r\n            subscription_id: subscription.id,\r\n            data: data,\r\n        };\r\n        this.session.sendFireAndForget(postMessage);\r\n    };\r\n    ServerStreaming.prototype.closeSingleSubscription = function (streamingMethod, subscription) {\r\n        if (streamingMethod.protocolState.subscriptionsMap) {\r\n            delete streamingMethod.protocolState.subscriptionsMap[subscription.id];\r\n        }\r\n        var dropSubscriptionMessage = {\r\n            type: \"drop-subscription\",\r\n            subscription_id: subscription.id,\r\n            reason: \"Server dropping a single subscription\",\r\n        };\r\n        this.session.sendFireAndForget(dropSubscriptionMessage);\r\n        var subscriber = subscription.instance;\r\n        this.callbacks.execute(SUBSCRIPTION_REMOVED, subscription, streamingMethod);\r\n    };\r\n    ServerStreaming.prototype.closeMultipleSubscriptions = function (streamingMethod, branchKey) {\r\n        var _this = this;\r\n        if (typeof streamingMethod !== \"object\" || typeof streamingMethod.protocolState.subscriptionsMap !== \"object\") {\r\n            return;\r\n        }\r\n        if (!streamingMethod.protocolState.subscriptionsMap) {\r\n            return;\r\n        }\r\n        var subscriptionsMap = streamingMethod.protocolState.subscriptionsMap;\r\n        var subscriptionsToClose = Object.keys(subscriptionsMap)\r\n            .map(function (key) {\r\n            return subscriptionsMap[key];\r\n        });\r\n        if (typeof branchKey === \"string\") {\r\n            subscriptionsToClose = subscriptionsToClose.filter(function (sub) {\r\n                return sub.branchKey === branchKey;\r\n            });\r\n        }\r\n        subscriptionsToClose.forEach(function (subscription) {\r\n            delete subscriptionsMap[subscription.id];\r\n            var drop = {\r\n                type: \"drop-subscription\",\r\n                subscription_id: subscription.id,\r\n                reason: \"Server dropping all subscriptions on stream_id: \" + subscription.streamId,\r\n            };\r\n            _this.session.sendFireAndForget(drop);\r\n        });\r\n    };\r\n    ServerStreaming.prototype.getSubscriptionList = function (streamingMethod, branchKey) {\r\n        if (typeof streamingMethod !== \"object\") {\r\n            return [];\r\n        }\r\n        var subscriptions = [];\r\n        if (!streamingMethod.protocolState.subscriptionsMap) {\r\n            return [];\r\n        }\r\n        var subscriptionsMap = streamingMethod.protocolState.subscriptionsMap;\r\n        var allSubscriptions = Object.keys(subscriptionsMap)\r\n            .map(function (key) {\r\n            return subscriptionsMap[key];\r\n        });\r\n        if (typeof branchKey !== \"string\") {\r\n            subscriptions = allSubscriptions;\r\n        }\r\n        else {\r\n            subscriptions = allSubscriptions.filter(function (sub) {\r\n                return sub.branchKey === branchKey;\r\n            });\r\n        }\r\n        return subscriptions;\r\n    };\r\n    ServerStreaming.prototype.getBranchList = function (streamingMethod) {\r\n        if (typeof streamingMethod !== \"object\") {\r\n            return [];\r\n        }\r\n        if (!streamingMethod.protocolState.subscriptionsMap) {\r\n            return [];\r\n        }\r\n        var subscriptionsMap = streamingMethod.protocolState.subscriptionsMap;\r\n        var allSubscriptions = Object.keys(subscriptionsMap)\r\n            .map(function (key) {\r\n            return subscriptionsMap[key];\r\n        });\r\n        var result = [];\r\n        allSubscriptions.forEach(function (sub) {\r\n            var branch = \"\";\r\n            if (typeof sub === \"object\" && typeof sub.branchKey === \"string\") {\r\n                branch = sub.branchKey;\r\n            }\r\n            if (result.indexOf(branch) === -1) {\r\n                result.push(branch);\r\n            }\r\n        });\r\n        return result;\r\n    };\r\n    ServerStreaming.prototype.onSubAdded = function (callback) {\r\n        this.onSubscriptionLifetimeEvent(SUBSCRIPTION_ADDED, callback);\r\n    };\r\n    ServerStreaming.prototype.onSubRequest = function (callback) {\r\n        this.onSubscriptionLifetimeEvent(SUBSCRIPTION_REQUEST, callback);\r\n    };\r\n    ServerStreaming.prototype.onSubRemoved = function (callback) {\r\n        this.onSubscriptionLifetimeEvent(SUBSCRIPTION_REMOVED, callback);\r\n    };\r\n    ServerStreaming.prototype.handleRemoveInterest = function (msg) {\r\n        var streamingMethod = this.serverRepository.getById(msg.method_id);\r\n        if (typeof msg.subscription_id !== \"string\" ||\r\n            typeof streamingMethod !== \"object\") {\r\n            return;\r\n        }\r\n        if (!streamingMethod.protocolState.subscriptionsMap) {\r\n            return;\r\n        }\r\n        if (typeof streamingMethod.protocolState.subscriptionsMap[msg.subscription_id] !== \"object\") {\r\n            return;\r\n        }\r\n        var subscription = streamingMethod.protocolState.subscriptionsMap[msg.subscription_id];\r\n        delete streamingMethod.protocolState.subscriptionsMap[msg.subscription_id];\r\n        this.callbacks.execute(SUBSCRIPTION_REMOVED, subscription, streamingMethod);\r\n    };\r\n    ServerStreaming.prototype.onSubscriptionLifetimeEvent = function (eventName, handlerFunc) {\r\n        this.callbacks.add(eventName, handlerFunc);\r\n    };\r\n    ServerStreaming.prototype.getNextStreamId = function () {\r\n        return this.nextStreamId++ + \"\";\r\n    };\r\n    ServerStreaming.prototype.handleAddInterest = function (msg) {\r\n        var caller = this.repository.getServerById(msg.caller_id);\r\n        var instance = caller.instance;\r\n        var requestContext = {\r\n            msg: msg,\r\n            arguments: msg.arguments_kv || {},\r\n            instance: instance,\r\n        };\r\n        var streamingMethod = this.serverRepository.getById(msg.method_id);\r\n        if (streamingMethod === undefined) {\r\n            var errorMsg = \"No method with id \" + msg.method_id + \" on this server.\";\r\n            this.sendSubscriptionFailed(errorMsg, msg.subscription_id);\r\n            return;\r\n        }\r\n        if (streamingMethod.protocolState.subscriptionsMap &&\r\n            streamingMethod.protocolState.subscriptionsMap[msg.subscription_id]) {\r\n            this.sendSubscriptionFailed(\"A subscription with id \" + msg.subscription_id + \" already exists.\", msg.subscription_id);\r\n            return;\r\n        }\r\n        this.callbacks.execute(SUBSCRIPTION_REQUEST, requestContext, streamingMethod);\r\n    };\r\n    ServerStreaming.prototype.sendSubscriptionFailed = function (reason, subscriptionId) {\r\n        var errorMessage = {\r\n            type: \"error\",\r\n            reason_uri: this.ERR_URI_SUBSCRIPTION_FAILED,\r\n            reason: reason,\r\n            request_id: subscriptionId,\r\n        };\r\n        this.session.sendFireAndForget(errorMessage);\r\n    };\r\n    ServerStreaming.prototype.getStreamId = function (streamingMethod, branchKey) {\r\n        if (typeof branchKey !== \"string\") {\r\n            branchKey = \"\";\r\n        }\r\n        if (!streamingMethod.protocolState.branchKeyToStreamIdMap) {\r\n            throw new Error(\"streaming \" + streamingMethod.definition.name + \" method without protocol state\");\r\n        }\r\n        var needleBranch = streamingMethod.protocolState.branchKeyToStreamIdMap.filter(function (branch) {\r\n            return branch.key === branchKey;\r\n        })[0];\r\n        var streamId = (needleBranch ? needleBranch.streamId : undefined);\r\n        if (typeof streamId !== \"string\" || streamId === \"\") {\r\n            streamId = this.getNextStreamId();\r\n            streamingMethod.protocolState.branchKeyToStreamIdMap.push({ key: branchKey, streamId: streamId });\r\n        }\r\n        return streamId;\r\n    };\r\n    return ServerStreaming;\r\n}());\n\nvar ServerProtocol = (function () {\r\n    function ServerProtocol(session, clientRepository, serverRepository, logger) {\r\n        var _this = this;\r\n        this.session = session;\r\n        this.clientRepository = clientRepository;\r\n        this.serverRepository = serverRepository;\r\n        this.logger = logger;\r\n        this.callbacks = lib();\r\n        this.streaming = new ServerStreaming$1(session, clientRepository, serverRepository);\r\n        this.session.on(\"invoke\", function (msg) { return _this.handleInvokeMessage(msg); });\r\n    }\r\n    ServerProtocol.prototype.createStream = function (repoMethod) {\r\n        repoMethod.protocolState.subscriptionsMap = {};\r\n        repoMethod.protocolState.branchKeyToStreamIdMap = [];\r\n        return this.register(repoMethod, true);\r\n    };\r\n    ServerProtocol.prototype.register = function (repoMethod, isStreaming) {\r\n        var _this = this;\r\n        var methodDef = repoMethod.definition;\r\n        var flags = { streaming: isStreaming || false };\r\n        var registerMsg = {\r\n            type: \"register\",\r\n            methods: [{\r\n                    id: repoMethod.repoId,\r\n                    name: methodDef.name,\r\n                    display_name: methodDef.displayName,\r\n                    description: methodDef.description,\r\n                    version: methodDef.version,\r\n                    flags: flags,\r\n                    object_types: methodDef.objectTypes || methodDef.object_types,\r\n                    input_signature: methodDef.accepts,\r\n                    result_signature: methodDef.returns,\r\n                    restrictions: undefined,\r\n                }],\r\n        };\r\n        return this.session.send(registerMsg, { methodId: repoMethod.repoId })\r\n            .then(function () {\r\n            _this.logger.debug(\"registered method \" + repoMethod.definition.name + \" with id \" + repoMethod.repoId);\r\n        })\r\n            .catch(function (msg) {\r\n            _this.logger.warn(\"failed to register method \" + repoMethod.definition.name + \" with id \" + repoMethod.repoId + \" - \" + JSON.stringify(msg));\r\n            throw msg;\r\n        });\r\n    };\r\n    ServerProtocol.prototype.onInvoked = function (callback) {\r\n        this.callbacks.add(\"onInvoked\", callback);\r\n    };\r\n    ServerProtocol.prototype.methodInvocationResult = function (method, invocationId, err, result) {\r\n        var msg;\r\n        if (err || err === \"\") {\r\n            msg = {\r\n                type: \"error\",\r\n                request_id: invocationId,\r\n                reason_uri: \"agm.errors.client_error\",\r\n                reason: err,\r\n                context: result,\r\n                peer_id: undefined,\r\n            };\r\n        }\r\n        else {\r\n            msg = {\r\n                type: \"yield\",\r\n                invocation_id: invocationId,\r\n                peer_id: this.session.peerId,\r\n                result: result,\r\n                request_id: undefined,\r\n            };\r\n        }\r\n        this.session.sendFireAndForget(msg);\r\n    };\r\n    ServerProtocol.prototype.unregister = function (method) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var msg;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        msg = {\r\n                            type: \"unregister\",\r\n                            methods: [method.repoId],\r\n                        };\r\n                        return [4, this.session.send(msg)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ServerProtocol.prototype.getBranchList = function (method) {\r\n        return this.streaming.getBranchList(method);\r\n    };\r\n    ServerProtocol.prototype.getSubscriptionList = function (method, branchKey) {\r\n        return this.streaming.getSubscriptionList(method, branchKey);\r\n    };\r\n    ServerProtocol.prototype.closeAllSubscriptions = function (method, branchKey) {\r\n        this.streaming.closeMultipleSubscriptions(method, branchKey);\r\n    };\r\n    ServerProtocol.prototype.pushData = function (method, data, branches) {\r\n        this.streaming.pushData(method, data, branches);\r\n    };\r\n    ServerProtocol.prototype.pushDataToSingle = function (method, subscription, data) {\r\n        this.streaming.pushDataToSingle(method, subscription, data);\r\n    };\r\n    ServerProtocol.prototype.closeSingleSubscription = function (method, subscription) {\r\n        this.streaming.closeSingleSubscription(method, subscription);\r\n    };\r\n    ServerProtocol.prototype.acceptRequestOnBranch = function (requestContext, method, branch) {\r\n        this.streaming.acceptRequestOnBranch(requestContext, method, branch);\r\n    };\r\n    ServerProtocol.prototype.rejectRequest = function (requestContext, method, reason) {\r\n        this.streaming.rejectRequest(requestContext, method, reason);\r\n    };\r\n    ServerProtocol.prototype.onSubRequest = function (callback) {\r\n        this.streaming.onSubRequest(callback);\r\n    };\r\n    ServerProtocol.prototype.onSubAdded = function (callback) {\r\n        this.streaming.onSubAdded(callback);\r\n    };\r\n    ServerProtocol.prototype.onSubRemoved = function (callback) {\r\n        this.streaming.onSubRemoved(callback);\r\n    };\r\n    ServerProtocol.prototype.handleInvokeMessage = function (msg) {\r\n        var invocationId = msg.invocation_id;\r\n        var callerId = msg.caller_id;\r\n        var methodId = msg.method_id;\r\n        var args = msg.arguments_kv;\r\n        var methodList = this.serverRepository.getList();\r\n        var method = methodList.filter(function (m) {\r\n            return m.repoId === methodId;\r\n        })[0];\r\n        if (method === undefined) {\r\n            return;\r\n        }\r\n        var client = this.clientRepository.getServerById(callerId).instance;\r\n        var invocationArgs = { args: args, instance: client };\r\n        this.callbacks.execute(\"onInvoked\", method, invocationId, invocationArgs);\r\n    };\r\n    return ServerProtocol;\r\n}());\n\nvar UserSubscription = (function () {\r\n    function UserSubscription(repository, subscriptionData) {\r\n        this.repository = repository;\r\n        this.subscriptionData = subscriptionData;\r\n    }\r\n    Object.defineProperty(UserSubscription.prototype, \"requestArguments\", {\r\n        get: function () {\r\n            return this.subscriptionData.params.arguments || {};\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserSubscription.prototype, \"servers\", {\r\n        get: function () {\r\n            var _this = this;\r\n            return this.subscriptionData.trackedServers\r\n                .filter(function (pair) { return pair.subscriptionId; })\r\n                .map(function (pair) { return _this.repository.getServerById(pair.serverId).instance; });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserSubscription.prototype, \"serverInstance\", {\r\n        get: function () {\r\n            return this.servers[0];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserSubscription.prototype, \"stream\", {\r\n        get: function () {\r\n            return this.subscriptionData.method;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    UserSubscription.prototype.onData = function (dataCallback) {\r\n        if (typeof dataCallback !== \"function\") {\r\n            throw new TypeError(\"The data callback must be a function.\");\r\n        }\r\n        this.subscriptionData.handlers.onData.push(dataCallback);\r\n        if (this.subscriptionData.handlers.onData.length === 1 && this.subscriptionData.queued.data.length > 0) {\r\n            this.subscriptionData.queued.data.forEach(function (dataItem) {\r\n                dataCallback(dataItem);\r\n            });\r\n        }\r\n    };\r\n    UserSubscription.prototype.onClosed = function (closedCallback) {\r\n        if (typeof closedCallback !== \"function\") {\r\n            throw new TypeError(\"The callback must be a function.\");\r\n        }\r\n        this.subscriptionData.handlers.onClosed.push(closedCallback);\r\n    };\r\n    UserSubscription.prototype.onFailed = function (callback) {\r\n    };\r\n    UserSubscription.prototype.onConnected = function (callback) {\r\n        if (typeof callback !== \"function\") {\r\n            throw new TypeError(\"The callback must be a function.\");\r\n        }\r\n        this.subscriptionData.handlers.onConnected.push(callback);\r\n    };\r\n    UserSubscription.prototype.close = function () {\r\n        this.subscriptionData.close();\r\n    };\r\n    UserSubscription.prototype.setNewSubscription = function (newSub) {\r\n        this.subscriptionData = newSub;\r\n    };\r\n    return UserSubscription;\r\n}());\n\nvar STATUS_AWAITING_ACCEPT = \"awaitingAccept\";\r\nvar STATUS_SUBSCRIBED = \"subscribed\";\r\nvar ERR_MSG_SUB_FAILED = \"Subscription failed.\";\r\nvar ERR_MSG_SUB_REJECTED = \"Subscription rejected.\";\r\nvar ON_CLOSE_MSG_SERVER_INIT = \"ServerInitiated\";\r\nvar ON_CLOSE_MSG_CLIENT_INIT = \"ClientInitiated\";\r\nvar ClientStreaming = (function () {\r\n    function ClientStreaming(session, repository, logger) {\r\n        var _this = this;\r\n        this.session = session;\r\n        this.repository = repository;\r\n        this.logger = logger;\r\n        this.subscriptionsList = {};\r\n        this.subscriptionIdToLocalKeyMap = {};\r\n        this.nextSubLocalKey = 0;\r\n        this.handleErrorSubscribing = function (errorResponse) {\r\n            var tag = errorResponse._tag;\r\n            var subLocalKey = tag.subLocalKey;\r\n            var pendingSub = _this.subscriptionsList[subLocalKey];\r\n            if (typeof pendingSub !== \"object\") {\r\n                return;\r\n            }\r\n            pendingSub.trackedServers = pendingSub.trackedServers.filter(function (server) {\r\n                return server.serverId !== tag.serverId;\r\n            });\r\n            if (pendingSub.trackedServers.length <= 0) {\r\n                clearTimeout(pendingSub.timeoutId);\r\n                if (pendingSub.status === STATUS_AWAITING_ACCEPT) {\r\n                    var reason = (typeof errorResponse.reason === \"string\" && errorResponse.reason !== \"\") ?\r\n                        ' Publisher said \"' + errorResponse.reason + '\".' :\r\n                        \" No reason given.\";\r\n                    var callArgs = typeof pendingSub.params.arguments === \"object\" ?\r\n                        JSON.stringify(pendingSub.params.arguments) :\r\n                        \"{}\";\r\n                    pendingSub.error({\r\n                        message: ERR_MSG_SUB_REJECTED + reason + \" Called with:\" + callArgs,\r\n                        called_with: pendingSub.params.arguments,\r\n                        method: pendingSub.method,\r\n                    });\r\n                }\r\n                else if (pendingSub.status === STATUS_SUBSCRIBED) {\r\n                    _this.callOnClosedHandlers(pendingSub);\r\n                }\r\n                delete _this.subscriptionsList[subLocalKey];\r\n            }\r\n        };\r\n        this.handleSubscribed = function (msg) {\r\n            var subLocalKey = msg._tag.subLocalKey;\r\n            var pendingSub = _this.subscriptionsList[subLocalKey];\r\n            if (typeof pendingSub !== \"object\") {\r\n                return;\r\n            }\r\n            var serverId = msg._tag.serverId;\r\n            var acceptingServer = pendingSub.trackedServers\r\n                .filter(function (server) {\r\n                return server.serverId === serverId;\r\n            })[0];\r\n            if (typeof acceptingServer !== \"object\") {\r\n                return;\r\n            }\r\n            acceptingServer.subscriptionId = msg.subscription_id;\r\n            _this.subscriptionIdToLocalKeyMap[msg.subscription_id] = subLocalKey;\r\n            var isFirstResponse = (pendingSub.status === STATUS_AWAITING_ACCEPT);\r\n            pendingSub.status = STATUS_SUBSCRIBED;\r\n            if (isFirstResponse) {\r\n                var reconnect = false;\r\n                var sub = pendingSub.subscription;\r\n                if (sub) {\r\n                    sub.setNewSubscription(pendingSub);\r\n                    pendingSub.success(sub);\r\n                    reconnect = true;\r\n                }\r\n                else {\r\n                    sub = new UserSubscription(_this.repository, pendingSub);\r\n                    pendingSub.subscription = sub;\r\n                    pendingSub.success(sub);\r\n                }\r\n                for (var _i = 0, _a = pendingSub.handlers.onConnected; _i < _a.length; _i++) {\r\n                    var handler = _a[_i];\r\n                    try {\r\n                        handler(sub.serverInstance, reconnect);\r\n                    }\r\n                    catch (e) {\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        this.handleEventData = function (msg) {\r\n            var subLocalKey = _this.subscriptionIdToLocalKeyMap[msg.subscription_id];\r\n            if (typeof subLocalKey === \"undefined\") {\r\n                return;\r\n            }\r\n            var subscription = _this.subscriptionsList[subLocalKey];\r\n            if (typeof subscription !== \"object\") {\r\n                return;\r\n            }\r\n            var trackedServersFound = subscription.trackedServers.filter(function (server) {\r\n                return server.subscriptionId === msg.subscription_id;\r\n            });\r\n            if (trackedServersFound.length !== 1) {\r\n                return;\r\n            }\r\n            var isPrivateData = msg.oob;\r\n            var sendingServerId = trackedServersFound[0].serverId;\r\n            var receivedStreamData = function () {\r\n                return {\r\n                    data: msg.data,\r\n                    server: _this.repository.getServerById(sendingServerId).instance,\r\n                    requestArguments: subscription.params.arguments,\r\n                    message: undefined,\r\n                    private: isPrivateData,\r\n                };\r\n            };\r\n            var onDataHandlers = subscription.handlers.onData;\r\n            var queuedData = subscription.queued.data;\r\n            if (onDataHandlers.length > 0) {\r\n                onDataHandlers.forEach(function (callback) {\r\n                    if (typeof callback === \"function\") {\r\n                        callback(receivedStreamData());\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                queuedData.push(receivedStreamData());\r\n            }\r\n        };\r\n        this.handleSubscriptionCancelled = function (msg) {\r\n            var subLocalKey = _this.subscriptionIdToLocalKeyMap[msg.subscription_id];\r\n            if (typeof subLocalKey === \"undefined\") {\r\n                return;\r\n            }\r\n            var subscription = _this.subscriptionsList[subLocalKey];\r\n            if (typeof subscription !== \"object\") {\r\n                return;\r\n            }\r\n            var expectedNewLength = subscription.trackedServers.length - 1;\r\n            subscription.trackedServers = subscription.trackedServers.filter(function (server) {\r\n                if (server.subscriptionId === msg.subscription_id) {\r\n                    subscription.queued.closers.push(server.serverId);\r\n                    return false;\r\n                }\r\n                else {\r\n                    return true;\r\n                }\r\n            });\r\n            if (subscription.trackedServers.length !== expectedNewLength) {\r\n                return;\r\n            }\r\n            if (subscription.trackedServers.length <= 0) {\r\n                clearTimeout(subscription.timeoutId);\r\n                _this.callOnClosedHandlers(subscription);\r\n                delete _this.subscriptionsList[subLocalKey];\r\n            }\r\n            delete _this.subscriptionIdToLocalKeyMap[msg.subscription_id];\r\n        };\r\n        session.on(\"subscribed\", this.handleSubscribed);\r\n        session.on(\"event\", this.handleEventData);\r\n        session.on(\"subscription-cancelled\", this.handleSubscriptionCancelled);\r\n    }\r\n    ClientStreaming.prototype.subscribe = function (streamingMethod, params, targetServers, success, error, existingSub) {\r\n        var _this = this;\r\n        if (targetServers.length === 0) {\r\n            error({\r\n                method: streamingMethod,\r\n                called_with: params.arguments,\r\n                message: ERR_MSG_SUB_FAILED + \" No available servers matched the target params.\",\r\n            });\r\n            return;\r\n        }\r\n        var subLocalKey = this.getNextSubscriptionLocalKey();\r\n        var pendingSub = this.registerSubscription(subLocalKey, streamingMethod, params, success, error, params.methodResponseTimeout || 10000, existingSub);\r\n        if (typeof pendingSub !== \"object\") {\r\n            error({\r\n                method: streamingMethod,\r\n                called_with: params.arguments,\r\n                message: ERR_MSG_SUB_FAILED + \" Unable to register the user callbacks.\",\r\n            });\r\n            return;\r\n        }\r\n        targetServers.forEach(function (target) {\r\n            var serverId = target.server.id;\r\n            var method = target.methods.find(function (m) { return m.name === streamingMethod.name; });\r\n            if (!method) {\r\n                _this.logger.error(\"can not find method \" + streamingMethod.name + \" for target \" + target.server.id + \" \");\r\n                return;\r\n            }\r\n            pendingSub.trackedServers.push({\r\n                serverId: serverId,\r\n                subscriptionId: undefined,\r\n            });\r\n            var msg = {\r\n                type: \"subscribe\",\r\n                server_id: serverId,\r\n                method_id: method.gatewayId,\r\n                arguments_kv: params.arguments,\r\n            };\r\n            _this.session.send(msg, { serverId: serverId, subLocalKey: subLocalKey })\r\n                .then(function (m) { return _this.handleSubscribed(m); })\r\n                .catch(function (err) { return _this.handleErrorSubscribing(err); });\r\n        });\r\n    };\r\n    ClientStreaming.prototype.drainSubscriptions = function () {\r\n        var existing = Object.values(this.subscriptionsList);\r\n        this.subscriptionsList = {};\r\n        this.subscriptionIdToLocalKeyMap = {};\r\n        return existing;\r\n    };\r\n    ClientStreaming.prototype.getNextSubscriptionLocalKey = function () {\r\n        var current = this.nextSubLocalKey;\r\n        this.nextSubLocalKey += 1;\r\n        return current;\r\n    };\r\n    ClientStreaming.prototype.registerSubscription = function (subLocalKey, method, params, success, error, timeout, existingSub) {\r\n        var _this = this;\r\n        var _a, _b, _c, _d;\r\n        var subsInfo = {\r\n            localKey: subLocalKey,\r\n            status: STATUS_AWAITING_ACCEPT,\r\n            method: method,\r\n            params: params,\r\n            success: success,\r\n            error: error,\r\n            trackedServers: [],\r\n            handlers: {\r\n                onData: ((_a = existingSub) === null || _a === void 0 ? void 0 : _a.handlers.onData) || [],\r\n                onClosed: ((_b = existingSub) === null || _b === void 0 ? void 0 : _b.handlers.onClosed) || [],\r\n                onConnected: ((_c = existingSub) === null || _c === void 0 ? void 0 : _c.handlers.onConnected) || [],\r\n            },\r\n            queued: {\r\n                data: [],\r\n                closers: [],\r\n            },\r\n            timeoutId: undefined,\r\n            close: function () { return _this.closeSubscription(subLocalKey); },\r\n            subscription: (_d = existingSub) === null || _d === void 0 ? void 0 : _d.subscription\r\n        };\r\n        if (!existingSub) {\r\n            if (params.onData) {\r\n                subsInfo.handlers.onData.push(params.onData);\r\n            }\r\n            if (params.onClosed) {\r\n                subsInfo.handlers.onClosed.push(params.onClosed);\r\n            }\r\n            if (params.onConnected) {\r\n                subsInfo.handlers.onConnected.push(params.onConnected);\r\n            }\r\n        }\r\n        this.subscriptionsList[subLocalKey] = subsInfo;\r\n        subsInfo.timeoutId = setTimeout(function () {\r\n            if (_this.subscriptionsList[subLocalKey] === undefined) {\r\n                return;\r\n            }\r\n            var pendingSub = _this.subscriptionsList[subLocalKey];\r\n            if (pendingSub.status === STATUS_AWAITING_ACCEPT) {\r\n                error({\r\n                    method: method,\r\n                    called_with: params.arguments,\r\n                    message: ERR_MSG_SUB_FAILED + \" Subscription attempt timed out after \" + timeout + \" ms.\",\r\n                });\r\n                delete _this.subscriptionsList[subLocalKey];\r\n            }\r\n            else if (pendingSub.status === STATUS_SUBSCRIBED && pendingSub.trackedServers.length > 0) {\r\n                pendingSub.trackedServers = pendingSub.trackedServers.filter(function (server) {\r\n                    return (typeof server.subscriptionId !== \"undefined\");\r\n                });\r\n                delete pendingSub.timeoutId;\r\n                if (pendingSub.trackedServers.length <= 0) {\r\n                    _this.callOnClosedHandlers(pendingSub);\r\n                    delete _this.subscriptionsList[subLocalKey];\r\n                }\r\n            }\r\n        }, timeout);\r\n        return subsInfo;\r\n    };\r\n    ClientStreaming.prototype.callOnClosedHandlers = function (subscription, reason) {\r\n        var closersCount = subscription.queued.closers.length;\r\n        var closingServerId = (closersCount > 0) ? subscription.queued.closers[closersCount - 1] : null;\r\n        var closingServer;\r\n        if (closingServerId !== undefined && typeof closingServerId === \"string\") {\r\n            closingServer = this.repository.getServerById(closingServerId).instance;\r\n        }\r\n        subscription.handlers.onClosed.forEach(function (callback) {\r\n            if (typeof callback !== \"function\") {\r\n                return;\r\n            }\r\n            callback({\r\n                message: reason || ON_CLOSE_MSG_SERVER_INIT,\r\n                requestArguments: subscription.params.arguments || {},\r\n                server: closingServer,\r\n                stream: subscription.method,\r\n            });\r\n        });\r\n    };\r\n    ClientStreaming.prototype.closeSubscription = function (subLocalKey) {\r\n        var _this = this;\r\n        var subscription = this.subscriptionsList[subLocalKey];\r\n        if (typeof subscription !== \"object\") {\r\n            return;\r\n        }\r\n        subscription.trackedServers.forEach(function (server) {\r\n            if (typeof server.subscriptionId === \"undefined\") {\r\n                return;\r\n            }\r\n            subscription.queued.closers.push(server.serverId);\r\n            _this.session.sendFireAndForget({\r\n                type: \"unsubscribe\",\r\n                subscription_id: server.subscriptionId,\r\n                reason_uri: \"\",\r\n                reason: ON_CLOSE_MSG_CLIENT_INIT,\r\n            });\r\n            delete _this.subscriptionIdToLocalKeyMap[server.subscriptionId];\r\n        });\r\n        subscription.trackedServers = [];\r\n        this.callOnClosedHandlers(subscription, ON_CLOSE_MSG_CLIENT_INIT);\r\n        delete this.subscriptionsList[subLocalKey];\r\n    };\r\n    return ClientStreaming;\r\n}());\n\nvar ClientProtocol = (function () {\r\n    function ClientProtocol(session, repository, logger) {\r\n        var _this = this;\r\n        this.session = session;\r\n        this.repository = repository;\r\n        this.logger = logger;\r\n        session.on(\"peer-added\", function (msg) { return _this.handlePeerAdded(msg); });\r\n        session.on(\"peer-removed\", function (msg) { return _this.handlePeerRemoved(msg); });\r\n        session.on(\"methods-added\", function (msg) { return _this.handleMethodsAddedMessage(msg); });\r\n        session.on(\"methods-removed\", function (msg) { return _this.handleMethodsRemovedMessage(msg); });\r\n        this.streaming = new ClientStreaming(session, repository, logger);\r\n    }\r\n    ClientProtocol.prototype.subscribe = function (stream, options, targetServers, success, error, existingSub) {\r\n        this.streaming.subscribe(stream, options, targetServers, success, error, existingSub);\r\n    };\r\n    ClientProtocol.prototype.invoke = function (id, method, args, target) {\r\n        var _this = this;\r\n        var serverId = target.id;\r\n        var methodId = method.gatewayId;\r\n        var msg = {\r\n            type: \"call\",\r\n            server_id: serverId,\r\n            method_id: methodId,\r\n            arguments_kv: args,\r\n        };\r\n        return this.session.send(msg, { invocationId: id, serverId: serverId })\r\n            .then(function (m) { return _this.handleResultMessage(m); })\r\n            .catch(function (err) { return _this.handleInvocationError(err); });\r\n    };\r\n    ClientProtocol.prototype.drainSubscriptions = function () {\r\n        return this.streaming.drainSubscriptions();\r\n    };\r\n    ClientProtocol.prototype.handlePeerAdded = function (msg) {\r\n        var newPeerId = msg.new_peer_id;\r\n        var remoteId = msg.identity;\r\n        var isLocal = msg.meta ? msg.meta.local : true;\r\n        var pid = Number(remoteId.process);\r\n        var serverInfo = {\r\n            machine: remoteId.machine,\r\n            pid: isNaN(pid) ? remoteId.process : pid,\r\n            instance: remoteId.instance,\r\n            application: remoteId.application,\r\n            applicationName: remoteId.applicationName,\r\n            environment: remoteId.environment,\r\n            region: remoteId.region,\r\n            user: remoteId.user,\r\n            windowId: remoteId.windowId,\r\n            peerId: newPeerId,\r\n            api: remoteId.api,\r\n            isLocal: isLocal\r\n        };\r\n        this.repository.addServer(serverInfo, newPeerId);\r\n    };\r\n    ClientProtocol.prototype.handlePeerRemoved = function (msg) {\r\n        var removedPeerId = msg.removed_id;\r\n        var reason = msg.reason;\r\n        this.repository.removeServerById(removedPeerId, reason);\r\n    };\r\n    ClientProtocol.prototype.handleMethodsAddedMessage = function (msg) {\r\n        var _this = this;\r\n        var serverId = msg.server_id;\r\n        var methods = msg.methods;\r\n        methods.forEach(function (method) {\r\n            _this.repository.addServerMethod(serverId, method);\r\n        });\r\n    };\r\n    ClientProtocol.prototype.handleMethodsRemovedMessage = function (msg) {\r\n        var _this = this;\r\n        var serverId = msg.server_id;\r\n        var methodIdList = msg.methods;\r\n        var server = this.repository.getServerById(serverId);\r\n        var serverMethodKeys = Object.keys(server.methods);\r\n        serverMethodKeys.forEach(function (methodKey) {\r\n            var method = server.methods[methodKey];\r\n            if (methodIdList.indexOf(method.gatewayId) > -1) {\r\n                _this.repository.removeServerMethod(serverId, methodKey);\r\n            }\r\n        });\r\n    };\r\n    ClientProtocol.prototype.handleResultMessage = function (msg) {\r\n        var invocationId = msg._tag.invocationId;\r\n        var result = msg.result;\r\n        var serverId = msg._tag.serverId;\r\n        var server = this.repository.getServerById(serverId);\r\n        return {\r\n            invocationId: invocationId,\r\n            result: result,\r\n            instance: server.instance,\r\n            status: InvokeStatus.Success,\r\n            message: \"\"\r\n        };\r\n    };\r\n    ClientProtocol.prototype.handleInvocationError = function (msg) {\r\n        this.logger.debug(\"handle invocation error \" + JSON.stringify(msg));\r\n        var invocationId = msg._tag.invocationId;\r\n        var serverId = msg._tag.serverId;\r\n        var server = this.repository.getServerById(serverId);\r\n        var message = msg.reason;\r\n        var context = msg.context;\r\n        return {\r\n            invocationId: invocationId,\r\n            result: context,\r\n            instance: server.instance,\r\n            status: InvokeStatus.Error,\r\n            message: message\r\n        };\r\n    };\r\n    return ClientProtocol;\r\n}());\n\nfunction gW3ProtocolFactory (instance, connection, clientRepository, serverRepository, libConfig, interop) {\r\n    var logger = libConfig.logger.subLogger(\"gw3-protocol\");\r\n    var resolveReadyPromise;\r\n    var readyPromise = new Promise(function (resolve) {\r\n        resolveReadyPromise = resolve;\r\n    });\r\n    var session = connection.domain(\"agm\", [\"subscribed\"]);\r\n    var server = new ServerProtocol(session, clientRepository, serverRepository, logger.subLogger(\"server\"));\r\n    var client = new ClientProtocol(session, clientRepository, logger.subLogger(\"client\"));\r\n    function handleReconnect() {\r\n        logger.info(\"reconnected - will replay registered methods and subscriptions\");\r\n        var existingSubscriptions = client.drainSubscriptions();\r\n        for (var _i = 0, existingSubscriptions_1 = existingSubscriptions; _i < existingSubscriptions_1.length; _i++) {\r\n            var sub = existingSubscriptions_1[_i];\r\n            var methodInfo = sub.method;\r\n            var params = Object.assign({}, sub.params);\r\n            logger.info(\"trying to re-subscribe to method \" + methodInfo.name);\r\n            interop.client.subscribe(methodInfo, params, undefined, undefined, sub);\r\n        }\r\n        var registeredMethods = serverRepository.getList();\r\n        serverRepository.reset();\r\n        for (var _a = 0, registeredMethods_1 = registeredMethods; _a < registeredMethods_1.length; _a++) {\r\n            var method = registeredMethods_1[_a];\r\n            var def = method.definition;\r\n            logger.info(\"re-publishing method \" + def.name);\r\n            if (method.stream) {\r\n                interop.server.createStream(def, method.streamCallbacks, undefined, undefined, method.stream);\r\n            }\r\n            else if (method.theFunction && method.theFunction.userCallback) {\r\n                interop.register(def, method.theFunction.userCallback);\r\n            }\r\n            else if (method.theFunction && method.theFunction.userCallbackAsync) {\r\n                interop.registerAsync(def, method.theFunction.userCallbackAsync);\r\n            }\r\n        }\r\n    }\r\n    function handleInitialJoin() {\r\n        if (resolveReadyPromise) {\r\n            resolveReadyPromise({\r\n                client: client,\r\n                server: server,\r\n            });\r\n            resolveReadyPromise = undefined;\r\n        }\r\n    }\r\n    session.onJoined(function (reconnect) {\r\n        clientRepository.addServer(instance, connection.peerId);\r\n        if (reconnect) {\r\n            handleReconnect();\r\n        }\r\n        else {\r\n            handleInitialJoin();\r\n        }\r\n    });\r\n    session.onLeft(function () {\r\n        clientRepository.reset();\r\n    });\r\n    session.join();\r\n    return readyPromise;\r\n}\n\nvar Interop = (function () {\r\n    function Interop(configuration) {\r\n        var _this = this;\r\n        if (typeof configuration === \"undefined\") {\r\n            throw new Error(\"configuration is required\");\r\n        }\r\n        if (typeof configuration.connection === \"undefined\") {\r\n            throw new Error(\"configuration.connections is required\");\r\n        }\r\n        var connection = configuration.connection;\r\n        if (typeof configuration.methodResponseTimeout !== \"number\") {\r\n            configuration.methodResponseTimeout = 30 * 1000;\r\n        }\r\n        if (typeof configuration.waitTimeoutMs !== \"number\") {\r\n            configuration.waitTimeoutMs = 30 * 1000;\r\n        }\r\n        InstanceWrapper.API = this;\r\n        this.instance = new InstanceWrapper(undefined, connection).unwrap();\r\n        this.clientRepository = new ClientRepository(configuration.logger.subLogger(\"cRep\"));\r\n        this.serverRepository = new ServerRepository();\r\n        var protocolPromise;\r\n        if (connection.protocolVersion === 3) {\r\n            protocolPromise = gW3ProtocolFactory(this.instance, connection, this.clientRepository, this.serverRepository, configuration, this);\r\n        }\r\n        else {\r\n            throw new Error(\"protocol \" + connection.protocolVersion + \" not supported\");\r\n        }\r\n        this.readyPromise = protocolPromise.then(function (protocol) {\r\n            _this.protocol = protocol;\r\n            _this.client = new Client(_this.protocol, _this.clientRepository, _this.instance, configuration);\r\n            _this.server = new Server(_this.protocol, _this.serverRepository);\r\n            return _this;\r\n        });\r\n    }\r\n    Interop.prototype.ready = function () {\r\n        return this.readyPromise;\r\n    };\r\n    Interop.prototype.serverRemoved = function (callback) {\r\n        return this.client.serverRemoved(callback);\r\n    };\r\n    Interop.prototype.serverAdded = function (callback) {\r\n        return this.client.serverAdded(callback);\r\n    };\r\n    Interop.prototype.serverMethodRemoved = function (callback) {\r\n        return this.client.serverMethodRemoved(callback);\r\n    };\r\n    Interop.prototype.serverMethodAdded = function (callback) {\r\n        return this.client.serverMethodAdded(callback);\r\n    };\r\n    Interop.prototype.methodRemoved = function (callback) {\r\n        return this.client.methodRemoved(callback);\r\n    };\r\n    Interop.prototype.methodAdded = function (callback) {\r\n        return this.client.methodAdded(callback);\r\n    };\r\n    Interop.prototype.methodsForInstance = function (instance) {\r\n        return this.client.methodsForInstance(instance);\r\n    };\r\n    Interop.prototype.methods = function (methodFilter) {\r\n        return this.client.methods(methodFilter);\r\n    };\r\n    Interop.prototype.servers = function (methodFilter) {\r\n        return this.client.servers(methodFilter);\r\n    };\r\n    Interop.prototype.subscribe = function (method, options, successCallback, errorCallback) {\r\n        return this.client.subscribe(method, options, successCallback, errorCallback);\r\n    };\r\n    Interop.prototype.createStream = function (streamDef, callbacks, successCallback, errorCallback) {\r\n        return this.server.createStream(streamDef, callbacks, successCallback, errorCallback);\r\n    };\r\n    Interop.prototype.unregister = function (methodFilter) {\r\n        return this.server.unregister(methodFilter);\r\n    };\r\n    Interop.prototype.registerAsync = function (methodDefinition, callback) {\r\n        return this.server.registerAsync(methodDefinition, callback);\r\n    };\r\n    Interop.prototype.register = function (methodDefinition, callback) {\r\n        return this.server.register(methodDefinition, callback);\r\n    };\r\n    Interop.prototype.invoke = function (methodFilter, argumentObj, target, additionalOptions, success, error) {\r\n        return this.client.invoke(methodFilter, argumentObj, target, additionalOptions, success, error);\r\n    };\r\n    return Interop;\r\n}());\n\nvar successMessages = [\"subscribed\", \"success\"];\r\nvar MessageBus = (function () {\r\n    function MessageBus(connection, logger) {\r\n        var _this = this;\r\n        this.publish = function (topic, data, options) {\r\n            var _a = options || {}, routingKey = _a.routingKey, target = _a.target;\r\n            var args = _this.removeEmptyValues({\r\n                type: \"publish\",\r\n                topic: topic,\r\n                data: data,\r\n                peer_id: _this.peerId,\r\n                routing_key: routingKey,\r\n                target_identity: target\r\n            });\r\n            _this.session.send(args);\r\n        };\r\n        this.subscribe = function (topic, callback, options) {\r\n            return new Promise(function (resolve, reject) {\r\n                var _a = options || {}, routingKey = _a.routingKey, target = _a.target;\r\n                var args = _this.removeEmptyValues({\r\n                    type: \"subscribe\",\r\n                    topic: topic,\r\n                    peer_id: _this.peerId,\r\n                    routing_key: routingKey,\r\n                    source: target\r\n                });\r\n                _this.session.send(args)\r\n                    .then(function (response) {\r\n                    var subscription_id = response.subscription_id;\r\n                    _this.subscriptions.push({ subscription_id: subscription_id, topic: topic, callback: callback, source: target });\r\n                    resolve({\r\n                        unsubscribe: function () {\r\n                            _this.session.send({ type: \"unsubscribe\", subscription_id: subscription_id, peer_id: _this.peerId });\r\n                            _this.subscriptions = _this.subscriptions.filter(function (s) { return s.subscription_id !== subscription_id; });\r\n                            return Promise.resolve();\r\n                        }\r\n                    });\r\n                })\r\n                    .catch(function (error) { return reject(error); });\r\n            });\r\n        };\r\n        this.watchOnEvent = function () {\r\n            _this.session.on(\"event\", function (args) {\r\n                var data = args.data, subscription_id = args.subscription_id;\r\n                var source = args[\"publisher-identity\"];\r\n                var subscription = _this.subscriptions.find(function (s) { return s.subscription_id === subscription_id; });\r\n                if (subscription) {\r\n                    if (!subscription.source) {\r\n                        subscription.callback(data, subscription.topic, source);\r\n                    }\r\n                    else {\r\n                        if (_this.keysMatch(subscription.source, source)) {\r\n                            subscription.callback(data, subscription.topic, source);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        this.connection = connection;\r\n        this.logger = logger;\r\n        this.peerId = connection.peerId;\r\n        this.subscriptions = [];\r\n        this.session = connection.domain(\"bus\", successMessages);\r\n        this.readyPromise = this.session.join();\r\n        this.readyPromise.then(function () {\r\n            _this.watchOnEvent();\r\n        });\r\n    }\r\n    MessageBus.prototype.ready = function () {\r\n        return this.readyPromise;\r\n    };\r\n    MessageBus.prototype.removeEmptyValues = function (obj) {\r\n        var cleaned = {};\r\n        Object.keys(obj).forEach(function (key) {\r\n            if (obj[key] !== undefined && obj[key] !== null) {\r\n                cleaned[key] = obj[key];\r\n            }\r\n        });\r\n        return cleaned;\r\n    };\r\n    MessageBus.prototype.keysMatch = function (obj1, obj2) {\r\n        var keysObj1 = Object.keys(obj1);\r\n        var allMatch = true;\r\n        keysObj1.forEach(function (key) {\r\n            if (obj1[key] !== obj2[key]) {\r\n                allMatch = false;\r\n            }\r\n        });\r\n        return allMatch;\r\n    };\r\n    return MessageBus;\r\n}());\n\nvar GlueCore = function (userConfig, ext) {\r\n    var gdVersion = Utils.getGDMajorVersion();\r\n    var glue42gd;\r\n    var preloadPromise = Promise.resolve();\r\n    if (gdVersion) {\r\n        if (gdVersion < 3) {\r\n            throw new Error(\"GD v2 is not supported. Use v4 of the API to run in that context.\");\r\n        }\r\n        else if (gdVersion >= 3) {\r\n            glue42gd = window.glue42gd;\r\n            preloadPromise = window.gdPreloadPromise || preloadPromise;\r\n        }\r\n    }\r\n    var glueInitTimer = timer();\r\n    userConfig = userConfig || {};\r\n    ext = ext || {};\r\n    var internalConfig = prepareConfig(userConfig, ext, glue42gd);\r\n    var _connection;\r\n    var _interop;\r\n    var _logger;\r\n    var _metrics;\r\n    var _contexts;\r\n    var _bus;\r\n    var _allowTrace;\r\n    var libs = {};\r\n    function registerLib(name, inner, t) {\r\n        _allowTrace = _logger.canPublish(\"trace\");\r\n        if (_allowTrace) {\r\n            _logger.trace(\"registering \" + name + \" module\");\r\n        }\r\n        var done = function () {\r\n            inner.initTime = t.stop();\r\n            inner.initEndTime = t.endTime;\r\n            _logger.trace(name + \" is ready\");\r\n        };\r\n        inner.initStartTime = t.startTime;\r\n        if (inner.ready) {\r\n            inner.ready().then(function () {\r\n                done();\r\n            });\r\n        }\r\n        else {\r\n            done();\r\n        }\r\n        if (!Array.isArray(name)) {\r\n            name = [name];\r\n        }\r\n        name.forEach(function (n) {\r\n            libs[n] = inner;\r\n            GlueCore[n] = inner;\r\n        });\r\n    }\r\n    function setupConnection() {\r\n        var initTimer = timer();\r\n        _connection = new Connection(internalConfig.connection, _logger.subLogger(\"connection\"));\r\n        var authPromise = Promise.resolve(internalConfig.auth);\r\n        if (internalConfig.connection && !internalConfig.auth) {\r\n            if (glue42gd) {\r\n                _logger.trace(\"trying to get gw token...\");\r\n                authPromise = glue42gd.getGWToken().then(function (token) {\r\n                    var _a;\r\n                    _logger.trace(\"got GW token \" + ((_a = token) === null || _a === void 0 ? void 0 : _a.substring(token.length - 10)));\r\n                    return {\r\n                        gatewayToken: token\r\n                    };\r\n                });\r\n            }\r\n            else {\r\n                authPromise = Promise.reject(\"You need to provide auth information\");\r\n            }\r\n        }\r\n        return authPromise\r\n            .then(function (authConfig) {\r\n            var authRequest;\r\n            if (Object.prototype.toString.call(authConfig) === \"[object Object]\") {\r\n                authRequest = authConfig;\r\n            }\r\n            else {\r\n                throw new Error(\"Invalid auth object - \" + JSON.stringify(authConfig));\r\n            }\r\n            return _connection.login(authRequest);\r\n        })\r\n            .then(function () {\r\n            registerLib(\"connection\", _connection, initTimer);\r\n            return internalConfig;\r\n        })\r\n            .catch(function (e) {\r\n            if (_connection) {\r\n                _connection.logout();\r\n            }\r\n            throw e;\r\n        });\r\n    }\r\n    function setupLogger() {\r\n        var _a;\r\n        var initTimer = timer();\r\n        _logger = new Logger(\"\" + ((_a = internalConfig.connection.identity) === null || _a === void 0 ? void 0 : _a.application), undefined, internalConfig.customLogger);\r\n        _logger.consoleLevel(internalConfig.logger.console);\r\n        _logger.publishLevel(internalConfig.logger.publish);\r\n        registerLib(\"logger\", _logger, initTimer);\r\n        return Promise.resolve(undefined);\r\n    }\r\n    function setupMetrics() {\r\n        var initTimer = timer();\r\n        var config = internalConfig.metrics;\r\n        var rootMetrics = metrics({\r\n            connection: config ? _connection : undefined,\r\n            logger: _logger.subLogger(\"metrics\")\r\n        });\r\n        var rootSystem = rootMetrics;\r\n        if (typeof config !== \"boolean\" && config.disableAutoAppSystem) {\r\n            rootSystem = rootMetrics;\r\n        }\r\n        else {\r\n            rootSystem = rootMetrics.subSystem(\"App\");\r\n        }\r\n        _metrics = addFAVSupport(rootSystem);\r\n        registerLib(\"metrics\", _metrics, initTimer);\r\n        return Promise.resolve();\r\n    }\r\n    function setupInterop() {\r\n        var initTimer = timer();\r\n        var agmConfig = {\r\n            connection: _connection,\r\n            logger: _logger.subLogger(\"interop\"),\r\n        };\r\n        _interop = new Interop(agmConfig);\r\n        Logger.Interop = _interop;\r\n        registerLib([\"interop\", \"agm\"], _interop, initTimer);\r\n        return Promise.resolve();\r\n    }\r\n    function setupContexts() {\r\n        var hasActivities = (internalConfig.activities && _connection.protocolVersion === 3);\r\n        var needsContexts = internalConfig.contexts || hasActivities;\r\n        if (needsContexts) {\r\n            var initTimer = timer();\r\n            _contexts = new ContextsModule({\r\n                connection: _connection,\r\n                logger: _logger.subLogger(\"contexts\")\r\n            });\r\n            registerLib(\"contexts\", _contexts, initTimer);\r\n            return _contexts;\r\n        }\r\n        else {\r\n            var replayer = _connection.replayer;\r\n            if (replayer) {\r\n                replayer.drain(ContextMessageReplaySpec.name);\r\n            }\r\n        }\r\n    }\r\n    function setupBus() {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var initTimer;\r\n            return __generator(this, function (_a) {\r\n                if (!internalConfig.bus) {\r\n                    return [2, Promise.resolve()];\r\n                }\r\n                initTimer = timer();\r\n                _bus = new MessageBus(_connection, _logger.subLogger(\"bus\"));\r\n                registerLib(\"bus\", _bus, initTimer);\r\n                return [2, Promise.resolve()];\r\n            });\r\n        });\r\n    }\r\n    function setupExternalLibs(externalLibs) {\r\n        try {\r\n            externalLibs.forEach(function (lib) {\r\n                setupExternalLib(lib.name, lib.create);\r\n            });\r\n            return Promise.resolve();\r\n        }\r\n        catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n    function setupExternalLib(name, createCallback) {\r\n        var initTimer = timer();\r\n        var lib = createCallback(libs);\r\n        if (lib) {\r\n            registerLib(name, lib, initTimer);\r\n        }\r\n    }\r\n    function waitForLibs() {\r\n        var libsReadyPromises = Object.keys(libs).map(function (key) {\r\n            var lib = libs[key];\r\n            return lib.ready ?\r\n                lib.ready() : Promise.resolve();\r\n        });\r\n        return Promise.all(libsReadyPromises);\r\n    }\r\n    function constructGlueObject() {\r\n        var _a;\r\n        var feedbackFunc = function (feedbackInfo) {\r\n            if (!_interop) {\r\n                return;\r\n            }\r\n            _interop.invoke(\"T42.ACS.Feedback\", feedbackInfo, \"best\");\r\n        };\r\n        var info = {\r\n            coreVersion: version,\r\n            version: internalConfig.version\r\n        };\r\n        glueInitTimer.stop();\r\n        var glue = {\r\n            feedback: feedbackFunc,\r\n            info: info,\r\n            logger: _logger,\r\n            interop: _interop,\r\n            agm: _interop,\r\n            connection: _connection,\r\n            metrics: _metrics,\r\n            contexts: _contexts,\r\n            bus: _bus,\r\n            version: internalConfig.version,\r\n            userConfig: userConfig,\r\n            done: function () {\r\n                var _a;\r\n                (_a = _logger) === null || _a === void 0 ? void 0 : _a.info(\"done called by user...\");\r\n                return _connection.logout();\r\n            }\r\n        };\r\n        glue.performance = {\r\n            get glueVer() {\r\n                return internalConfig.version;\r\n            },\r\n            get glueConfig() {\r\n                return JSON.stringify(userConfig);\r\n            },\r\n            get browser() {\r\n                return window.performance.timing.toJSON();\r\n            },\r\n            get memory() {\r\n                return window.performance.memory;\r\n            },\r\n            get initTimes() {\r\n                var result = Object.keys(glue)\r\n                    .filter(function (key) {\r\n                    var _a;\r\n                    if (key === \"initTimes\" || key === \"agm\") {\r\n                        return false;\r\n                    }\r\n                    return (_a = glue[key]) === null || _a === void 0 ? void 0 : _a.initTime;\r\n                })\r\n                    .map(function (key) {\r\n                    return {\r\n                        name: key,\r\n                        time: glue[key].initTime,\r\n                        startTime: glue[key].initStartTime,\r\n                        endTime: glue[key].initEndTime\r\n                    };\r\n                });\r\n                result.push({\r\n                    name: \"glue\",\r\n                    startTime: glueInitTimer.startTime,\r\n                    endTime: glueInitTimer.endTime,\r\n                    time: glueInitTimer.period\r\n                });\r\n                return result;\r\n            }\r\n        };\r\n        Object.keys(libs).forEach(function (key) {\r\n            var lib = libs[key];\r\n            glue[key] = lib;\r\n        });\r\n        glue.config = {};\r\n        Object.keys(internalConfig).forEach(function (k) {\r\n            glue.config[k] = internalConfig[k];\r\n        });\r\n        if (ext && ext.extOptions) {\r\n            Object.keys(ext.extOptions).forEach(function (k) {\r\n                var _a;\r\n                glue.config[k] = (_a = ext) === null || _a === void 0 ? void 0 : _a.extOptions[k];\r\n            });\r\n        }\r\n        if ((_a = ext) === null || _a === void 0 ? void 0 : _a.enrichGlue) {\r\n            ext.enrichGlue(glue);\r\n        }\r\n        if (glue42gd && glue42gd.updatePerfData) {\r\n            glue42gd.updatePerfData(glue.performance);\r\n        }\r\n        return glue;\r\n    }\r\n    return preloadPromise\r\n        .then(setupLogger)\r\n        .then(setupConnection)\r\n        .then(function () { return Promise.all([setupMetrics(), setupInterop(), setupContexts(), setupBus()]); })\r\n        .then(function () { return _interop.readyPromise; })\r\n        .then(function () {\r\n        return setupExternalLibs(internalConfig.libs || []);\r\n    })\r\n        .then(waitForLibs)\r\n        .then(constructGlueObject)\r\n        .catch(function (err) {\r\n        return Promise.reject({\r\n            err: err,\r\n            libs: libs\r\n        });\r\n    });\r\n};\r\nif (typeof window !== \"undefined\") {\r\n    window.GlueCore = GlueCore;\r\n}\r\nGlueCore.version = version;\r\nGlueCore.default = GlueCore;\n\nexport default GlueCore;\n//# sourceMappingURL=core.es.js.map\n","import ActivityManager from \"../core/activityManager\";\n\n/**\n * Base class for activity entities with reference to the activity manager\n * @private\n */\nexport default class ActivityEntity {\n\n  public _manager: ActivityManager;\n  public _id: string;\n\n  constructor(id: string) {\n    this._id = id;\n  }\n\n  public get id(): string {\n    return this._id;\n  }\n\n  /**\n   * Updates the properties of the current object using the properties of another object\n   * These two should have the same id.\n   */\n  public _update(other: ActivityEntity) {\n    if (other._id !== this._id) {\n      throw Error(\"Can not update from entity with different id.\");\n    }\n    this._updateCore(other);\n  }\n\n  public _updateCore(other: ActivityEntity) {\n    return;\n  }\n\n  public _beforeDelete(other: ActivityEntity) {\n    return;\n  }\n}\n","// some small useful functions (so we don't reference underscore or lodash)\n\nexport function isNumber(arg: any) {\n  return typeof arg === \"number\";\n}\n\nexport function isString(arg: any) {\n  return typeof arg === \"string\";\n}\n\nexport function isObject(arg: any) {\n  return typeof arg === \"object\" && arg !== null;\n}\n\nexport function isArray(arg: any) {\n  // TODO optimize\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return toString.call(arg) === \"[object Array]\";\n}\nexport function isUndefined(arg: any) {\n  return typeof arg === \"undefined\";\n}\n\nexport function isUndefinedOrNull(arg: any) {\n  return !arg || typeof arg === \"undefined\";\n}\n\n/**\n *  Checks if an object is empty (has no properties)\n * @private\n */\nexport function isEmpty(arg: any) {\n  for (const prop in arg) {\n    if (arg.hasOwnProperty(prop)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function isFunction(arg: any) {\n  return !!(arg && arg.constructor && arg.call && arg.apply);\n}\n\nexport function some<T>(array: T[], predicate: (el: any, index: number) => boolean) {\n  for (let index = 0; index < array.length; index++) {\n    if (predicate(array[index], index)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function first<T>(array: T[], predicate: (el: any, index: number) => boolean) {\n  for (let index = 0; index < array.length; index++) {\n    if (predicate(array[index], index)) {\n      return array[index];\n    }\n  }\n  return undefined;\n}\n\nexport function ifNotUndefined<T>(what: T, doWithIt: (what: T) => void) {\n  if (typeof what !== \"undefined\") {\n    doWithIt(what);\n  }\n}\n\nexport function promisify(promise: Promise<any>, successCallback: () => void, errorCallback: () => void) {\n  \"use strict\";\n  if (typeof successCallback !== \"function\" && typeof errorCallback !== \"function\") {\n    return promise;\n  }\n\n  if (typeof successCallback !== \"function\") {\n    successCallback = () => { return; };\n  } else if (typeof errorCallback !== \"function\") {\n    errorCallback = () => { return; };\n  }\n\n  promise.then(successCallback, errorCallback);\n}\n","import * as contracts from \"../contracts/contracts\";\nimport Activity from \"./activity\";\nimport ActivityEntity from \"./activityEntity\";\nimport WindowType from \"./windowType\";\nimport {ifNotUndefined} from \"../helpers/util\";\nimport {WindowDefinition} from \"./windowDefinition\";\n\nimport { Glue42 } from \"../../../glue\";\ntype OverrideTypeDefinition = Glue42.Activities.OverrideTypeDefinition;\n\n/**\n * An activity type is a definition template for an activity, consisting of a collection of window types,\n * their layout and an initial activity context.\n *\n * @module activityType\n */\nexport default class ActivityType extends ActivityEntity {\n\n  public _name: string;\n  public _description: string;\n  public _ownerWindow: WindowType;\n  public _helperWindows: WindowType[];\n\n  constructor(name: string, ownerWindow: WindowType, helperWindows?: WindowType[], description?: string) {\n    super(name);\n    this._name = name;\n    this._description = description;\n    this._ownerWindow = ownerWindow;\n    this._helperWindows = helperWindows || [];\n  }\n\n  /**\n   * @var {string} name Name of the activity type\n   */\n  public get name(): string {\n    return this._name;\n  }\n\n  /**\n   * @var {string} description description for the activity type\n   */\n  public get description(): string {\n    return this._description;\n  }\n\n  /**\n   * A list of window types that should be created when initiating a new instance of that activity type\n   * @var {windowDefinition[]} helperWindows\n   */\n  public get helperWindows(): WindowType[] {\n    return this._helperWindows;\n  }\n\n  /**\n   * @var {windowDefinition} ownerWindow Returns the definition of the owner window for that activity type\n   */\n  public get ownerWindow(): WindowType {\n    return this._ownerWindow;\n  }\n\n  /**\n   * Initiates a new activity of this type\n   *\n   * @function initiate\n   * @param {object} context The initial context to be used for the new activity\n   * @param callback\n   * @param configuration\n   * @returns {Promise<activity>}\n   */\n  public initiate(context: object, callback?: contracts.Callback<Activity>, configuration?: WindowDefinition[] | OverrideTypeDefinition): Promise<Activity> {\n    return this._manager.initiate(this._name, context, callback, configuration);\n  }\n\n  public _updateCore(other: ActivityType) {\n    super._updateCore(other);\n    ifNotUndefined(other._description, (x) => this._description = x);\n    ifNotUndefined(other._ownerWindow, (x) => this._ownerWindow = x);\n    ifNotUndefined(other._helperWindows, (x) => this._helperWindows = x);\n  }\n}\n","import ActivityEntity from \"./activityEntity\";\nimport ActivityWindow from \"./activityWindow\";\nimport { WindowDefinition } from \"./windowDefinition\";\nimport Activity from \"./activity\";\nimport { Glue42 } from \"../../../glue\";\n\n/**\n * A window type is a definition of a window, typically configured in ACS.\n *\n * @module windowType\n */\nexport default class WindowType extends ActivityEntity {\n\n  public _name: string;\n  public _appByWindowTypeGetter: (name: string) => void;\n\n  constructor(name: string, appByWindowTypeGetter: (wt: string) => Glue42.AppManager.Application) {\n    super(name);\n    this._name = name;\n    this._appByWindowTypeGetter = appByWindowTypeGetter;\n  }\n\n  /**\n   * Name of the window type\n   * @var {string} name\n   */\n  public get name(): string {\n    return this._name;\n  }\n\n  /**\n   * Returns the ACS configuration related to this window type (as application object from AppManager API)\n   * @returns {any}\n   */\n  public get config(): any {\n    return this._appByWindowTypeGetter(this._name);\n  }\n\n  /**\n   * @var {activityWindow[]} windows All windows from that type\n   */\n  public get windows(): ActivityWindow[] {\n    return this._manager.getWindows({ type: this._name });\n  }\n\n  public create(activity: Activity, configuration: any): Promise<ActivityWindow> {\n    const definition: WindowDefinition = (Object as any).assign({ type: this.name, name: this.name, isIndependent: false }, configuration);\n    return this._manager.createWindow(activity, definition);\n  }\n}\n","import { ActivityStatus } from \"./activityStatus\";\n\nexport class EntityEvent<T> {\n    public entity: T;\n    public context: EntityEventContext;\n\n    constructor(entitiy: T, context: EntityEventContext) {\n        this.entity = entitiy;\n        this.context = context;\n    }\n}\n\nexport class EntityEventContext {\n    public type: string;\n\n    constructor(eventType: string) {\n        this.type = eventType;\n    }\n}\n\nexport class ActivityStatusChangeEventContext extends EntityEventContext {\n    public oldStatus: ActivityStatus;\n    public newStatus: ActivityStatus;\n\n    constructor(newStatus: ActivityStatus, oldStatus: ActivityStatus) {\n        super(EntityEventType.StatusChange);\n        this.newStatus = newStatus;\n        this.oldStatus = oldStatus;\n    }\n}\n\nexport class ActivityContextChangedEventContext extends EntityEventContext {\n    public context: object;\n    public updated: object;\n    public removed: string[];\n\n    constructor(context: string | object, updated: object, removed: string[]) {\n        super(EntityEventType.ActivityContextChange);\n        this.context = typeof context === \"string\" ? JSON.parse(context) : context;\n        this.updated = updated;\n        this.removed = removed;\n    }\n}\n\nexport class EntityEventType {\n    public static Added: string = \"added\";\n    public static Removed: string = \"removed\";\n    public static Updated: string = \"updated\";\n    public static Closed: string = \"closed\";\n    public static StatusChange: string = \"statusChange\";\n    public static ActivityContextChange: string = \"activityContextUpdate\";\n    public static ActivityWindowEvent: string = \"activityWindowEvent\";\n    // #deleteme TODO: these are not implemented in HC\n    public static ActivityWindowJoinedActivity: string = \"joined\";\n    public static ActivityWindowLeftActivity: string = \"left\";\n}\n\nexport class ActivityState {\n    public static Created: string = \"created\";\n    public static Started: string = \"started\";\n    public static Destroyed: string = \"destroyed\";\n}\n","import Activity from \"../entities/activity\";\nimport ActivityWindow from \"../entities/activityWindow\";\nimport * as util from \"../helpers/util\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { promisify } from \"../helpers/util\";\n\n// A helper class that provides lame activity AGM implementation\n// Can be initialized with or without activity - in case no activity (independent windows outside activity) only\n// subset of the methods work\nexport class ActivityAGM {\n    public static AGM: Glue42Core.AGM.API;\n\n    private _activity: Activity;\n\n    constructor(activity: Activity) {\n        this._activity = activity;\n    }\n\n    public register(definition: string | Glue42Core.AGM.MethodDefinition, handler: (args: object, caller: Glue42Core.AGM.Instance) => object) {\n        this._ensureHasAgm();\n        ActivityAGM.AGM.register(definition, handler);\n    }\n\n    public servers(): Glue42Core.AGM.Instance[] {\n        this._ensureHasAgm();\n\n        if (util.isUndefinedOrNull(this._activity)) {\n            // or return ActivityAGM.AGM.servers()\n            return [];\n        }\n\n        return this._activity.windows.map(\n            (w: ActivityWindow) => {\n                return w.instance;\n            });\n    }\n\n    public methods(): Glue42Core.AGM.MethodDefinition[] {\n        this._ensureHasAgm();\n\n        if (util.isUndefinedOrNull(this._activity)) {\n            // or return ActivityAGM.AGM.methods()\n            return [];\n        }\n\n        const windows = this._activity.windows;\n        const methodNames: string[] = [];\n        const methods: Glue42Core.AGM.MethodDefinition[] = [];\n\n        // get all windows and their methods, then assemble distinct methods\n        windows.forEach((window) => {\n            const windowMethods = this.methodsForWindow(window);\n            windowMethods.forEach((currentWindowMethod) => {\n                if (methodNames.indexOf(currentWindowMethod.name) === -1) {\n                    methodNames.push(currentWindowMethod.name);\n                    methods.push(currentWindowMethod);\n                }\n            });\n        });\n\n        return methods;\n    }\n\n    public methodsForWindow(window: ActivityWindow): Glue42Core.AGM.MethodDefinition[] {\n        this._ensureHasAgm();\n        // get instance and use agm to get methods for instance\n        if (!window.instance) {\n            return [];\n        }\n\n        return ActivityAGM.AGM.methodsForInstance(window.instance);\n    }\n\n    /** Possible invoke targets\n     *\n     * \"activity.all\" - [default]\n     * \"activity.best\"\n     * ActivityWindow\n     * [ActivityWindow] -\n     *\n     * classic AGM\n     * \"all\" - agm all\n     * \"best\" - agm best\n     * instance - agm\n     * [ instances ]\n     *\n     */\n    public invoke(\n        methodName: string,\n        arg: object,\n        target: string | Glue42Core.AGM.Instance | ActivityWindow | Glue42Core.AGM.Instance[] | ActivityWindow[],\n        options?: Glue42Core.AGM.InvokeOptions,\n        success?: () => void,\n        error?: () => void): Promise<object> {\n\n        this._ensureHasAgm();\n        const activityServers = this.servers();\n        let serversToInvokeAgainst: Glue42Core.AGM.Instance[] = [];\n\n        if (util.isUndefinedOrNull(target)) {\n            target = \"activity.all\";\n        }\n\n        if (util.isString(target)) {\n            if (target === \"activity.all\") {\n                serversToInvokeAgainst = activityServers;\n            } else if (target === \"activity.best\") {\n                const potentialTargets = activityServers.filter((server) => {\n                    const methods = ActivityAGM.AGM.methodsForInstance(server);\n                    return methods.filter((m) => {\n                        return m.name === methodName;\n                    }).length > 0;\n                });\n                if (potentialTargets.length > 0) {\n                    serversToInvokeAgainst = [potentialTargets[0]];\n                }\n            } else if (target === \"all\" || target === \"best\") {\n                return promisify(ActivityAGM.AGM.invoke(methodName, arg, target, options), success, error);\n            } else {\n                throw new Error(\"Invalid invoke target \" + target);\n            }\n        } else if (util.isArray(target)) {\n            // if the array is not empty\n            if ((target as any).length >= 0) {\n                const firstElem = (target as any)[0];\n                // check argument type\n                if (this._isInstance(firstElem)) {\n                    serversToInvokeAgainst = (target as Glue42Core.AGM.Instance[]).map((instance: Glue42Core.AGM.Instance) => instance);\n                } else if (this._isActivityWindow(firstElem)) {\n                    serversToInvokeAgainst = (target as ActivityWindow[]).map((win: ActivityWindow) => win.instance);\n                } else {\n                    throw new Error(\"Unknown target object\");\n                }\n            }\n        } else {\n            if (this._isInstance(target)) {\n                serversToInvokeAgainst = [target as Glue42Core.AGM.Instance];\n            } else if (this._isActivityWindow(target)) {\n                serversToInvokeAgainst = [(target as ActivityWindow).instance];\n            } else {\n                throw new Error(\"Unknown target object\");\n            }\n        }\n\n        throw new Error(\"Not implemented\");\n        // return promisify(ActivityAGM.AGM.invoke(methodName, arg, serversToInvokeAgainst, options), success, error);\n    }\n\n    public unregister(definition: string | Glue42Core.AGM.MethodDefinition) {\n        this._ensureHasAgm();\n        return ActivityAGM.AGM.unregister(definition);\n    }\n\n    public createStream(methodDefinition: string | Glue42Core.AGM.MethodDefinition,\n                        subscriptionAddedHandler: (request: Glue42Core.AGM.StreamSubscription) => void,\n                        subscriptionRemovedHandler: (request: Glue42Core.AGM.StreamSubscription) => void) {\n        this._ensureHasAgm();\n\n        ActivityAGM.AGM.createStream(methodDefinition, {\n            subscriptionAddedHandler,\n            subscriptionRemovedHandler,\n            subscriptionRequestHandler: undefined\n        });\n    }\n\n    public subscribe(methodDefinition: string | Glue42Core.AGM.MethodDefinition, parameters: object, target: string | Glue42Core.AGM.Instance | Glue42Core.AGM.Instance[]): Promise<Glue42Core.AGM.Subscription> {\n        this._ensureHasAgm();\n        // #deleteme TODO: check servers needed?\n        // const servers = this.servers();\n\n        return ActivityAGM.AGM.subscribe(methodDefinition, parameters);\n    }\n\n    public _ensureHasAgm() {\n        if (util.isUndefinedOrNull(ActivityAGM.AGM)) {\n            throw new Error(\"Agm should be configured to be used in activity\");\n        }\n    }\n\n    public _isInstance(obj: any) {\n        // lame check\n        return obj.application !== undefined;\n    }\n\n    public _isActivityWindow(obj: any) {\n        return obj.instance !== undefined;\n    }\n}\n","import { ActivityDescriptor } from \"./activityDescriptor\";\nimport ActivityManager from \"../core/activityManager\";\nimport Activity from \"./activity\";\n\nexport class AttachedActivityDescriptor implements ActivityDescriptor {\n  private _manager: ActivityManager;\n  private _state: ActivityDescriptor;\n  private _ownerActivityId: string;\n\n  constructor(\n    manager: ActivityManager,\n    ownerActivityId: string,\n    state: ActivityDescriptor) {\n    this._manager = manager;\n    this._ownerActivityId = ownerActivityId;\n    this._state = state;\n  }\n\n  public get ownerId() {\n    return this._state.ownerId;\n  }\n\n  public get windowIds() {\n    return this._state.windowIds;\n  }\n\n  public get frameColor() {\n    return this._state.frameColor;\n  }\n\n  public get context() {\n    return this._state.context;\n  }\n\n  public get tag() {\n    return this._state.tag;\n  }\n\n  public detach(descriptor?: ActivityDescriptor): Promise<Activity> {\n\n    descriptor = descriptor || {};\n\n    const merged: ActivityDescriptor = {};\n\n    Object.keys(this._state).forEach((prop) => {\n      merged[prop] = this._state[prop];\n    });\n\n    merged.context = descriptor.context || merged.context;\n    merged.frameColor = descriptor.frameColor || merged.frameColor;\n\n    return this._manager.detachActivities(this._ownerActivityId, merged);\n  }\n}\n","import * as util from \"../helpers/util\";\n\nconst nextTick = (cb: () => void) => {\n  setTimeout(cb, 0);\n};\n\n/**\n * Convert a Promise to node style callback\n * @private\n */\nexport function nodeify<T>(promise: Promise<T>, callback: any): Promise<T> {\n  if (!util.isFunction(callback)) {\n    return promise;\n  }\n\n  promise.then(\n    (resp) => {\n      nextTick( () => { // not sure if this is needed, promises should be already executed on the event pool\n        callback(null, resp);\n      });\n    },\n    (err) => {\n      nextTick(() => {\n        callback(err, null);\n      });\n    });\n}\n","import * as contracts from \"../contracts/contracts\";\nimport ActivityType from \"./activityType\";\nimport ActivityWindow from \"./activityWindow\";\nimport { ActivityStatus } from \"../contracts/activityStatus\";\nimport ActivityEntity from \"./activityEntity\";\nimport { WindowDefinition } from \"./windowDefinition\";\nimport { ActivityAGM } from \"../core/activityAGM\";\nimport { CloneOptions } from \"./cloneOptions\";\nimport { AttachedActivityDescriptor } from \"./attachedActivityDescriptor\";\nimport { nodeify } from \"../helpers/promiseExtensions\";\nimport { ifNotUndefined } from \"../helpers/util\";\n\n/**\n * Activity is an instance of an activity type just like an object is an instance of a class\n * in class-based languages (and just like ‘John’ is an instance of a 'Person’).\n *\n * Activity is often used as a synonym for activity instance.\n *\n * Each activity instance has a single owner window and can optionally have one or more helper windows.\n *\n * @module activity\n */\nexport default class Activity extends ActivityEntity {\n\n  public _id: string;\n  public _actType: string;\n  public _status: ActivityStatus;\n  public _context: object;\n  public _ownerId: string;\n  public _agm: ActivityAGM;\n  public _attached: any;\n\n  constructor(\n    id: string,\n    actType: string,\n    status: ActivityStatus,\n    context: object,\n    ownerId: string) {\n    super(id);\n    this._id = id;\n    this._actType = actType;\n    this._status = status;\n    this._context = context;\n    this._ownerId = ownerId;\n    this._agm = new ActivityAGM(this);\n  }\n\n  /**\n   * Activity type\n   * @var {module:activityType} type\n   */\n  public get type(): ActivityType {\n    if (this._manager) {\n      return this._manager.getActivityType(this._actType);\n    }\n    return undefined;\n  }\n\n  /**\n   * Get current activity context. To update use updateContext , to replace setContext\n   * @var {object} context\n   */\n  public get context(): object {\n    return this._context;\n  }\n\n  /**\n   * Get activity status\n   * @var {activityStatus} status\n   */\n  public get status(): ActivityStatus {\n    return this._status;\n  }\n\n  /**\n   * The owner window\n   * @var {module:activityWindow} owner\n   */\n  public get owner(): ActivityWindow {\n    if (!this._ownerId) {\n      return null;\n    }\n    return this._manager.getWindows({ id: this._ownerId })[0];\n  }\n\n  /**\n   * All windows participating in the activity\n   * @var {module:activityWindow[]} windows\n   */\n  public get windows(): ActivityWindow[] {\n    return this._manager.getWindows({ activityId: this._id });\n  }\n\n  /**\n   * @var {module:activityAGM} agm\n   */\n  public get agm(): ActivityAGM {\n    return this._agm;\n  }\n\n  /**\n   * Joins a specific window to the activity\n   *\n   * @private\n   * @function join\n   * @param window    The window to join\n   * @param callback  (Optional) Result callback\n   * @returns         Promise for ActivityWindow\n   */\n  public addWindow(window: ActivityWindow, callback?: contracts.Callback<ActivityWindow>): Promise<ActivityWindow> {\n    return this._manager.addWindowToActivity(this, window, callback);\n  }\n\n  /**\n   * Creates a new window and joins it to the activity\n   *\n   * @function createWindow\n   * @param {string|windowDefinition} windowType The type of the window to be created\n   * @param callback\n   * @returns {Promise<module:activityWindow>}\n   */\n  public createWindow(windowType: string | WindowDefinition, callback?: contracts.Callback<ActivityWindow>): Promise<ActivityWindow> {\n    return this._manager.createWindow(this, windowType, callback);\n  }\n\n  /**\n   * Creates a stacked set of windows and joins them to the\n   *\n   * @function createStackedWindows\n   * @param {string[] | windowDefinition[]} windowTypes The types of the windows to be created\n   * @param {number} timeout\n   * @param callback\n   * @returns {Promise<module:activityWindow[]>}\n   */\n  public createStackedWindows(windowTypes: Array<string | WindowDefinition>, timeout?: number, callback?: contracts.Callback<ActivityWindow[]>): Promise<ActivityWindow[]> {\n    return this._manager.createStackedWindows(this, windowTypes, timeout, callback);\n  }\n\n  /**\n   * Removes a window from the activity\n   *\n   * @private\n   * @param window\n   * @param callback\n   * @returns     Promise for ActivityWindow\n   */\n  public leave(window: ActivityWindow, callback?: contracts.Callback<ActivityWindow>): Promise<ActivityWindow> {\n    return this._manager.leaveWindowFromActivity(this, window, callback);\n  }\n\n  /**\n   * Get all windows participating in the activity from a given type\n   *\n   * @param {string} windowType\n   * @returns {module:activityWindow[]}\n   */\n  public getWindowsByType(windowType: string): ActivityWindow[] {\n    const filter = { activityId: this._id, type: windowType };\n    return this._manager.getWindows(filter);\n  }\n\n  /**\n   * Replaces the activity context with a new one.\n   *\n   * @function setContext\n   * @param {object} context   The new context\n   * @param callback\n   * @returns {Promise<Object>}\n   */\n  public setContext(context: object, callback?: contracts.Callback<Activity>): Promise<object> {\n    return this._manager.setActivityContext(this, context, callback);\n  }\n\n  /**\n   * Updates activity context using the properties from the context argument.\n   * If old context is {a:1, b:2, c:3} and invoking updateContext({b:3, c:null}) will result a context\n   * be {a:1, b:3}\n   *\n   * @function updateContext\n   * @param {object} context\n   * @param callback\n   * @return {Promise<object>}\n   */\n  public updateContext(context: object, callback?: contracts.Callback<Activity>): Promise<object> {\n    return this._manager.updateActivityContext(this, context, callback);\n  }\n\n  /**\n   * Subscribe for status change events\n   *\n   * @function onStatusChange\n   *\n   * @param {activityStatusChangeHandler} handler Handler function that will receive status notifications\n   */\n  public onStatusChange(handler: (activity: Activity, newStatus: ActivityStatus, oldStatus: ActivityStatus) => void): () => void {\n    return this._manager.subscribeActivityEvents((a, ns, os) => {\n      if (a.id === this.id) {\n        handler(a, ns, os);\n      }\n    });\n  }\n\n  /**\n   * Subscribe for window related events, like joined, removed from activity\n   *\n   * @function onWindowEvent\n   * @param {windowEventHandler} handler Handler function that will receive windows events\n   */\n  public onWindowEvent(handler: contracts.ActivityWindowEventHandler): () => void {\n    return this._manager.subscribeWindowEvents((a, w, e) => {\n      if (a.id === this.id) {\n        handler(a, w, e);\n      }\n    });\n  }\n\n  /**\n   * Subscribe for context updates\n   *\n   * @function onContextChanged\n   * @param {contextChangedHandler} handler Handler function that will receive context related events\n   */\n  public onContextChanged(handler: contracts.ContextUpdateHandler) {\n    this._manager.subscribeActivityContextChanged((act, context, updated, removed) => {\n      if (act.id === this.id) {\n        handler(context, updated, removed, act);\n      }\n    });\n\n    try {\n      // replay the context at the time of subscribing, swallow user exceptions\n      handler(this.context, this.context, [], this);\n    } catch (e) {\n      return;\n    }\n  }\n\n  /**\n   * Stops the activity\n   * @function stop\n   */\n  public stop() {\n    this._manager.stopActivity(this);\n  }\n\n  /**\n   * Clones the activity into a new one\n   * @function clone\n   * @param {CloneOptions} options\n   */\n  public clone(options: CloneOptions) {\n    return this._manager.clone(this, options);\n  }\n\n  public attach(activity: Activity | string, tag?: object): Promise<AttachedActivityDescriptor> {\n    let activityId;\n    if (typeof activity === \"string\") {\n      activityId = activity;\n    } else {\n      activityId = activity.id;\n    }\n    return this._manager.attachActivities(activityId, this.id, tag);\n  }\n\n  public onActivityAttached(callback: (descriptor: AttachedActivityDescriptor) => void) {\n    this._manager.subscribeActivitiesAttached((newActId: string, oldActId: string, descriptor: AttachedActivityDescriptor) => {\n      if (newActId !== this._id) {\n        return;\n      }\n\n      callback(descriptor);\n    });\n  }\n\n  public onDetached(callback: (newAct: Activity, state: any) => void) {\n    this._manager.subscribeActivitiesDetached((newAct: Activity, originalActivity: Activity, state: any) => {\n      if (originalActivity.id !== this._id) {\n        return;\n      }\n\n      callback(newAct, state);\n    });\n  }\n\n  public _updateCore(other: Activity) {\n    super._updateCore(other);\n    ifNotUndefined(other._actType, (x) => this._actType = x);\n    ifNotUndefined(other._context, (x) => this._context = x);\n    ifNotUndefined(other._ownerId, (x) => this._ownerId = x);\n    if (other._status && (!this._status || (this._status.state !== other._status.state))) {\n      this._status = other._status;\n    }\n  }\n\n  public _updateDescriptors(allStates: any) {\n    this._attached = allStates.map((s: any) => {\n      return new AttachedActivityDescriptor(this._manager, this._id, s);\n    });\n  }\n\n  public get attached(): AttachedActivityDescriptor[] {\n    return this._attached;\n  }\n\n  public setFrameColor(color: string, callback: () => void): Promise<Activity> {\n    const promise = new Promise<Activity>((resolve, reject) => {\n\n      let callbacksToWait = this.windows.length;\n      if (callbacksToWait === 0) {\n        resolve(this);\n      }\n\n      this.windows.forEach((w) => {\n        w.underlyingWindow.setFrameColor(color, () => {\n          callbacksToWait--;\n          if (callbacksToWait <= 0) {\n            resolve(this);\n          }\n        });\n      });\n\n      setTimeout(() => {\n\n        if (callbacksToWait > 0) {\n          reject(this.id + \" - timed out waiting for setFrameColor with\" + color);\n        }\n\n      }, 5000);\n\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  public getFrameColor(): string {\n\n    if (!this.windows || this.windows.length === 0) {\n      return \"\";\n    }\n\n    return this.windows[0].underlyingWindow.frameColor;\n  }\n}\n","/* tslint:disable */\n\nimport * as util from \"./util\";\nimport {Glue42Core} from \"@glue42/core\";\n\nexport class LogLevel {\n  public static Trace: string = \"trace\";\n  public static Debug: string = \"debug\";\n  public static Info: string = \"info\";\n  public static Warn: string = \"warn\";\n  public static Error: string = \"error\";\n}\n\nexport class Logger {\n\n  public static Level: string = LogLevel.Info;\n  public static GlueLogger: Glue42Core.Logger.API;\n\n  private _glueLogger: Glue42Core.Logger.API;\n\n  public static GetNamed(name: string): Logger {\n    return new Logger(name);\n  }\n\n  public static Get(owner: Object): Logger {\n    return new Logger(Logger.GetTypeName(owner));\n  }\n\n  public _name: string;\n\n  constructor(name: string) {\n    this._name = name;\n    // we have a glue logger let's create a new logger for it\n    if (!util.isUndefinedOrNull(Logger.GlueLogger)) {\n      this._glueLogger = Logger.GlueLogger.subLogger(name);\n    }\n  }\n\n  public trace(message: string) {\n    if (!util.isUndefinedOrNull(this._glueLogger)) {\n      this._glueLogger.trace(message);\n    } else {\n      if (Logger.Level === LogLevel.Trace) {\n        console.info(this._getMessage(message, LogLevel.Trace));\n      }\n    }\n  }\n\n  public debug(message: string) {\n    if (!util.isUndefinedOrNull(this._glueLogger)) {\n      this._glueLogger.debug(message);\n    } else {\n      if (Logger.Level === LogLevel.Debug ||\n        Logger.Level === LogLevel.Trace) {\n        console.info(this._getMessage(message, LogLevel.Debug));\n      }\n    }\n  }\n\n  public info(message: string) {\n    if (!util.isUndefinedOrNull(this._glueLogger)) {\n      this._glueLogger.info(message);\n    } else {\n      if (Logger.Level === LogLevel.Debug ||\n        Logger.Level === LogLevel.Trace ||\n        Logger.Level === LogLevel.Info) {\n        console.info(this._getMessage(message, LogLevel.Info));\n      }\n    }\n  }\n\n  public warn(message: string) {\n    if (!util.isUndefinedOrNull(this._glueLogger)) {\n      this._glueLogger.warn(message);\n    } else {\n      if (Logger.Level === LogLevel.Debug ||\n        Logger.Level === LogLevel.Trace ||\n        Logger.Level === LogLevel.Info ||\n        Logger.Level === LogLevel.Warn) {\n        console.info(this._getMessage(message, LogLevel.Info));\n      }\n    }\n  }\n\n  public error(message: string) {\n    if (!util.isUndefinedOrNull(this._glueLogger)) {\n      this._glueLogger.error(message);\n    } else {\n      console.error(this._getMessage(message, LogLevel.Error));\n      console.trace();\n    }\n  }\n\n  public _getMessage(message: string, level: string): string {\n    return \"[\" + level + \"] \" + this._name + \" - \" + message;\n  }\n\n  /**\n   * Returns the function name for a given object (same as constructor.name but cross-browser)\n   */\n  public static GetTypeName(object: object): string {\n    const funcNameRegex = /function (.{1,})\\(/;\n    const results = (funcNameRegex).exec(object.constructor.toString());\n    return (results && results.length > 1) ? results[1] : \"\";\n  }\n}\n","import * as contracts from \"../contracts/contracts\";\nimport { WindowBounds } from \"../contracts/windowBounds\";\n\nimport WindowType from \"./windowType\";\nimport ActivityEntity from \"./activityEntity\";\nimport Activity from \"./activity\";\n\nimport { Logger } from \"../helpers/logger\";\nimport * as util from \"../helpers/util\";\nimport { ifNotUndefined } from \"../helpers/util\";\nimport { EntityEventType } from \"../contracts/entityEvent\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../../glue\";\n\n/**\n * A window participating in an activity\n *\n * @module activityWindow\n */\nexport default class ActivityWindow extends ActivityEntity {\n\n    private _logger: Logger = Logger.Get(\"window\");\n\n    private _type: string;\n    private _activityId: string;\n    private _name: string;\n    private _instance: Glue42Core.AGM.Instance;\n    private _isIndependent: boolean;\n    private _windowGetter: () => Glue42.Windows.GDWindow;\n    private _hcWindowId: string;\n\n    constructor(id: string, name: string, type: string, activityId: string, instance: Glue42Core.AGM.Instance, isIndependent: boolean, windowGetter: any,\n                hcWindowId: string) {\n        super(id);\n        this._type = type;\n        this._activityId = activityId;\n        this._name = name;\n        this._instance = instance;\n        this._isIndependent = isIndependent;\n        this._windowGetter = windowGetter;\n        this._hcWindowId = hcWindowId;\n    }\n\n    /**\n     * Return window's title\n     * @function getBounds\n     * @return {Promise<WindowBounds>}\n     */\n    public getBounds(): Promise<WindowBounds> {\n        return this._manager.getWindowBounds(this.id);\n    }\n\n    /**\n     * @var {string} name The window name\n     */\n    public get name(): string {\n        return this._name;\n    }\n\n    /**\n     * @var {bool} isIndependent True if this is an independent window\n     */\n    public get isIndependent(): boolean {\n        return this._isIndependent;\n    }\n\n    /**\n     * @var {module:windowType} type The window type\n     */\n    public get type(): WindowType {\n        if (this._manager) {\n            return this._manager.getWindowType(this._type);\n        }\n        return undefined;\n    }\n\n    /**\n     * @var {module:activity} activity The activity that the window is part of\n     */\n    public get activity(): Activity {\n        if (util.isUndefined(this._activityId)) {\n            return undefined;\n        }\n        return this._manager.getActivityById(this._activityId);\n    }\n\n    /**\n     * @var {bool} isOwner True if the window is the owner of the activity.\n     */\n    public get isOwner(): boolean {\n        const act = this.activity;\n        if (util.isUndefined(act)) {\n            return false;\n        }\n\n        return act.owner.id === this.id;\n    }\n\n    /**\n     * Sets window's visibility\n     *\n     * @function setVisible\n     * @param {boolean} isVisible\n     * @returns {Promise<module:activityWindow>}\n     */\n    public setVisible(isVisible: boolean, callback?: contracts.Callback<ActivityWindow>): Promise<ActivityWindow> {\n        return this._manager.setWindowVisibility(this.id, isVisible);\n    }\n\n    /**\n     * Activate window\n     * @function activate\n     * @param {boolean} focus If true then activate window with focus otherwise activate window without focus\n     */\n    public activate(focus: boolean): Promise<ActivityWindow> {\n        return this._manager.activateWindow(this.id, focus);\n    }\n\n    /**\n     * Sets window's bounds\n     * @function setBounds\n     *\n     * @param {bounds} bounds The new bounds to be applied\n     * @returns  {Promise<module:activityWindow>}\n     */\n    public setBounds(bounds: WindowBounds, callback?: contracts.Callback<ActivityWindow>): Promise<ActivityWindow> {\n        return this._manager.setWindowBounds(this.id, bounds, callback);\n    }\n\n    /**\n     * Closes the window\n     *\n     * @function close\n     * @returns {Promise}\n     */\n    public close(): Promise<any> {\n        return this._manager.closeWindow(this.id);\n    }\n\n    /**\n     * @var {agmInstance} instance The agm instance of that window. You can use this to invoke AGM methods against that window\n     */\n    public get instance(): Glue42Core.AGM.Instance {\n        return this._instance;\n    }\n\n    /**\n     * Returns the window as object from Windows API (glue.windows).\n     *\n     * @var {window} underlyingWindow\n     */\n    public get underlyingWindow(): any {\n        const window = this._windowGetter();\n        if (!window) {\n            // we don't have the window object any more, let's return as much as we can\n            return {\n                id: this._hcWindowId\n            };\n        }\n        return window;\n    }\n\n    public onActivityJoined(callback: (activity: Activity) => void) {\n        this._subscribeForActivityWindowEvent(EntityEventType.ActivityWindowJoinedActivity, callback);\n    }\n\n    public onActivityRemoved(callback: (activity: Activity) => void) {\n        this._subscribeForActivityWindowEvent(EntityEventType.ActivityWindowLeftActivity, callback);\n    }\n\n    public _updateCore(other: ActivityWindow) {\n        ifNotUndefined(other._activityId, (x) => this._activityId = x);\n        ifNotUndefined(other._isIndependent, (x) => this._isIndependent = x);\n        ifNotUndefined(other._hcWindowId, (x) => this._hcWindowId = x);\n        ifNotUndefined(other._type, (x) => this._type = x);\n        ifNotUndefined(other._name, (x) => this._name = x);\n\n        if (!util.isUndefinedOrNull(other._instance)) {\n            this._instance = other._instance;\n        }\n    }\n\n    public _subscribeForActivityWindowEvent(eventName: string, callback: (activity: Activity) => void) {\n        this._manager.subscribeWindowEvents((activity, window, event) => {\n            // ignore events not related to this window\n            if (window.id !== this.id) {\n                return;\n            }\n\n            if (event === eventName) {\n                callback(activity);\n            }\n        });\n    }\n\n    public _beforeDelete(other: ActivityWindow) {\n        this._hcWindowId = other._hcWindowId;\n    }\n}\n","/**\n * @typedef {Object} activityStatus Defines activity instance status\n * @property {string} state Current state\n * @property {string} message Message\n * @property {Date} time Time of the last status update\n */\nexport class ActivityStatus {\n  public state: string;\n  public message: string;\n  public time: Date;\n\n  constructor(state: string, message: string, time: Date) {\n    this.state = state;\n    this.message = message;\n    this.time = time;\n  }\n\n  public getState(): string {\n    return this.state;\n  }\n\n  public getMessage(): string {\n    return this.message;\n  }\n\n  public getTime(): Date {\n    return this.time;\n  }\n}\n","import { AnnouncementInfo } from \"../contracts/announcementInfo\";\n\nimport { ActivityBridge } from \"./activityBridge\";\nimport ActivityType from \"../entities/activityType\";\nimport WindowType from \"../entities/windowType\";\nimport { EventHandlerCallback } from \"../contracts/contracts\";\nimport { WindowDefinition } from \"../entities/windowDefinition\";\nimport {\n    ActivityContextChangedEventContext,\n    ActivityStatusChangeEventContext,\n    EntityEvent,\n    EntityEventContext,\n    EntityEventType,\n} from \"../contracts/entityEvent\";\nimport { WindowFactory } from \"../contracts/windowFactory\";\nimport Activity from \"../entities/activity\";\nimport ActivityWindow from \"../entities/activityWindow\";\nimport { WindowBounds } from \"../contracts/windowBounds\";\nimport {\n    ActivityGwMessage,\n    ActivityTypeGwMessage,\n    ActivityTypeGwMessageEntity,\n    GwMessage,\n    PeerCreatedGwMessage,\n    PeerFactoryGwMessage,\n    PeerFactoryGwMessageEntity,\n    PeerRequestedGwMessage,\n} from \"./gw3BridgeMessages\";\nimport { ActivityDescriptor } from \"../entities/activityDescriptor\";\nimport { CloneOptions } from \"../entities/cloneOptions\";\nimport { Glue42 } from \"../../../glue\";\n\nimport { ActivityStatus } from \"../contracts/activityStatus\";\nimport { ActivityConfig } from \"../activityConfig\";\nimport { Glue42Core } from \"@glue42/core\";\n\nimport { Glue42 as glue42 } from \"../../../glue\";\ntype OverrideTypeDefinition = glue42.Activities.OverrideTypeDefinition;\n\nconst gwMessageSuccess = \"success\";\nconst gwMmessageError = \"error\";\n\nconst gwMessageAddActivityTypes = \"add-types\";\nconst gwMmessageActivityTypesAdded = \"types-added\";\nconst gwMessageRemoveActivityTypes = \"remove-types\";\nconst gwMessageActivityTypesRemoved = \"types-removed\";\n\nconst gwMessageActivityCreated = \"created\";\nconst gwMessageActivityDestroyed = \"destroyed\";\nconst gwMessageActivityInitiated = \"initiated\";\nconst gwMmessageJoinActivity = \"join-activity\";\nconst gwMessageJoinedActivity = \"joined\";\nconst gwMessageActivityJoined = \"activity-joined\";\nconst gwMessageLeaveActivity = \"leave-activity\";\nconst gwMessageActivityLeft = \"left\";\nconst gwNmessageMergeActivities = \"merge\";\nconst gwMessageSplitActivities = \"split\";\nconst gwMessageChildrenChanged = \"children-changed\";\nconst gwMessageOwnerChanged = \"owner-changed\";\n\nconst gwMessageAddPeerFactories = \"add-peer-factories\";\nconst gwMessagePeerFactoriesAdded = \"peer-factories-added\";\nconst gwMessageRemovePeerFactories = \"remove-peer-factories\";\nconst gwMessagePeerFactoriesRemoved = \"peer-factories-removed\";\n\nconst gwMessageCreateActivity = \"create\";\nconst gwMessageCreatePeer = \"create-peer\";\nconst gwMessagePeerRequested = \"peer-requested\";\nconst gwMessageReady = \"ready\";\nconst gwMessagePeerCreated = \"peer-created\";\n\nconst gwMessageDestroyActivity = \"destroy\";\nconst gwMessageDisposePeer = \"dispose-peer\";\n\ndeclare let window: any;\ndeclare let process: any;\n\nexport default class GW3Bridge implements ActivityBridge {\n\n    private static activityTypeGwMessageEntityToActivityType(\n        entity: ActivityTypeGwMessageEntity,\n        description: string): ActivityType {\n\n        const nameToWindowType =\n            (windowName: any) =>\n                new WindowType(\n                    windowName,\n                    undefined);\n\n        return new ActivityType(\n            entity.name,\n            entity.owner_type && nameToWindowType(entity.owner_type),\n            entity.helper_types && entity.helper_types.map(nameToWindowType),\n            description);\n    }\n\n    private static peerFactoryGwMessageEntityToWindowType(entity: PeerFactoryGwMessageEntity): WindowType {\n        return new WindowType(\n            entity.peer_type,\n      /* #deleteme TODO: review - appmanager configuration? */(_) => undefined);\n    }\n\n    private static activityGwMessageToActivity(msg: ActivityGwMessage, status: ActivityStatus): Activity {\n        const ownerId = msg.owner !== undefined ? msg.owner.peer_id : msg.owner_id;\n        return new Activity(\n            msg.activity_id,\n            msg.activity_type,\n            status,\n            msg.context_snapshot,\n            ownerId);\n    }\n\n    private static activityToActivityStatusChangeEvent(act: Activity) {\n        return new EntityEvent<Activity>(act, new ActivityStatusChangeEventContext(act.status, undefined));\n    }\n\n    private _connection: any;\n    private _logger: any;\n    private _contexts: Glue42.Contexts.API;\n\n    private _gw3Session: Glue42Core.Connection.GW3DomainSession;\n\n    // callbacks\n\n    private _activityChangeCallbacks: Array<EventHandlerCallback<EntityEvent<Activity>>> = [];\n    private _activityTypeStatusChangeCallbacks: Array<EventHandlerCallback<EntityEvent<ActivityType>>> = [];\n    private _activityWindowChangeCallbacks: Array<EventHandlerCallback<EntityEvent<ActivityWindow>>> = [];\n    private _windowTypeStatusChangeCallbacks: Array<EventHandlerCallback<EntityEvent<WindowType>>> = [];\n\n    // state tracking\n    private _peerIdAndFactoryIdToPeerType: any = {};\n    private _peerFactoriesRegisteredByUs: { [index: string]: WindowFactory } = {};\n    private _gw3Subscriptions: any[] = [];\n    private _contextSubscriptions: any = {};\n    private _activityTypesInitiatedFromMe: any = {};\n\n    private _sessionJoinedPromise: Promise<GW3Bridge>;\n    private _sessionJoinedPromiseResolve: (bridge: GW3Bridge) => void;\n    private _activityJoinedPromise: Promise<object>;\n    private _activityJoinedPromiseResolve: (obj: object) => void;\n    private _config: ActivityConfig;\n\n    constructor(\n        connection: Glue42Core.Connection.API,\n        logger: Glue42.Logger.API,\n        contexts: Glue42.Contexts.API,\n        config: ActivityConfig) {\n        this._config = config;\n        this._connection = connection;\n        this._logger = logger;\n        this._contexts = contexts;\n\n        this._sessionJoinedPromise = new Promise<GW3Bridge>((resolve /*, reject */) => {\n            this._sessionJoinedPromiseResolve = resolve;\n        });\n\n        this._activityJoinedPromise = new Promise<object>((resolve /*, reject */) => {\n            this._activityJoinedPromiseResolve = resolve;\n        });\n\n        if (!this._config.activityId) {\n            this._activityJoinedPromiseResolve({});\n        }\n\n        this._gw3Session = connection.domain(\n            \"activity\",\n            [\"joined\", \"initiated\", \"peer-created\", \"token\"]);\n\n        if (typeof window !== \"undefined\") {\n            const glue42gd = (window as any).glue42gd;\n            // G4E-1343\n            if (glue42gd && typeof glue42gd.addRefreshHandler === \"function\") {\n                glue42gd.addRefreshHandler((success: any, error: any) => {\n                    this._gw3Session\n                        .send(\n                            {\n                                type: \"reload\"\n                            })\n                        .then(\n                            (msg: any) => {\n                                if (!msg.token) {\n                                    error(\"Expected gateway token for refreshing.\");\n                                    return;\n                                }\n                                try {\n                                    glue42gd.setGWToken(msg.token as string);\n                                } catch (e) {\n                                    error(e.message || e);\n                                    return;\n                                }\n                                success();\n                            },\n                            error);\n                });\n            }\n        }\n    }\n\n    public get bridgeType(): \"GW3\" {\n        return \"GW3\";\n    }\n\n    public init() {\n        // activity types\n        this.forwardActivityTypeMessagesToStatusEventHandlers();\n\n        // activities\n        this.subscribe<ActivityGwMessage>(\n            gwMessageActivityCreated,\n            this.handleActivityCreatedMessage);\n\n        this.subscribe<ActivityGwMessage>(\n            gwMessageActivityDestroyed,\n            this.handleActivityDestroyedMessage);\n\n        this.forwardActivityMessagesToStatusEventHandlers();\n\n        this.forwardActivityCreatedAndJoinedActivityToActivityWindowEventHandlers();\n\n        // window types / peer factories\n\n        // NB: this forward must happen before the handlePeerFactoriesRemoved subscription\n        // since the latter clears state which is used by peerFactoryIdAndOwnerIdToWindowType\n        this.forwardPeerFactoryMessagesToStatusEventHandlers();\n\n        this.forwardPeerFactoryMessagesToPeerFactoryRequests();\n\n        this.subscribe(\n            gwMessagePeerFactoriesAdded,\n            this.handlePeerFactoriesAdded);\n\n        this.subscribe(\n            gwMessagePeerFactoriesRemoved,\n            this.handlePeerFactoriesRemoved);\n\n        // activity windows\n\n        this.forwardActivityWindowMessagesToEventHandlers();\n        //\n\n        this.subscribe(\n            gwMessageDisposePeer,\n      /*(msg)*/() => {\n                if (this._config.disposeRequestHandling === \"dispose\") {\n                    this.dispose();\n                    return;\n                }\n                if (this._config.disposeRequestHandling === \"exit\") {\n                    if (typeof window !== \"undefined\" &&\n                        typeof (window as any).close === \"function\") {\n                        window.close();\n                        return;\n                    }\n                    if (typeof process !== \"undefined\" &&\n                        typeof (process as any).exit === \"function\") {\n                        process.exit();\n                        return;\n                    }\n                }\n            });\n\n        // start domain join handshake\n        this._gw3Session.onJoined(() => {\n\n            if (this._config.mode === \"trackMyOnly\" ||\n                this._config.mode === \"trackMyTypeAndInitiatedFromMe\") {\n                this._sessionJoinedPromiseResolve(this);\n            } else {\n                this._gw3Session\n                    .send(\n                        {\n                            type: \"subscribe\",\n                            activity_types:\n                                (this._config.mode === \"trackAll\" ? [] :\n                                    this._config.mode === \"trackTypes\" ? this._config.typesToTrack : [])\n                        })\n                    .then(() => {\n                        this._sessionJoinedPromiseResolve(this);\n                    });\n            }\n        });\n        this._gw3Session.join();\n    }\n\n    public dispose() {\n        this._gw3Subscriptions.forEach((sub) => sub && this._connection.off(sub));\n        this._gw3Subscriptions.length = 0;\n    }\n\n    // ActivityBridge interface\n\n    public ready(): Promise<object> {\n        return Promise.all([this._sessionJoinedPromise, this._activityJoinedPromise]);\n    }\n\n    public initReady(): Promise<ActivityBridge> {\n        return this._sessionJoinedPromise;\n    }\n\n    public onActivityTypeStatusChange(callback: EventHandlerCallback<EntityEvent<ActivityType>>) {\n        this._activityTypeStatusChangeCallbacks.push(callback);\n    }\n\n    public registerActivityType(\n        activityTypeName: string,\n        ownerWindow: WindowDefinition,\n        helperWindows?: WindowDefinition[],\n        config?: any,\n        description?: string): Promise<ActivityType> {\n\n        const entity: ActivityTypeGwMessageEntity = {};\n        entity.name = activityTypeName;\n        const toActivityPeerConfig = (windowDefinition: WindowDefinition) => ({ type: windowDefinition.type, name: windowDefinition.name, configuration: windowDefinition });\n\n        entity.owner_type = toActivityPeerConfig(ownerWindow);\n        entity.helper_types = helperWindows.map(toActivityPeerConfig);\n\n        return this._gw3Session\n            .send(\n                {\n                    type: gwMessageAddActivityTypes,\n                    types: [entity]\n                })\n            .then(() => {\n                const activityType = GW3Bridge.activityTypeGwMessageEntityToActivityType(entity, description);\n                this.invokeCallbacks(\n                    this._activityTypeStatusChangeCallbacks,\n                    new EntityEvent<ActivityType>(\n                        activityType,\n                        new EntityEventContext(EntityEventType.Added)),\n                    gwMessageAddActivityTypes);\n                return activityType;\n            });\n    }\n\n    public unregisterActivityType(activityTypeName: string): Promise<void> {\n        return this._gw3Session\n            .send(\n                {\n                    type: gwMessageRemoveActivityTypes,\n                    types: [activityTypeName]\n                })\n            .then(() => {\n                const activityType = new ActivityType(activityTypeName, undefined, undefined, undefined);\n                this.invokeCallbacks(\n                    this._activityTypeStatusChangeCallbacks,\n                    new EntityEvent<ActivityType>(\n                        activityType,\n                        new EntityEventContext(EntityEventType.Removed)),\n                    gwMessageAddActivityTypes);\n            });\n    }\n\n    public onWindowTypeStatusChange(callback: EventHandlerCallback<EntityEvent<WindowType>>): void {\n        this._windowTypeStatusChangeCallbacks.push(callback);\n    }\n\n    // NB: in GW3, peer factories have ids separate from the ids of the peers they create\n    // in this implementation we keep the two equal for simplicity\n    // NB: we assume only one peer will register a peer factory for a given type; otherwise the\n    // add/remove window types event logic will get messy\n    public registerWindowFactory(\n        windowType: string,\n        factory: WindowFactory,\n        parameters?: any): Promise<void> {\n        if (this._peerFactoriesRegisteredByUs[windowType]) {\n            return Promise.reject(new Error(`Factory for windowType ${windowType} already registered.`));\n        }\n\n        this._peerFactoriesRegisteredByUs[windowType] = factory;\n\n        // #deleteme TODO: review success/failure code paths\n        // #deleteme TODO: review - should we create the window type here?\n        const entity = {\n            id: windowType,\n            peer_type: windowType,\n            configuration: parameters\n        };\n        return this._gw3Session.send({\n            type: gwMessageAddPeerFactories,\n            factories: [entity]\n        })\n            .then(() => {\n                this.invokeCallbacks(\n                    this._windowTypeStatusChangeCallbacks,\n                    new EntityEvent(\n                        GW3Bridge.peerFactoryGwMessageEntityToWindowType(entity),\n                        new EntityEventContext(EntityEventType.Added)),\n                    gwMessageAddPeerFactories);\n            })\n            .catch(() => {\n                delete this._peerFactoriesRegisteredByUs[windowType];\n            });\n    }\n\n    public unregisterWindowFactory(windowType: string): Promise<void> {\n        const factory = this._peerFactoriesRegisteredByUs[windowType];\n        if (!factory) {\n            return Promise.reject(new Error(`Factory for windowType ${windowType} not registered.`));\n        }\n\n        delete this._peerFactoriesRegisteredByUs[windowType];\n\n        return this._gw3Session.send({\n            type: gwMessageRemovePeerFactories,\n            factory_ids: [windowType]\n        }).then(() => {\n            this.invokeCallbacks(\n                this._windowTypeStatusChangeCallbacks,\n                new EntityEvent(\n                    new WindowType(windowType, undefined),\n                    new EntityEventContext(EntityEventType.Removed)),\n                gwMessageAddPeerFactories);\n        });\n    }\n\n    public onActivityStatusChange(callback: EventHandlerCallback<EntityEvent<Activity>>) {\n        this._activityChangeCallbacks.push(callback);\n    }\n\n    public initiateActivity(activityType: string, context?: object, configuration?: WindowDefinition[] | OverrideTypeDefinition): Promise<string> {\n        const initiateMsg: any = {\n            type: gwMessageCreateActivity,\n            activity_type: activityType,\n            initial_context: context,\n        };\n\n        if (this.isOverrideTypeDefinition(configuration)) {\n            initiateMsg.types_override = {\n                owner_type: { type: configuration.owner.type, name: configuration.owner.name, configuration: configuration.owner },\n                helper_types: configuration.helpers && configuration.helpers.map((wd) => ({ type: wd.type, name: wd.name, configuration: wd }))\n            };\n        } else {\n            initiateMsg.configuration = configuration && configuration.map((wd) => ({ type: wd.type, name: wd.name, configuration: wd }));\n        }\n\n        return this.sendCreateAndMapResultingMessagesToPromise(\n            initiateMsg,\n            gwMessageActivityInitiated,\n            (msg, requestId) => msg.request_id === requestId,\n            gwMessageActivityCreated,\n            (msg, requestId, initMsg) => msg.activity_id === initMsg.activity_id,\n            gwMessageActivityDestroyed,\n            (msg, requestId, initMsg) => msg.activity_id === initMsg.activity_id,\n            (msg) => msg.activity_id).then((id) => {\n                if (this._config.mode === \"trackMyTypeAndInitiatedFromMe\") {\n                    if (!this._activityTypesInitiatedFromMe[activityType]) {\n                        this._activityTypesInitiatedFromMe[activityType] = true;\n\n                        return this._gw3Session\n                            .send(\n                                {\n                                    type: \"subscribe\",\n                                    activity_types: [activityType]\n                                })\n                            .then(() => {\n                                return id;\n                            });\n                    }\n                }\n                return id;\n            });\n    }\n\n    public stopActivity(activity: Activity): Promise<boolean> {\n        return this._gw3Session.send({\n            type: gwMessageDestroyActivity,\n            activity_id: activity.id,\n            reason_uri: \"com.tick42.glue.activity.constants.destroyReason.general\",\n            reason: \"Destroying activity\"\n        }).then((_) => true);\n    }\n\n    public updateActivityContext(activity: Activity, context: any, fullReplace: boolean, removedKeys?: string[]): Promise<void> {\n        if (fullReplace) {\n            // this will currently fail on GW3\n            return this._contexts.set(activity.id, context);\n        } else {\n            removedKeys = removedKeys || [];\n            for (const x of removedKeys) {\n                context[x] = null;\n            }\n            return this._contexts.update(activity.id, context);\n        }\n    }\n\n    public announceWindow(windowType?: string, activityWindowId?: string) {\n        // in the GW3 case we are only joined to an activity after we announce ourselves\n        // so all announcement calls should go in 'registerWindow', not here\n        // (registerWindow registers a window that's not part of an activity, at least yet)\n        throw new Error(\"Invalid operation 'announceWindow' for GW3 protocol\");\n    }\n\n    public registerWindow(type: string, name: string, independent: boolean): Promise<string> {\n\n        let shouldSendReady = this._connection.gatewayToken;\n        const peerId = this._connection.peerId;\n\n        // if running in GD3 (glue42gd is there) we should send ready only if we have the activityInfo object in glue\n        if (typeof window !== \"undefined\") {\n            const glue42gd = window.glue42gd;\n            if (glue42gd) {\n                shouldSendReady = glue42gd.activityInfo !== undefined;\n            }\n        }\n\n        if (shouldSendReady) {\n            this._gw3Session.send({\n                type: gwMessageReady,\n            });\n        }\n\n        this.invokeCallbacks(\n            this._activityWindowChangeCallbacks,\n            new EntityEvent<ActivityWindow>(\n                new ActivityWindow(peerId, name, type, undefined, this.getAgmInstance(peerId), independent, this.generateWindowGetter(peerId), undefined),\n                new EntityEventContext(EntityEventType.Added)),\n            \"register window\");\n\n        return Promise.resolve(peerId);\n    }\n\n    public onActivityWindowChange(callback: EventHandlerCallback<EntityEvent<ActivityWindow>>) {\n        this._activityWindowChangeCallbacks.push(callback);\n    }\n\n    public createWindow(activityId: string, windowDefinition: WindowDefinition): Promise<string> {\n\n        // if the user hasn't provided a layout option but has some of left,top,width,height\n        // insert a layout\n        if (!windowDefinition.layout) {\n            if (windowDefinition.left || windowDefinition.width || windowDefinition.height || windowDefinition.top) {\n                windowDefinition.layout = {\n                    mode: \"pixels\",\n                    cellSize: 1,\n                };\n            }\n        }\n\n        return this.sendCreateAndMapResultingMessagesToPromise(\n            {\n                type: gwMessageCreatePeer,\n                peer_type: windowDefinition.type,\n                peer_name: windowDefinition.name || windowDefinition.type,\n                configuration: windowDefinition,\n                activity_id: activityId,\n            },\n            undefined,\n            undefined,\n            gwMessagePeerCreated,\n            (msg, requestId) => msg.request_id === requestId,\n            undefined,\n            undefined,\n            (msg) => msg.created_id)\n            .then((id) => {\n                if (!activityId) {\n                    return;\n                }\n                return this.joinActivity(activityId, id, windowDefinition.name)\n                    .then(() => {\n                        return id;\n                    });\n            });\n    }\n\n    public closeWindow(id: string): Promise<void> {\n        return this._gw3Session.send({\n            destroy_peer_id: id\n        }).then((_) => undefined);\n    }\n\n    public getAnnouncementInfo(): AnnouncementInfo {\n        let activityId = this._config.activityId || (this._config.announcementInfo && this._config.announcementInfo.activityId);\n        let activityWindowType = (this._config.announcementInfo && this._config.announcementInfo.activityWindowType);\n        let activityWindowIndependent = (this._config.announcementInfo && this._config.announcementInfo.activityWindowIndependent);\n        let activityWindowName = (this._config.announcementInfo && this._config.announcementInfo.activityWindowName);\n\n        if (typeof window !== \"undefined\" &&\n            typeof window.location !== \"undefined\" &&\n            window.location.search &&\n            typeof URLSearchParams === \"function\") {\n            const searchParams = new URLSearchParams(location.search.slice(1));\n            activityWindowType = activityWindowType || searchParams.get(\"t42PeerType\");\n            activityWindowType = activityWindowType || searchParams.get(\"t42ActivityWindowType\");\n            if (typeof activityWindowIndependent === \"undefined\") {\n                activityWindowIndependent = searchParams.get(\"t42ActivityWindowIndependent\");\n            }\n            activityWindowName = activityWindowName || searchParams.get(\"t42ActivityWindowName\");\n            activityId = activityId || searchParams.get(\"t42ActivityId\");\n        }\n\n        activityWindowType = activityWindowType || \"unknown\";\n        activityWindowIndependent = activityWindowIndependent || false;\n        activityWindowName = activityWindowName || this._connection.peerId;\n\n        return {\n            activityWindowId: undefined, // not member of activity from the get go\n            activityId,\n            activityWindowType,\n            activityWindowIndependent,\n            activityWindowName,\n        };\n    }\n\n    public joinActivity(activityId: string, windowId: string, name?: string): Promise<void> {\n        const maybeName = (name && { name }) || {};\n        return this._gw3Session.send({\n            type: gwMmessageJoinActivity,\n            target_id: windowId,\n            activity_id: activityId,\n            ...maybeName\n        }).then(() => {\n            this.invokeCallbacks(\n                this._activityWindowChangeCallbacks,\n                new EntityEvent<ActivityWindow>(\n                    new ActivityWindow(windowId, undefined, undefined, activityId, this.getAgmInstance(windowId), undefined, this.generateWindowGetter(windowId), undefined),\n                    new EntityEventContext(EntityEventType.ActivityWindowJoinedActivity)),\n                \"activity joined - ActivityWindow\");\n\n            this.invokeCallbacks(\n                this._activityChangeCallbacks,\n                new EntityEvent<Activity>(\n                    new Activity(activityId, undefined, new ActivityStatus(\"created\", undefined, undefined), undefined, undefined),\n                    new EntityEventContext(EntityEventType.Updated)),\n                \"activity joined - Activity\");\n        });\n    }\n\n    public leaveActivity(activityId: string, windowId: string): Promise<void> {\n        return this._gw3Session.send({\n            type: gwMessageLeaveActivity,\n            target_id: windowId,\n            activity_id: activityId\n        }).then(() => {\n            this.invokeCallbacks(\n                this._activityWindowChangeCallbacks,\n                new EntityEvent<ActivityWindow>(\n                    new ActivityWindow(windowId, undefined, undefined, null, this.getAgmInstance(windowId), undefined, this.generateWindowGetter(windowId), undefined),\n                    new EntityEventContext(EntityEventType.ActivityWindowLeftActivity)),\n                \"activity left - ActivityWindow\");\n\n            this.invokeCallbacks(\n                this._activityChangeCallbacks,\n                new EntityEvent<Activity>(\n                    new Activity(activityId, undefined, new ActivityStatus(\"created\", undefined, undefined), undefined, undefined),\n                    new EntityEventContext(EntityEventType.Updated)),\n                \"activity left - Activity\");\n        });\n    }\n\n    // purposefully returning empty arrays\n    public getActivityTypes(): Promise<ActivityType[]> {\n        return Promise.resolve([]);\n    }\n\n    public getWindowTypes(): Promise<WindowType[]> {\n        return Promise.resolve([]);\n    }\n\n    public getActivities(): Promise<Activity[]> {\n        return Promise.resolve([]);\n    }\n\n    public getActivityWindows(): Promise<ActivityWindow[]> {\n        return Promise.resolve([]);\n    }\n\n    // N/A\n\n    // ignore for now\n\n    // POSTPONED\n    public createStackedWindows(id: string, windowDefinitions: WindowDefinition[], timeout: number): Promise<string[]> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public getWindowBounds(id: string): Promise<WindowBounds> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public setWindowBounds(id: string, bounds: WindowBounds): Promise<void> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public activateWindow(id: string, focus: boolean): Promise<void> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public setWindowVisibility(id: string, visible: boolean): Promise<void> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public cloneActivity(id: string, cloneOptions: CloneOptions): Promise<string> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public attachActivities(from: string, to: string, tag: object): Promise<any> {\n        return this._gw3Session.send({\n            type: gwNmessageMergeActivities,\n            into: to,\n            merge: from\n        });\n    }\n\n    // POSTPONED\n    public detachActivities(activityId: string, newActivityInfo: ActivityDescriptor): Promise<string> {\n        return this._gw3Session.send({\n            type: gwMessageSplitActivities,\n            from: activityId,\n            // split: from\n        }).then(() => \"\");\n    }\n\n    // POSTPONED\n    public onActivitiesAttached(callback: (info: any) => void) {\n        // POSTPONED\n    }\n\n    // POSTPONED\n    public onActivitiesDetached(callback: (info: any) => void) {\n        // POSTPONED\n    }\n\n    public onActivityAttachedDescriptorsRefreshed(callback: (info: any) => void): void {\n        // POSTPONED\n    }\n\n    // POSTPONED\n    public getAttachedDescriptors(): Promise<any[]> {\n        return Promise.resolve([]);\n    }\n\n    // helpers\n\n    // Protocol handling\n\n    private getRandomRequestId() {\n        return this._connection.peerId + \":\" + Math.floor(Math.random() * 1e9) + \"\";\n    }\n\n    private forwardAddedAndRemovedMessagesToEventHandler<TMessage, TEntity>(\n        addedMessageType: string,\n        removedMessageType: string,\n        mapper: (msg: TMessage, isAdded: boolean) => TEntity[],\n        handlers: Array<EventHandlerCallback<EntityEvent<TEntity>>>) {\n\n        const getGetEntityEvent = (isAdded: boolean) => (entity: any) => new EntityEvent<TEntity>(\n            entity,\n            new EntityEventContext(\n                isAdded ?\n                    EntityEventType.Added :\n                    EntityEventType.Removed));\n\n        let sub1;\n        let sub2;\n\n        sub1 = addedMessageType && this.forwardMessageToEventHandler<TMessage, TEntity>(\n            addedMessageType,\n            (msg) => mapper(msg, true),\n            getGetEntityEvent(true),\n            handlers);\n\n        sub2 = removedMessageType && this.forwardMessageToEventHandler<TMessage, TEntity>(\n            removedMessageType,\n            (msg) => mapper(msg, false),\n            getGetEntityEvent(false),\n            handlers);\n\n        return [sub1, sub2].filter((x) => x);\n    }\n\n    private forwardMessageToEventHandler<TMessage, TEntity>(\n        messageType: string,\n        mapper: (msg: TMessage) => TEntity[],\n        getEntityEvent: (entity: TEntity, msg: TMessage) => EntityEvent<TEntity>,\n        handler: Array<EventHandlerCallback<EntityEvent<TEntity>>>) {\n        return this.subscribe(\n            messageType,\n            (msg: TMessage) => {\n                mapper(msg)\n                    .forEach((ent: any) =>\n                        handler.forEach((h) => h(getEntityEvent(ent, msg))));\n            });\n    }\n\n    private sendCreateAndMapResultingMessagesToPromise<TCreatedMessage extends GwMessage, TPromiseType>(\n        msg: any,\n        initiatedMessageType: string,\n        initiatedMessageFilter: (msg: any, requestId: string) => boolean,\n        createdMessageType: string,\n        createdMessageFilter: (msg: any, requestId: string, initMsg: any) => boolean,\n        cancelledMessageType: string,\n        cancelledMessageFilter: (msg: any, requestId: string, initMsg: any) => boolean,\n        createdMessageToPromiseResolution: (TCreatedMessage: any) => TPromiseType): Promise<TPromiseType> {\n\n        const reqId = this.getRandomRequestId();\n\n        let resolveCreatedPromise: (arg: any) => void;\n        let rejectCreatedPromise: (arg: any) => void;\n        const createdPromise = new Promise<TPromiseType>((resolve, reject) => {\n            resolveCreatedPromise = resolve;\n            rejectCreatedPromise = reject;\n        });\n\n        let initiatedMessageAck: any = null;\n\n        let initiatedSubscription: any;\n        let createdSubscription: any;\n        let cancelledSubscription: any;\n        let errorSubscription: any;\n\n        const dropSubscriptions = () => {\n            this.dropSubscription(initiatedSubscription);\n            this.dropSubscription(createdSubscription);\n            this.dropSubscription(cancelledSubscription);\n            this.dropSubscription(errorSubscription);\n        };\n\n        initiatedSubscription = initiatedMessageType &&\n            this.subscribe(\n                initiatedMessageType,\n                (msg4: any) => {\n                    if (!initiatedMessageFilter(msg4, reqId)) {\n                        return;\n                    }\n                    initiatedMessageAck = msg4;\n                    this.dropSubscription(initiatedSubscription);\n                });\n        createdSubscription =\n            this.subscribe(\n                createdMessageType,\n                (msg1: TCreatedMessage) => {\n                    if (!createdMessageFilter(msg1, reqId, initiatedMessageAck)) {\n                        return;\n                    }\n                    resolveCreatedPromise(createdMessageToPromiseResolution(msg1));\n                });\n        cancelledSubscription = cancelledMessageType &&\n            this.subscribe(\n                cancelledMessageType,\n                (msg2: any) => {\n                    if (!cancelledMessageFilter(msg2, reqId, initiatedMessageAck)) {\n                        return;\n                    }\n                    rejectCreatedPromise(msg2);\n                });\n        errorSubscription = cancelledMessageType &&\n            this.subscribe(\n                gwMmessageError,\n                (msg3: any) => {\n                    if (msg3.request_id !== reqId) {\n                        return;\n                    }\n                    rejectCreatedPromise(msg3);\n                });\n\n        msg.request_id = reqId;\n\n        const toReturn = this._gw3Session\n            .send(msg)\n            .then(() => {\n                return createdPromise;\n            });\n        toReturn.then(dropSubscriptions, dropSubscriptions);\n        return toReturn;\n    }\n\n    // Entity Mapping\n\n    private peerFactoryIdAndOwnerIdToWindowType(factoryId: string, ownerId: string) {\n        const peerType = this._peerIdAndFactoryIdToPeerType[ownerId + \":\" + factoryId];\n        if (!peerType) {\n            return null;\n        } else {\n            return new WindowType(peerType, undefined);\n        }\n    }\n\n    private subscribe<TMessage>(messageType: string, handler: (msg: TMessage) => void) {\n        const sub = this._connection.on(\n            \"js-activity\",\n            messageType,\n            (msg: TMessage) => handler.bind(this)(msg));\n\n        this._gw3Subscriptions.push(sub);\n\n        return sub;\n    }\n\n    private dropSubscription(subscription: any) {\n        if (subscription) {\n            this._connection.off(subscription);\n            delete this._gw3Subscriptions[this._gw3Subscriptions.indexOf(subscription)];\n        }\n    }\n\n    private invokeCallbacks<TEvent>(\n        callbacks: Array<EventHandlerCallback<EntityEvent<TEvent>>>,\n        event: EntityEvent<TEvent>,\n        description?: string) {\n        callbacks.forEach((cb) => {\n            try {\n                cb(event);\n            } catch (err) {\n                this._logger.error(`Error in ${description || event.context.type} callback: ` + JSON.stringify(err));\n            }\n        });\n    }\n\n    private handleActivityCreatedMessage(msg: ActivityGwMessage) {\n        if (!msg.context_id) {\n            this._logger.error(\"Activity created with unknown context_id: \" + msg.activity_id);\n        } else {\n            if (!this._contextSubscriptions[msg.activity_id]) {\n                this.subscribeToContext(msg);\n            }\n        }\n    }\n\n    private async subscribeToContext(msg: ActivityGwMessage): Promise<void> {\n        const activityId = msg.activity_id;\n        this._contextSubscriptions[activityId] =\n            await this._contexts.subscribe(activityId,\n                (data: any, updated: any, removed: string[]) => {\n                    const event = new EntityEvent<Activity>(\n                        new Activity(activityId, undefined, undefined, data, undefined),\n                        new ActivityContextChangedEventContext(data, updated, removed));\n\n                    this.invokeCallbacks(\n                        this._activityChangeCallbacks,\n                        event,\n                        \"context updated\");\n                });\n    }\n\n    private handleActivityDestroyedMessage(msg: ActivityGwMessage) {\n        const unsubscribeContext = this._contextSubscriptions[msg.activity_id];\n        if (typeof unsubscribeContext === \"function\") {\n            unsubscribeContext();\n        }\n        delete this._contextSubscriptions[msg.activity_id];\n    }\n\n    private handlePeerFactoriesAdded(msg: PeerFactoryGwMessage) {\n        msg.factories.forEach((entity: PeerFactoryGwMessageEntity) => {\n            this._peerIdAndFactoryIdToPeerType[msg.owner_id + \":\" + entity.id] = entity.peer_type;\n        });\n    }\n\n    private handlePeerFactoriesRemoved(msg: PeerFactoryGwMessage) {\n        msg.factory_ids.forEach((factoryId: string) => {\n            delete this._peerIdAndFactoryIdToPeerType[msg.owner_id + \":\" + factoryId];\n        });\n    }\n\n    private forwardActivityTypeMessagesToStatusEventHandlers() {\n        this.forwardAddedAndRemovedMessagesToEventHandler<ActivityTypeGwMessage, ActivityType>(\n            gwMmessageActivityTypesAdded,\n            gwMessageActivityTypesRemoved,\n            (msg: ActivityTypeGwMessage, isAdded) => isAdded\n                ? msg.types.map((t) => GW3Bridge.activityTypeGwMessageEntityToActivityType(t, undefined))\n                : msg.types.map((t) => new ActivityType(t.name, undefined, undefined, undefined)),\n            this._activityTypeStatusChangeCallbacks);\n\n    }\n\n    private forwardActivityCreatedAndJoinedActivityToActivityWindowEventHandlers() {\n        // if we're created as part of this activity, the JOINED ACTIVITY is\n\n        // the first time we'll hear about it; so let's record the participants\n        for (const activityCreatedMessage of [gwMessageActivityCreated, gwMessageJoinedActivity, gwMessageOwnerChanged]) {\n            this.forwardMessageToEventHandler<ActivityGwMessage, ActivityWindow>(\n                activityCreatedMessage,\n                (msg) =>\n                    ([msg.owner || { ...msg, type: msg.peer_type, name: msg.peer_name, peer_id: msg.owner_id }])\n                        .concat(msg.participants || [])\n                        .map((info: any) => new ActivityWindow(info.peer_id, info.name, info.type, msg.activity_id, this.getAgmInstance(info.peer_id), undefined, this.generateWindowGetter(info.peer_id), undefined)),\n                (ent, msg) => new EntityEvent<ActivityWindow>(ent, new EntityEventContext(EntityEventType.ActivityWindowJoinedActivity)),\n                this._activityWindowChangeCallbacks);\n        }\n    }\n\n    private forwardActivityMessagesToStatusEventHandlers() {\n\n        // see dot-net-activity\\Activity\\ActivityState.cs\n\n        for (const createdMessage of [gwMessageActivityCreated, gwMessageJoinedActivity]) {\n            this.forwardMessageToEventHandler<ActivityGwMessage, Activity>(\n                createdMessage,\n                (msg) => [GW3Bridge.activityGwMessageToActivity(msg, new ActivityStatus(\"started\", \"\", new Date()))],\n                (ent, msg) => GW3Bridge.activityToActivityStatusChangeEvent(ent),\n                this._activityChangeCallbacks);\n        }\n\n        this.forwardMessageToEventHandler<ActivityGwMessage, Activity>(\n            gwMessageActivityDestroyed,\n            (msg) => [GW3Bridge.activityGwMessageToActivity(msg, new ActivityStatus(\"destroyed\", msg.reason, new Date()))],\n            (ent, msg) => GW3Bridge.activityToActivityStatusChangeEvent(ent),\n            this._activityChangeCallbacks);\n\n        this.forwardMessageToEventHandler<ActivityGwMessage, Activity>(\n            gwMessageActivityInitiated,\n            (msg) => [GW3Bridge.activityGwMessageToActivity(msg, new ActivityStatus(\"created\", \"\", new Date()))],\n            (ent, msg) => GW3Bridge.activityToActivityStatusChangeEvent(ent),\n            this._activityChangeCallbacks);\n\n        this.forwardMessageToEventHandler<ActivityGwMessage, Activity>(\n            gwMessageOwnerChanged,\n            (msg) => [GW3Bridge.activityGwMessageToActivity(msg, new ActivityStatus(\"created\", \"\", new Date()))],\n            (ent, msg) => GW3Bridge.activityToActivityStatusChangeEvent(ent),\n            this._activityChangeCallbacks);\n    }\n\n    private forwardPeerFactoryMessagesToStatusEventHandlers() {\n        this.forwardAddedAndRemovedMessagesToEventHandler<PeerFactoryGwMessage, WindowType>(\n            gwMessagePeerFactoriesAdded,\n            gwMessagePeerFactoriesRemoved,\n            (msg: PeerFactoryGwMessage, isAdded: boolean) => isAdded\n                ? msg.factories.map(GW3Bridge.peerFactoryGwMessageEntityToWindowType)\n                : msg.factory_ids.map((id) => this.peerFactoryIdAndOwnerIdToWindowType(id, msg.owner_id)).filter((x) => x != null),\n            this._windowTypeStatusChangeCallbacks);\n    }\n\n    private forwardPeerFactoryMessagesToPeerFactoryRequests() {\n        this.subscribe(\n            gwMessagePeerRequested,\n            (msg: PeerRequestedGwMessage) => {\n                const factory = this._peerFactoriesRegisteredByUs[msg.peer_factory];\n                if (!factory) {\n                    this._gw3Session.send(\n                        {\n                            type: gwMmessageError,\n                            request_id: msg.request_id,\n                            reason: `Unknown peer factory ${msg.peer_factory}`\n                        });\n                    return;\n                }\n\n                try {\n                    const configuration = msg.configuration || {};\n                    // NB: peer factories (or whoever they're delegating to) need to support whatever activity\n                    // environment (GW3, HC) we're targeting when they're creating peers\n                    // the manager is env agnostic, the bridge will augment the configuration with whatever's required\n\n                    // NB: also, since peers are requested in two ways (single peer with just its configuration,\n                    // or peer created as part of new activity, where the factory receives the aggregate config of\n                    // all peers, combined from ADD ACTIVITY TYPE and CREATE ACTIVITY), the peer factories need to\n                    // be able to handle both configuration structures intelligently.\n                    configuration.gateway_token = configuration.gateway_token || msg.gateway_token;\n                    configuration.peer_factory = configuration.peer_factory || msg.peer_factory;\n                    const promise = factory({\n                        activityId: msg.activity && msg.activity.id,\n                        activityType: msg.activity && msg.activity.type,\n                        type: msg.configuration && msg.configuration.type,\n                        gwToken: configuration.gateway_token,\n                        configuration\n                    });\n                    if (promise && promise.then && promise.catch) {\n                        promise.catch((err) => this._gw3Session.send(\n                            {\n                                type: gwMmessageError,\n                                request_id: msg.request_id,\n                                reason: err && (err.message || JSON.stringify(err))\n                            }));\n                    }\n                } catch (err) {\n                    this._gw3Session.send(\n                        {\n                            type: gwMmessageError,\n                            request_id: msg.request_id,\n                            reason: err && (err.message || JSON.stringify(err))\n                        });\n                }\n            });\n    }\n\n    private forwardActivityWindowMessagesToEventHandlers() {\n        for (const joinedMessage of [gwMessageActivityJoined, gwMessageJoinedActivity]) {\n            this.subscribe(joinedMessage,\n                (msg: any) => {\n                    const joinedId = (joinedMessage === gwMessageActivityJoined) ? msg.joined_id : msg.peer_id;\n                    const joinedType = (joinedMessage === gwMessageActivityJoined) ? msg.joined_type : msg.peer_type;\n                    const joinedName = (joinedMessage === gwMessageActivityJoined) ? msg.joined_name : msg.peer_name;\n\n                    const entity = new ActivityWindow(\n                        joinedId,\n                        joinedName,\n                        joinedType /* for ACTIVITY JOINED */,\n                        msg.activity_id,\n                        this.getAgmInstance(joinedId),\n                        undefined,\n                        this.generateWindowGetter(joinedId),\n                        undefined);\n\n                    // TODO review - what if it's our activity, do we\n                    // even need to subscribe\n                    if (!this._contextSubscriptions[msg.activity_id]) {\n                        this.subscribeToContext(msg).then(() => {\n                            if (joinedMessage === gwMessageJoinedActivity) {\n                                this._activityJoinedPromiseResolve({});\n                            }\n                        });\n                    } else if (joinedMessage === gwMessageJoinedActivity) {\n                        this._activityJoinedPromiseResolve({});\n                    }\n\n                    // TODO review: we might have the context data here already\n                    // why not update it here instead of waiting for subscribeToContext\n                    this.invokeCallbacks(\n                        this._activityWindowChangeCallbacks,\n                        new EntityEvent<ActivityWindow>(\n                            entity,\n                            new EntityEventContext(EntityEventType.ActivityWindowJoinedActivity)),\n                        joinedMessage);\n\n                });\n        }\n\n        this.subscribe(\n            gwMessageActivityLeft,\n            (msg: any) => {\n                const entity = new ActivityWindow(\n                    msg.left_id,\n                    undefined,\n                    undefined,\n                    null,\n                    this.getAgmInstance(msg.left_id),\n                    undefined,\n                    this.generateWindowGetter(msg.left_id),\n                    undefined);\n\n                this.invokeCallbacks(\n                    this._activityWindowChangeCallbacks,\n                    new EntityEvent<ActivityWindow>(\n                        entity,\n                        new EntityEventContext(EntityEventType.ActivityWindowLeftActivity)),\n                    gwMessageActivityLeft);\n            });\n\n        this.forwardAddedAndRemovedMessagesToEventHandler<PeerCreatedGwMessage, ActivityWindow>(\n            gwMessagePeerCreated,\n            undefined,\n            (msg) => [\n                new ActivityWindow(\n                    msg.created_id,\n                    undefined /* #deleteme TODO: review - we should know the name if any */,\n                    undefined /* #deleteme TODO: review - we should know the type */,\n                    undefined,\n                    undefined,\n                    undefined,\n                    this.generateWindowGetter(msg.created_id),\n                    undefined)],\n            this._activityWindowChangeCallbacks);\n    }\n\n    private getAgmInstance(id: string): Glue42.AGM.Instance {\n        return this._config.agm.servers().find((s) => s.peerId === id || s.windowId === id);\n    }\n\n    private generateWindowGetter(peerId: string): () => Glue42.Windows.GDWindow {\n        return () => {\n            const server = this.getAgmInstance(peerId);\n            if (!server) {\n                return;\n            }\n            const windowId = server.windowId;\n            return this._config.windows.list().filter((w) => w.id === windowId)[0];\n        };\n    }\n\n    private isOverrideTypeDefinition(value: OverrideTypeDefinition | WindowDefinition[]): value is OverrideTypeDefinition {\n        if (typeof value === \"undefined\") {\n            return false;\n        }\n        if ((value as OverrideTypeDefinition).owner) {\n            return true;\n        }\n        return false;\n    }\n}\n","import { EntityEventType } from \"./../contracts/entityEvent\";\nimport Activity from \"./../entities/activity\";\nimport ActivityWindow from \"./../entities/activityWindow\";\n\nimport ActivityManager from \"./../core/activityManager\";\nimport { Logger } from \"./../helpers/logger\";\nimport * as util from \"./../helpers/util\";\n\nimport { WindowDefinition } from \"./../entities/windowDefinition\";\nimport { CloneOptions } from \"../entities/cloneOptions\";\nimport { Callback } from \"../contracts/contracts\";\nimport { AttachedActivityDescriptor } from \"../entities/attachedActivityDescriptor\";\nimport { Glue42 } from \"../../../glue\";\n\nexport interface My {\n\n  activity: Activity;\n\n  window: ActivityWindow;\n\n  context: object;\n\n  updateContext(context: object, callback?: any): Promise<object>;\n\n  setContext(context: object, callback?: any): Promise<object>;\n\n  onActivityJoined(callback: (activity: Activity) => void): void;\n\n  onActivityLeft(callback: (activity: Activity) => void): void;\n\n  onContextChanged(callback: (context: object, delta: object, removed: string[], activity: Activity) => void): void;\n\n  clone(options: CloneOptions, callback: Callback<Activity>): Promise<Activity>;\n\n  attach(activity: Activity | string, tag?: object): Promise<AttachedActivityDescriptor>;\n\n  setFrameColor(color: string, callback: () => void): Promise<Activity>;\n\n  getFrameColor(): string;\n\n  onFrameColorChanged(callback: () => void): void;\n}\n\n/**\n * A lightweight, single activity oriented subset of the API which should be used by most activity applications.\n * Provides access to the activity of your application (my.activity) and shortcuts to the most commonly used methods\n * (e.g. my.createWindow is a shortcut for my.activity.createWindow)\n *\n * @module my\n */\nexport default class ActivityMy implements My {\n\n  public _myAttached: Array<(state: AttachedActivityDescriptor) => void> = [];\n  public _myDetached: Array<(state: AttachedActivityDescriptor) => void> = [];\n  public _myAttachedTo: Array<(activity: Activity, state: AttachedActivityDescriptor) => void> = [];\n  public _myDetachedFrom: Array<(detached: Activity, existing: Activity, state: AttachedActivityDescriptor) => void> = [];\n  public _myActivityFrameColorChanged: Array<(frameColor: string) => void> = [];\n  public _myActivityJoinedCallbacks: Array<(activity: Activity, event: any) => void> = [];\n  public _myActivityRemovedCallbacks: Array<(activity: Activity, event: any) => void> = [];\n  public _myContextUpdateCallbacks: Array<(context: object, delta: object, removed: string[], activity: Activity) => void> = [];\n  public _w: ActivityWindow;\n  public _m: ActivityManager;\n  public _logger: Logger = Logger.Get(this);\n\n  constructor(manager: ActivityManager, windows: any) {\n    this._m = manager;\n    manager.ready()\n      .then((am) => {\n        // Subscribe for events for driving \"my\" logic\n        am.subscribeActivityContextChanged(this._subscribeMyContextChanged.bind(this));\n        am.subscribeWindowEvents(this._subscribeMyWindowEvent.bind(this));\n        am.subscribeActivitiesAttached(this._subscribeActivitiesAttached.bind(this));\n        am.subscribeActivitiesDetached(this._subscribeActivitiesDetached.bind(this));\n        if (windows) {\n          windows.onWindowFrameColorChanged(this._subscribeWindowFrameColorChanged.bind(this));\n        }\n      });\n  }\n\n  /**\n   * The current activity window; can be undefined (if the window is not part of any activity)\n   *\n   * @var {Window} window\n   */\n  public get window(): ActivityWindow {\n    if (util.isUndefinedOrNull(this._w)) {\n      const announcedWindows = this._m.announcedWindows;\n      if (announcedWindows.length > 0) {\n        this._w = announcedWindows[0];\n      }\n    }\n    return this._w;\n  }\n\n  /**\n   * The current activity that the application participates in.\n   * Can be undefined (if currently not part of any activity)\n   *\n   * @var {module:activity} activity\n   */\n  public get activity(): Activity {\n    const myWin = this.window;\n    if (util.isUndefinedOrNull(myWin)) {\n      return undefined;\n    }\n    return myWin.activity;\n  }\n\n  /**\n   * Creates a new window and joins it to the activity\n   *\n   * @function createWindow\n   * @param {string| windowDefinition} windowType The type of the window to be created\n   * @returns {Promise<module:activityWindow>}\n   */\n  public createWindow(windowType: string | WindowDefinition): Promise<ActivityWindow> {\n    return this._m.createWindow(this.activity, windowType);\n  }\n\n  /**\n   * Creates a stacked set of windows and joins them to the\n   *\n   * @function createStackedWindows\n   * @param {string[] | windowDefinition[]} windowTypes The types of the windows to be created\n   * @param {number} timeout\n   * @returns {Promise<module:activityWindow[]>}\n   */\n  public createStackedWindows(windowTypes: Array<string | WindowDefinition>, timeout?: number): Promise<ActivityWindow[]> {\n    return this._m.createStackedWindows(this.activity, windowTypes, timeout);\n  }\n\n  /**\n   * The current activity context. To update use my.updateContext, to replace my.setContext\n   *\n   * @var {object} context\n   */\n  public get context(): object {\n    const activity = this.activity;\n    if (util.isUndefined(activity)) {\n      return {};\n    }\n\n    return activity.context;\n  }\n\n  /**\n   * Updates activity context using the properties from the context argument.\n   * If old context is {a:1, b:2, c:3} and invoking updateContext({b:3, c:null}) will result a context\n   * be {a:1, b:3}\n   *\n   * @function updateContext\n   * @param {object} context\n   * @return {Promise<object>}\n   */\n  public updateContext(context: object, callback?: any): Promise<object> {\n    const activity = this.activity;\n    if (util.isUndefined(activity)) {\n      return new Promise<object>((resolve, reject) => {\n        reject(\"Not in activity\");\n      });\n    }\n\n    return activity.updateContext(context, callback);\n  }\n\n  /**\n   * Replaces the activity context with a new one.\n   *\n   * @function setContext\n   * @param {object} context   The new context\n   * @returns {Promise<Object>}\n   */\n  public setContext(context: object, callback?: any): Promise<object> {\n    const activity = this.activity;\n    if (util.isUndefined(activity)) {\n      return new Promise((resolve, reject) => {\n        reject(\"Not in activity\");\n      });\n    }\n\n    return activity.setContext(context, callback);\n  }\n\n  public onActivityJoined(callback: (activity: Activity) => void) {\n    this._myActivityJoinedCallbacks.push(callback);\n\n    // replay joined event\n    const myWin = this.window;\n    if (!util.isUndefinedOrNull(myWin) && !util.isUndefinedOrNull(myWin.activity)) {\n      callback(myWin.activity);\n    }\n  }\n\n  public onActivityLeft(callback: (activity: Activity) => void) {\n    this._myActivityRemovedCallbacks.push(callback);\n  }\n\n  /**\n   * Subscribe for context updates\n   *\n   * @function onContextChanged\n   * @param {contextChangedHandler} callback Handler function that will receive context related events\n   */\n  public onContextChanged(callback: (context: object, delta: object, removed: string[], activity: Activity) => void) {\n    this._myContextUpdateCallbacks.push(callback);\n\n    // publish initial event\n    const myWin = this.window;\n    if (util.isUndefinedOrNull(myWin)) {\n      return;\n    }\n\n    const activity = myWin.activity;\n    if (util.isUndefinedOrNull(activity)) {\n      return;\n    }\n\n    // NB: either the callback is added before the activity is recorded in the API, or\n    // the activity is recorded before the callback\n    // in the former case, when the activity is seen, the callback will be invoked in _notifyMyContextChanged\n    // in the latter, the callback will be invoked here\n    // in both cases, the callback will be invoked at least once as soon as an activity is recorded\n\n    // see \"long analysis for callback behavior in GW3: several cases\" for full explanation\n\n    callback(activity.context, activity.context, [], activity);\n  }\n\n  public clone(options: CloneOptions, callback: Callback<Activity>): Promise<Activity> {\n    const act = this.activity;\n    return this._m.clone(act, options, callback);\n  }\n\n  public attach(activity: Activity | string, tag?: object): Promise<AttachedActivityDescriptor> {\n    let activityId: string;\n    if (typeof activity === \"string\") {\n      activityId = activity;\n    } else {\n      activityId = activity.id;\n    }\n    return this._m.attachActivities(activityId, this.activity.id, tag);\n  }\n\n  public onActivityAttached(callback: (state: AttachedActivityDescriptor) => void) {\n    this._myAttached.push(callback);\n  }\n\n  public onActivityDetached(callback: (state: AttachedActivityDescriptor) => void) {\n    this._myDetached.push(callback);\n  }\n\n  public onAttachedToActivity(callback: (activity: Activity, state: AttachedActivityDescriptor) => void) {\n    this._myAttachedTo.push(callback);\n  }\n\n  public onDetachedFromActivity(callback: (detached: Activity, existing: Activity, state: AttachedActivityDescriptor) => void)  {\n    this._myDetachedFrom.push(callback);\n  }\n\n  public get attached() {\n    if (!this.activity) {\n      return [];\n    }\n\n    return this.activity.attached;\n  }\n\n  public setFrameColor(color: string, callback: () => void): Promise<Activity> {\n\n    if (this.activity) {\n      return this.activity.setFrameColor(color, callback);\n    } else {\n      return Promise.resolve(null);\n    }\n  }\n\n  public getFrameColor(): string {\n\n    if (this.activity) {\n      return this.activity.getFrameColor();\n    }\n\n    return \"\";\n  }\n\n  public onFrameColorChanged(callback: () => void) {\n    this._myActivityFrameColorChanged.push(callback);\n  }\n\n  private _subscribeMyContextChanged(activity: Activity, context: object, delta: object, removed: string[]) {\n    const myWin = this.window;\n    if (util.isUndefinedOrNull(myWin)) {\n      return;\n    }\n\n    const myActivity = myWin.activity;\n    if (util.isUndefinedOrNull(myActivity)) {\n      return;\n    }\n\n    // ignore events not related to my activity\n    if (activity.id !== myActivity.id) {\n      return;\n    }\n\n    this._notifyMyContextChanged(activity, context, delta, removed);\n  }\n\n  private _subscribeMyWindowEvent(activity: Activity, window: ActivityWindow, event: any) {\n\n    if (util.isUndefinedOrNull(this.window)) {\n      return;\n    }\n\n    // ignore events not related to my window\n    if (this.window.id !== window.id) {\n      return;\n    }\n\n    if (event === EntityEventType.ActivityWindowJoinedActivity) {\n      this._notifyMyWindowEvent(activity, this._myActivityJoinedCallbacks);\n\n      // NB: tick42-contexts doesn't raise automatically an update event on join if the snapshot matches\n      // the currently recorded data\n      // revisited: however, it is pushing an update on subscribe() (which is performed by js-activity)\n      // long analysis for callback behavior in GW3: several cases\n      // 1 client calls onContextChanged before joined-activity arrives\n      // then callback is pushed but onContextChanged callback call is skipped\n      //    1-1 js-activity handles joined-activity first; it calls js-context subscribe\n      //    1-1-1 js-context has not seen the activity so far so it doesn't invoke an update\n      //    however, js-context then handles joined-activity and raises an update\n      //    1-1-2 js-context has seen the activity, so it raises an update\n      //    js-context then handles joined-activity and doesn't raise a second update unless the received snapshot is\n      //    different from the last seen context value (can this even happen?)\n      //    1-2 js-context handles joined-activity first\n      //    since js-activity is not subscribed, whether it raises an update or not, it's not propagated\n      //    js-activity then handles joined-activity, performs a subscribe and js-context raises an update\n      // 2 joined-activity arrives, whatever updates are raised by js-activity's subscribe() or js-context's\n      // message handler are not propagated since the callback is not pushed, client then calls onContextChanged,\n      // and the callback is called inside that\n      // also, the callback cannot be invoked first in 1 then 2 or first 2 then 1\n      // => in all cases, a callback is called exactly once as soon as (it's subscribed && the activity is joined)\n      // (in 1-1-2 it *might* be possible to be called twice, first with a slightly out of date context,\n      // then with the joined-activity snapshot, see \"different from the last seen context value\", but it's unlikely,\n      // and not a real issue anyway)\n      // in the HC case, however, case 1 doesn't work since js-context doesn't raise updates on subscribe() nor\n      // joining the activity (#deleteme TODO LATER MINOR: verify), so we need to raise it ourselves\n\n      // 2017-09-08: final revisit (@vnikolov)\n      // since SBGW_D-163 allows automatic subscription to contexts of pre-existing activities, 1-1-2 no longer works\n      // (we might have already seen the latest state before joined-activity so no update will be raised)\n      // for this reason I'm invoking notifyMyContextChanged unconditionally - so we might have multiple\n      // invocations; if this turns into a problem we might add a guard inside notifyMyContextChanged that\n      // checks we're not raising it twice with the same context value\n      //\n      // we might also get a duplicate raise if the sender of an update is also subscribed to the context\n      // if (this._m.usingHc) {\n      this._notifyMyContextChanged(activity, activity.context, null, null);\n      // }\n\n      // #deleteme TODO LATER MAJOR: what about the cases when we're not watching foreign activity contexts?\n    } else if (event === EntityEventType.ActivityWindowLeftActivity) {\n      this._notifyMyWindowEvent(activity, this._myActivityRemovedCallbacks);\n      // #deleteme TODO LATER MINOR: should we send null update here?\n    }\n  }\n\n  private _notifyMyWindowEvent(activity: Activity, callbackStore: Array<(activity: Activity, event: any) => void>) {\n    callbackStore.forEach((element) => {\n      try {\n        element(activity, event);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _notifyMyContextChanged(activity: Activity, context: object, delta?: object, removed?: string[]) {\n    delta = delta || {};\n    removed = removed || [];\n\n    this._myContextUpdateCallbacks.forEach( (element) => {\n      try {\n        element(context, delta, removed, activity);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _notifyAttached(state: AttachedActivityDescriptor) {\n\n    this._myAttached.forEach((cb) => {\n      try {\n        cb(state);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _notifyDetached(state: AttachedActivityDescriptor) {\n\n    this._myDetached.forEach((cb) => {\n      try {\n        cb(state);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _notifyAttachedTo(state: AttachedActivityDescriptor) {\n\n    this._myAttachedTo.forEach((cb) => {\n      try {\n        cb(this.activity, state);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _notifyDetachedFrom(detached: Activity, existing: Activity, state: AttachedActivityDescriptor) {\n\n    this._myDetachedFrom.forEach((cb) => {\n      try {\n        cb(detached, existing, state);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _subscribeActivitiesAttached(newAct: Activity, state: AttachedActivityDescriptor) {\n    const myWin = this.window;\n    if (util.isUndefinedOrNull(myWin)) {\n      return;\n    }\n\n    const myActivity = myWin.activity;\n    if (util.isUndefinedOrNull(myActivity)) {\n      return;\n    }\n\n    // ignore events not related to my activity\n    if (newAct.id !== myActivity.id) {\n      return;\n    }\n\n    if (state.windowIds.indexOf(myWin.id) >= 0) {\n      this._notifyAttachedTo(state);\n      return;\n    }\n\n    this._notifyAttached(state);\n  }\n\n  private _subscribeActivitiesDetached(newAct: Activity, oldAct: Activity, state: any) {\n    const myWin = this.window;\n    if (util.isUndefinedOrNull(myWin)) {\n      return;\n    }\n\n    const myActivity = myWin.activity;\n    if (util.isUndefinedOrNull(myActivity)) {\n      return;\n    }\n\n    // ignore events not related to my activity\n    if (oldAct.id === myActivity.id) {\n      this._notifyDetached(state);\n    }\n\n    if (newAct.id === myActivity.id) {\n      this._notifyDetachedFrom(newAct, oldAct, state);\n    }\n  }\n\n  private _subscribeWindowFrameColorChanged(window: Glue42.Windows.GDWindow) {\n    const act = this.activity;\n    if (!act) {\n      return;\n    }\n\n    if (!act.owner) {\n      return;\n    }\n\n    if (act.owner.underlyingWindow.id === window.id) {\n      this._myActivityFrameColorChanged.forEach((callback) => {\n        callback(window.frameColor);\n      });\n    }\n  }\n}\n","import {Logger} from \"./logger\";\nimport * as util from \"../helpers/util\";\n/**\n * Class that can be used as a marker for successful completion of a set of events\n * @private\n * @module readyMarker\n */\nexport class ReadyMarker {\n  private _callbacks: Array<(err: any) => void>;\n  private _signals: number;\n  private _error: any;\n  private _logger: Logger;\n  private _name: string;\n\n  /**\n   * Creates new marker\n   * @param name Name of the marker, useful in logging\n   * @param signalsToWait Number of signals(events) that needs to be signaled (completed) before the marker is set as completed\n   */\n  constructor(name: string, signalsToWait: number) {\n    this._logger = Logger.Get(\"ReadyMarker [\" + name + \"]\");\n    this._logger.debug(\"Initializing ready marker for '\" + name + \"' with \" + signalsToWait + \" signals to wait\");\n    if (signalsToWait <= 0) {\n      throw new Error(\"Invalid signal number. Should be > 0\");\n    }\n    this._signals = signalsToWait;\n    this._callbacks = [];\n    this._name = name;\n  }\n\n  /**\n   * Adds a new callback that will be notified when the events are completed (success) or some error happened\n   */\n  public setCallback(callback: (err: any) => void) {\n    if (this.isSet()) {\n      callback(undefined);\n      return;\n    } else if (this.isError()) {\n      callback(this._error);\n      return;\n    }\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Signals for a completion of an event. If this is the last event success callbacks will be called\n   */\n  public signal(message?: string) {\n    this._logger.debug(\"Signaled - \" + message + \" - signals left \" + (this._signals - 1));\n    this._signals--;\n    if (this._signals < 0) {\n      throw new Error(\"Error in ready marker '\" + this._name + \" - signals are \" + this._signals);\n    }\n\n    if (this.isSet()) {\n      this._callbacks.forEach((callback) => {\n        callback(undefined);\n      });\n    }\n  }\n\n  /**\n   * Signals for an error in some of the events. This will notify all callbacks that the marker has failed\n   */\n  public error(error: string) {\n    this._error = error;\n    this._callbacks.forEach((errorCallback) => {\n      errorCallback(error);\n    });\n  }\n\n  /**\n   * Checks if the marker is set (completed)\n   */\n  public isSet() {\n    if (this.isError()) {\n      return false;\n    }\n    return this._signals === 0;\n  }\n\n  /**\n   * Checks if the marker has failed (some of the events has failed)\n   */\n  public isError() {\n    return !util.isUndefined(this._error);\n  }\n\n  /**\n   * Returns the last reported error (undefined if no error)\n   */\n  public getError() {\n    return this._error;\n  }\n}\n","import ActivityEntity from \"../entities/activityEntity\";\nimport {\n  ActivityStatusChangeEventContext,\n  EntityEvent,\n  EntityEventContext,\n  EntityEventType\n} from \"../contracts/entityEvent\";\nimport Activity from \"../entities/activity\";\nimport ActivityWindow from \"../entities/activityWindow\";\nimport { ActivityState } from \"..//contracts/entityEvent\";\n\ndeclare const htmlContainer: any;\n\n/**\n * Collection of ActivityEntities that provides change notifications\n * @module entityCollection\n * @private\n */\nexport class EntityObservableCollection<T extends ActivityEntity> {\n\n  private _items: { [key: string]: T } = {};\n  private _listeners: Array<(item: T, action: EntityEventContext) => void> = [];\n  private _processNew: (entity: T) => void;\n\n  constructor(processNew: (entity: T) => void) {\n    this._processNew = processNew;\n  }\n\n  /**\n   * Adds one item to the collection\n   */\n  public addOne(item: T) {\n    this.add([item]);\n  }\n\n  /**\n   * Adds an array of items to the collection\n   */\n  public add(items: T[]) {\n    items.forEach((element) => {\n      this.process(new EntityEvent<T>(element, new EntityEventContext(EntityEventType.Added)));\n    });\n  }\n\n  /**\n   * Process existing EntityEvent\n   */\n  public process(event: EntityEvent<T>): T {\n\n    const context = event.context;\n    const type = context.type;\n    const entity = event.entity;\n\n    // here we're populating some data which particular implementations (e.g.\n    // GW3) can't provide\n\n    // TODO: extract these cases into external filters\n\n    // activity status change without old status?\n    // grab it from the existing entity\n    if (type === EntityEventType.StatusChange &&\n      !(context as ActivityStatusChangeEventContext).oldStatus) {\n      const act = this._items[entity.id] as any as Activity;\n      if (act) {\n        (context as ActivityStatusChangeEventContext).oldStatus = act.status;\n      }\n    }\n\n    // the GW3 bridge notifies us of possible status changes (it's mostly stateless so\n    // it can't/doesn't distinguish between JOINED ACTIVITY for an activity we already\n    // know about vs a brand new activity. for this reason, we just coalesce status\n    // updates which indicate the same state.\n    if (type === EntityEventType.StatusChange &&\n      (context as ActivityStatusChangeEventContext).oldStatus &&\n      (context as ActivityStatusChangeEventContext).newStatus &&\n      (context as ActivityStatusChangeEventContext).oldStatus.state ===\n      (context as ActivityStatusChangeEventContext).newStatus.state) {\n      context.type = EntityEventType.Updated;\n    }\n\n    // GW3: coalesce multiple joined/left events\n\n    if (typeof htmlContainer === \"undefined\") {\n      if (type === EntityEventType.ActivityWindowJoinedActivity &&\n        this._items[entity.id] &&\n        (this._items[entity.id] as any as ActivityWindow).activity) {\n        context.type = EntityEventType.Updated;\n      }\n      if (type === EntityEventType.ActivityWindowLeftActivity &&\n        this._items[entity.id] &&\n        !(this._items[entity.id] as any as ActivityWindow).activity) {\n        context.type = EntityEventType.Updated;\n      }\n    }\n\n    // update internal collections (adding the entity or updating existing entity). From that\n    // point start using the internalEntity\n    // NB: undefined properties are coalesced, null properties represent removals\n    const internalEntity = this._updateInternalCollections(entity, type, context);\n    this._notifyListeners(internalEntity, context);\n    return internalEntity;\n  }\n\n  /**\n   * Gets all items from the collection.\n   */\n  public get(): T[] {\n    const result = [];\n    for (const key in this._items) {\n      if (this._items.hasOwnProperty(key)) {\n        const element = this._items[key];\n        result.push(element);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Gets item by name/id\n   * @param name  Name/id of the item to get\n   * @returns     Item if found; undefined if not\n   */\n  public getByName(name: string) {\n    // this does not work for some reason\n    // return this._items[name];\n    for (const key in this._items) {\n      if (key === name) {\n        return this._items[key];\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Gets a item if in the collection or waits for it to appear\n   * @param name\n   * @returns {Promise<T>}\n   */\n  public getOrWait(name: string): Promise<T> {\n    return new Promise<T>((resolve) => {\n      const entityAddedHandler = (entity: T) => {\n        if (entity.id !== name) {\n          return;\n        }\n        resolve(entity);\n        this.unsubscribe(entityAddedHandler);\n      };\n      this.subscribe(entityAddedHandler);\n\n      // try to get right away - if not here wait for it to appear\n      const window = this.getByName(name);\n      if (window) {\n        this.unsubscribe(entityAddedHandler);\n        resolve(window);\n        return;\n      }\n    });\n  }\n\n  /**\n   * Subscribes a listener for changes\n   * @param handler Callback for changes\n   */\n  public subscribe(handler: (act: T, action: EntityEventContext) => void): () => void {\n    this._listeners.push(handler);\n    // replay existing items for new subscribers\n    Object.keys(this._items).forEach((key) => {\n      const element = this._items[key];\n      handler(element, new EntityEventContext(EntityEventType.Added.toString()));\n    });\n\n    return () => {\n      this.unsubscribe(handler);\n    };\n  }\n\n  /**\n   *  Unsubscribes a listener\n   */\n  public unsubscribe(handler: (act: T, action: EntityEventContext) => void) {\n    const index = this._listeners.indexOf(handler);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Notify all listeners for some event\n   */\n  private _notifyListeners(entity: T, context: EntityEventContext) {\n    this._listeners.forEach((listener) => {\n      try {\n        listener(entity, context);\n      } catch (e) {\n        return;\n      }\n    });\n  }\n\n  /**\n   * Update internal collections (usually after some kind of modification event has arrived)\n   */\n  private _updateInternalCollections(entity: T, type: EntityEventType, context: any) {\n    const entityAsAny = (entity as any);\n\n    // #deleteme TODO: refactor - currently we apply some rules for each type\n    const isActivityDestroy =\n      (type === EntityEventType.StatusChange &&\n        entityAsAny.status &&\n        entityAsAny.status.state === ActivityState.Destroyed) ||\n      (type === EntityEventType.StatusChange &&\n        context &&\n        context.newStatus &&\n        context.newStatus.state === ActivityState.Destroyed);\n\n    // #deleteme TODO: verify this stuff\n    // windows have two states - removed from activity and closed (TODO: this only works in GD 2.1 and later)\n    const isWindowClose = type === EntityEventType.Closed;\n    const isTypeRemove = type === EntityEventType.Removed && typeof entityAsAny.isIndependent === \"undefined\";\n\n    if (isTypeRemove || isWindowClose || isActivityDestroy) {\n\n      const oldEntity = this._items[entity.id];\n      delete this._items[entity.id];\n      // on remove return the input entity\n      this._processNew(entity);\n      if (oldEntity) {\n        entity._beforeDelete(oldEntity);\n      }\n      return entity;\n    } else {\n      const key = entity.id;\n      // if new object add, otherwise clone object properties\n      if (!this._items.hasOwnProperty(key)) {\n        this._processNew(entity);\n        this._items[entity.id] = entity;\n      } else {\n        this._items[entity.id]._update(entity);\n      }\n    }\n\n    return this._items[entity.id];\n  }\n}\n","﻿/* tslint:disable */\nimport { ActivityContextUpdateHandler, Callback } from \"../contracts/contracts\";\nimport { ActivityStatus } from \"../contracts/activityStatus\";\nimport {\n  ActivityContextChangedEventContext,\n  ActivityStatusChangeEventContext,\n  EntityEvent,\n  EntityEventContext,\n  EntityEventType\n} from \"../contracts/entityEvent\";\n\nimport ActivityType from \"../entities/activityType\";\nimport WindowType from \"../entities/windowType\";\nimport Activity from \"../entities/activity\";\nimport ActivityEntity from \"../entities/activityEntity\";\nimport ActivityWindow from \"../entities/activityWindow\";\nimport WindowSource from \"../entities/windowSource\";\n\nimport { nodeify } from \"../helpers/promiseExtensions\";\nimport { ReadyMarker } from \"../helpers/readyMarker\";\nimport { EntityObservableCollection } from \"../helpers/entityObservableCollection\";\nimport { Logger } from \"../helpers/logger\";\nimport * as util from \"../helpers/util\";\n\nimport { ActivityBridge } from \"../bridges/activityBridge\";\nimport { WindowDefinition } from \"../entities/windowDefinition\";\nimport { WindowBounds } from \"../contracts/windowBounds\";\nimport { CloneOptions } from \"../entities/cloneOptions\";\nimport { AttachedActivityDescriptor } from \"../entities/attachedActivityDescriptor\";\nimport { ActivityDescriptor } from \"../entities/activityDescriptor\";\nimport { ActivityState } from \"../contracts/entityEvent\";\nimport { WindowFactory } from \"../contracts/windowFactory\";\nimport { Glue42 } from \"../../../glue\";\n/* tslint:enable */\n\ntype OverrideTypeDefinition = Glue42.Activities.OverrideTypeDefinition;\n\ndeclare const htmlContainer: any;\n\nexport default class ActivityManager {\n  private _bridge: ActivityBridge;\n  private _readyMarker: ReadyMarker;\n  private _dataReadyMarker: ReadyMarker;\n  private _descriptorsMarker: ReadyMarker;\n\n  private _activityTypes: EntityObservableCollection<ActivityType>;\n  private _windowTypes: EntityObservableCollection<WindowType>;\n  private _activities: EntityObservableCollection<Activity>;\n  private _windows: EntityObservableCollection<ActivityWindow>;\n  private _logger: Logger = Logger.Get(\"activityManager\");\n  private _announcedWindows: ActivityWindow[] = [];\n  private _attachedCallbacks: Array<(newAct: any, descriptor: any) => void> = [];\n  private _detachedCallbacks: Array<(newAct: any, oldAct: Activity, descriptor: any) => void> = [];\n  private _frameColorChangesCallbacks: Array<(act: Activity, frameColor: string) => void> = [];\n  private _windowHandlers: any[][] = [];\n\n  public get usingHc(): boolean {\n    return this._bridge.bridgeType === \"HC\";\n  }\n\n  public get announcedWindows(): ActivityWindow[] {\n    return this._announcedWindows;\n  }\n\n  public set announcedWindows(v: ActivityWindow[]) {\n    throw new Error(\"not allowed\");\n  }\n\n  constructor(bridge: ActivityBridge, autoAnnounce: boolean, windows: any) {\n    this._bridge = bridge;\n    this._activityTypes = new EntityObservableCollection<ActivityType>((e) => this._grabEntity(e));\n    this._windowTypes = new EntityObservableCollection<WindowType>((e) => this._grabEntity(e));\n    this._activities = new EntityObservableCollection<Activity>((e) => this._grabEntity(e));\n    this._windows = new EntityObservableCollection<ActivityWindow>((e) => this._grabEntity(e));\n\n    // signals to wait for - get AT, get WT, get Activities and get Windows\n    this._dataReadyMarker = new ReadyMarker(\"Activity Manager Data\", [\"GetActivityTypes\", \"GetWindowTypes\", \"GetActivities\", \"GetWindows\"].length);\n    this._descriptorsMarker = new ReadyMarker(\"Attached Activities Descriptors\", [\"GetDescriptors\"].length);\n\n    // waiting for activity data first\n\n    // NB: in the GW3 case, we don't have the ability to request data at will\n    // but need wait for delta messages\n    // So GW3Bridge returns empty arrays from the get() calls\n    // We're relying on the fact that the GW3 bridge will wait\n    // until resolving its .ready()\n\n    if (autoAnnounce) {\n      // if auto announce replace the ready marker, so:\n      // 1) wait for data\n      // 2) get descriptors\n      // 3) announce the current window\n\n      this._readyMarker = new ReadyMarker(\"Activity Manager Announce\", [\"Announcement\"].length);\n      this._dataReadyMarker.setCallback((dataErr: any) => {\n        if (dataErr) {\n          this._readyMarker.error(dataErr);\n        }\n\n        this._descriptorsMarker.setCallback((err: any) => {\n\n          if (err) {\n            this._readyMarker.error(err);\n          }\n\n          this._logger.debug(\"Auto announcing window\");\n          // signal no matter if it failed or not\n          this.announceWindow()\n            .then((w) => {\n              // NB: this creates glue.activities.my.window\n              this._announcedWindows.push(w);\n              this._readyMarker.signal(\"Successfully announced window with id '\" + w.id + \"'\");\n            })\n            .catch((errCatch) => {\n              this._logger.debug(\"Will not announce window - \" + errCatch);\n              this._readyMarker.signal();\n            });\n        });\n\n        this.refreshDescriptors();\n      });\n    } else {\n      // TODO: not sure if this still works\n      this._readyMarker = this._dataReadyMarker;\n    }\n\n    this._bridge.onActivitiesAttached((e) => {\n      this._handleActivitiesAttached(e);\n    });\n    this._bridge.onActivitiesDetached((e) => {\n      this._handleActivitiesDetached(e);\n    });\n    this._bridge.onActivityAttachedDescriptorsRefreshed((e) => {\n      this._handleActivityDescriptorsRefreshed(e);\n    });\n    if (windows) {\n      windows.onWindowFrameColorChanged(this._handleWindowFrameColorChanged.bind(this));\n    }\n\n    // initialize the bridge\n    this._bridge.init();\n\n    // NB: there is no race condition here.\n    // Since browser/Node JS is a single-threaded environment, assuming no events on _bridge\n    // fire inside .init(), this subscribe will catch anything that comes between it and the init() call\n    this._subscribeForData();\n\n    // NB: in GW3 case, the initial state messages after a JOIN come in before the JOIN's SUCCESS\n    // message (see https://confluence.tick42.com:8443/display/TD/Global+Gateway+Domain#GlobalGatewayDomain-JOIN)\n    // so the .initReady().then() callback will only get invoked after we've received the initial domain\n    // state. We need to be ready to handle events before that, hence the _subscribeForData() above.\n    // what's more, our own JOINED ACTIVITY will come only after we've sent our READY, hence waiting\n    // for bridge.ready() in the manager's ready()\n\n    // wait for it to become ready and then start getting/subscribing for data\n    this._bridge\n      .initReady()\n      .then((aw) => {\n        this._getInitialData();\n      })\n      .catch((error) => {\n        // tslint:disable-next-line\n        console.log(error);\n      });\n  }\n\n  public ready(callback?: (err: string, manager: ActivityManager) => void): Promise<ActivityManager> {\n    const promise = new Promise<ActivityManager>((resolve, reject) => {\n      this._readyMarker.setCallback(\n        (err) => {\n          if (!err) {\n            resolve(this);\n          } else {\n            reject(this._readyMarker.getError());\n          }\n        });\n    });\n\n    return nodeify(Promise.all([this._bridge.ready(), promise]).then(() => this), callback);\n  }\n\n  /**\n   * @returns All known activity types\n   */\n  public getActivityTypes(): ActivityType[] {\n    return this._activityTypes.get();\n  }\n\n  /**\n   * Gets ActivityType by name\n   * @param name  Name to search for\n   * @returns     If found the @type ActivityType; otherwise undefined\n   */\n  public getActivityType(name: string): ActivityType {\n    return this._activityTypes.getByName(name);\n  }\n\n  /**\n   * Registers a new activity type\n   * @param activityTypeName      The name of the activity type to be created\n   * @param ownerWindowType       The type of the owner window or a WindowDefinition for the owner window\n   * @param helperWindowTypes     Types of helper windows (or WindowDefinitions for helper windows) for that activity type\n   * @param config                (HC only, deprecated) Layout config\n   * @param description           (HC only, deprecated) Description for the new activity type\n   * @param callback              (Optional) Callback for results - if not specified the method will return a promise\n   */\n  public registerActivityType(\n    activityTypeName: string,\n    ownerWindowType: string | WindowDefinition,\n    helperWindowTypes?: string[] | WindowDefinition[],\n    config?: any,\n    description?: string,\n    callback?: Callback<ActivityType>): Promise<ActivityType> {\n    const promise = new Promise<ActivityType>((resolve, reject) => {\n\n      // activityTypeName checks\n      if (util.isUndefinedOrNull(activityTypeName)) {\n        reject(\"activityTypeName argument can not be undefined\");\n        return;\n      }\n      if (!util.isString(activityTypeName)) {\n        reject(\"activityTypeName should be string\");\n        return;\n      }\n      // check if type is already defined\n      const actType = this.getActivityType(activityTypeName);\n      if (!util.isUndefinedOrNull(actType)) {\n        reject(\"Activity type '\" + activityTypeName + \"' already exists\");\n        return;\n      }\n\n      // ownerWindowType checks\n      let ownerDefinition: WindowDefinition;\n      if (util.isUndefined(ownerWindowType)) {\n        reject(\"Owner window type can not be undefined\");\n        return;\n      }\n      if (util.isString(ownerWindowType)) {\n        ownerDefinition = { type: (ownerWindowType as string), name: \"\", isIndependent: false, arguments: {} };\n      } else {\n        ownerDefinition = (ownerWindowType as WindowDefinition);\n      }\n\n      // helperWindowTypes checks\n      const helperDefinitions: WindowDefinition[] = [];\n      if (!util.isUndefined(helperWindowTypes) && util.isArray(helperWindowTypes)) {\n        // tslint:disable-next-line\n        for (const index in helperWindowTypes) {\n          const item = helperWindowTypes[index];\n          if (util.isString(item)) {\n            const definition = {\n              type: (item as string),\n              name: \"\",\n              isIndependent: false,\n              arguments: {},\n              relativeTo: \"\",\n              relativeDirection: \"\",\n              windowStyleAttributes: {}\n            };\n            helperDefinitions.push(definition);\n          } else {\n            helperDefinitions.push(item as WindowDefinition);\n          }\n        }\n      }\n\n      // redirect to bridge\n      this._bridge\n        .registerActivityType(activityTypeName,\n          ownerDefinition,\n          helperDefinitions,\n          config,\n          description)\n        .then((activityType) => {\n          // add to from collections\n          this._grabEntity(activityType);\n          resolve(activityType);\n        })\n        .catch((error) => {\n          reject(error);\n        });\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Unregister existing activity type\n   * @param type The name of the activity type to be removed\n   */\n  public unregisterActivityType(type: string, callback?: Callback<any>) {\n    const promise = new Promise<ActivityType>((resolve, reject) => {\n      // check if type is defined\n      const actType = this.getActivityType(type);\n      if (util.isUndefined(actType)) {\n        reject(\"Activity type '\" + type + \"' does not exists\");\n        return;\n      }\n      this._bridge.unregisterActivityType(type).then(() => resolve(actType), reject);\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Initiates a new activity from the given type.\n   * @param activityType  The ActivityType to initiate\n   * @param context       The initial context of the activity\n   * @param callback      Callback for result\n   * @param configuration Optional configuration passed to window/peer factories for the new activity's participants\n   * @returns             Promise for activity\n   */\n  public initiate(activityType: string, context?: object, callback?: Callback<Activity>, configuration?: WindowDefinition[] | OverrideTypeDefinition): Promise<Activity> {\n    const promise = new Promise<Activity>((resolve, reject) => {\n      // check if type is defined\n      const actType = this.getActivityType(activityType);\n      if (util.isUndefined(actType)) {\n        reject(\"Activity type '\" + activityType + \"' does not exists\");\n        return;\n      }\n\n      this._bridge\n        .initiateActivity(activityType, context, configuration)\n        .then((actId) => {\n\n          this._activities\n            .getOrWait(actId)\n            .then((act: Activity) => {\n              resolve(act);\n            })\n            .catch((err) => reject(err));\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n    return nodeify(promise, callback);\n  }\n\n  public subscribeActivityTypeEvents(handler: (act: ActivityType, action: string) => void) {\n    this._activityTypes.subscribe((at, context) => {\n      handler(at, context.type);\n    });\n  }\n\n  /**\n   * @returns All known WindowTypes\n   */\n  public getWindowTypes(): WindowType[] {\n    return this._windowTypes.get();\n  }\n\n  /**\n   * Gets WindowType by name\n   * @param name  The name of the type @type WindowType\n   * @returns     WindowType if found; undefined otherwise\n   */\n  public getWindowType(name: string): WindowType {\n    return this._windowTypes.getByName(name);\n  }\n\n  /**\n   * Registers a factory for a given WindowType. The factory will be called once window of that type is requested\n   * @param windowType   Window type that will be constructed from the factory. Can be a string (name of the window type)\n   * or object that has name, description properties\n   * @param factoryMethod      The factory that will construct Windows of that type\n   * @param description\n   * @param callback\n   * @param configuration\n   * @returns {}\n   */\n  public registerWindowFactory(\n    windowType: any,\n    factoryMethod: WindowFactory,\n    callback?: any): Promise<any> {\n    const promise = new Promise<any>((resolve, reject) => {\n      if (util.isUndefinedOrNull(windowType)) {\n        reject(\"no windowType specified\");\n        return;\n      }\n\n      if (util.isObject(windowType)) {\n        windowType = windowType.getName();\n      } else if (!util.isString(windowType)) {\n        reject(\"windowType should be string or object that has getName method\");\n        return;\n      }\n\n      this._bridge\n        .registerWindowFactory(windowType, factoryMethod)\n        .then((v) => {\n          resolve(v);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Unregisters all factories for a given WindowType.\n   * @param windowType   Window type that is constructed from the factory.\n   * @param callback\n   * @returns {}\n   */\n  public unregisterWindowFactory(windowType: string, callback?: any): Promise<any> {\n    const promise = new Promise<any>((resolve, reject) => {\n      if (util.isUndefinedOrNull(windowType)) {\n        reject(\"no windowType specified\");\n        return;\n      }\n\n      if (!util.isString(windowType)) {\n        reject(\"windowType should be a string\");\n        return;\n      }\n\n      this._bridge\n        .unregisterWindowFactory(windowType)\n        .then((v) => {\n          resolve(v);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * @returns All started activities\n   * @param activityType Can be a string or @type ActivityType. If string a new activityType will be created using the string for name.\n   * @returns Array of Activity objects\n   */\n  public getActivities(activityType?: string | ActivityType | string[] | ActivityType[]): Activity[] {\n    let act = this._activities.get();\n    act = act.filter((a) => a._ownerId);\n    if (!activityType) {\n      return act;\n    }\n    let types: any = activityType;\n    if (util.isString(activityType)) {\n      types = [activityType];\n    } else if (activityType instanceof ActivityType) {\n      types = [activityType.name];\n    } else if (activityType instanceof Array) {\n      // TODO check if string array or array of ActivityTypes\n    } else {\n      throw new Error(\"Invalid input argument 'activityType' = \" + activityType);\n    }\n\n    return act.filter((at: Activity) => {\n      const type = at.type;\n      return util.some(types, (t: ActivityType) => {\n        return type.id === t.id;\n      });\n    });\n  }\n\n  /**\n   * Returns Activity by ID\n   */\n  public getActivityById(id: string): Activity {\n    return this._activities.getByName(id);\n  }\n\n  /**\n   * Initialises activity for the current window - by doing this the window is announced as activity aware to the other participants\n   * @param windowType            Type of window\n   * @param activityWindowId      The id of the window that was created\n   * @returns {}                  Promise for an activity window (joined to an activity, if the activity creation fails the promise will be rejected)\n   */\n  public announceWindow(activityWindowId?: string, windowType?: string): Promise<ActivityWindow> {\n    const promise = new Promise<ActivityWindow>((resolve, reject) => {\n\n      // get the announcement info from the bridge (e.g. the context in HC) - this will be used if no arguments passed\n      const announcementInfo = this._bridge.getAnnouncementInfo();\n      if (util.isUndefined(activityWindowId)) {\n        activityWindowId = announcementInfo.activityWindowId;\n      }\n      if (util.isUndefined(windowType)) {\n        windowType = announcementInfo.activityWindowType;\n      }\n      if (util.isUndefinedOrNull(windowType)) {\n        throw new Error(\"Can not announce - unknown windowType\");\n      }\n\n      const activityId = announcementInfo && announcementInfo.activityId;\n\n      // We cover two cases here:\n      // * no activityWindowId supplied (neither in arguments or announcement info) - in that case we register new window by type. Most of the time this is the case when an independent window is created outside activity\n      // * activityWindowId supplied - window created as part of activity creation\n\n      // NB: in GW3, windows are created standalone, and receive 'JOINED' after they send a 'READY'\n      // so we always go in 'if' case, not 'else'\n      if (util.isUndefinedOrNull(activityWindowId)) {\n        this._logger.debug(\"Registering window with type:'\" + windowType + \"', name:'\" + announcementInfo.activityWindowName + \"', ind.:'\" + announcementInfo.activityWindowIndependent + \"'\");\n        // register new window created outside activity\n        this._bridge.registerWindow(windowType, announcementInfo.activityWindowName, announcementInfo.activityWindowIndependent)\n          .then(this._windows.getOrWait.bind(this._windows))\n          .then((w: any) => {\n            if (activityId) {\n              return this._activities.getOrWait(activityId).then((_: any) => w);\n            } else {\n              return w;\n            }\n          })\n          .then((w: any) => {\n            resolve(w);\n          })\n          .catch((err) => {\n            this._logger.error(err);\n          });\n\n      } else {\n        // announce new window created in an activity creation process\n        this._logger.debug(\"Announcing window with id '\" + activityWindowId + \"' and type '\" + windowType + \"'\");\n\n        // check if the window is already created -\n        const currentWindow = this._windows.getByName(activityWindowId);\n        if (!util.isUndefinedOrNull(currentWindow)) {\n          this._logger.debug(\"Window with id '\" + activityWindowId + \"' already announced - reusing the window\");\n          resolve(currentWindow);\n          return;\n        }\n\n        // window events handler\n        const windowEventHandler = (a: Activity, w: ActivityWindow, e: any) => {\n          if (activityWindowId === w.id) {\n            if (e === EntityEventType.ActivityWindowJoinedActivity) {\n              const activity = w.activity;\n              if (util.isUndefined(activity)) {\n                reject(\"UNDEFINED ACTIVITY\");\n              }\n              this._logger.trace(\"Got joined event for id '\" + activityWindowId + \"'\");\n              resolve(w);\n              this.unsubscribeWindowEvents(windowEventHandler);\n            }\n          }\n        };\n\n        this.subscribeWindowEvents(windowEventHandler);\n        this._logger.trace(\"Waiting for joined event for id '\" + activityWindowId + \"'\");\n        this._bridge.announceWindow(windowType, activityWindowId);\n      }\n    });\n    return promise;\n  }\n\n  /**\n   * Allows you to subscribe for windows events, e.g. window type registered\n   * @param handler   The handler to receive notifications\n   * @returns {}\n   */\n  public subscribeWindowTypeEvents(handler: (act: WindowType, event: string) => void) {\n    this._windowTypes.subscribe((wt, context) => {\n      handler(wt, context.type);\n    });\n  }\n\n  /**\n   * Subscribe for activity status events\n   * @param handler Handler function that will receive status notifications\n   * @returns {}\n   */\n  public subscribeActivityEvents(handler: (activity: Activity, newStatus: ActivityStatus, oldStatus: ActivityStatus) => void): () => void {\n    return this._activities.subscribe((act, context) => {\n      if (context.type === EntityEventType.StatusChange) {\n        const p = (context as ActivityStatusChangeEventContext);\n        handler(act, p.newStatus, p.oldStatus);\n      }\n\n      // implicitly leave the activity on destroy\n      if (context.type === EntityEventType.Removed ||\n        (context.type === EntityEventType.StatusChange &&\n          (context as ActivityStatusChangeEventContext).newStatus.getState() === ActivityState.Destroyed)) {\n        for (const window of this._windows.get()) {\n          if (window.activity && window.activity.id === act.id) {\n            this._windows.process(new EntityEvent<ActivityWindow>(window, new EntityEventContext(EntityEventType.ActivityWindowLeftActivity)));\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * Allows you to subscribe for windows events, e.g. window joining to activity\n   * @param handler   The handler to receive notifications\n   * @returns {}\n   */\n  public subscribeWindowEvents(handler: (activity: Activity, window: ActivityWindow, event: any) => void): () => void {\n    const wrappingHandler = (window: ActivityWindow, context: any) => {\n      let eventType = context.type;\n      if (eventType === EntityEventType.Added) {\n        // rename added to opened (because added is misleading - semantically it's the opposite of remove);\n        eventType = \"opened\";\n      }\n      handler(window.activity, window, eventType);\n    };\n    this._windowHandlers.push([handler, wrappingHandler]);\n    return this._windows.subscribe(wrappingHandler);\n  }\n\n  public unsubscribeWindowEvents(handler: (activity: Activity, window: ActivityWindow, event: any) => void) {\n    const found = this._windowHandlers.find((pair) => pair[0] === handler);\n    if (found) {\n      this._windowHandlers.splice(this._windowHandlers.indexOf(found), 1);\n      this._windows.unsubscribe(found[1]);\n    }\n  }\n\n  /**\n   * Creates a new window from a given type and joins it to an activity\n   *\n   * @param activity      Activity to join the window to\n   * @param windowType    The window type to join (string or window definition)\n   * @param callback      (Optional) Result callback\n   * @returns             Promise for ActivityWindow\n   */\n  public createWindow(activity: Activity, windowTypeOrConfiguration: string | WindowDefinition | any, callback?: Callback<ActivityWindow>): Promise<ActivityWindow> {\n    const promise = new Promise<ActivityWindow>((resolve, reject) => {\n      if (util.isUndefinedOrNull(windowTypeOrConfiguration)) {\n        reject(\"windowType is undefined\");\n      }\n\n      let windowDefinition: WindowDefinition;\n      if (util.isString(windowTypeOrConfiguration)) {\n        windowDefinition = { type: (windowTypeOrConfiguration as string), name: \"\", isIndependent: false, arguments: {} };\n      } else if (windowTypeOrConfiguration instanceof WindowType) {\n        windowDefinition = {\n          type: (windowTypeOrConfiguration as any).type || windowTypeOrConfiguration.id,\n          name: windowTypeOrConfiguration.name || (windowTypeOrConfiguration as any).type || windowTypeOrConfiguration.id,\n          isIndependent: false\n        };\n      } else {\n        windowDefinition = (windowTypeOrConfiguration as WindowDefinition);\n      }\n\n      let relativeToWindow: string | WindowSource;\n      if (!util.isUndefinedOrNull(windowDefinition.relativeTo)) {\n        relativeToWindow = windowDefinition.relativeTo;\n        if (typeof relativeToWindow === \"string\") {\n          const windows = this.getWindows({ type: relativeToWindow as string });\n          if (!util.isUndefinedOrNull(windows) && windows.length > 0) {\n            windowDefinition.relativeTo = windows[0].id;\n          }\n        } else if (!util.isUndefinedOrNull(relativeToWindow.type)) {\n          const windows = this.getWindows({ type: relativeToWindow.type });\n          if (!util.isUndefinedOrNull(windows) && windows.length > 0) {\n            windowDefinition.relativeTo = windows[0].id;\n          }\n        } else if (!util.isUndefinedOrNull(relativeToWindow.windowId)) {\n          windowDefinition.relativeTo = relativeToWindow.windowId;\n        }\n      }\n\n      this._bridge.createWindow(activity && activity.id, windowDefinition)\n        .then((wid) => {\n\n          this._logger.debug(\"Window created, waiting for window entity with id \" + wid);\n          const handler = (window: ActivityWindow, context: EntityEventContext) => {\n            // wait until the window has activity property (this means it was joined)\n            if (window.id === wid && (!activity || window.activity)) {\n              this._logger.debug(\"Got entity window with id \" + wid);\n              resolve(window);\n              this._windows.unsubscribe(handler);\n            }\n          };\n\n          // if we can not get the window right away, wait for event\n          this._windows.subscribe(handler);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Creates relative windows from a given types and joins them to an activity\n   *\n   * @param activity               Activity to join relative windows to\n   * @param relativeWindowTypes    Relative window types to join (string or window definitions array)\n   * @param callback               (Optional) Result callback\n   * @returns                      Promise for ActivityWindow\n   */\n  public createStackedWindows(activity: Activity, relativeWindowTypes: Array<string | WindowDefinition>, timeout?: number, callback?: Callback<ActivityWindow[]>): Promise<ActivityWindow[]> {\n    const promise = new Promise<ActivityWindow[]>((resolve, reject) => {\n      if (util.isUndefinedOrNull(activity)) {\n        reject(\"activity is undefined\");\n      }\n      if (util.isUndefinedOrNull(relativeWindowTypes)) {\n        reject(\"relativeWindowTypes is undefined\");\n      }\n\n      if (!Array.isArray(relativeWindowTypes)) {\n        reject(\"relativeWindowTypes has to be array\");\n      }\n      if (util.isUndefinedOrNull(timeout)) {\n        timeout = 20000; // default timeout: 20 seconds\n      }\n\n      const relativeWindows: WindowDefinition[] = [];\n      relativeWindowTypes.forEach((element) => {\n        let windowDefinition: WindowDefinition;\n        if (util.isString(element)) {\n          windowDefinition = { type: (element as string), name: \"\", isIndependent: false, arguments: {} };\n        } else {\n          windowDefinition = (element as WindowDefinition);\n        }\n\n        let relativeToWindow: WindowSource;\n        if (!util.isUndefinedOrNull(windowDefinition.relativeTo)) {\n          // this can not be string, converted in the prev. layer\n          relativeToWindow = windowDefinition.relativeTo as WindowSource;\n          if (!util.isUndefinedOrNull(relativeToWindow.type)) {\n            windowDefinition.relativeTo = relativeToWindow.type;\n          } else if (!util.isUndefinedOrNull(relativeToWindow.windowId)) {\n            const windows = this.getWindows({ id: relativeToWindow.windowId });\n            if (!util.isUndefinedOrNull(windows) && windows.length > 0) {\n              windowDefinition.relativeTo = windows[0].type.name;\n              windowDefinition.useExisting = true;\n            }\n          }\n        }\n\n        relativeWindows.push(windowDefinition);\n      });\n\n      this._bridge.createStackedWindows(activity.id, relativeWindows, timeout)\n        .then((wid) => {\n          const activityWindows: ActivityWindow[] = [];\n          const alreadyCreated: string[] = [];\n          const handler = function(window: ActivityWindow, context: EntityEventContext) {\n            // wait until the window has activity property (this means it was joined)\n            if (wid.indexOf(window.id) >= 0 && alreadyCreated.indexOf(window.id) < 0 && window.activity) {\n              this._logger.debug(\"Got entity window with id \" + wid);\n              activityWindows.push(window);\n              alreadyCreated.push(window.id);\n\n              if (activityWindows.length === wid.length) {\n                resolve(activityWindows);\n                this._windows.unsubscribe(handler);\n              }\n            }\n          }.bind(this);\n\n          // if we can not get the window right away, wait for event\n          this._windows.subscribe(handler);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Joins a new window from a given type to the activity\n   *\n   * @param activity      Activity to join the window to\n   * @param window        The window to join\n   * @param callback      (Optional) Result callback\n   * @returns             Promise for ActivityWindow\n   */\n  public addWindowToActivity(activity: Activity, window: ActivityWindow, callback?: Callback<ActivityWindow>): Promise<ActivityWindow> {\n    const toReturn = this._bridge.joinActivity(activity.id, window.id)\n      .then(() => window);\n    nodeify(toReturn, callback);\n    return toReturn;\n  }\n\n  /**\n   * Removes a window from the activity\n   *\n   * @param activity  Activity to remove the window from\n   * @param           The window to remove\n   * @param           (Optional) Result callback\n   * @returns         Promise for ActivityWindow\n   */\n  public leaveWindowFromActivity(activity: Activity, window: ActivityWindow, callback?: Callback<ActivityWindow>): Promise<ActivityWindow> {\n    const toReturn = this._bridge.leaveActivity(activity.id, window.id)\n      .then(() => window);\n    nodeify(toReturn, callback);\n    return toReturn;\n  }\n\n  /**\n   * Replaces the activity context\n   * @param activity  Activity\n   * @param context   The new context\n   * @param callback  (Optional) Result callback\n   * @returns         Promise for Activity\n   */\n  public setActivityContext(activity: Activity, context: object, callback?: Callback<Activity>): Promise<Activity> {\n    const promise = new Promise<Activity>((resolve, reject) => {\n      if (util.isUndefinedOrNull(activity)) {\n        reject(\"activity can not be null\");\n      }\n\n      // TODO: duplication with updateActivityContext\n\n      // DONE: verify is the change visible here when 'updateActivityContext' resolves?\n      this._bridge\n        .updateActivityContext(activity, context, true)\n        .then((_) => {\n          resolve(activity);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Updates activity context using the properties from  context argument.\n   * If old context is {a:1, b:2, c:3} and invoking updateContext({b:3, c:null}) will result a context\n   * be {a:1, b:3}\n   *\n   * @param activity\n   * @param context\n   * @param callback\n   */\n  public updateActivityContext(activity: Activity, context: any, callback?: Callback<Activity>): Promise<Activity> {\n    const promise = new Promise<Activity>((resolve, reject) => {\n      if (util.isUndefinedOrNull(activity)) {\n        reject(\"activity can not be null\");\n      }\n\n      const removedKeys = [];\n      for (const key in context) {\n        if (context.hasOwnProperty(key) && context[key] === null) {\n          removedKeys.push(key);\n        }\n      }\n      for (const removedKey of removedKeys) {\n        delete context[removedKey];\n      }\n\n      this._bridge\n        .updateActivityContext(activity, context, false, removedKeys)\n        .then((_) => {\n          // DONE: verify is the change already visible here when 'updateActivityContext' resolves?\n          resolve(activity);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Subscribe for activity context update events\n   *\n   * @param activity  Activity\n   * @param handler   Handler function that will receive context related events\n   * @returns {}\n   */\n  public subscribeActivityContextChanged(handler: ActivityContextUpdateHandler) {\n    this._activities.subscribe((act, context) => {\n      if (context.type === EntityEventType.ActivityContextChange) {\n        const updateContext = context as ActivityContextChangedEventContext;\n        handler(act, updateContext.context, updateContext.updated, updateContext.removed);\n      }\n    });\n  }\n\n  /**\n   * Stops an activity\n   * @returns {}\n   */\n  public stopActivity(activity: Activity, callback?: Callback<boolean>): Promise<boolean> {\n    const promise = this._bridge.stopActivity(activity);\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Returns activity windows based on some filter. If no filter supplied all activity windows are returned.\n   * @param filter  Filter that\n   * @returns Array of ActivityWindows that match the filter object\n   */\n  public getWindows(filter: { id?: string, type?: string, name?: string, activityId?: string }): ActivityWindow[] {\n    if (util.isUndefined(filter)) {\n      return this._windows.get();\n    }\n\n    if (!util.isUndefined(filter.id)) {\n      return [this._windows.getByName(filter.id)];\n    }\n\n    const allWindows = this._windows.get();\n\n    return allWindows.filter((w) => {\n\n      if (!util.isUndefined(filter.type) && w.type.id !== filter.type) {\n        return false;\n      }\n\n      if (!util.isUndefined(filter.name) && w.name !== filter.name) {\n        return false;\n      }\n\n      if (!util.isUndefined(filter.activityId)) {\n        if (util.isUndefinedOrNull(w.activity)) {\n          return false;\n        }\n\n        if (w.activity.id !== filter.activityId) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n\n  public getWindowBounds(id: string): Promise<WindowBounds> {\n    return this._bridge.getWindowBounds(id);\n  }\n\n  public setWindowBounds(id: string, bounds: WindowBounds, callback?: Callback<ActivityWindow>): Promise<any> {\n    const promise = new Promise<any>((resolve, reject) => {\n      this._bridge.setWindowBounds(id, bounds)\n        .then(() => resolve())\n        .catch((err) => reject(err));\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  public closeWindow(id: string): Promise<any> {\n    return this._bridge.closeWindow(id);\n  }\n\n  public activateWindow(id: string, focus: boolean): Promise<any> {\n    return this._bridge.activateWindow(id, focus);\n  }\n\n  public setWindowVisibility(id: string, visible: boolean): Promise<any> {\n    return this._bridge.setWindowVisibility(id, visible);\n  }\n\n  public clone(activity: Activity, cloneOptions: CloneOptions, callback?: Callback<Activity>) {\n    const promise = new Promise<any>((resolve, reject) => {\n      if (!activity) {\n        reject(\"activity can not be null\");\n      }\n\n      this._bridge.cloneActivity(activity.id, cloneOptions)\n        .then((activityId) => {\n          this._activities\n            .getOrWait(activityId)\n            .then((act: Activity) => {\n              resolve(act);\n            })\n            .catch((err) => reject(err));\n        })\n        .catch((err) => reject(err));\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  public attachActivities(from: string, to: string, tag?: object, callback?: Callback<AttachedActivityDescriptor>): Promise<AttachedActivityDescriptor> {\n\n    tag = tag || {};\n\n    const promise = new Promise<AttachedActivityDescriptor>((resolve, reject) => {\n\n      const fromActivity = this._activities.getByName(from);\n      if (!fromActivity) {\n        reject(\"can not find activity with id \" + from);\n        return;\n      }\n\n      const toActivity = this._activities.getByName(to);\n      if (!toActivity) {\n        reject(\"can not find activity with id \" + to);\n        return;\n      }\n\n      return this._bridge.attachActivities(from, to, tag)\n        .then((data: any) => {\n          const newActId = data.to;\n          const state = data.descriptor;\n          const allStates = data.descriptors;\n\n          this._activities.getOrWait(newActId).then((act) => {\n            act._updateDescriptors(allStates);\n            const stateWrapped = act.attached.filter((u) => u.ownerId === state.ownerId)[0];\n\n            resolve(stateWrapped);\n          });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  public detachActivities(\n    activityId: string,\n    descriptor: ActivityDescriptor,\n    callback?: Callback<Activity>): Promise<Activity> {\n    const promise = new Promise<Activity>((resolve, reject) => {\n      return this._bridge.detachActivities(activityId, descriptor)\n        .then(/*(params)*/() => {\n          // #deleteme TODO: deal with this\n          const oldActId: string = undefined; // params.oldActivityId;\n          const newActId: string = undefined; // params.newActivityId;\n          const descriptors: any = undefined; // params.descriptors;\n\n          this._activities\n            .getOrWait(oldActId)\n            .then((oldAct: Activity) => {\n              oldAct._updateDescriptors(descriptors);\n\n              this._activities\n                .getOrWait(newActId)\n                .then((newAct: Activity) => {\n                  resolve(newAct);\n                });\n            })\n            .catch((err) => reject(err));\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  public subscribeActivitiesAttached(callback: any) {\n    this._attachedCallbacks.push(callback);\n  }\n\n  public subscribeActivitiesDetached(callback: any) {\n    this._detachedCallbacks.push(callback);\n  }\n\n  public subscribeActivityFrameColorChanged(callback: () => void) {\n    this._frameColorChangesCallbacks.push(callback);\n  }\n\n  /** Assigns a manager to a given ActivityEntity */\n  private _grabEntity(entity: ActivityEntity) {\n    entity._manager = this;\n  }\n\n  private _getInitialData() {\n    this._logger.debug(\"Request initial data...\");\n\n    // NB: there's no possibility for duplicate entities from events that have come\n    // in between _bridge.init() and _bridge.ready()'s resolve, since the ObservableCollections\n    // coalesce items by id.\n\n    this._bridge.getActivityTypes()\n      .then((at) => {\n        this._activityTypes.add(at);\n        this._dataReadyMarker.signal(\"Got act types\");\n      })\n      .catch((error) => {\n        this._logger.error(error);\n        this._dataReadyMarker.error(\"Can not initialize ActivityManager - error getting activity types -\" + error);\n      });\n\n    this._bridge.getWindowTypes()\n      .then((wt) => {\n        this._windowTypes.add(wt);\n        this._dataReadyMarker.signal(\"Got window types\");\n      })\n      .catch((error) => {\n        this._logger.error(error);\n        this._dataReadyMarker.error(\"Can not initialize ActivityManager - error getting window types  \" + error);\n      });\n\n    this._bridge.getActivities()\n      .then((ac) => {\n        this._activities.add(ac);\n        this._dataReadyMarker.signal(\"Got activities\");\n      })\n      .catch((error) => {\n        this._logger.error(error);\n        this._dataReadyMarker.error(\"Can not initialize ActivityManager - error getting activity instances -\" + error);\n      });\n\n    this._bridge.getActivityWindows()\n      .then((aw) => {\n        this._windows.add(aw);\n        this._dataReadyMarker.signal(\"Got windows\");\n      })\n      .catch((error) => {\n        this._logger.error(error);\n        this._dataReadyMarker.error(\"Can not initialize ActivityManager - error getting activity windows -\" + error);\n      });\n  }\n\n  private _subscribeForData() {\n    this._logger.debug(\"Subscribe for data...\");\n\n    // NB: there's no possibility for duplicate entities from events that have come\n    // in between _bridge.init() and _bridge.ready()'s resolve, since the ObservableCollections\n    // coalesce items by id.\n\n    this._bridge.onActivityTypeStatusChange((event) => {\n      this._activityTypes.process(event);\n    });\n\n    this._bridge.onWindowTypeStatusChange((event) => {\n      this._windowTypes.process(event);\n    });\n\n    this._bridge.onActivityWindowChange((event) => {\n      this._windows.process(event);\n    });\n  }\n\n  private _handleActivitiesAttached(data: any) {\n\n    const newActId = data.to;\n    const descriptor = data.descriptor;\n    const descriptors = data.descriptors;\n\n    this._activities.getOrWait(newActId).then((act) => {\n      act._updateDescriptors(descriptors);\n      const descriptorAsObjectFromAPI = act.attached.filter((u) => u.ownerId === descriptor.ownerId)[0];\n\n      this._attachedCallbacks.forEach((callback) => {\n        try {\n          callback(act, descriptorAsObjectFromAPI);\n        } catch (err) {\n          return;\n        }\n      });\n\n    });\n  }\n\n  private _handleActivitiesDetached(data: any) {\n    const oldActId = data.oldActivityId;\n    const newActId = data.newActivityId;\n    const descriptors = data.descriptors;\n    const descriptor = data.descriptor;\n\n    this._activities.getOrWait(oldActId).then((oldAct) => {\n\n      oldAct._updateDescriptors(descriptors);\n\n      this._activities.getOrWait(newActId).then((newAct) => {\n\n        this._detachedCallbacks.forEach((callback) => {\n          try {\n            callback(newAct, oldAct, descriptor);\n          } catch (err) {\n            return;\n          }\n        });\n      });\n    });\n  }\n\n  private _handleActivityDescriptorsRefreshed(data: any) {\n    const id = data.id;\n    const descriptors = data.descriptors;\n\n    const act = this._activities.getByName(id);\n    if (act) {\n      act._updateDescriptors(descriptors);\n    }\n  }\n\n  private refreshDescriptors() {\n    this._bridge.getAttachedDescriptors()\n      .then((map: any) => {\n\n        // populate descriptors\n        if (map) {\n          Object.keys(map).forEach((key: string) => {\n            const actId = key;\n            const descriptors = map[key];\n\n            const act = this._activities.getByName(actId);\n            if (act) {\n              act._updateDescriptors(descriptors);\n            }\n          });\n        }\n\n        this._descriptorsMarker.signal(\"Successfully got descriptors\");\n      })\n      .catch((err) => {\n        this._descriptorsMarker.error(\"failed to get descriptors - \" + err);\n      });\n  }\n\n  private _handleWindowFrameColorChanged(win: Glue42.Windows.GDWindow) {\n    if (!win.activityId) {\n      return;\n    }\n\n    const act = this._activities.getByName(win.activityId);\n    if (!act) {\n      return;\n    }\n\n    // notify for the owner only\n    if (!act.owner) {\n      return;\n    }\n\n    if (act.owner.underlyingWindow.id !== win.id) {\n      return;\n    }\n\n    this._frameColorChangesCallbacks.forEach((callback) => {\n      try {\n        callback(act, win.frameColor);\n      } catch (e) {\n        return;\n      }\n    });\n  }\n}\n","import ActivityType from \"./../entities/activityType\";\nimport WindowType from \"./../entities/windowType\";\nimport * as util from \"./../helpers/util\";\nimport ActivityManager from \"./../core/activityManager\";\nimport My from \"./activityMyAPI\";\nimport { WindowDefinition } from \"./../entities/windowDefinition\";\nimport { Callback } from \"./../contracts/contracts\";\nimport Activity from \"./../entities/activity\";\nimport ActivityWindow from \"./../entities/activityWindow\";\nimport { ActivityStatus } from \"./../contracts/activityStatus\";\nimport { WindowFactory } from \"../contracts/windowFactory\";\nimport { Glue42 } from \"../../../glue\";\n\nexport interface ManagementAPI {\n  activityTypes: Glue42.Activities.ActivityTypesAPI;\n  windowTypes: Glue42.Activities.WindowTypesAPI;\n  windows: Glue42.Activities.WindowingAPI;\n  instances: Glue42.Activities.InstancesAPI;\n\n  onAttached(callback: () => void): void;\n  onDetached(callback: () => void): void;\n  onActivityFrameColorChanged(callback: () => void): void;\n}\n\nexport class ActivityManagementAPI implements ManagementAPI {\n\n  public _m: ActivityManager;\n\n  public _my: My;\n\n  public activityTypes: Glue42.Activities.ActivityTypesAPI;\n\n  public windowTypes: Glue42.Activities.WindowTypesAPI;\n\n  public windows: Glue42.Activities.WindowingAPI;\n\n  public instances: Glue42.Activities.InstancesAPI;\n\n  constructor(manager: ActivityManager, my: My) {\n    this._m = manager;\n    this._my = my;\n\n    this.activityTypes = {\n      get: this._getActivityTypesWrapper.bind(this),\n      register: this._m.registerActivityType.bind(this._m),\n      unregister: this._m.unregisterActivityType.bind(this._m),\n      subscribe: this._m.subscribeActivityTypeEvents.bind(this._m),\n      unsubscribe: undefined,\n      initiate: this._m.initiate.bind(this._m)\n    };\n\n    this.windowTypes = {\n      get: this._getWindowTypesWrapper.bind(this),\n      registerFactory: this._m.registerWindowFactory.bind(this._m),\n      unregisterFactory: this._m.unregisterWindowFactory.bind(this._m),\n      subscribe: this._m.subscribeWindowTypeEvents.bind(this._m),\n      unsubscribe: undefined\n    };\n\n    this.windows = {\n      get: this._m.getWindows.bind(this._m),\n      subscribe: this._m.subscribeWindowEvents.bind(this._m),\n      announce: this._m.announceWindow.bind(this._m),\n      unsubscribe: undefined,\n      create: this._m.createWindow.bind(this._m)\n    };\n\n    this.instances = {\n      get: this._m.getActivities.bind(this._m),\n      subscribe: this._m.subscribeActivityEvents.bind(this._m),\n      unsubscribe: undefined\n    };\n  }\n\n  public onAttached(callback: () => void) {\n    this._m.subscribeActivitiesAttached(callback);\n  }\n\n  public onDetached(callback: () => void) {\n    this._m.subscribeActivitiesDetached(callback);\n  }\n\n  public onActivityFrameColorChanged(callback: () => void) {\n    this._m.subscribeActivityFrameColorChanged(callback);\n  }\n\n  private _getActivityTypesWrapper(name?: string): ActivityType[] | ActivityType {\n    if (util.isUndefined(name)) {\n      return this._m.getActivityTypes();\n    }\n    return this._m.getActivityType(name);\n  }\n\n  private _getWindowTypesWrapper(name?: string): WindowType[] | WindowType {\n    if (util.isUndefined(name)) {\n      return this._m.getWindowTypes();\n    }\n    return this._m.getWindowType(name);\n  }\n}\n","import ActivityManager from \"./../core/activityManager\";\nimport My from \"./activityMyAPI\";\nimport { nodeify } from \"./../helpers/promiseExtensions\";\nimport { ActivityManagementAPI, ManagementAPI } from \"./activityManagementAPI\";\nimport { ActivityAGM } from \"../core/activityAGM\";\n\nexport interface API {\n\n  aware: boolean;\n\n  inActivity: boolean;\n\n  my: My;\n\n  agm: ActivityAGM;\n\n  all: ManagementAPI;\n\n  ready(callback?: (api: API) => void): Promise<API>;\n\n  getAvailableFrameColors(): string[];\n}\n\n/**\n * The entry points of activities API - accessible from glue.activities\n *\n * @module activities\n */\nexport class ActivityAPI implements API {\n\n  public _mgr: ActivityManager;\n  public _my: My;\n\n /**\n  * Extended API that provides access to all running activities and windows and available activity and window types\n  *\n  * @var {module:all} all\n  */\n public all: ManagementAPI;\n\n  constructor(manager: ActivityManager, my: My) {\n    this._mgr = manager;\n    this._my = my;\n    this.all = new ActivityManagementAPI(manager, my);\n  }\n\n  /**\n   * The entry point for your activity code.\n   *\n   * @function ready\n   * @returns {Promise<module:activities>} A promise for activity API\n   */\n  public ready(callback?: any): Promise<API> {\n    const promise = new Promise<any>((resolve, reject) => {\n      this._mgr.ready()\n        .then(() => {\n          resolve(this);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * A lightweight, single activity oriented subset of the API which should be used by most activity applications\n   *\n   * @var {module:my} my\n   */\n  public get my(): My {\n    return this._my;\n  }\n\n  /**\n   * True if the current window is activity aware - meaning that the window has been created as\n   * an activity participant - either a helper or an independent window.\n   * Check this after the API is ready.\n   *\n   * @var {bool} aware\n   */\n  public get aware(): boolean {\n    return this._my.window !== undefined;\n  }\n\n  /**\n   * Returns true if the current window is activity aware and is currently participating in activity\n   *\n   * @var {bool} inActivity\n   */\n  public get inActivity(): boolean {\n    return this.aware && this._my.activity !== undefined;\n  }\n\n  /**\n   * Defines an Activity-specific version of the AGM API which:\n   * * restricts method registrations to activity-only windows\n   * * restricts method discovery and invocation to activity-only methods, unless you explicitly specify otherwise\n   * Other than that, the API is pretty much the same.\n   *\n   * @var  {module:activityAGM} agm\n   *\n   */\n  public get agm(): ActivityAGM {\n    if (!this.aware) {\n      // no agm if not activity aware\n      return undefined;\n    }\n    if (!this.inActivity) {\n      // if we're not in activity no\n      return new ActivityAGM(null);\n    }\n\n    return this._my.activity.agm;\n  }\n\n  /**\n   * Returns a list of frame colors that can be used as activity frame colors\n   *\n   * @returns {string[]}\n   */\n  public getAvailableFrameColors(): string[] {\n    // TODO - not available in GD3\n    return [];\n  }\n}\n","import GW3Bridge from \"./bridges/gw3Bridge\";\n\nimport My from \"./API/activityMyAPI\";\nimport ActivityManager from \"./core/activityManager\";\n\nimport { ActivityBridge } from \"./bridges/activityBridge\";\n\nimport { ActivityConfig } from \"./activityConfig\";\nimport { ActivityAPI } from \"./API/activityAPI\";\nimport { ActivityAGM } from \"./core/activityAGM\";\nimport { Logger } from \"./helpers/logger\";\nimport * as util from \"./helpers/util\";\n\nimport { Glue42Core } from \"@glue42/core\";\n\nimport { nodeify } from \"./helpers/promiseExtensions\";\n\n/**\n * Activity context update handler - used when we want to subscribe for context changes in a specific activity\n *\n * @callback contextChangedHandler\n * @param {Object} context The full context of the activity after the update\n * @param {Object} delta The delta (contains the added/removed keys at top level)\n * @param {string[]} removed  Array of keys that were removed from context\n * @param {module:activity} activity The activity instance that owns the context\n *\n */\n\n/**\n * @callback windowEventHandler Handler for ActivityWindow events - e.g window joined to activity, window removed from\n * activity\n * @param {module:activity} activity\n * @param {module:activityWindow} window\n * @param {string} event 'joined' or 'removed'\n */\n\n/**\n * @callback activityStatusChangeHandler Handler for activity status changed events\n * @param {module:activity} activity\n * @param {activityStatus} newStatus\n * @param {activityStatus} oldStatus\n *\n */\n\n/**\n * @typedef {Object} windowDefinition\n * @property {string} type\n * @property {string} name\n * @property {Object} arguments\n */\n\n/**\n * @typedef {Object} bounds\n * @param {number} top\n * @param {number} left\n * @param {number} width\n * @param {number} height\n *\n */\n\n/**\n * @typedef {Object} agmInstance\n * @param {string} application\n * @param {string} pid\n * @param {string} machine\n * @param {string} user\n * @param {string} environment\n * @param {string} region\n */\n\n// Factory function for activity API\nexport class ActivityModule {\n    public static checkIsUsingGW3Implementation(connection: Glue42Core.Connection.API) {\n        return connection.protocolVersion === 3;\n    }\n\n    private _api: ActivityAPI;\n    private _isUsingGW3Implementation: boolean;\n    private _isUsingHCImplementation: boolean;\n    private _readyPromise: Promise<ActivityModule>;\n\n    get api(): ActivityAPI {\n        return this._api;\n    }\n\n    set api(value: ActivityAPI) {\n        this._api = value;\n    }\n\n    constructor(config: ActivityConfig) {\n        if (!config) {\n            throw new Error(\"config can not be null\");\n        }\n\n        // set log level\n        if (!util.isUndefined(config.logLevel)) {\n            Logger.Level = config.logLevel;\n        }\n\n        if (!util.isUndefinedOrNull(config.logger)) {\n            Logger.GlueLogger = config.logger;\n        }\n\n        // choose the correct bridge\n        let bridge: ActivityBridge;\n        this._isUsingHCImplementation = config.gdMajorVersion === 2;\n        this._isUsingGW3Implementation = ActivityModule.checkIsUsingGW3Implementation(config.connection);\n\n        if (this._isUsingHCImplementation) {\n            throw new Error(\"GD2 not supported\");\n        } else if (this._isUsingGW3Implementation) {\n            bridge = new GW3Bridge(config.connection as Glue42Core.Connection.API, config.logger, config.contexts, config);\n        } else {\n            throw new Error(\"Unable to instantiate activity bridge implementation\");\n        }\n\n        if (!bridge) {\n            throw new Error(\"A bridge to native activity is needed to create activity lib.\");\n        }\n\n        ActivityAGM.AGM = config.agm;\n        const activityManager = new ActivityManager(bridge, !config.disableAutoAnnounce, config.windows);\n        const my = new My(activityManager, config.windows);\n        this._api = new ActivityAPI(activityManager, my);\n        this._readyPromise = activityManager.ready().then((_) => this);\n    }\n\n    public get isUsingHCImplementation(): boolean {\n        return this._isUsingHCImplementation;\n    }\n\n    public get isUsingGW3Implementation(): boolean {\n        return this._isUsingGW3Implementation;\n    }\n\n    public ready(callback?: (err: string, module: ActivityModule) => void): Promise<void> {\n        return nodeify(this._readyPromise, callback) as any as Promise<void>;\n    }\n}\n","\"use strict\";\r\nfunction createRegistry(options) {\r\n    if (options && options.errorHandling\r\n        && typeof options.errorHandling !== \"function\"\r\n        && options.errorHandling !== \"log\"\r\n        && options.errorHandling !== \"silent\"\r\n        && options.errorHandling !== \"throw\") {\r\n        throw new Error(\"Invalid options passed to createRegistry. Prop errorHandling should be [\\\"log\\\" | \\\"silent\\\" | \\\"throw\\\" | (err) => void], but \" + typeof options.errorHandling + \" was passed\");\r\n    }\r\n    var _userErrorHandler = options && typeof options.errorHandling === \"function\" && options.errorHandling;\r\n    var callbacks = {};\r\n    function add(key, callback) {\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey) {\r\n            callbacksForKey = [];\r\n            callbacks[key] = callbacksForKey;\r\n        }\r\n        callbacksForKey.push(callback);\r\n        return function () {\r\n            var allForKey = callbacks[key];\r\n            if (!allForKey) {\r\n                return;\r\n            }\r\n            allForKey = allForKey.reduce(function (acc, element, index) {\r\n                if (!(element === callback && acc.length === index)) {\r\n                    acc.push(element);\r\n                }\r\n                return acc;\r\n            }, []);\r\n            callbacks[key] = allForKey;\r\n        };\r\n    }\r\n    function execute(key) {\r\n        var argumentsArr = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            argumentsArr[_i - 1] = arguments[_i];\r\n        }\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey || callbacksForKey.length === 0) {\r\n            return [];\r\n        }\r\n        var results = [];\r\n        callbacksForKey.forEach(function (callback) {\r\n            try {\r\n                var result = callback.apply(undefined, argumentsArr);\r\n                results.push(result);\r\n            }\r\n            catch (err) {\r\n                results.push(undefined);\r\n                _handleError(err, key);\r\n            }\r\n        });\r\n        return results;\r\n    }\r\n    function _handleError(exceptionArtifact, key) {\r\n        var errParam = exceptionArtifact instanceof Error ? exceptionArtifact : new Error(exceptionArtifact);\r\n        if (_userErrorHandler) {\r\n            _userErrorHandler(errParam);\r\n            return;\r\n        }\r\n        var msg = \"[ERROR] callback-registry: User callback for key \\\"\" + key + \"\\\" failed: \" + errParam.stack;\r\n        if (options) {\r\n            switch (options.errorHandling) {\r\n                case \"log\":\r\n                    return console.error(msg);\r\n                case \"silent\":\r\n                    return;\r\n                case \"throw\":\r\n                    throw new Error(msg);\r\n            }\r\n        }\r\n        console.error(msg);\r\n    }\r\n    function clear() {\r\n        callbacks = {};\r\n    }\r\n    function clearKey(key) {\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey) {\r\n            return;\r\n        }\r\n        delete callbacks[key];\r\n    }\r\n    return {\r\n        add: add,\r\n        execute: execute,\r\n        clear: clear,\r\n        clearKey: clearKey\r\n    };\r\n}\r\n;\r\ncreateRegistry.default = createRegistry;\r\nmodule.exports = createRegistry;\r\n//# sourceMappingURL=index.js.map","export function objectValues(source: {[key: string]: any}): any[] {\n    if (!source) {\n        return [];\n    }\n    return Object.keys(source).map((key) => source[key]);\n}\n\nexport function objectClone(obj: {[key: string]: any}): any {\n    let result;\n    try {\n        result = JSON.parse(JSON.stringify(obj || {}));\n    } catch (error) {\n        result = {};\n    }\n\n    return result;\n}\n","import * as AgmNames from \"./const/agm-names\";\nimport { default as CallbackRegistryFactory, CallbackRegistry } from \"callback-registry\";\nimport { Glue42 } from \"../../glue\";\nimport { ContextParam, InstanceProps, AppProps } from \"./types\";\nimport AppManagerImpl from \"./app-manager\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { objectClone } from \"./helper\";\n\nexport default class ApplicationImpl implements Glue42.AppManager.Application {\n\n    private _registry: CallbackRegistry = CallbackRegistryFactory();\n\n    // Additional properties of the Application\n    private _props: AppProps;\n\n    constructor(private _appManager: AppManagerImpl, private _name: string, private _agm: Glue42Core.AGM.API) {\n\n        // TODO: Replace string events with constants. The string declaration of the registry event name should only ever appear once. Ever. Period.\n\n        // subscribe for events from app-manager\n        _appManager.onInstanceStarted((instance) => {\n            if (instance.application && instance.application.name !== this._name) {\n                return;\n            }\n\n            this._registry.execute(\"instanceStarted\", instance);\n        });\n\n        _appManager.onInstanceStopped((instance) => {\n            if (instance.application && instance.application.name !== this._name) {\n                return;\n            }\n\n            this._registry.execute(\"instanceStopped\", instance);\n        });\n\n        _appManager.onAppRemoved((app) => {\n            if (app.name !== this._name) {\n                return;\n            }\n\n            this._registry.execute(\"appRemoved\", app);\n        });\n\n        _appManager.onAppChanged((app) => {\n            if (app.name !== this._name) {\n                return;\n            }\n\n            this._registry.execute(\"appChanged\", app);\n        });\n\n        _appManager.onAppAvailable((app) => {\n            if (app.name !== this._name) {\n                return;\n            }\n\n            this._registry.execute(\"appAvailable\", app);\n        });\n\n        _appManager.onAppUnavailable((app) => {\n            if (app.name !== this._name) {\n                return;\n            }\n\n            this._registry.execute(\"appUnavailable\", app);\n        });\n    }\n\n    get name(): string { return this._name; }\n    get title(): string { return this._props.Title; }\n    get version(): string { return this._props.Version; }\n    get autoStart(): boolean { return this._props.AutoStart; }\n    get isShell(): boolean { return this._props.IsShell; }\n    get caption(): string { return this._props.Caption; }\n    get hidden(): boolean { return this._props.IsHidden; }\n    get container(): string { return this._props.ApplicationName; }\n    get activityType(): string { return this._props.ActivityType; }\n    get activityWindowType(): string { return this._props.ActivityWindowType; }\n    get windowSettings(): { [key: string]: any } {\n        if (!this._props.Arguments) {\n            return {};\n        }\n        return objectClone(this._props.Arguments);\n    }\n    get allowMultiple(): boolean { return this._props.AllowMultiple; }\n    get available(): boolean { return this._props.IsReady || false; }\n    get icon(): string { return this._props.Icon; }\n    get iconURL(): string { return this._props.IconUrl; }\n    get sortOrder(): number { return this._props.SortOrder; }\n    get userProperties(): { [key: string]: any } {\n        if (!this._props.UserProperties) {\n            return {};\n        }\n        return objectClone(this._props.UserProperties);\n    }\n    get isActivity(): boolean {\n        return this._props.ActivityType !== undefined && this._props.ActivityType !== \"\";\n    }\n\n    get configuration(): Glue42.AppManager.LegacyAppConfigProperties {\n        return {\n            autoStart: this._props.AutoStart,\n            caption: this._props.Caption,\n            hidden: this._props.IsHidden,\n            container: this._props.ApplicationName,\n            activityType: this._props.ActivityType,\n            allowMultiple: this._props.AllowMultiple\n        };\n    }\n\n    get instances() {\n        return this._appManager.instances().filter((instance: Glue42.AppManager.Instance) => instance.application.name === this._name);\n    }\n\n    get type() {\n        return this._props.Type;\n    }\n\n    get mode() {\n        if (!this._props) {\n            // no info about the app\n            return \"unknown\";\n        }\n\n        // GD3 - we always have Mode from the stream object\n        if (this._props.Mode && typeof this._props.Mode === \"string\") {\n            return this._props.Mode.toLowerCase() as Glue42.Windows.WindowMode;\n        }\n\n        // GD2\n        // return unknown for activity applications\n        if (this.isActivity) {\n            return \"unknown\";\n        }\n\n        // check definition -> hc.args.mode\n        if (this._props.Arguments && this._props.Arguments.mode && typeof this._props.Arguments.mode === \"string\") {\n            return this._props.Arguments.mode.toLowerCase() as Glue42.Windows.WindowMode;\n        }\n\n        // if no hc.args.mode, check hc.WindowStyleAttributes\n        let styleAttributes = this._props.WindowStyleAttributes;\n        if (styleAttributes) {\n            // WindowStyleAttributes is not a valid JSON, we will need to find mode in the string\n            styleAttributes = styleAttributes.split(\" \").join(\"\");\n            const searchFor = \"mode:\\\"\";\n            const modeIndex = styleAttributes.indexOf(searchFor);\n            if (modeIndex !== -1) {\n                const startModeIndex = modeIndex + searchFor.length;\n                const stopModeIndex = styleAttributes.indexOf(\"\\\"\", startModeIndex);\n                const style = styleAttributes.substr(startModeIndex, stopModeIndex - startModeIndex);\n                if (style && typeof style === \"string\") {\n                    return style.toLowerCase() as Glue42.Windows.WindowMode;\n                }\n            }\n        }\n\n        // default mode for GD2\n        return \"flat\";\n    }\n\n    public updateFromProps(props: AppProps) {\n        if (!this._props) {\n            this._props = { Name: props.Name };\n        }\n\n        Object.keys(props).forEach((key) => {\n            (this._props as any)[key] = (props as any)[key];\n        });\n    }\n\n    public start(context?: ContextParam, options?: Glue42.AppManager.ApplicationStartOptions): Promise<Glue42.AppManager.Instance> {\n        const name = this._name;\n        const startTimeout: number = 10000;\n        return new Promise<Glue42.AppManager.Instance>((resolve, reject) => {\n            options = options || {};\n            context = context || {};\n            const waitForAGMInstance = true;\n\n            const waitForApplicationInstance = (id: string) => {\n                // fetch from the current list in app-manager\n                const check = (): Glue42.AppManager.Instance => {\n                    const filtered = this._appManager.instances().filter((i: Glue42.AppManager.Instance) => i.id === id);\n                    let result: Glue42.AppManager.Instance;\n                    // GD2 check - in case of activities we have 2 instances with the same id\n                    if (filtered.length === 2) {\n                        result = filtered[0].isActivityInstance ? filtered[0] : filtered[1];\n                    } else {\n                        result = filtered[0];\n                    }\n                    if (result && waitForAGMInstance) {\n                        if (result.agm) {\n                            return result;\n                        } else {\n                            // if no agm, return undefined so we keep waiting\n                            return undefined;\n                        }\n                    }\n\n                    return result;\n                };\n\n                let unsub: () => void;\n                // reject after some timeout\n                const timeout = setTimeout(() => {\n                    if (unsub) {\n                        unsub();\n                    }\n                    reject(\"timeout\");\n                }, startTimeout);\n\n                const waitFunc = (i: Glue42.AppManager.Instance) => {\n                    if (i.id !== id) {\n                        return;\n                    }\n                    if (unsub) {\n                        unsub();\n                        unsub = undefined;\n                    }\n                    clearTimeout(timeout);\n                    // schedule - we need this because there might be more than one\n                    // instance with the same id (activity case) - so this handler\n                    // will kick for the very first\n                    setTimeout(() => {\n                        resolve(check());\n                    }, 1);\n                };\n\n                if (waitForAGMInstance) {\n                    unsub = this._appManager.onInstanceAgmServerReady(waitFunc);\n                } else {\n                    // if not there subscribe for instance events\n                    unsub = this._appManager.onInstanceStarted(waitFunc);\n                }\n\n                // try to find it in the current list\n                const instances: Glue42.AppManager.Instance = check();\n                if (instances) {\n                    if (unsub) {\n                        unsub();\n                        unsub = undefined;\n                    }\n                    clearTimeout(timeout);\n                    resolve(instances);\n                }\n            };\n\n            this._agm.invoke(AgmNames.StartApplicationMethodName,\n                {\n                    Name: name,\n                    Context: context,\n                    Options: options\n                },\n                \"best\",\n                {\n                    methodResponseTimeoutMs: startTimeout\n                },\n                (result) => {\n                    const acsResult: InstanceProps = result.returned && result.returned.Instance_0\n                        ? result.returned.Instance_0\n                        : result.returned;\n\n                    if (acsResult && acsResult.Id) {\n                        if (this._appManager.mode === \"startOnly\") {\n                            // we're in startOnly mode, no stream, so we will simulate the instance\n                            // based on the data received from GD\n                            const instance = this._appManager.handleInstanceStarted(acsResult);\n                            resolve(instance);\n                        } else {\n                            // we received instance from ACS, let's wait until it appears on the stream\n                            waitForApplicationInstance(acsResult.Id);\n                        }\n                    } else {\n                        // we haven't received instance from ACS - this might happen if the app does not\n                        // support tracking instances (e.g. we start internet explorer with some url)\n                        resolve(undefined);\n                    }\n                },\n                (err: any) => {\n                    reject(err);\n                });\n        });\n    }\n\n    public onInstanceStarted(callback: (instance: Glue42.AppManager.Instance) => any): void {\n        this._registry.add(\"instanceStarted\", callback);\n    }\n\n    public onInstanceStopped(callback: (instance: Glue42.AppManager.Instance) => any): void {\n        this._registry.add(\"instanceStopped\", callback);\n    }\n\n    public onAvailable(callback: (app: Glue42.AppManager.Application) => any): void {\n        this._registry.add(\"appAvailable\", callback);\n    }\n\n    public onUnavailable(callback: (app: Glue42.AppManager.Application) => any): void {\n        this._registry.add(\"appUnavailable\", callback);\n    }\n\n    public onChanged(callback: (app: Glue42.AppManager.Application) => any): void {\n        this._registry.add(\"appChanged\", callback);\n    }\n\n    public onRemoved(callback: (app: Glue42.AppManager.Application) => any): void {\n        this._registry.add(\"appRemoved\", callback);\n    }\n}\n","export const ShutdownMethodName = \"T42.ACS.Shutdown\";\nexport const RestartMethodName = \"T42.ACS.Restart\";\n\nexport const FeedackMethodName = \"T42.ACS.Feedback\";\n\nexport const GetConfigurationRegionMethodName = \"T42.ACS.GetConfigurationRegion\";\nexport const SetConfigurationRegionMethodName = \"T42.ACS.SetConfigurationRegion\";\n\nexport const GetUserMethodName = \"T42.ACS.GetUser\";\nexport const GetBranchesMethodName = \"T42.ACS.GetBranches\";\nexport const GetCurrentBranchMethodName = \"T42.ACS.GetCurrentBranch\";\nexport const SetCurrentBranchMethodName = \"T42.ACS.SetCurrentBranch\";\n\nexport const GetFunctionalEntitlementMethodName = \"T42.ACS.GetFunctionalEntitlement\";\nexport const CanIMethodName = \"T42.ACS.CanI\";\n\nexport const StartApplicationMethodName = \"T42.ACS.StartApplication\";\nexport const StopApplicationMethodName = \"T42.ACS.StopApplication\";\nexport const ActivateApplicationMethodName = \"T42.ACS.ActivateApplication\";\nexport const RunApplicationMethodName = \"T42.ACS.RunApplication\";\n\nexport const OnEventMethodName = \"T42.ACS.OnEvent\";\n\nexport const GetApplicationsMethodName = \"T42.ACS.GetApplications\";\n","import * as AgmNames from \"./const/agm-names\";\nimport { default as CallbackRegistryFactory, CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport { ContextParam, InstanceProps, WindowContext, AgmInstanceProps } from \"./types\";\nimport AppManagerImpl from \"./app-manager\";\nimport { Glue42 } from \"../../glue\";\nimport { Glue42Core } from \"@glue42/core\";\n\nexport default class InstanceImpl implements Glue42.AppManager.Instance {\n\n    public onAgmReady = this._addToRegistry(\"agmReady\");\n\n    public onStopped = this._addToRegistry(\"stopped\");\n\n    private _registry: CallbackRegistry = CallbackRegistryFactory();\n\n    private _startUpContext: WindowContext;\n    private _title: string;\n    private _isActivityInstance: boolean;\n    private _activityId: string;\n    private _inActivity: boolean;\n    private _agmInstance: Partial<Glue42Core.AGM.Instance>;\n    private _unsubscribeInstanceAgmServerReady: UnsubscribeFunction;\n    private _unsubscribeInstanceStopped: UnsubscribeFunction;\n\n    constructor(private _id: string,\n                private _appName: string,\n                private _appManager: AppManagerImpl,\n                private _agm: Glue42Core.AGM.API,\n                private _activities: Glue42.Activities.API,\n                private _windows: Glue42.Windows.API,\n                startFailed?: boolean\n    ) {\n        if (startFailed) {\n            return;\n        }\n\n        this._unsubscribeInstanceStopped = this._appManager.onInstanceStopped((instance: Glue42.AppManager.Instance) => {\n            if (instance.id !== this._id) {\n                return;\n            }\n\n            this._registry.execute(\"stopped\", instance);\n        });\n\n        this._unsubscribeInstanceAgmServerReady = this._appManager.onInstanceAgmServerReady((instance) => {\n            if (instance.id !== this._id) {\n                return;\n            }\n\n            this._registry.execute(\"agmReady\", instance);\n        });\n    }\n\n    get id(): string { return this._id; }\n\n    get application(): Glue42.AppManager.Application { return this._appManager.application(this._appName); }\n\n    get activity(): Glue42.Activities.Activity {\n        if (!this._activities) {\n            throw new Error(\"This method requires glue.activities library to be enabled.\");\n        }\n        return this._activities.all.instances.get()\n            .filter((activityInstance: Glue42.Activities.Activity) => activityInstance.id === this._activityId)[0];\n    }\n\n    get activityInstances(): Glue42.AppManager.Instance[] {\n        return this._appManager.instances()\n            .filter((i) => i.context && (i.context.activityId === this._activityId));\n    }\n\n    get activityOwnerInstance(): Glue42.AppManager.Instance {\n        return this._appManager.instances()\n            .filter((instance) => {\n                if (instance.window && instance.window.context) {\n                    const instWinCntx = instance.window.context as WindowContext;\n                    if (instWinCntx._t42 && instWinCntx._t42.activityIsOwner) {\n                        return true;\n                    }\n                }\n                return false;\n            })[0];\n    }\n\n    get window(): Glue42.Windows.GDWindow {\n        if (!this._windows) {\n            throw new Error(\"This method requires glue.windows library to be enabled.\");\n        }\n\n        let win = this._windows.list().filter((w) => w.id === this._id)[0];\n        if (!win && this.activity && this.activityOwnerInstance) {\n            // This is covering GD3 activity instance\n            win = this.activityOwnerInstance.window;\n        }\n\n        return win;\n    }\n\n    get context(): WindowContext { return this._startUpContext; }\n\n    get title(): string { return this._title; }\n\n    get isActivityInstance(): boolean { return this._isActivityInstance; }\n\n    get activityId(): string { return this._activityId; }\n\n    get inActivity(): boolean { return this._inActivity; }\n\n    get isSingleWindowApp(): boolean { return !this._inActivity; }\n\n    get agm(): Partial<Glue42Core.AGM.Instance> {\n        return this._agmInstance;\n    }\n\n    public updateFromProps(props: InstanceProps): void {\n        this._startUpContext = props.Context;\n        this._title = props.Title;\n        this._isActivityInstance = false;\n        if (props.ActivityId && props.ActivityId !== \"\") {\n            this._activityId = props.ActivityId;\n            this._isActivityInstance = true;\n        }\n        if (!this._activityId && this._startUpContext && this._startUpContext.activityId) {\n            this._activityId = this._startUpContext.activityId;\n        }\n        this._inActivity = Boolean(this._activityId);\n\n        this.updateAgmInstanceFromProps(props);\n    }\n\n    public updateAgmInstanceFromProps(props: InstanceProps) {\n        if (!props.AgmServers) {\n            return;\n        }\n\n        if (props.GD3) {\n            const agmInstances: Glue42Core.AGM.Instance[] = props.AgmServers as Glue42Core.AGM.Instance[];\n            if (agmInstances) {\n                this._agmInstance = agmInstances[0];\n            }\n        } else {\n            const gdAgmServers: { [key: string]: AgmInstanceProps } = props.AgmServers as { [key: string]: AgmInstanceProps };\n            const propsAgmServer = Object.keys(gdAgmServers)[0];\n            if (!propsAgmServer) {\n                return;\n            }\n            const propsAgm = gdAgmServers[propsAgmServer];\n            this._agmInstance = {\n                machine: propsAgm.machineName,\n                user: propsAgm.userName,\n                environment: propsAgm.environment,\n                application: propsAgm.applicationName,\n            };\n        }\n    }\n\n    public stop(): Promise<void> {\n        return new Promise((resolve, reject) => {\n            const unsubscribe = this._appManager.onInstanceStopped((instance) => {\n                if (instance.id === this._id) {\n                    unsubscribe();\n                    resolve();\n                }\n            });\n\n            this._agm.invoke(\n                AgmNames.StopApplicationMethodName,\n                {\n                    Name: this._appName,\n                    Id: this._id\n                })\n                .then(() => {\n                    if (this._appManager.mode === \"startOnly\") {\n                        this._appManager.handleInstanceStopped({\n                            Name: this._appName,\n                            Id: this.id,\n                            Context: undefined,\n                            Title: undefined,\n                            ActivityId: undefined,\n                            AgmServers: undefined\n                        });\n                        // in startOnly mode, resolve stop as soon as we receive\n                        resolve();\n                    }\n                })\n                .catch((err: any) => reject(err));\n        });\n    }\n\n    public activate(): Promise<Glue42Core.AGM.InvocationResult<any>> {\n        return this._agm.invoke(AgmNames.ActivateApplicationMethodName, { Name: this._appName, Id: this._id });\n    }\n\n    public done() {\n\n        // remove all handlers\n        this._registry.clear();\n        // remove subscriptions\n        this._unsubscribeInstanceAgmServerReady();\n        this._unsubscribeInstanceStopped();\n    }\n\n    private _addToRegistry(key: string) {\n        return (callback: (instance: Glue42.AppManager.Instance) => any) => {\n            this._registry.add(key, callback);\n        };\n    }\n}\n","import ApplicationImpl from \"./application\";\nimport { Glue42 } from \"../../glue\";\nimport { AppProps, InstanceProps } from \"./types\";\nimport { default as CallbackRegistryFactory, CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport InstanceImpl from \"./instance\";\nimport { Glue42Core } from \"@glue42/core\";\n\nexport default class AppManagerImpl implements Glue42.AppManager.AppManager {\n\n    private _apps: { [key: string]: ApplicationImpl } = {};\n    private _instances: InstanceImpl[] = [];\n    private _registry: CallbackRegistry = CallbackRegistryFactory();\n\n    constructor(\n        public mode: Glue42.AppManager.Mode,\n        private _agm: Glue42Core.AGM.API,\n        private _activities: Glue42.Activities.API,\n        private _windows: Glue42.Windows.API,\n        private _logger: Glue42Core.Logger.API,\n        private _gdMajorVersion: number\n    ) {\n        //\n    }\n\n    public application = (name: string) => {\n        return this._apps[name];\n    }\n\n    public applications = () => {\n        return Object.keys(this._apps).map((k: string) => this._apps[k]);\n    }\n\n    public instances = () => {\n        return this._instances;\n    }\n\n    public getMyInstance = () => {\n        if (this._gdMajorVersion >= 3) {\n            // GD3 check\n            const instanceId = window.glue42gd.appInstanceId;\n            return this._instances.filter((i) => i.id === instanceId)[0];\n        }\n\n        return undefined;\n    }\n\n    public handleAppAdded = (props: AppProps) => {\n        const id = this._getAppId(props);\n        this._logger.trace(`adding app ${id}`);\n        this._apps[id] = new ApplicationImpl(this, id, this._agm);\n        const app = this._updateAppFromProps(props);\n\n        this._registry.execute(\"appAdded\", app);\n    }\n\n    public handleAppUpdated = (props: AppProps) => {\n        // TODO: check side effects, is this._apps updated?\n\n        const app = this._updateAppFromProps(props);\n\n        this._registry.execute(\"appChanged\", app);\n    }\n\n    public handleAppRemoved = (props: AppProps) => {\n        const id = this._getAppId(props);\n        this._logger.trace(`removing app ${id}`);\n        const app = this.application(id);\n\n        // remove all instances related to the app\n        this._instances = this._instances.filter((i) => i.application.name !== app.name);\n\n        delete this._apps[id];\n\n        this._registry.execute(\"appRemoved\", app);\n    }\n\n    public handleAppReady = (props: AppProps) => {\n        const id = this._getAppId(props);\n        const app = this._getAppOrThrow(id);\n        app.updateFromProps(props);\n\n        if (app.available) {\n            this._registry.execute(\"appAvailable\", app);\n        } else {\n            this._registry.execute(\"appUnavailable\", app);\n        }\n    }\n\n    public handleInstanceStarted = (props: InstanceProps): InstanceImpl => {\n        this._logger.trace(`started app ${props.Name} ${props.Id}`);\n        const id = this._getInstanceId(props);\n        const appName = this._getInstanceAppName(props);\n\n        const instance = new InstanceImpl(id, appName, this, this._agm, this._activities, this._windows);\n\n        this._updateInstanceFromProps(instance, props);\n\n        this._instances.push(instance);\n\n        this._registry.execute(\"instanceStarted\", instance);\n        return instance;\n    }\n\n    public handleInstanceStopped = (props: InstanceProps) => {\n        this._logger.trace(`failed to start app ${props.Name} ${props.Id}`);\n\n        const id = this._getInstanceId(props);\n        const appName = this._getInstanceAppName(props);\n        const instance = this._getInstanceOrThrow(id, appName);\n\n        this._instances = this._instances.filter((i) => !this._matchInstance(i, id, appName));\n\n        this._registry.execute(\"instanceStopped\", instance);\n        instance.done();\n    }\n\n    public handleInstanceAgmServerReady = (props: InstanceProps) => {\n\n        const id = this._getInstanceId(props);\n        const appName = this._getInstanceAppName(props);\n        const instance = this._getInstanceOrThrow(id, appName);\n\n        instance.updateAgmInstanceFromProps(props);\n\n        this._registry.execute(\"instanceAgmServerReady\", instance);\n    }\n\n    public handleInstanceStartFailed = (props: InstanceProps) => {\n\n        const id = this._getInstanceId(props);\n        const appName = this._getInstanceAppName(props);\n        const startFailed = true;\n        const instance = new InstanceImpl(id, appName, undefined, undefined, undefined, undefined, startFailed);\n\n        this._updateInstanceFromProps(instance, props);\n\n        this._registry.execute(\"instanceStartFailed\", instance);\n    }\n\n    public handleInstanceUpdated = (props: InstanceProps) => {\n\n        const id = this._getInstanceId(props);\n        const app = this._getInstanceAppName(props);\n        const instance = this._getInstanceOrThrow(id, app);\n\n        this._updateInstanceFromProps(instance, props);\n    }\n\n    /** Event subscription methods */\n    public onInstanceStarted = (callback: (item: Glue42.AppManager.Instance) => any): UnsubscribeFunction => {\n        this._replay(this._instances, callback);\n        return this._registry.add(\"instanceStarted\", callback);\n    }\n\n    public onInstanceStartFailed = (callback: (item: Glue42.AppManager.Instance) => any): UnsubscribeFunction => {\n        return this._registry.add(\"instanceStartFailed\", callback);\n    }\n\n    public onInstanceStopped = (callback: (item: Glue42.AppManager.Instance) => any): UnsubscribeFunction => {\n        return this._registry.add(\"instanceStopped\", callback);\n    }\n\n    public onInstanceUpdated = (callback: (item: Glue42.AppManager.Instance) => any): UnsubscribeFunction => {\n        return this._registry.add(\"instanceChanged\", callback);\n    }\n\n    public onInstanceAgmServerReady = (callback: (item: Glue42.AppManager.Instance) => any): UnsubscribeFunction => {\n        return this._registry.add(\"instanceAgmServerReady\", callback);\n    }\n\n    public onAppAdded = (callback: (item: Glue42.AppManager.Application) => any): UnsubscribeFunction => {\n        this._replay(this._apps, callback);\n        return this._registry.add(\"appAdded\", callback);\n    }\n\n    public onAppRemoved = (callback: (item: Glue42.AppManager.Application) => any): UnsubscribeFunction => {\n        return this._registry.add(\"appRemoved\", callback);\n    }\n\n    public onAppAvailable = (callback: (item: Glue42.AppManager.Application) => any): UnsubscribeFunction => {\n        return this._registry.add(\"appAvailable\", callback);\n    }\n\n    public onAppUnavailable = (callback: (item: Glue42.AppManager.Application) => any): UnsubscribeFunction => {\n        return this._registry.add(\"appUnavailable\", callback);\n    }\n\n    public onAppChanged = (callback: (item: Glue42.AppManager.Application) => any): UnsubscribeFunction => {\n        return this._registry.add(\"appChanged\", callback);\n    }\n\n    private _getAppOrThrow(id: string) {\n        const result = this.application(id);\n        if (!result) {\n            throw Error(`app with id ${id} not found`);\n        }\n        return result;\n    }\n\n    private _getAppId(props: AppProps) {\n        return props.Name;\n    }\n\n    private _matchInstance(instance: Glue42.AppManager.Instance, id: string, appName: string) {\n        return instance.id === id && instance.application.name === appName;\n    }\n\n    private _getInstanceByIdAndName(id: string, appName: string) {\n        return this._instances.filter((i) => this._matchInstance(i, id, appName))[0];\n    }\n\n    private _getInstanceOrThrow(id: string, appName: string) {\n        const result = this._getInstanceByIdAndName(id, appName);\n        if (!result) {\n            throw Error(`instance with id ${id} not found`);\n        }\n        return result;\n    }\n\n    private _getInstanceId(props: InstanceProps) {\n        return props.Id;\n    }\n\n    private _getInstanceAppName(props: InstanceProps) {\n        return props.Name;\n    }\n\n    private _updateAppFromProps(props: AppProps) {\n        const id = this._getAppId(props);\n        this._logger.trace(`updating app with  + ${id}, ${props}`);\n        const app = this._getAppOrThrow(id);\n\n        app.updateFromProps(props);\n\n        return app;\n    }\n\n    private _updateInstanceFromProps(instance: InstanceImpl, props: InstanceProps) {\n        this._logger.trace(\"updating instance with \" + this._getInstanceId(props) + \" for app \" + this._getInstanceAppName(props));\n        instance.updateFromProps(props);\n    }\n\n    private _replay(itemsToReplay: { [key: string]: any } | any[], callback: (item: any) => any) {\n        if (itemsToReplay) {\n            // if not array transform to array using Object.values\n            if (Array.isArray(itemsToReplay)) {\n                itemsToReplay.forEach((item) => callback(item));\n            } else {\n                const itemsToReplayArr = Object.keys(itemsToReplay).map((key) => itemsToReplay[key]);\n                itemsToReplayArr.forEach((item) => callback(item));\n            }\n        }\n    }\n\n}\n","import * as AgmNames from \"./const/agm-names\";\nimport { default as CallbackRegistryFactory, CallbackRegistry } from \"callback-registry\";\nimport { Glue42 } from \"../../glue\";\nimport { Glue42Core } from \"@glue42/core\";\n\nfunction promisify(promise: Promise<any>, successCallback: (arg?: any) => void, errorCallback: (err?: any) => void) {\n    const isFunction = (arg: any) => {\n        return !!(arg && arg.constructor && arg.call && arg.apply);\n    };\n\n    if (!isFunction(successCallback) && !isFunction(errorCallback)) {\n        return promise;\n    }\n\n    if (!isFunction(successCallback)) {\n        successCallback = () => {\n            // EMPTY\n        };\n    } else if (!isFunction(errorCallback)) {\n        errorCallback = () => {\n            // EMPTY\n        };\n    }\n\n    promise.then(successCallback, errorCallback);\n}\n\nexport default class EntitlementsImpl implements Glue42.AppManager.Entitlements {\n\n    private _registry: CallbackRegistry = CallbackRegistryFactory();\n\n    constructor(\n        private _agm: Glue42Core.AGM.API\n    ) {\n        //\n    }\n\n    public handleBranchModified = (branch: Glue42.AppManager.Branch) => {\n        this._registry.execute(\"branchChanged\", branch);\n    }\n\n    public handleBranchesModified = (branches: Glue42.AppManager.Branch[]) => {\n        this._registry.execute(\"branchesChanged\", branches);\n    }\n\n    public getRegion = (success?: (region: string) => any, error?: (err: any) => any): void | Promise<string> => {\n        return promisify(\n            this._agmInvoke(\n                AgmNames.GetConfigurationRegionMethodName,\n                (e: Glue42Core.AGM.InvocationResult<{ Region: string }>) => e.returned.Region\n            ),\n            success,\n            error\n        );\n    }\n\n    public getBranches = (success?: (branches: Glue42.AppManager.Branch[]) => any, error?: (err: any) => any): void | Promise<Glue42.AppManager.Branch[]> => {\n        const promise = this._agmInvoke(\n            AgmNames.GetBranchesMethodName,\n            (e) => {\n                const obj = e.returned.Branches as { [key: string]: Glue42.AppManager.Branch };\n                return Object.keys(obj).map((key) => obj[key]);\n            }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public getCurrentBranch = (success?: (branch: Glue42.AppManager.Branch) => any, error?: (err: any) => any): void | Promise<Glue42.AppManager.Branch> => {\n        const promise = this._agmInvoke(\n            AgmNames.GetCurrentBranchMethodName,\n            (e) => e.returned.Branch,\n            undefined\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public setRegion = (region: string, success?: (resMsg: string) => any, error?: (err: any) => any): void | Promise<string> => {\n        const promise = this._agmInvoke(\n            AgmNames.SetConfigurationRegionMethodName,\n            (e) => e.returned.ResultMessage,\n            { Region: region }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public setCurrentBranch = (branch: string, success?: (resMsg: string) => any, error?: (err: any) => any): void | Promise<string> => {\n        const promise = this._agmInvoke(\n            AgmNames.SetCurrentBranchMethodName,\n            (e) => e.returned.ResultMessage,\n            { Branch: branch }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public currentUser = (success?: (user: Glue42.AppManager.UserInfo) => any, error?: (err: any) => any): void | Promise<Glue42.AppManager.UserInfo> => {\n        const promise = this._agmInvoke(AgmNames.GetUserMethodName);\n        return promisify(promise, success, error);\n    }\n\n    public getFunctionalEntitlement = (funct: string, success?: (entitlement: string) => any, error?: (err: any) => any): void | Promise<string> => {\n        const promise = this._agmInvoke(\n            AgmNames.GetFunctionalEntitlementMethodName,\n            (e) => e.returned.Entitlement,\n            { Function: funct }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public getFunctionalEntitlementBranch = (funct: string, branch: string, success?: (entitlement: string) => any, error?: (err: any) => any): void | Promise<string> => {\n        const promise = this._agmInvoke(\n            AgmNames.GetFunctionalEntitlementMethodName,\n            (e) => e.returned.Entitlement,\n            { Function: funct, Branch: branch }\n        );\n        return promisify(promise, success, error);\n    }\n\n    public canI = (func: string, success?: (allowed: boolean) => any, error?: (err: any) => any): void | Promise<boolean> => {\n        const promise = this._agmInvoke(\n            AgmNames.CanIMethodName,\n            (e) => e.returned.Result,\n            { Function: func }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public canIBranch = (func: string, branch: string, success?: (allowed: boolean) => any, error?: (err: any) => any): void | Promise<boolean> => {\n        const promise = this._agmInvoke(\n            AgmNames.CanIMethodName,\n            (e) => e.returned.Result,\n            { Function: func, Branch: branch }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public onBranchesChanged = (callback: (branches: Glue42.AppManager.Branch[]) => any): void => {\n        this._registry.add(\"branchesChanged\", callback);\n    }\n\n    public onBranchChanged = (callback: (branch: Glue42.AppManager.Branch) => any): void => {\n        this._registry.add(\"branchChanged\", callback);\n    }\n\n    public exit = (options: Glue42.AppManager.ExitOpts): Promise<any> => {\n        return this._agmInvoke(\n            AgmNames.ShutdownMethodName,\n            null,\n            options\n        );\n    }\n\n    public restart = (options: Glue42.AppManager.ExitOpts): Promise<any> => {\n        return this._agmInvoke(\n            AgmNames.RestartMethodName,\n            null,\n            options\n        );\n    }\n\n    private _agmInvoke = (\n        method: string,\n        transformFunction?: (res: Glue42Core.AGM.InvocationResult<any>) => any,\n        args?: object\n    ): Promise<any> => {\n        args = args || {};\n        return new Promise((resolve, reject) => {\n            const errHandler: Glue42Core.AGM.InvokeErrorHandler = (error) => reject(error);\n            this._agm.invoke(method, args)\n                .then((result) => {\n                    if (!transformFunction) {\n                        transformFunction = (d: Glue42Core.AGM.InvocationResult<any>) => d.returned;\n                    }\n                    resolve(transformFunction(result));\n                })\n                .catch(errHandler);\n        });\n    }\n}\n","import AppManagerImpl from \"./app-manager\";\nimport EntitlementsImpl from \"./entitlements\";\nimport snapshot from \"./snapshot\";\nimport subscriptionFactory from \"./data-subscription\";\nimport { Glue42 } from \"../../glue\";\n\nexport default (config: Glue42.AppManager.Config): Glue42.AppManager.API => {\n\n    if (!config) {\n        throw Error(\"config not set\");\n    }\n\n    if (!config.agm) {\n        throw Error(\"config.agm is missing\");\n    }\n\n    const START_ONLY: Glue42.AppManager.Mode = \"startOnly\";\n    const SKIP_ICONS: Glue42.AppManager.Mode = \"skipIcons\";\n    const FULL: Glue42.AppManager.Mode = \"full\";\n\n    const mode: Glue42.AppManager.Mode = config.mode || START_ONLY;\n    if (mode !== START_ONLY && mode !== SKIP_ICONS && mode !== FULL) {\n        throw new Error(`Invalid mode for appManager lib - ${mode} is not supported`);\n    }\n\n    const activities = config.activities;\n    const agm = config.agm;\n    const logger = config.logger;\n    const windows = config.windows;\n    const appManager = new AppManagerImpl(mode, agm, activities, windows, logger.subLogger(\"applications\"), config.gdMajorVersion);\n    const entitlements = new EntitlementsImpl(agm);\n\n    let readyPromise: Promise<undefined | {}>;\n    if (mode === START_ONLY) {\n        readyPromise = snapshot(agm, appManager);\n    } else {\n        const subscription = subscriptionFactory(agm, appManager, entitlements, mode === SKIP_ICONS);\n        readyPromise = subscription.start();\n    }\n\n    const api: Glue42.AppManager.API = {\n        ready: () => readyPromise,\n\n        applications: appManager.applications,\n        application: appManager.application,\n\n        onAppAdded: appManager.onAppAdded,\n        onAppRemoved: appManager.onAppRemoved,\n        onAppChanged: appManager.onAppChanged,\n        onAppAvailable: appManager.onAppAvailable,\n        onAppUnavailable: appManager.onAppUnavailable,\n\n        instances: appManager.instances,\n        get myInstance() {\n            return appManager.getMyInstance();\n        },\n\n        onInstanceStarted: appManager.onInstanceStarted,\n        onInstanceStopped: appManager.onInstanceStopped,\n        onInstanceUpdated: appManager.onInstanceUpdated,\n        onInstanceStartFailed: appManager.onInstanceStartFailed,\n\n        getRegion: entitlements.getRegion,\n        getBranches: entitlements.getBranches,\n        getCurrentBranch: entitlements.getCurrentBranch,\n        getFunctionalEntitlement: entitlements.getFunctionalEntitlement,\n        getFunctionalEntitlementBranch: entitlements.getFunctionalEntitlementBranch,\n\n        setCurrentBranch: entitlements.setCurrentBranch,\n        setRegion: entitlements.setRegion,\n\n        currentUser: entitlements.currentUser,\n\n        canI: entitlements.canI,\n        canIBranch: entitlements.canIBranch,\n\n        onBranchesChanged: entitlements.onBranchesChanged,\n\n        exit: entitlements.exit,\n        restart: entitlements.restart\n    };\n\n    return api;\n};\n","import * as AgmNames from \"./const/agm-names\";\nimport { objectValues } from \"./helper\";\nimport { Glue42Core } from \"@glue42/core\";\nimport AppManagerImpl from \"./app-manager\";\n\n/** Retrieves application snapshot from ACS */\nexport default function snapshot(agm: Glue42Core.AGM.API, appManager: AppManagerImpl): Promise<undefined> {\n    return new Promise((resolve, reject) => {\n        agm.invoke(AgmNames.GetApplicationsMethodName, { skipIcon: true })\n            .then((response) => {\n                const data = response.returned;\n                if (!data) {\n                    resolve();\n                }\n\n                const applications = data.applications;\n                if (!applications) {\n                    resolve();\n                }\n\n                objectValues(applications).map((item) => appManager.handleAppAdded(item));\n\n                resolve();\n            })\n            .catch((err) => reject(`Error getting application snapshot: ${err.message}`));\n    });\n}\n","import * as AgmNames from \"./const/agm-names\";\nimport * as EventNames from \"./const/event-names\";\nimport { objectValues } from \"./helper\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../glue\";\nimport { AppProps, InstanceProps } from \"./types\";\nimport AppManagerImpl from \"./app-manager\";\nimport EntitlementsImpl from \"./entitlements\";\n\n/** Subscribe for the AGM stream published by ACS and distributes events to applications and instances components */\nexport default function createDataSubscription(agm: Glue42Core.AGM.API, applications: AppManagerImpl, entitlements: EntitlementsImpl, skipIcons: boolean) {\n\n    let subscription: Glue42Core.AGM.Subscription;\n    const start = () => {\n        let resolveFunc: (value?: {} | Promise<{}>) => void;\n        let rejectFunc: (error?: any) => void;\n\n        const resultPromise = new Promise((resolve, reject) => {\n            resolveFunc = resolve;\n            rejectFunc = reject;\n        });\n\n        agm.subscribe(AgmNames.OnEventMethodName, { arguments: { skipIcon: skipIcons }, waitTimeoutMs: 10000 })\n            .then((s: any) => {\n                subscription = s;\n                subscription.onData((streamData: Glue42Core.AGM.StreamData) => {\n                    const events: any = streamData.data;\n\n                    objectValues(events[EventNames.OnApplicationAddedEvent])\n                        .map((item: AppProps) => applications.handleAppAdded(item));\n\n                    objectValues(events[EventNames.OnApplicationChangedEvent])\n                        .map((item: AppProps) => applications.handleAppUpdated(item));\n\n                    objectValues(events[EventNames.OnApplicationRemovedEvent])\n                        .map((item: AppProps) => applications.handleAppRemoved(item));\n\n                    objectValues(events[EventNames.OnApplicationReadyEvent])\n                        .map((item: AppProps) => applications.handleAppReady(item));\n\n                    objectValues(events[EventNames.OnApplicationStartedEvent])\n                        .map((item: InstanceProps) => applications.handleInstanceStarted(item));\n\n                    objectValues(events[EventNames.OnApplicationStartFailedEvent])\n                        .map((item: InstanceProps) => applications.handleInstanceStartFailed(item));\n\n                    objectValues(events[EventNames.OnApplicationStoppedEvent])\n                        .map((item: InstanceProps) => applications.handleInstanceStopped(item));\n\n                    objectValues(events[EventNames.OnApplicationUpdatedEvent])\n                        .map((item: InstanceProps) => applications.handleInstanceUpdated(item));\n\n                    objectValues(events[EventNames.OnApplicationAgmServerReadyEvent])\n                        .map((item: InstanceProps) => applications.handleInstanceAgmServerReady(item));\n\n                    objectValues(events[EventNames.OnBranchChangedEvent])\n                        .map((item: Glue42.AppManager.Branch) => entitlements.handleBranchModified(item));\n\n                    objectValues(events[EventNames.OnBranchesModifiedEvent])\n                        .map((item: Glue42.AppManager.Branch[]) => entitlements.handleBranchesModified(item));\n\n                    resolveFunc();\n                });\n\n                subscription.onFailed((err: any) => rejectFunc(err));\n\n            })\n            .catch((err: any) => rejectFunc(`Error subscribing for ${AgmNames.OnEventMethodName} stream. Err: ${err}`));\n\n        return resultPromise;\n    };\n\n    const stop = () => {\n        if (subscription) {\n            subscription.close();\n        }\n    };\n\n    return {\n        start,\n        stop\n    };\n}\n","import { CallbackRegistry, UnsubscribeFunction, default as CallbackFactory } from \"callback-registry\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { PendingWindowState, WindowEvents, WindowWrapper } from \"./types\";\n\nexport class WindowStore {\n    private readonly waitForTimeoutInMilliseconds: number = 60000;\n    private _windows: { [key: string]: WindowWrapper } = {};\n    private _pendingWindows: { [key: string]: WindowWrapper } = {};\n    private _pendingWindowsStates: { [key: string]: PendingWindowState } = {};\n    private _registry: CallbackRegistry;\n    private _logger: Glue42Core.Logger.API;\n\n    constructor() {\n        this._registry = CallbackFactory();\n    }\n\n    public init(logger: Glue42Core.Logger.API) {\n        this._logger = logger;\n    }\n\n    // Returns a window which either in Ready OR NOT 'ready' state (when the window is NOT marked with readyToShow)\n    public get(id: string): WindowWrapper {\n        return this._windows[id] || this._pendingWindows[id];\n    }\n\n    // Returns a window which is in 'ready' state (when the window is marked with readyToShow)\n    public getIfReady(id: string): WindowWrapper {\n        return this._windows[id];\n    }\n\n    public get list(): { [key: string]: WindowWrapper } {\n        return this._windows;\n    }\n\n    public add(window: WindowWrapper) {\n        const isExist = this._pendingWindows[window.API.id] ? true : false;\n        if (isExist) {\n            this._logger.error(`trying to add window with id ${window.API.id} from windowStore, which already exists`);\n            return;\n        }\n        const remote = window.API.windowType === \"remote\";\n        this._pendingWindows[window.API.id] = window;\n        this._pendingWindowsStates[window.API.id] = {\n            ready: false,\n            urlChanged: remote, // remote windows don't have url events\n        };\n\n        this._registry.execute(\"on-added\", window);\n    }\n\n    public remove(window: WindowWrapper) {\n        delete this._windows[window.API.id];\n        delete this._pendingWindows[window.API.id];\n        delete this._pendingWindowsStates[window.API.id];\n        this._registry.execute(\"on-removed\", window);\n    }\n\n    public setReadyState(windowId: string) {\n        const targetWindowState = this._pendingWindowsStates[windowId];\n\n        if (typeof targetWindowState === \"undefined\") {\n            return;\n        }\n\n        targetWindowState.ready = true;\n\n        if (targetWindowState.urlChanged) {\n            this.markReadyToShow(windowId);\n        }\n    }\n\n    public setUrlChangedState(windowId: string) {\n        const targetWindowState = this._pendingWindowsStates[windowId];\n\n        if (typeof targetWindowState === \"undefined\") {\n            return;\n        }\n\n        targetWindowState.urlChanged = true;\n\n        if (targetWindowState.ready) {\n            this.markReadyToShow(windowId);\n        }\n    }\n\n    public waitFor(id: string): Promise<WindowWrapper> {\n        return new Promise((resolve, reject) => {\n\n            let un: UnsubscribeFunction;\n\n            const timeout = setTimeout(() => {\n                un();\n                reject(\"waitFor timed out.\");\n            }, this.waitForTimeoutInMilliseconds);\n\n            const win = this._windows[id];\n            if (win) {\n                clearTimeout(timeout);\n                resolve(win);\n            } else {\n                un = this.onReadyWindow((w: WindowWrapper) => {\n                    if (w.API.id !== id) {\n                        return;\n                    }\n                    clearTimeout(timeout);\n                    un();\n                    resolve(w);\n                });\n            }\n        });\n    }\n\n    public onReadyWindow(callback: (win: WindowWrapper) => void): UnsubscribeFunction {\n        return this._registry.add(\"on-ready\", callback);\n    }\n\n    public onAdded(callback: (win: WindowWrapper) => void): UnsubscribeFunction {\n        return this._registry.add(\"on-added\", callback);\n    }\n\n    public onRemoved(callback: (win: WindowWrapper) => void): UnsubscribeFunction {\n        return this._registry.add(\"on-removed\", callback);\n    }\n\n    // newly created windows now need to hear both \"ready\" and \"urlChanged\" events in otder to be markedReadyToShow\n    public markReadyToShow(windowId: string) {\n        if (this._pendingWindows[windowId]) {\n            this._windows[windowId] = this._pendingWindows[windowId];\n            delete this._pendingWindows[windowId];\n            delete this._pendingWindowsStates[windowId];\n        }\n\n        this._registry.execute(\"on-ready\", this._windows[windowId]);\n    }\n}\n\nexport default new WindowStore();\n","import { Glue42 } from \"../glue\";\nimport { Glue42Core } from \"@glue42/core\";\n\nexport default class Utils {\n    public static getGDMajorVersion() {\n        if (typeof window === \"undefined\") {\n            return -1;\n        }\n        if (!window.glueDesktop) {\n            return -1;\n        }\n        if (!window.glueDesktop.version) {\n            return -1;\n        }\n        const ver = Number(window.glueDesktop.version.substr(0, 1));\n        return isNaN(ver) ? -1 : ver;\n    }\n\n    public static callbackifyPromise<T>(\n        action: () => Promise<T>,\n        successCallback?: (args?: T) => void,\n        errorCallback?: (errorMessage: string) => void): Promise<T> {\n\n        const fail = (error: any) => {\n            let msg = error;\n            if (error instanceof Error) {\n                msg = error.message;\n            }\n            if (typeof errorCallback === \"function\") {\n                errorCallback(msg);\n                return;\n            }\n\n            return Promise.reject(msg);\n        };\n\n        try {\n            return action()\n                .then((result) => {\n                    if (typeof successCallback === \"function\") {\n                        successCallback(result);\n                    }\n                    return result;\n                })\n                .catch((error) => {\n                    return fail(error);\n                });\n        } catch (err) {\n            return fail(err);\n        }\n    }\n\n    public static getMonitor(bounds: Glue42.Windows.Bounds, displays?: Glue42.Screen[]): Glue42.Screen {\n        const monitorsSortedByOverlap = displays.map((m) => {\n            const { left, top, workingAreaWidth: width, workingAreaHeight: height } = m;\n            const overlap = this.calculateTotalOverlap({ left, top, width, height }, bounds);\n            return {\n                monitor: m,\n                totalOverlap: overlap\n            };\n        }).sort((a, b) => b.totalOverlap - a.totalOverlap);\n\n        return monitorsSortedByOverlap[0].monitor;\n    }\n\n    public static getDisplayCenterOfScreen(a: Partial<Glue42.Windows.Bounds>, display?: Glue42.Screen) {\n        const left = Math.floor(Math.max(display.left, (display.left + (display.workingAreaWidth - a.width) / 2)));\n        const top = Math.floor(Math.max(display.top, (display.top + (display.workingAreaHeight - a.height) / 2)));\n        return {\n            top,\n            left\n        };\n    }\n\n    private static calculateTotalOverlap(r1: Glue42.Windows.Bounds, r2: Glue42.Windows.Bounds) {\n        const r1x = r1.left;\n        const r1y = r1.top;\n        const r1xMax = r1x + r1.width;\n        const r1yMax = r1y + r1.height;\n\n        const r2x = r2.left;\n        const r2y = r2.top;\n        const r2xMax = r2x + r2.width;\n        const r2yMax = r2y + r2.height;\n\n        const xOverlap = Math.max(0, Math.min(r1xMax, r2xMax) - Math.max(r1x, r2x));\n        const yOverlap = Math.max(0, Math.min(r1yMax, r2yMax) - Math.max(r1y, r2y));\n\n        return xOverlap * yOverlap;\n    }\n}\n","import CallbackFactory, { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../glue\";\nimport {\n    Executor,\n    FrameButton,\n    Neighbours,\n    WindowConstructorOptions,\n    WindowEvents,\n    WindowWrapper,\n    FlashOptions,\n} from \"./types\";\nimport * as util from \"../activity/helpers/util\";\nimport utils from \"../utils\";\n\nimport { default as windowStore } from \"./store\";\nimport GDWindow = Glue42.Windows.GDWindow;\n\nexport default (id: string, options: WindowConstructorOptions, executor: Executor, logger: Glue42Core.Logger.API, appManagerGetter: () => Glue42.AppManager.API, agm: Glue42.AGM.API): WindowWrapper => {\n    const _registry: CallbackRegistry = CallbackFactory();\n    const _logger = logger.subLogger(`window ${id}`);\n\n    const _name: string = options.name;\n    const _mode: Glue42.Windows.WindowMode = options.mode;\n    let _url: string = options.url;\n    let _title: string = options.title;\n    let _context: any = options.context || {};\n    const _bounds: Glue42.Windows.Bounds = options.bounds;\n    let _frameColor: string = options.frameColor;\n    let _focus: boolean = options.focus;\n    let _neighbours: Neighbours = options.neighbours || {};\n    let _groupId: string = options.groupId;\n    let _isGroupHeaderVisible: boolean = options.isGroupHeaderVisible;\n    let _isTabHeaderVisible: boolean = options.isTabHeaderVisible;\n    let _isTabSelected: boolean = options.isTabSelected;\n    let _settings: Glue42.Windows.WindowSettings = options.settings;\n\n    // is Window visible\n    let _isVisible: boolean = options.isVisible;\n\n    // Window state Collapsed | Expanded\n    let isCollapsed: boolean = options.isCollapsed;\n\n    // Window state normal | maximized | minimized\n    let _windowState: Glue42.Windows.WindowState = options.state;\n\n    // tabGroupId only for window with 'Tab' mode\n    let _tabGroupId: string = options.tabGroupId;\n\n    // window is locked or unlocked;\n    let _isLocked: boolean = options.isLocked;\n\n    let _group: Glue42.Windows.Group;\n    let resultWindow: Glue42.Windows.GDWindow;\n\n    // Holding all frame buttons\n    let _frameButtons: Glue42.Windows.ButtonInfo[] = [];\n\n    // Holding the current zoom factor\n    let _zoomFactor = options.zoomFactor;\n\n    //#region \"AGM methods\"\n\n    function close(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            executor.close(resultWindow)\n                .then(() => {\n                    if (typeof success === \"function\") {\n                        success(resultWindow);\n                    }\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function navigate(newUrl: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            executor.navigate(resultWindow, newUrl)\n                .then(() => {\n                    if (newUrl === _url) {\n                        if (typeof success === \"function\") {\n                            success(resultWindow);\n                        }\n                        return resolve(resultWindow);\n                    }\n                    const un = onUrlChanged((url: string, win: Glue42.Windows.GDWindow) => {\n                        if (win.id === id && url === win.url) {\n                            if (typeof success === \"function\") {\n                                success(resultWindow);\n                            }\n                            un();\n                            resolve(resultWindow);\n                        }\n                    });\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function setStyle(style: Glue42.Windows.WindowStyle, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        if (!style || Object.keys(style).length === 0 || Object.keys(style).every((key) => !key)) {\n            const errMessage = `Invalid style arguments: ${JSON.stringify(style)}`;\n            error(errMessage);\n            return Promise.reject(new Error(errMessage));\n        }\n\n        if (style && style.focus !== undefined) {\n            if (typeof style.focus !== \"boolean\") {\n                const errMessage = `Focus must be boolean. Currently only focus true is supported ! ${JSON.stringify(style)}`;\n                error(errMessage);\n                return Promise.reject(new Error(errMessage));\n            } else if (style.focus === false) {\n                // tslint:disable-next-line:no-console\n                console.warn(\"Focus false is not supported ! \");\n            }\n        }\n\n        if (style && style.hidden !== undefined && typeof style.hidden !== \"boolean\") {\n            const errMessage = `Hidden must be boolean ! provided: ${JSON.stringify(style)}`;\n            error(errMessage);\n            return Promise.reject(new Error(errMessage));\n        }\n\n        return utils.callbackifyPromise(\n            () => executor.setStyle(resultWindow, style),\n            success,\n            error\n        );\n    }\n\n    function resetButtons(buttons: Glue42.Windows.WindowButtons, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(\n            () => executor.resetButtons(resultWindow, buttons),\n            success,\n            error\n        );\n    }\n\n    function setOnTop(onTop: boolean, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        if (this.onTop === onTop) {\n            const errMessage = `OnTop setting is already set to '${onTop}'`;\n            error(errMessage);\n            return Promise.reject(new Error(errMessage));\n        }\n\n        return utils.callbackifyPromise(\n            () => executor.setOnTop(resultWindow, onTop),\n            success,\n            error\n        );\n    }\n\n    function setSizeConstraints(constraints: Glue42.Windows.SizeConstraints, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        if (!constraints || Object.keys(constraints).every((value) => value === undefined)) {\n            const errMessage = `Invalid Constraints: ${JSON.stringify(constraints)}`;\n            error(errMessage);\n            return Promise.reject(new Error(errMessage));\n        }\n\n        return utils.callbackifyPromise(\n            () => executor.setSizeConstraints(resultWindow, constraints),\n            success,\n            error\n        );\n    }\n\n    function setTitle(newTitle: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise<Glue42.Windows.GDWindow>((resolve, reject) => {\n            executor.setTitle(resultWindow, newTitle)\n                .then(() => {\n                    if (typeof success === \"function\") {\n                        success(resultWindow);\n                    }\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n\n        // OPTION 2\n        // const promise = executor.setTitle(resultWindow, newTitle)\n        // return promisify\n    }\n\n    function moveResize(dimensions: Partial<Glue42.Windows.Bounds>, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve: (window: Glue42.Windows.GDWindow) => void, reject: (error: string) => void) => {\n\n            const resolveImmediately = areBoundsEqual(dimensions, _bounds);\n            let isDone = false;\n            const done = () => {\n                if (isDone) {\n                    return;\n                }\n                isDone = true;\n                if (typeof success === \"function\") {\n                    success(resultWindow);\n                }\n                resolve(resultWindow);\n\n                if (unsubscribeBoundsChanged) {\n                    unsubscribeBoundsChanged();\n                    unsubscribeBoundsChanged = undefined;\n                }\n                if (resolveTimeout) {\n                    clearTimeout(resolveTimeout);\n                    resolveTimeout = undefined;\n                }\n            };\n            let resolveTimeout: any;\n            let unsubscribeBoundsChanged: () => void;\n            if (!resolveImmediately) {\n                unsubscribeBoundsChanged = onBoundsChanged((win: Glue42.Windows.GDWindow) => {\n                    if (win.id !== resultWindow.id) {\n                        return;\n                    }\n\n                    if (!areBoundsEqual(dimensions, win.bounds)) {\n                        return;\n                    }\n\n                    done();\n                });\n            }\n\n            // always execute moveResize (we might have old bounds and prevent calls that are actually valid)\n            executor.moveResize(resultWindow, dimensions)\n                .then(() => {\n                    // if we're trying to resize with the bounds we already have\n                    if (resolveImmediately) {\n                        done();\n                        return;\n                    }\n\n                    // if no bounds change in the next 1s resolve\n                    resolveTimeout = setTimeout(() => {\n                        done();\n                    }, 1000);\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function addFrameButton(buttonInfo: Glue42.Windows.ButtonInfo, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            if (typeof buttonInfo === \"undefined\") {\n                if (typeof error === \"function\") {\n                    error(\"No button info\");\n                    return;\n                }\n                reject(\"No button info\");\n                return;\n            }\n\n            if (buttonInfo.buttonId === undefined) {\n                if (typeof error === \"function\") {\n                    error(\"No buttonId\");\n                    return;\n                }\n                reject(\"No buttonId\");\n                return;\n            }\n\n            if (buttonInfo.imageBase64 === undefined) {\n                if (typeof error === \"function\") {\n                    error(\"No imageBase64\");\n                    return;\n                }\n                reject(\"No imageBase64\");\n                return;\n            }\n            executor.addFrameButton(resultWindow, buttonInfo)\n                .then(() => {\n                    if (typeof success === \"function\") {\n                        success(resultWindow);\n                    }\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function removeFrameButton(buttonId: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            if (buttonId === undefined || buttonId === \"\") {\n                if (typeof error === \"function\") {\n                    error(\"No buttonId\");\n                    return;\n                }\n                reject(\"No buttonId\");\n                return;\n            }\n\n            executor.removeFrameButton(resultWindow, buttonId)\n                .then(() => {\n                    if (typeof success === \"function\") {\n                        success(resultWindow);\n                    }\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n\n        });\n    }\n\n    function activate(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            executor.activate(resultWindow)\n                .then(() => {\n                    if (typeof success === \"function\") {\n                        success(resultWindow);\n                    }\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function focus(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            executor.focus(resultWindow)\n                .then(() => {\n                    if (typeof success === \"function\") {\n                        success(resultWindow);\n                    }\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function maximizeRestore(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            const currEvent = _windowState === \"normal\" ? onMaximized : onNormal;\n            executor.maximizeRestore(resultWindow)\n                .then(() => {\n                    const un = currEvent(() => {\n                        if (typeof success === \"function\") {\n                            success(resultWindow);\n                        }\n                        if (un) {\n                            un();\n                        }\n                        resolve(resultWindow);\n                    });\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function maximize(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            executor.maximize(resultWindow)\n                .then(() => {\n                    if (_windowState === \"maximized\") {\n                        if (typeof success === \"function\") {\n                            success(resultWindow);\n                        }\n                        return resolve(resultWindow);\n                    }\n\n                    const un = onMaximized((win: Glue42.Windows.GDWindow) => {\n                        if (win.id === id && win.state === \"maximized\") {\n                            if (typeof success === \"function\") {\n                                success(resultWindow);\n                            }\n                            un();\n                            resolve(resultWindow);\n                        }\n                    });\n\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function restore(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            executor.restore(resultWindow)\n                .then(() => {\n                    if (_windowState === \"normal\") {\n                        if (typeof success === \"function\") {\n                            success(resultWindow);\n                        }\n                        return resolve(resultWindow);\n                    }\n\n                    const un = onNormal((win: Glue42.Windows.GDWindow) => {\n                        if (id === win.id && win.state === \"normal\") {\n                            if (typeof success === \"function\") {\n                                success(resultWindow);\n                            }\n                            un();\n                            resolve(resultWindow);\n                        }\n                    });\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function minimize(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            executor.minimize(resultWindow)\n                .then(() => {\n                    if (_windowState === \"minimized\") {\n                        if (typeof success === \"function\") {\n                            success(resultWindow);\n                        }\n                        return resolve(resultWindow);\n                    }\n\n                    const un = onMinimized((win: Glue42.Windows.GDWindow) => {\n                        if (id === win.id && win.state === \"minimized\") {\n                            if (typeof success === \"function\") {\n                                success(resultWindow);\n                            }\n                            un();\n                            return resolve(resultWindow);\n                        }\n                    });\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function collapse(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            if (isCollapsed) {\n                if (typeof success === \"function\") {\n                    success(resultWindow);\n                }\n                return resolve(resultWindow);\n            }\n            executor.collapse(resultWindow)\n                .then(() => {\n                    if (isCollapsed) {\n                        if (typeof success === \"function\") {\n                            success(resultWindow);\n                        }\n                        return resolve(resultWindow);\n                    }\n\n                    const un = onCollapsed((win: Glue42.Windows.GDWindow) => {\n                        if (win.id === id) {\n                            if (typeof success === \"function\") {\n                                success(resultWindow);\n                            }\n                            un();\n                            resolve(resultWindow);\n                        }\n                    });\n\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function expand(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            if (!isCollapsed) {\n                if (typeof success === \"function\") {\n                    success(resultWindow);\n                }\n                return resolve(resultWindow);\n            }\n            executor.expand(resultWindow)\n                .then(() => {\n                    if (!isCollapsed) {\n                        if (typeof success === \"function\") {\n                            success(resultWindow);\n                        }\n                        return resolve(resultWindow);\n                    }\n\n                    const un = onExpanded((win: Glue42.Windows.GDWindow) => {\n                        if (win.id === id) {\n                            if (typeof success === \"function\") {\n                                success(resultWindow);\n                            }\n                            un();\n                            resolve(resultWindow);\n                        }\n                    });\n\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function toggleCollapse(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            const currEvent = isCollapsed ? onExpanded : onCollapsed;\n            executor.toggleCollapse(resultWindow)\n                .then(() => {\n                    currEvent((win: Glue42.Windows.GDWindow) => {\n                        if (win.id === id) {\n                            if (typeof success === \"function\") {\n                                success(resultWindow);\n                            }\n                            resolve(resultWindow);\n                        }\n                    });\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function snap(target: string | Glue42.Windows.GDWindow, direction: Glue42.Windows.RelativeDirection, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        let targetWindowGroup;\n        if (!target) {\n            return Promise.reject(`Please specify a target window! calledWith: ${target}`);\n        }\n\n        if (typeof target === \"string\") {\n            const targetWindow = windowStore.get(target);\n            if (!targetWindow) {\n                return Promise.reject(new Error(`Invalid target parameter or no such window. Invoked with:  ${target}`));\n            }\n            targetWindowGroup = targetWindow.API.group;\n        } else {\n            targetWindowGroup = target.group;\n        }\n\n        return Promise.all([\n            waitForMyWindowToJoinTargetGroup(targetWindowGroup),\n            executor.snap(resultWindow, target, direction)\n        ])\n            .then(() => {\n                if (typeof success === \"function\") {\n                    success(resultWindow);\n                }\n                return resultWindow;\n            })\n            .catch((e) => {\n                if (typeof error === \"function\") {\n                    error(e);\n                }\n                return e;\n            });\n    }\n\n    function waitForMyWindowToJoinTargetGroup(targetGroup: Glue42.Windows.Group): Promise<void> {\n        return new Promise((resolve, reject) => {\n            const unsub = targetGroup.onWindowAdded((_, window) => {\n                if (resultWindow.id === window.id) {\n                    unsub();\n                    resolve();\n                }\n            });\n\n            // setTimeout(() => {\n            //     resolve();\n            // }, 1500);\n        });\n    }\n\n    function attachTab(tab: Glue42.Windows.GDWindow | string, index: number, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            let sourceWindowId: string;\n            const targetWindowId: string = resultWindow.id;\n            const errorMessage: string = \"Invalid tab parameter - should be an object with property id or a string. Invoked for source window id:\" + resultWindow.id;\n\n            if (!tab) {\n                reject(errorMessage);\n                return;\n            }\n\n            if (typeof tab === \"string\") {\n                sourceWindowId = tab;\n            } else if (typeof tab.id !== \"undefined\") {\n                sourceWindowId = tab.id;\n            } else {\n                reject(errorMessage);\n                return;\n            }\n\n            const argsForSend: any = {\n                sourceWindowId,\n                targetWindowId,\n            };\n\n            if (index) {\n                argsForSend.index = index;\n            }\n\n            const sourceWin = windowStore.get(argsForSend.sourceWindowId).API;\n            const un = sourceWin.onAttached((win: Glue42.Windows.GDWindow) => {\n                if (win.id === sourceWin.id) {\n                    if (typeof success === \"function\") {\n                        success(resultWindow);\n                    }\n                    un();\n                    resolve(resultWindow);\n                }\n            });\n\n            executor.attachTab(resultWindow, argsForSend)\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    un();\n                    reject(e);\n                });\n        });\n    }\n\n    function detachTab(opt: Glue42.Windows.DetachOptions, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            const argsForSend: any = { windowId: resultWindow.id };\n            const _options: Glue42.Windows.DetachOptions = opt || {};\n\n            if (typeof _options.relativeTo !== \"undefined\") {\n                if (typeof _options.relativeTo === \"string\") {\n                    argsForSend.relativeTo = _options.relativeTo;\n                } else if (typeof _options.relativeTo.id !== \"undefined\") {\n                    argsForSend.relativeTo = _options.relativeTo.id;\n                }\n\n                if (typeof _options.relativeDirection !== \"undefined\") {\n                    argsForSend.relativeDirection = _options.relativeDirection;\n                }\n\n                if (typeof _options.width !== \"undefined\") {\n                    argsForSend.width = _options.width;\n                }\n\n                if (typeof _options.height !== \"undefined\") {\n                    argsForSend.height = _options.height;\n                }\n            }\n\n            if (typeof _options.bounds !== \"undefined\") {\n                argsForSend.bounds = _options.bounds;\n            }\n\n            if (typeof _options.hideTabHeader !== \"undefined\") {\n                argsForSend.hideTabHeader = _options.hideTabHeader;\n            }\n\n            let visibilityChangeHeard = false;\n            let detachedHeard = false;\n\n            const unVisibility = _registry.add(\"frame-attached\", ((win: Glue42.Windows.GDWindow) => {\n                const isVisibilityCorrect = _options.hideTabHeader === undefined || _options.hideTabHeader !== win.isTabHeaderVisible;\n                if (id === win.id && isVisibilityCorrect) {\n                    visibilityChangeHeard = true;\n                    unVisibility();\n                    if (detachedHeard) {\n                        if (typeof success === \"function\") {\n                            success(resultWindow);\n                        }\n                        resolve(resultWindow);\n                        if (typeof unDetached === \"function\") {\n                            unDetached();\n                        }\n                    }\n                }\n            }));\n\n            const unDetached = onDetached((win: Glue42.Windows.GDWindow) => {\n                if (id === win.id) {\n                    detachedHeard = true;\n                    unDetached();\n                    if (visibilityChangeHeard) {\n                        if (typeof success === \"function\") {\n                            success(resultWindow);\n                        }\n                        resolve(resultWindow);\n                        if (typeof unVisibility === \"function\") {\n                            unVisibility();\n                        }\n                    }\n                }\n            });\n\n            executor.detachTab(resultWindow, argsForSend)\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    unDetached();\n                    unVisibility();\n                    reject(e);\n                });\n        });\n\n    }\n\n    function setVisible(toBeVisible?: boolean, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            executor.setVisible(resultWindow, toBeVisible)\n                .then(() => {\n                    let isVisibilityCorrect = toBeVisible === undefined ? _isVisible === true : _isVisible === toBeVisible;\n                    if (isVisibilityCorrect) {\n                        if (typeof success === \"function\") {\n                            success(resultWindow);\n                        }\n                        return resolve(resultWindow);\n                    }\n\n                    const un = onVisibilityChanged((win: Glue42.Windows.GDWindow) => {\n                        isVisibilityCorrect = toBeVisible === undefined ? win.isVisible === true : win.isVisible === toBeVisible;\n                        if (win.id === id && isVisibilityCorrect) {\n                            if (typeof success === \"function\") {\n                                success(resultWindow);\n                            }\n                            un();\n                            resolve(resultWindow);\n                        }\n                    });\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function showLoader(loader?: Glue42.Windows.Loader): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            executor.showLoader(resultWindow, loader)\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    function hideLoader(): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            executor.hideLoader(resultWindow)\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n\n    }\n\n    function updateContext(context: any, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            executor.updateContext(resultWindow, context)\n                .then(() => {\n                    if (typeof success === \"function\") {\n                        success(resultWindow);\n                    }\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function lock(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        if (resultWindow.isLocked) {\n            if (typeof success === \"function\") {\n                success(resultWindow);\n            }\n            return Promise.resolve(resultWindow);\n        }\n\n        return new Promise((resolve, reject) => {\n            executor.lock(resultWindow)\n                .then(() => waitForLockingChanged())\n                .then(() => {\n                    if (typeof success === \"function\") {\n                        success(resultWindow);\n                    }\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function unlock(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        if (!resultWindow.isLocked) {\n            if (typeof success === \"function\") {\n                success(resultWindow);\n            }\n            return Promise.resolve(resultWindow);\n        }\n\n        return new Promise((resolve, reject) => {\n            executor.unlock(resultWindow)\n                .then(() => waitForLockingChanged())\n                .then(() => {\n                    if (typeof success === \"function\") {\n                        success(resultWindow);\n                    }\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function waitForLockingChanged() {\n        return new Promise((resolve) => {\n            const un = onLockingChanged((window: GDWindow) => {\n                if (window.id === resultWindow.id) {\n                    un();\n                    resolve();\n                }\n            });\n        });\n    }\n\n    function getIcon(success?: (icon: string) => void, error?: Glue42Core.AGM.InvokeErrorHandler): Promise<string> {\n        return new Promise((resolve, reject) => {\n            // agm.invoke(\"T42.Wnd.GetIcon\", { windowId: resultWindow.id }, \"best\", {}, successHandler, error);\n            executor.getIcon(resultWindow)\n                .then((icon: string) => {\n                    if (typeof success === \"function\") {\n                        success(icon);\n                    }\n                    resolve(icon);\n                })\n                .catch((e) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function setIcon(base64Image: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            executor.setIcon(resultWindow, base64Image)\n                .then(() => {\n                    if (typeof success === \"function\") {\n                        success(resultWindow);\n                    }\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function setFrameColor(frameColor: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            executor.setFrameColor(resultWindow, frameColor)\n                .then(() => {\n                    if (typeof success === \"function\") {\n                        success(resultWindow);\n                    }\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function setTabHeaderVisible(toBeTabHeaderVisible: boolean, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            executor.setTabHeaderVisible(resultWindow, toBeTabHeaderVisible)\n                .then(() => {\n                    if (_isTabHeaderVisible === toBeTabHeaderVisible) {\n                        if (typeof success === \"function\") {\n                            success(resultWindow);\n                        }\n\n                        return resolve(resultWindow);\n                    }\n                    const un = onTabHeaderVisibilityChanged((win: Glue42.Windows.GDWindow) => {\n                        if (win.id === id && win.isTabHeaderVisible === toBeTabHeaderVisible) {\n                            if (typeof success === \"function\") {\n                                success(resultWindow);\n                            }\n                            un();\n                            resolve(resultWindow);\n                        }\n                    });\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function showPopup(config: Glue42.Windows.PopupOptions): Promise<Glue42.Windows.GDWindow> {\n        return executor.showPopup(resultWindow, config);\n    }\n\n    function createFlydown(config: Glue42.Windows.FlydownOptions): Promise<Glue42.Windows.Flydown> {\n        return executor.createFlydown(resultWindow.id, config);\n    }\n\n    function setModalState(isModal: boolean): Promise<void> {\n        return executor.setModalState(resultWindow.id, isModal || false);\n    }\n\n    function zoomIn(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise<Glue42.Windows.GDWindow>(() => {\n            return executor.zoomIn(resultWindow);\n        }, success, error);\n\n    }\n\n    function zoomOut(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise<Glue42.Windows.GDWindow>(() => {\n            return executor.zoomOut(resultWindow);\n        }, success, error);\n\n    }\n\n    function setZoomFactor(zoomFactor: number, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise<Glue42.Windows.GDWindow>(() => {\n            if (isNaN(zoomFactor)) {\n                throw new Error(`zoomFactor is not a number`);\n            }\n            return executor.setZoomFactor(resultWindow, zoomFactor);\n        }, success, error);\n    }\n\n    function showDevTools() {\n        return executor.showDevTools(resultWindow);\n    }\n\n    function capture(captureOptions: Glue42.Windows.CaptureOptions): Promise<string> {\n        return executor.capture(resultWindow, captureOptions);\n    }\n\n    function flash(suppliedOptions?: boolean): Promise<Glue42.Windows.GDWindow> {\n        const flashOptions: FlashOptions = {\n            shouldFlash: true\n        };\n\n        if (typeof suppliedOptions === \"boolean\") {\n            flashOptions.shouldFlash = suppliedOptions;\n        }\n\n        return executor.flash(resultWindow, flashOptions);\n    }\n\n    //#endregion \"AGM methods\"\n\n    //#region \"Events\"\n\n    function onTitleChanged(callback: (title: string, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        callback(resultWindow.title, resultWindow);\n        return _registry.add(\"onTitleChanged\", callback);\n    }\n\n    function onClose(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"onClose\", callback);\n    }\n\n    function onUrlChanged(callback: (url: string, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"onUrlChanged\", callback);\n    }\n\n    function onFrameButtonAdded(callback: (btnInfo: Glue42.Windows.ButtonInfo, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"onFrameButtonAdded\", callback);\n    }\n\n    function onFrameButtonRemoved(callback: (btnInfo: Glue42.Windows.ButtonInfo, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"onFrameButtonRemoved\", callback);\n    }\n\n    function onFrameButtonClicked(callback: (btnInfo: Glue42.Windows.ButtonInfo, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"onFrameButtonClicked\", callback);\n    }\n\n    function onCollapsed(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (isCollapsed) {\n            callback(resultWindow);\n        }\n        return _registry.add(\"collapsed\", callback);\n    }\n\n    function onExpanded(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (!isCollapsed) {\n            callback(resultWindow);\n        }\n        return _registry.add(\"expanded\", callback);\n    }\n\n    function onMaximized(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (_windowState === \"maximized\") {\n            callback(resultWindow);\n        }\n        return _registry.add(\"maximized\", callback);\n    }\n\n    function onMinimized(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (_windowState === \"minimized\") {\n            callback(resultWindow);\n        }\n        return _registry.add(\"minimized\", callback);\n    }\n\n    function onNormal(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (_windowState === \"normal\") {\n            callback(resultWindow);\n        }\n        return _registry.add(\"normal\", callback);\n    }\n\n    function onAttached(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"attached\", callback);\n    }\n\n    function onDetached(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"detached\", callback);\n    }\n\n    function onVisibilityChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"visibility-changed\", callback);\n    }\n\n    function onContextUpdated(callback: (context: any, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"context-updated\", callback);\n    }\n\n    function onLockingChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"lock-changed\", callback);\n    }\n\n    function onBoundsChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"bounds-changed\", callback);\n    }\n\n    function onFocusChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"focus-changed\", callback);\n    }\n\n    function onFrameColorChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"frame-color-changed\", callback);\n    }\n\n    function onTabHeaderVisibilityChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"tab-header-visibility-changed\", callback);\n    }\n\n    function onWindowAttached(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"window-attached\", callback);\n    }\n\n    function onWindowDetached(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"window-detached\", callback);\n    }\n\n    function onGroupChanged(callback: (window: Glue42.Windows.GDWindow, newGroup: Glue42.Windows.Group, oldGroup: Glue42.Windows.Group) => void): UnsubscribeFunction {\n        return _registry.add(\"group-changed\", callback);\n    }\n\n    function onTabSelectionChanged(callback: (selectedWindow: Glue42.Windows.GDWindow, previousWindow: Glue42.Windows.GDWindow, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"tab-selection-changed\", callback);\n    }\n\n    function onClosing(callback: () => Promise<void>): UnsubscribeFunction {\n        if (!util.isFunction(callback)) {\n            throw new Error(\"callback should be a function\");\n        }\n\n        type GDHandler = (success: () => void, error: () => void) => void;\n        const callbackWrap: GDHandler = (success: () => void, error: () => void) => {\n            const promise = callback();\n            if (promise && promise.then) {\n                promise.then(success).catch(error);\n            } else {\n                success();\n            }\n        };\n        return executor.onClosing(callbackWrap, id);\n    }\n\n    function onRefreshing(callback: (prevent: () => void) => Promise<void>): UnsubscribeFunction {\n        if (!util.isFunction(callback)) {\n            throw new Error(\"callback should be a function\");\n        }\n\n        type GDRefreshHandler = (success: () => void, error: () => void, prevent: () => void) => void;\n        const callbackWrap: GDRefreshHandler = (success: () => void, error: () => void, prevent: () => void) => {\n            const promise = callback(prevent);\n            if (promise && promise.then) {\n                promise.then(success).catch(error);\n            } else {\n                success();\n            }\n        };\n        return executor.onRefreshing(callbackWrap, id);\n    }\n\n    function onZoomFactorChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (!util.isFunction(callback)) {\n            throw new Error(\"callback should be a function\");\n        }\n        return _registry.add(\"zoom-factor-changed\", callback);\n    }\n\n    //#endregion \"Events\"\n\n    //#region \"Stream function\"\n\n    function handleTitleChanged(newTitle: string): void {\n        _title = newTitle;\n        _registry.execute(\"onTitleChanged\", newTitle, resultWindow);\n    }\n\n    function handleUrlChanged(newUrl: string): void {\n        _url = newUrl;\n        _registry.execute(\"onUrlChanged\", newUrl, resultWindow);\n    }\n\n    function handleVisibilityChanged(isVisible: boolean) {\n        if (isVisible === _isVisible) {\n            return;\n        }\n        _isVisible = isVisible;\n        _registry.execute(\"visibility-changed\", resultWindow);\n    }\n\n    function handleWindowSettingsChanged(settings: Glue42.Windows.WindowSettings): void {\n        _settings = settings;\n        _registry.execute(\"settings-changed\", resultWindow);\n    }\n\n    function handleContextUpdated(context: any): void {\n        _context = context;\n        _registry.execute(\"context-updated\", _context, resultWindow);\n    }\n\n    function handleWindowClose(): void {\n        if (resultWindow.id === undefined) {\n            return;\n        }\n        resultWindow.id = undefined;\n        _registry.execute(\"onClose\", resultWindow);\n    }\n\n    function handleFrameButtonAdded(frameButton: FrameButton): void {\n        const buttonObj: Glue42.Windows.ButtonInfo = [\"buttonId\", \"imageBase64\", \"order\", \"tooltip\"].reduce((memo: any, k) => {\n            memo[k] = frameButton[k];\n            return memo;\n        }, {}) as Glue42.Windows.ButtonInfo;\n\n        const frameButtonsIds = _frameButtons.map((btn) => {\n            return btn.buttonId;\n        });\n\n        if (frameButtonsIds.indexOf(frameButton.buttonId) === -1) {\n            _frameButtons.push(buttonObj);\n        }\n\n        _registry.execute(\"onFrameButtonAdded\", buttonObj, resultWindow);\n    }\n\n    function handleFrameButtonRemoved(frameButtonId: string): void {\n        let button: Glue42.Windows.ButtonInfo;\n        _frameButtons = _frameButtons.reduce((memo, btn) => {\n            if (btn.buttonId === frameButtonId) {\n                button = btn;\n            } else {\n                memo.push(btn);\n            }\n            return memo;\n        }, []);\n\n        if (button !== undefined) {\n            _registry.execute(\"onFrameButtonRemoved\", button, resultWindow);\n        }\n    }\n\n    function handleFrameButtonClicked(frameButton: FrameButton): void {\n        const button = _frameButtons.filter((btn) => {\n            return btn.buttonId === frameButton.buttonId;\n        });\n\n        if (button.length > 0) {\n            _registry.execute(\"onFrameButtonClicked\", button[0], resultWindow);\n        }\n    }\n\n    function handleWindowChangeState(state: string): void {\n        if (state === \"collapsed\") {\n            isCollapsed = true;\n        } else if (state === \"expanded\") {\n            isCollapsed = false;\n        } else {\n            _windowState = state as Glue42.Windows.WindowState;\n        }\n\n        _registry.execute(state, resultWindow);\n    }\n\n    function handleFrameIsLockedChanged(isLocked: boolean): void {\n        _isLocked = isLocked;\n        _registry.execute(\"lock-changed\", resultWindow);\n    }\n\n    function handleBoundsChanged(bounds: Glue42.Windows.Bounds): void {\n        if (_bounds.top === bounds.top && _bounds.left === bounds.left && _bounds.width === bounds.width && _bounds.height === bounds.height) {\n            return;\n        }\n        _bounds.top = bounds.top;\n        _bounds.left = bounds.left;\n        _bounds.width = bounds.width;\n        _bounds.height = bounds.height;\n\n        _registry.execute(\"bounds-changed\", resultWindow);\n    }\n\n    function handleFocusChanged(isFocused: boolean): void {\n        _focus = isFocused;\n        _registry.execute(\"focus-changed\", resultWindow);\n    }\n\n    function handleFrameColorChanged(frameColor: string): void {\n        _frameColor = frameColor;\n        _registry.execute(\"frame-color-changed\", resultWindow);\n    }\n\n    function handleFrameAttached(tabGroupId: string, isTabHeaderVisible: boolean): void {\n        _tabGroupId = tabGroupId;\n        _isTabHeaderVisible = isTabHeaderVisible;\n        _registry.execute(\"frame-attached\", resultWindow);\n    }\n\n    function handleCompositionChanged(neighbours: Neighbours, groupId: string): void {\n        _neighbours = neighbours || {};\n        _groupId = groupId;\n    }\n\n    function handleGroupHeaderVisibilityChanged(isGroupHeaderVisible: boolean): void {\n        _isGroupHeaderVisible = isGroupHeaderVisible;\n    }\n\n    function handleTabHeaderVisibilityChanged(isTabHeaderVisible: boolean): void {\n        if (_isTabHeaderVisible !== isTabHeaderVisible) {\n            _isTabHeaderVisible = isTabHeaderVisible;\n            _registry.execute(\"tab-header-visibility-changed\", resultWindow);\n        }\n    }\n\n    function handleFrameSelectionChanged(newWindow: string, prevWindow: string): void {\n        let selectedWindow: Glue42.Windows.GDWindow;\n        if (typeof newWindow !== \"undefined\" && newWindow === id) {\n            _isTabSelected = true;\n            selectedWindow = resultWindow;\n        } else {\n            _isTabSelected = false;\n            selectedWindow = windowStore.get(newWindow) ? windowStore.get(newWindow).API : undefined;\n        }\n        const previousWindow = windowStore.get(prevWindow) ? windowStore.get(prevWindow).API : undefined;\n\n        if (_isTabSelected && previousWindow) {\n            const un = previousWindow.onTabSelectionChanged((newWin: Glue42.Windows.GDWindow, prevWin: Glue42.Windows.GDWindow) => {\n                if ((prevWin && prevWin.id) === previousWindow.id) {\n                    un();\n                    _registry.execute(\"tab-selection-changed\", selectedWindow, previousWindow, resultWindow);\n                }\n            });\n        } else {\n            _registry.execute(\"tab-selection-changed\", selectedWindow, previousWindow, resultWindow);\n        }\n    }\n\n    function handleAttached(newTabGroupId: string, tabHeaderVisible: boolean): void {\n        _tabGroupId = newTabGroupId;\n        _isTabHeaderVisible = tabHeaderVisible;\n        _registry.execute(\"attached\", resultWindow);\n    }\n\n    function handleWindowAttached(win: Glue42.Windows.GDWindow): void {\n        _registry.execute(\"window-attached\", win);\n    }\n\n    function handleDetached(tabGroupId: string): void {\n        _tabGroupId = tabGroupId;\n        // this tabGroupId is always the same as the current one\n        // the tabGroupId is actually changed in the frame-attached event\n        const un = _registry.add(\"frame-attached\", (win: Glue42.Windows.GDWindow) => {\n            if (win.id === id) {\n                un();\n                _registry.execute(\"detached\", resultWindow);\n            }\n        });\n    }\n\n    function handleWindowDetached(win: Glue42.Windows.GDWindow): void {\n        _registry.execute(\"window-detached\", win);\n    }\n\n    function handleZoomFactorChanged(zoomFactor: number): void {\n        _zoomFactor = zoomFactor;\n        _registry.execute(\"zoom-factor-changed\", resultWindow);\n    }\n\n    //#endregion \"Stream function\"\n\n    //#region \"Group Events\"\n    function handleGroupChanged(newGroup: Glue42.Windows.Group, oldGroup: Glue42.Windows.Group) {\n        logger.trace(`handle group changed to win: ${id} with group id: ${newGroup.id}`);\n        _group = newGroup;\n        _groupId = newGroup.id;\n        _registry.execute(\"group-changed\", resultWindow, newGroup, oldGroup);\n    }\n\n    // This is used to set the relation from window to corespondent group API, it could be undefined, if the window is removed from group\n    function handleGroupAssociation(group: Glue42.Windows.Group) {\n        if (group) {\n            _logger.trace(`setting group to win: ${id} with group id: ${group.id}`);\n        }\n        _group = group;\n    }\n\n    //#region \"Internal function\"\n\n    function getAllTabs(): Glue42.Windows.GDWindow[] {\n        const allWindows = windowStore.list;\n        if (_mode.toLowerCase() !== \"tab\") {\n            return [];\n        }\n        return Object.keys(allWindows).reduce((memo, win) => {\n            const window: WindowWrapper = allWindows[win];\n            if (window\n                && window.API.tabGroupId\n                && typeof window.API.tabGroupId !== \"undefined\"\n                && typeof resultWindow.tabGroupId !== \"undefined\"\n                && window.API.tabGroupId === resultWindow.tabGroupId) {\n                memo.push(window.API);\n            }\n            return memo;\n        }, []);\n    }\n\n    function mapWindowIdsToWindowObjects(windowIdArr: string[]): Glue42.Windows.GDWindow[] {\n        return windowIdArr.reduce((memo, winId) => {\n            const window = windowStore.get(winId);\n            if (window) {\n                memo.push(window.API);\n            }\n            return memo;\n        }, []);\n    }\n\n    function getNeighboursByDirection(direction: string): Glue42.Windows.GDWindow[] {\n        const windowIds = _neighbours[direction];\n        if (typeof windowIds !== \"undefined\") {\n            return mapWindowIdsToWindowObjects(windowIds);\n        }\n    }\n\n    function getApplicationName(): string {\n        if (_context._APPLICATION_NAME) {\n            return _context._APPLICATION_NAME;\n        }\n        if (_context && _context._t42 && _context._t42.application) {\n            return _context._t42.application;\n        }\n        const info = getWindowInfo();\n        if (!info) {\n            return undefined;\n        }\n\n        return info.applicationName;\n    }\n\n    function getWindowInfo() {\n        if (typeof window.glue42gd !== \"undefined\" && window.glue42gd.getWindowInfo) {\n            const info = window.glue42gd.getWindowInfo(id);\n            if (!info) {\n                return undefined;\n            } else {\n                return info;\n            }\n        }\n    }\n\n    function areBoundsEqual(requested: Partial<Glue42.Windows.Bounds>, current: Glue42.Windows.Bounds) {\n        let height = requested.height;\n        let width = requested.width;\n        if (requested.height < _settings.minHeight) {\n            height = _settings.minHeight;\n        }\n        if (requested.height > _settings.maxHeight) {\n            height = _settings.maxHeight;\n        }\n        if (requested.width < _settings.minWidth) {\n            width = _settings.minWidth;\n        }\n        if (requested.width > _settings.maxWidth) {\n            width = _settings.maxWidth;\n        }\n\n        const areHeightsEqual = height ? current.height === height : true;\n        const areWidthsEqual = width ? current.width === width : true;\n        const areLeftsEqual = requested.left ? current.left === requested.left : true;\n        const areTopsEqual = requested.top ? current.top === requested.top : true;\n\n        return areHeightsEqual && areWidthsEqual && areLeftsEqual && areTopsEqual;\n    }\n\n    //#endregion \"Internal function\"\n\n    //#region \"API\"\n\n    resultWindow = {\n        get name() {\n            return _name;\n        },\n        get application() {\n            const appManager = appManagerGetter();\n            return appManager ? appManager.application(getApplicationName()) : undefined;\n        },\n        get hostInstance() {\n            return executor.hostInstance;\n        },\n        get agmInstance() {\n            if (window.glue42gd) {\n                return agm.servers().find((s) => s.windowId === this.id);\n            }\n            const appName = getApplicationName();\n            return appName ? { application: appName } : undefined;\n        },\n        get url() {\n            return _url;\n        },\n        id,\n        get title() {\n            return _title;\n        },\n        get windowStyleAttributes() {\n            return _settings;\n        },\n        get settings() {\n            return _settings;\n        },\n        get tabGroupId() {\n            return _mode.toLowerCase() === \"tab\" ? _tabGroupId : undefined;\n        },\n        get frameButtons() {\n            return _frameButtons;\n        },\n        get mode() {\n            return _mode;\n        },\n        get state() {\n            return _windowState;\n        },\n        get isCollapsed() {\n            return isCollapsed;\n        },\n        get isVisible() {\n            return _isVisible;\n        },\n        get isLocked() {\n            return _isLocked;\n        },\n        get context() {\n            return _context;\n        },\n        get bounds() {\n            return _bounds;\n        },\n        get minHeight() {\n            return _settings.minHeight;\n        },\n        get maxHeight() {\n            return _settings.maxHeight;\n        },\n        get minWidth() {\n            return _settings.minWidth;\n        },\n        get maxWidth() {\n            return _settings.maxWidth;\n        },\n        get isFocused() {\n            return _focus;\n        },\n        get frameColor() {\n            return _frameColor;\n        },\n        get opened() {\n            return resultWindow.id !== undefined;\n        },\n        get group() {\n            return _group;\n        },\n\n        get groupId() {\n            return _groupId;\n        },\n\n        get topNeighbours() {\n            return getNeighboursByDirection(\"top\");\n        },\n\n        get leftNeighbours() {\n            return getNeighboursByDirection(\"left\");\n        },\n\n        get rightNeighbours() {\n            return getNeighboursByDirection(\"right\");\n        },\n\n        get bottomNeighbours() {\n            return getNeighboursByDirection(\"bottom\");\n        },\n\n        get isGroupHeaderVisible() {\n            return _isGroupHeaderVisible;\n        },\n\n        get activityId() {\n            if (_context._t42) {\n                return _context._t42.activityId;\n            }\n            const info = getWindowInfo();\n            if (!info) {\n                return undefined;\n            }\n            return info.activityId;\n        },\n\n        get activityWindowId() {\n            if (_context._t42) {\n                return _context._t42.activityWindowId;\n            }\n            const info = getWindowInfo();\n            if (!info) {\n                return undefined;\n            }\n            return info.activityWindowId;\n        },\n\n        get windowType() {\n            return options.windowType || \"electron\";\n        },\n\n        get zoomFactor() {\n            return _zoomFactor;\n        },\n        get screen() {\n            return utils.getMonitor(resultWindow.bounds, (window.glue42gd as any).monitors);\n        },\n        maximize,\n        restore,\n        minimize,\n        maximizeRestore,\n        collapse,\n        expand,\n        toggleCollapse,\n        focus,\n        activate,\n        moveResize,\n        setTitle,\n        setStyle,\n        setOnTop,\n        resetButtons,\n        setSizeConstraints,\n        navigate,\n        addFrameButton,\n        removeFrameButton,\n        setVisible,\n        show: () => setVisible(true),\n        hide: () => setVisible(false),\n        center: (screen) => moveResize(utils.getDisplayCenterOfScreen(resultWindow.bounds, screen || resultWindow.screen)),\n        close,\n        snap,\n        showLoader,\n        hideLoader,\n        updateContext,\n        lock,\n        unlock,\n        getIcon,\n        setIcon,\n        setFrameColor,\n        attachTab,\n        detachTab,\n        setTabHeaderVisible,\n        showPopup,\n        createFlydown,\n        setModalState,\n        setZoomFactor,\n        zoomIn,\n        zoomOut,\n        showDevTools,\n        capture,\n        flash,\n\n        onClose,\n        onUrlChanged,\n        onTitleChanged,\n        onFrameButtonAdded,\n        onFrameButtonRemoved,\n        onFrameButtonClicked,\n        onCollapsed,\n        onExpanded,\n        onMinimized,\n        onMaximized,\n        onNormal,\n        onAttached,\n        onDetached,\n        onVisibilityChanged,\n        onContextUpdated,\n        onLockingChanged,\n        onBoundsChanged,\n        onFrameColorChanged,\n        onFocusChanged,\n        onGroupChanged,\n        onWindowAttached,\n        onWindowDetached,\n        onTabSelectionChanged,\n        onTabHeaderVisibilityChanged,\n        onClosing,\n        onRefreshing,\n        onZoomFactorChanged,\n\n        get tabs() {\n            return getAllTabs();\n        },\n\n        get isTabHeaderVisible() {\n            return _isTabHeaderVisible;\n        },\n\n        get isTabSelected() {\n            return _isTabSelected;\n        },\n\n        // @glue42/web compatibility layer\n        getURL() {\n            return Promise.resolve(_url);\n        },\n\n        getTitle() {\n            return Promise.resolve(_title);\n        },\n\n        getBounds(): Promise<Glue42.Windows.Bounds> {\n            return Promise.resolve(_bounds);\n        },\n\n        getContext(): Promise<any> {\n            return Promise.resolve(_context);\n        },\n\n        setContext(context: any): Promise<GDWindow> {\n            return updateContext(context);\n\n        },\n\n        resizeTo(width?: number, height?: number): Promise<GDWindow> {\n            return moveResize({ width, height });\n\n        },\n\n        moveTo(top?: number, left?: number): Promise<GDWindow> {\n            return moveResize({ top, left });\n        }\n    };\n\n    //#endregion \"API\"\n\n    //#endregion \"Group Events\"\n\n    const events: WindowEvents = {\n        handleWindowClose,\n        handleWindowChangeState,\n        handleTitleChanged,\n        handleVisibilityChanged,\n        handleUrlChanged,\n        handleWindowSettingsChanged,\n        handleContextUpdated,\n        handleFrameIsLockedChanged,\n        handleBoundsChanged,\n        handleFocusChanged,\n        handleFrameButtonAdded,\n        handleFrameButtonRemoved,\n        handleFrameButtonClicked,\n        handleFrameColorChanged,\n        handleFrameAttached,\n        handleFrameSelectionChanged,\n        handleCompositionChanged,\n        handleGroupHeaderVisibilityChanged,\n        handleTabHeaderVisibilityChanged,\n        handleGroupChanged,\n        handleGroupAssociation,\n        handleAttached,\n        handleDetached,\n        handleWindowAttached,\n        handleWindowDetached,\n        handleZoomFactorChanged\n    };\n\n    return {\n        API: resultWindow,\n        Events: events,\n    };\n};\n","import { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../../../glue\";\nimport { Executor, FlashOptions } from \"../../types\";\nimport { ShowFlydownData, ReformatedFlydownOptions, ReformatedFlydownZone, ReformatedPopupOptions } from \"./types\";\nimport { CallbackRegistry, default as CallbackFactory } from \"callback-registry\";\n\nexport class GDExecutor implements Executor {\n    private agm: Glue42Core.AGM.API;\n    private agmTarget: {};\n    private _registry: CallbackRegistry = CallbackFactory();\n\n    public get hostInstance() {\n        return this.agmTarget;\n    }\n\n    public init(\n        agm: Glue42Core.AGM.API,\n        instance: Glue42Core.AGM.Instance | string\n    ) {\n        this.agm = agm;\n        this.agmTarget = instance;\n    }\n\n    public close(\n        resultWindow: Glue42.Windows.GDWindow\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"close\", { windowId: resultWindow.id })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public navigate(\n        resultWindow: Glue42.Windows.GDWindow,\n        newUrl: string\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"navigate\", {\n                windowId: resultWindow.id,\n                options: {\n                    url: newUrl\n                }\n            })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    // Calls the public methods of the window. No Call to GD is made\n    public async setStyle(\n        resultWindow: Glue42.Windows.GDWindow,\n        style: Glue42.Windows.WindowSettings\n    ): Promise<Glue42.Windows.GDWindow> {\n        const stylePromises: Array<Promise<any>> = [];\n        const wait = (promise: Promise<any>) => stylePromises.push(promise);\n\n        if (style.focus !== undefined && !resultWindow.isFocused) {\n            wait(resultWindow.focus());\n        }\n\n        // Todo: only if !isRestoring (hopefully setVisible does this check)\n        if (style.hidden !== undefined) {\n            const toBeVisible = !style.hidden;\n            wait(resultWindow.setVisible(toBeVisible));\n        }\n\n        if (style.onTop !== undefined) {\n            wait(resultWindow.setOnTop(style.onTop));\n        }\n\n        const {\n            maxWidth, maxHeight, minWidth, minHeight,\n            allowClose, allowCollapse, allowLockUnlock, allowMaximize, allowMinimize\n        } = style;\n\n        wait(resultWindow.setSizeConstraints({ maxWidth, maxHeight, minWidth, minHeight }));\n        wait(resultWindow.resetButtons({ allowClose, allowCollapse, allowLockUnlock, allowMaximize, allowMinimize }));\n\n        await Promise.all(stylePromises);\n\n        return resultWindow;\n    }\n\n    public setSizeConstraints(\n        resultWindow: Glue42.Windows.GDWindow,\n        constraints: Glue42.Windows.SizeConstraints\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"setSizeConstraints\", {\n                windowId: resultWindow.id,\n                options: constraints\n            }).then(() => {\n                resolve(resultWindow);\n            }).catch(reject);\n        });\n    }\n\n    public resetButtons(\n        resultWindow: Glue42.Windows.GDWindow,\n        buttonsConfig: Glue42.Windows.WindowButtons\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"resetButtons\", {\n                windowId: resultWindow.id,\n                options: buttonsConfig\n            }).then(() => {\n                resolve(resultWindow);\n            }).catch(reject);\n        });\n    }\n\n    public setOnTop(\n        resultWindow: Glue42.Windows.GDWindow,\n        onTop: boolean\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"setOnTop\", {\n                windowId: resultWindow.id,\n                options: { onTop }\n            }).then(() => {\n                resolve(resultWindow);\n            }).catch(reject);\n        });\n    }\n    public setTitle(\n        resultWindow: Glue42.Windows.GDWindow,\n        newTitle: string\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            const options = {\n                windowId: resultWindow.id,\n                options: {\n                    title: newTitle\n                }\n            };\n\n            this.execute(\"setTitle\", options)\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n\n            Promise.resolve();\n        });\n    }\n\n    public moveResize(\n        resultWindow: Glue42.Windows.GDWindow,\n        dimensions: Partial<Glue42.Windows.Bounds>\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"moveResize\", {\n                windowId: resultWindow.id,\n                options: {\n                    bounds: dimensions\n                }\n            })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public addFrameButton(\n        resultWindow: Glue42.Windows.GDWindow,\n        buttonInfo: Glue42.Windows.ButtonInfo\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"addButton\", {\n                windowId: resultWindow.id,\n                options: buttonInfo\n            })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public removeFrameButton(\n        resultWindow: Glue42.Windows.GDWindow,\n        buttonId: string\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"removeButton\", {\n                windowId: resultWindow.id,\n                options: buttonId\n            })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public activate(\n        resultWindow: Glue42.Windows.GDWindow\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"activate\", { windowId: resultWindow.id })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public focus(\n        resultWindow: Glue42.Windows.GDWindow\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"focus\", { windowId: resultWindow.id })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public maximizeRestore(\n        resultWindow: Glue42.Windows.GDWindow\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            function successHandler(w: Glue42.Windows.GDWindow) {\n                resolve(w);\n            }\n\n            function errorHandler(e: string) {\n                reject(e);\n            }\n\n            this.execute(\"maximizeRestore\", { windowId: resultWindow.id })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public maximize(\n        resultWindow: Glue42.Windows.GDWindow\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"maximize\", { windowId: resultWindow.id })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public restore(\n        resultWindow: Glue42.Windows.GDWindow\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"restore\", { windowId: resultWindow.id })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public minimize(\n        resultWindow: Glue42.Windows.GDWindow\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"minimize\", { windowId: resultWindow.id })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public collapse(\n        resultWindow: Glue42.Windows.GDWindow\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"collapse\", { windowId: resultWindow.id })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public expand(\n        resultWindow: Glue42.Windows.GDWindow\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"expand\", { windowId: resultWindow.id })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public toggleCollapse(\n        resultWindow: Glue42.Windows.GDWindow\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"toggleCollapse\", { windowId: resultWindow.id })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public snap(\n        resultWindow: Glue42.Windows.GDWindow,\n        target: string | Glue42.Windows.GDWindow,\n        direction: Glue42.Windows.RelativeDirection\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            const sourceWindowId = resultWindow.id;\n            let targetWindowId;\n            const errorMessage =\n                \"Invalid target parameter - should be an object with property id or a string. Invoked for source window id:\" +\n                resultWindow.id;\n            if (!target) {\n                reject(errorMessage);\n                return;\n            }\n            if (typeof target === \"string\") {\n                targetWindowId = target;\n            } else if (typeof target.id !== \"undefined\") {\n                targetWindowId = target.id;\n            } else {\n                reject(errorMessage);\n                return;\n            }\n            const args: any = {\n                targetWindowId\n            };\n\n            if (direction) {\n                args.snappingEdge = direction;\n            }\n            this.execute(\"snap\", {\n                windowId: resultWindow.id,\n                options: args\n            })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public attachTab(\n        resultWindow: Glue42.Windows.GDWindow,\n        options: any\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"attachTab\", {\n                windowId: resultWindow.id,\n                options\n            })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public detachTab(\n        resultWindow: Glue42.Windows.GDWindow,\n        options: Glue42.Windows.DetachOptions\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            function successHandler(w: Glue42.Windows.GDWindow) {\n                resolve(w);\n            }\n\n            function errorHandler(e: string) {\n                reject(e);\n            }\n\n            this.execute(\"detachTab\", {\n                windowId: resultWindow.id,\n                options\n            })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public setVisible(\n        resultWindow: Glue42.Windows.GDWindow,\n        toBeVisible: boolean = true\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            let command: string;\n            if (toBeVisible) {\n                command = \"show\";\n            } else {\n                command = \"hide\";\n            }\n\n            this.execute(command, { windowId: resultWindow.id })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public showLoader(\n        resultWindow: Glue42.Windows.GDWindow,\n        loader?: Glue42.Windows.Loader\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"showLoadingAnimation\", { windowId: resultWindow.id, options: loader })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public hideLoader(\n        resultWindow: Glue42.Windows.GDWindow\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"hideLoadingAnimation\", { windowId: resultWindow.id })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public updateContext(\n        resultWindow: Glue42.Windows.GDWindow,\n        context: any\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"updateContext\", {\n                windowId: resultWindow.id,\n                context,\n                replace:\n                    Object.keys(resultWindow.context).length > 0 ? false : true\n            })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public lock(\n        resultWindow: Glue42.Windows.GDWindow\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"lockUnlock\", {\n                windowId: resultWindow.id,\n                options: {\n                    lock: true\n                }\n            })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public unlock(\n        resultWindow: Glue42.Windows.GDWindow\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"lockUnlock\", {\n                windowId: resultWindow.id,\n                options: {\n                    lock: false\n                }\n            })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public getIcon(resultWindow: Glue42.Windows.GDWindow): Promise<string> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"getIcon\", {\n                windowId: resultWindow.id,\n                options: {}\n            })\n                .then((result) => {\n                    resolve((result as any).icon);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public setIcon(\n        resultWindow: Glue42.Windows.GDWindow,\n        base64Image: string\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"setIcon\", {\n                windowId: resultWindow.id,\n                options: {\n                    dataURL: base64Image\n                }\n            })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public setFrameColor(\n        resultWindow: Glue42.Windows.GDWindow,\n        frameColor: string\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            function successHandler(w: Glue42.Windows.GDWindow) {\n                resolve(w);\n            }\n\n            function errorHandler(e: string) {\n                reject(e);\n            }\n\n            this.execute(\"setFrameColor\", {\n                windowId: resultWindow.id,\n                options: {\n                    frameColor\n                }\n            })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public setTabHeaderVisible(\n        resultWindow: Glue42.Windows.GDWindow,\n        toBeTabHeaderVisible: boolean\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            function successHandler(w: Glue42.Windows.GDWindow) {\n                resolve(w);\n            }\n\n            function errorHandler(e: string) {\n                reject(e);\n            }\n\n            this.execute(\"setTabHeaderVisible\", {\n                windowId: resultWindow.id,\n                options: {\n                    toShow: toBeTabHeaderVisible\n                }\n            })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public async showPopup(targetWindow: Glue42.Windows.GDWindow, options: Glue42.Windows.PopupOptions): Promise<Glue42.Windows.GDWindow> {\n        if (!options) {\n            return Promise.reject(\"The options object is not valid!\");\n        }\n\n        const optionsCopy = { ...options };\n\n        if (!optionsCopy.targetLocation) {\n            optionsCopy.targetLocation = \"bottom\" as Glue42.Windows.PopupTargetLocation;\n        }\n\n        const reformatedOptions: ReformatedPopupOptions & { targetId: string } = {\n            ...optionsCopy,\n            popupBounds: optionsCopy.size,\n            targetId: targetWindow.id,\n            popupId: optionsCopy.windowId\n        };\n\n        await this.execute(\"showPopupWindow\", {\n            windowId: targetWindow.id,\n            options: reformatedOptions\n        });\n\n        return targetWindow;\n    }\n\n    public async createFlydown(windowId: string, options: Glue42.Windows.FlydownOptions) {\n        if (!options) {\n            return Promise.reject(\"The options object is not valid!\");\n        }\n\n        const optionsCopy = { ...options };\n\n        if (!optionsCopy.horizontalOffset) {\n            optionsCopy.horizontalOffset = 0;\n        }\n\n        if (!optionsCopy.verticalOffset) {\n            optionsCopy.verticalOffset = 0;\n        }\n\n        const fullOptions: Glue42.Windows.FlydownOptions & { targetId: string, flydownBounds: Glue42.Windows.FlydownOptions[\"size\"] } = this.reformatFlydownOptions(windowId, optionsCopy);\n\n        return this.execute(\"setFlydownArea\", { windowId, options: fullOptions }).then(() => {\n            const zoneIds = fullOptions.zones.map((z) => z.id);\n\n            fullOptions.zones.forEach((z) => {\n                let callback: (...args: any[]) => any = typeof (z.flydownSize) === \"function\" ?\n                    z.flydownSize : () => z.flydownSize;\n\n                if (options.size instanceof Function && z.flydownSize) {\n                    callback = async (data: Glue42.Windows.ShowFlydownData, cancel: () => void) => {\n                        let result;\n                        // The options callback must be always invoked\n                        // If the property in the zone is null it will be automatically\n                        // assigned to the same callback from the code above reformatFlydownOptions\n                        if (options.size instanceof Function) {\n                            result = await options.size(data, cancel);\n                        }\n\n                        // If both are callbacks the zone has higher priority\n                        // If they are the same only one should be invoked\n                        if (z.flydownSize instanceof Function && z.flydownSize !== options.size) {\n                            return await z.flydownSize(data, cancel) || result;\n                        }\n\n                        // The options callback overwrites the bounds object specified in the zone\n                        return result || z.flydownSize;\n                    };\n                }\n                this._registry.clearKey(`${fullOptions.targetId}_${z.id}`);\n                this._registry.add(`${fullOptions.targetId}_${z.id}`, callback);\n            });\n\n            return {\n                destroy: () => this.clearFlydownArea(fullOptions.targetId, zoneIds),\n                options: optionsCopy\n            };\n        });\n    }\n\n    public async setModalState(windowId: string, isModal: boolean): Promise<void> {\n        return this.execute(\"setModalState\", { windowId, options: { isModal } });\n    }\n\n    public async handleFlydownBoundsRequested(targetId: string, data: ShowFlydownData) {\n        const cancelCallback = () => data.cancel = true;\n\n        const callbackData: Glue42.Windows.ShowFlydownData = {\n            zoneId: data.flydownId,\n            flydownWindowBounds: data.flydownWindowBounds,\n            flydownWindowId: data.flydownWindowId,\n        };\n\n        const responses = await Promise.all(this._registry.execute(`${targetId}_${data.flydownId}`, callbackData, cancelCallback));\n\n        if (responses.length === 1) {\n            const defaultResponse = { height: 0, width: 0, top: 0, left: 0 };\n            const response = typeof (responses[0]) === \"object\" && !Array.isArray(responses[0]) ? responses[0] : defaultResponse;\n            const responseOptions: ShowFlydownData = { ...data, flydownWindowBounds: response };\n\n            return responseOptions;\n        }\n    }\n\n    public async zoomIn(window: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"zoomIn\", {\n            windowId: window.id,\n        });\n        return window;\n    }\n\n    public async zoomOut(window: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"zoomOut\", {\n            windowId: window.id,\n        });\n        return window;\n    }\n\n    public async setZoomFactor(window: Glue42.Windows.GDWindow, zoomFactor: number): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"setZoomFactor\", {\n            windowId: window.id,\n            options: {\n                zoomFactor\n            }\n        });\n        return window;\n    }\n\n    public async showDevTools(window: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"showDevTools\", {\n            windowId: window.id,\n        });\n\n        return window;\n    }\n\n    public async capture(window: Glue42.Windows.GDWindow, options: Glue42.Windows.CaptureOptions): Promise<string> {\n        const base64screenshot = (await this.execute(\n            \"captureScreenshot\",\n            { windowId: window.id, options: { ...options } }\n        )).data;\n\n        return base64screenshot;\n    }\n\n    public async captureGroup(windowIds: string[], options: Glue42.Windows.CaptureOptions): Promise<string> {\n        const base64screenshot: string = (await this.execute(\n            \"captureGroupScreenshot\",\n            { windowId: windowIds[0], options: { groupWindowIds: windowIds, ...options } }\n        )).data;\n\n        return base64screenshot;\n    }\n\n    public async flash(resultWindow: Glue42.Windows.GDWindow, options: FlashOptions): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\n            \"flash\",\n            { windowId: resultWindow.id, options: { ...options } }\n        );\n\n        return resultWindow;\n    }\n\n    public execute(\n        command: string,\n        options: any\n    ): Promise<any> {\n        return new Promise((resolve, reject) => {\n            const args: any = { ...options, command };\n            this.agm\n                .invoke(\"T42.Wnd.Execute\", args, this.agmTarget)\n                .then((i: Glue42Core.AGM.InvocationResult<any>) => {\n                    if (i.returned && i.returned.errorMsg) {\n                        reject(i);\n                    } else {\n                        resolve(i.returned);\n                    }\n                })\n                .catch((i: Glue42Core.AGM.InvocationResult<any>) => {\n                    reject(i);\n                });\n        });\n    }\n\n    /** Groups */\n    public setGroupHeaderVisible(\n        windowId: string,\n        toShow: boolean\n    ): Promise<Glue42Core.AGM.InvocationResult<any>> {\n        return this.execute(\"setGroupHeaderVisibility\", {\n            windowId,\n            options: {\n                toShow\n            }\n        });\n    }\n\n    public onClosing(callback: (success: () => void, error: () => void) => void, id: string): () => void {\n        const glue42gd = typeof window !== \"undefined\" && (window as any).glue42gd;\n        if (glue42gd) {\n            return glue42gd.addCloseHandler(callback, id);\n        }\n    }\n\n    public onRefreshing(callback: (success: () => void, error: () => void, prevent: () => void) => void, id: string): () => void {\n        const glue42gd = typeof window !== \"undefined\" && (window as any).glue42gd;\n        if (glue42gd) {\n            return glue42gd.addRefreshHandler(callback, id);\n        }\n    }\n\n    private reformatFlydownOptions(windowId: string, options: Glue42.Windows.FlydownOptions) {\n        const assignGeneralIfUnassigned = (zone: Glue42.Windows.FlydownZone, prop: keyof Glue42.Windows.FlydownZone & keyof Glue42.Windows.FlydownOptions) => {\n            if (options[prop] && (zone[prop] === undefined || zone[prop] === null)) {\n                const valueFromOptions = options[prop];\n                (zone[prop] as any) = valueFromOptions;\n            }\n        };\n\n        const zones: ReformatedFlydownOptions[\"zones\"] = options.zones.map((z) => {\n            assignGeneralIfUnassigned(z, \"windowId\");\n            assignGeneralIfUnassigned(z, \"targetLocation\");\n\n            if (options.size && (z.flydownSize === undefined || z.flydownSize === null)) {\n                z.flydownSize = options.size;\n            }\n\n            (z as ReformatedFlydownZone).flydownBounds = z.flydownSize as any;\n            (z as ReformatedFlydownZone).flydownId = z.windowId;\n\n            if (!z.targetLocation) {\n                z.targetLocation = \"bottom\" as Glue42.Windows.PopupTargetLocation.Bottom;\n            }\n\n            return z;\n        });\n\n        return {\n            ...options,\n            zones,\n            targetId: windowId,\n            flydownBounds: options.size,\n            flydownActiveArea: options.activeArea\n        };\n    }\n\n    private clearFlydownArea(windowId: string, areaIds: string[]) {\n        return this.execute(\"clearFlydownWindowArea\", {\n            windowId,\n            options: {}\n        }).then(() => {\n            areaIds.forEach((id) => {\n                this._registry.clearKey(`${windowId}_${id}`);\n            });\n        });\n    }\n}\n\nexport default new GDExecutor();\n","import { default as windowStore } from \"../store\";\nimport { WindowWrapper } from \"../types\";\n\nexport function getWindowsByTabGroupId(windowId: string, tabGroupId: string) {\n    const windows = windowStore.list;\n    return Object.keys(windows).reduce((memo: { [key: string]: WindowWrapper }, id) => {\n        const win = windows[id];\n        if (win.API.tabGroupId === tabGroupId && win.API.id !== windowId) {\n            memo[id] = win;\n        }\n        return memo;\n    }, {});\n}\n","import { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../../../glue\";\nimport { default as windowStore } from \"../../store\";\nimport { Environment, Executor, WindowConstructorOptions, WindowEvents, WindowWrapper } from \"../../types\";\nimport windowFactory from \"../../window\";\nimport { default as executor } from \"./executor\";\nimport { CallbackRegistry, UnsubscribeFunction, default as CallbackFactory } from \"callback-registry\";\nimport {\n    FullInfoEvent,\n    StreamEvent,\n    WindowInfo,\n    GroupHeaderVisibilityChanged,\n    UrlChanged,\n    TitleChanged,\n    BoundsChanged,\n    FocusChanged,\n    CompositionChanged,\n    ExtendedStreamEvent,\n    ShowFlydownData,\n    EventWithResponseData,\n    ResponseTypes\n} from \"./types\";\nimport { getWindowsByTabGroupId } from \"../helpers\";\n\nexport default class GDEnvironment implements Environment {\n\n    private _registry: CallbackRegistry = CallbackFactory();\n    private _agm: Glue42Core.AGM.API;\n    private _logger: Glue42Core.Logger.API;\n    private _waitTimeout: number = 10000;\n    private _agmInstance: Glue42Core.AGM.Instance | \"best\" | \"all\";\n    private _windowId: string;\n    private _appManagerGetter: () => Glue42.AppManager.API;\n\n    constructor(agm: Glue42Core.AGM.API, logger: Glue42Core.Logger.API, appManagerGetter: () => Glue42.AppManager.API, instance?: Glue42Core.AGM.Instance, wndId?: string) {\n        this._agm = agm;\n        this._logger = logger.subLogger(\"gd-env\");\n        this._agmInstance = this.normalizeInstance(instance);\n        this._windowId = wndId;\n        this._appManagerGetter = appManagerGetter;\n    }\n\n    public init(): Promise<GDEnvironment> {\n        return new Promise((resolve, reject) => {\n            // if we don't have an Instance, thats means that we are running outside from any Tick42 Containers\n            // so our target is best\n            if (typeof this._agmInstance === \"undefined\") {\n                this._agmInstance = \"best\";\n            }\n\n            this._agm.registerAsync(\"T42.Wnd.OnEventWithResponse\", (args, caller, success, err) => {\n                this.respondToEvent(args as any).then(success).catch(err);\n            });\n\n            const streamPromise = new Promise<void>((streamResolve, streamReject) => {\n                this._agm.subscribe(\"T42.Wnd.OnEvent\", {\n                    waitTimeoutMs: this._waitTimeout,\n                    target: this._agmInstance,\n                    onData: (streamData: any) => {\n                        this.updateWindow(streamData.data);\n                    },\n                    onConnected: (instance) => {\n                        this._agmInstance = this.normalizeInstance(instance);\n                        // Init the executor\n                        executor.init(this._agm, this._agmInstance);\n                        resolve(this);\n                    }\n                }).catch((err: any) => {\n                    reject(\"Can not subscribe for stream T42.Wnd.OnEvent. Err: \" + err);\n                });\n            });\n        });\n\n    }\n\n    public get executor(): Executor {\n        return executor;\n    }\n\n    public open(name: string, url: string, options: any, success: (id: string) => void, error: (error: object | string) => void): void {\n        options = options || {};\n        const copyOptions = { ...options };\n\n        // relativeTo fix\n        if (name === undefined) {\n            error({ message: \"The name is undefined\" });\n            return;\n        }\n\n        if (copyOptions.relativeTo !== undefined && typeof copyOptions.relativeTo !== \"string\") {\n            copyOptions.relativeTo = copyOptions.relativeTo.id || \"\";\n        }\n\n        copyOptions.name = name;\n        copyOptions.url = url;\n\n        // This is for compatibility between gd2 and gd3\n        copyOptions.windowState = options.windowState || options.state;\n        // Otherwise glue desktop throws an error for extra properties\n        delete copyOptions.state;\n\n        this._agm.invoke<{ id: string }>(\"T42.Wnd.Create\", copyOptions, this._agmInstance)\n            .then((message) => {\n                if (message.returned !== undefined) {\n                    const id: string = message.returned.id;\n                    success(id);\n                } else {\n                    error({ message: \"failed to execute T42.Wnd.Create - unknown reason\" });\n                }\n            })\n            .catch(error);\n    }\n\n    public createFlydown(windowId: string, options: Glue42.Windows.FlydownOptions): Promise<Glue42.Windows.Flydown> {\n        return this.executor.createFlydown(windowId, options);\n    }\n\n    public async showPopup(windowId: string, options: Glue42.Windows.PopupOptions): Promise<void> {\n        const window = windowStore.get(windowId);\n        await this.executor.showPopup(window.API, options);\n    }\n\n    public tabAttached(callback: (tabWindow: Glue42.Windows.GDWindow, newTabGroupId: string, tabHeaderVisible: boolean) => void): UnsubscribeFunction {\n        return this._registry.add(\"tab-attached\", callback);\n    }\n\n    public tabDetached(callback: (window: Glue42.Windows.GDWindow, tabGroupId: string, oldTabGroupId: string) => void): UnsubscribeFunction {\n        return this._registry.add(\"tab-detached\", callback);\n    }\n\n    public onWindowFrameColorChanged(callback: (window: Glue42.Windows.GDWindow) => void) {\n        return this._registry.add(\"frame-color-changed\", callback);\n    }\n\n    public onEvent(callback: (windowInfo: any) => void): UnsubscribeFunction {\n        return this._registry.add(\"window-event\", callback);\n    }\n\n    public my(): string {\n        return this._windowId;\n    }\n\n    public execute<T>(command: string, windowId: string, options: {}): Promise<Glue42Core.AGM.InvocationResult<T>> {\n        return this._agm.invoke<T>(\"T42.Wnd.Execute\", {\n            command,\n            options,\n            windowId,\n        });\n    }\n\n    /** Groups */\n    public setGroupHeaderVisible(windowId: string, toShow: boolean): Promise<Glue42Core.AGM.InvocationResult<Glue42.Windows.Group>> {\n        return this._agm.invoke<Glue42.Windows.Group>(\"T42.Wnd.SetGroupHeaderVisible\", {\n            windowId,\n            toShow,\n        }, this._agmInstance);\n    }\n\n    public onCompositionChanged(callback: (windowInfo: any) => void): UnsubscribeFunction {\n        return this._registry.add(\"composition-changed\", callback);\n    }\n\n    public onGroupHeaderVisibilityChanged(callback: (stream: any) => void): UnsubscribeFunction {\n        return this._registry.add(\"group-header-changed\", callback);\n    }\n\n    public onWindowGotFocus(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return this._registry.add(\"got-focus\", callback);\n    }\n\n    public onWindowLostFocus(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return this._registry.add(\"lost-focus\", callback);\n    }\n\n    // TODO revise it\n    private normalizeInstance(instance: Glue42Core.AGM.Instance) {\n        if (!instance) {\n            return undefined;\n        }\n        return {\n            application: instance.application,\n            machine: instance.machine,\n            user: instance.user,\n        };\n    }\n    private respondToEvent(args: EventWithResponseData): Promise<ResponseTypes> {\n        if (args.type === \"ShowFlydownBoundsRequested\") {\n            return this.executor.handleFlydownBoundsRequested(args.data.windowId, args.data);\n        }\n\n        return Promise.reject(`There isn't a handler for ${args.type}`);\n    }\n\n    private updateWindow(windowInfo: StreamEvent) {\n        const extendedStreamEvent = this.getExtendedStreamEvent(windowInfo);\n\n        // this is the snapshot of all windows\n        if (windowInfo.type === \"Snapshot\") {\n            const windowInfoFullInfoEvent = (windowInfo as FullInfoEvent);\n            windowInfoFullInfoEvent.windows.forEach((w) => {\n                const win = this.createWindow(w.id, w);\n                windowStore.markReadyToShow(win.API.id);\n                this._registry.execute(\"window-event\", extendedStreamEvent);\n            });\n\n            return;\n        }\n        // if new window handle it separately\n        if (windowInfo.type === \"Created\") {\n            const windowInfoCreatedEvent = (windowInfo as StreamEvent);\n            const win = this.createWindow(windowInfoCreatedEvent.windowId, windowInfoCreatedEvent.data || {});\n            windowStore.setReadyState(win.API.id);\n            this._registry.execute(\"window-event\", extendedStreamEvent);\n            return;\n        }\n\n        // otherwise check if the window is in our internal collections and update its state\n        const windowObjectAndEvents: WindowWrapper = windowStore.get((windowInfo as StreamEvent).windowId);\n        if (!windowObjectAndEvents) {\n            this._logger.error(`received update for unknown window. Stream:', ${JSON.stringify(windowInfo, null, 4)}`);\n            return;\n        }\n\n        const theWindow: Glue42.Windows.GDWindow = windowObjectAndEvents.API;\n        const theWindowEvents: WindowEvents = windowObjectAndEvents.Events;\n\n        // handle bounds changed\n        if (windowInfo.type === \"BoundsChanged\") {\n            const windowInfoBoundsChangedEvent = (windowInfo as BoundsChanged);\n            theWindowEvents.handleBoundsChanged(windowInfoBoundsChangedEvent.data);\n        }\n\n        // handle url changed\n        if (windowInfo.type === \"UrlChanged\") {\n            const windowInfoUrlChangedEvent = (windowInfo as UrlChanged);\n            windowStore.setUrlChangedState(windowInfoUrlChangedEvent.windowId);\n            theWindowEvents.handleUrlChanged(windowInfoUrlChangedEvent.data);\n        }\n\n        // handle title changed\n        if (windowInfo.type === \"TitleChanged\") {\n            const windowInfoTitleChanged = (windowInfo as TitleChanged);\n            theWindowEvents.handleTitleChanged(windowInfoTitleChanged.data);\n        }\n\n        // handle visibility changed\n        if (windowInfo.type === \"VisibilityChanged\") {\n            theWindowEvents.handleVisibilityChanged(windowInfo.data);\n        }\n\n        // handle context changed\n        if (windowInfo.type === \"ContextChanged\") {\n            theWindowEvents.handleContextUpdated(windowInfo.data);\n        }\n\n        // handle window state changed\n        if (windowInfo.type === \"StateChanged\") {\n            theWindowEvents.handleWindowChangeState(windowInfo.data);\n        }\n\n        // handle frame color changed\n        if (windowInfo.type === \"FrameColorChanged\") {\n            theWindowEvents.handleFrameColorChanged(windowInfo.data);\n            this._registry.execute(\"frame-color-changed\", theWindow);\n        }\n\n        // handle composition changed - groups API\n        if (windowInfo.type === \"CompositionChanged\") {\n            const windowInfoCompositionChanged = windowInfo as CompositionChanged;\n            theWindowEvents.handleCompositionChanged(windowInfoCompositionChanged.data.neighbors, windowInfoCompositionChanged.data.groupId);\n            this._registry.execute(\"composition-changed\", windowInfoCompositionChanged.data);\n        }\n\n        if (windowInfo.type === \"GroupHeaderVisibilityChanged\") {\n            const info = windowInfo as GroupHeaderVisibilityChanged;\n            theWindowEvents.handleGroupHeaderVisibilityChanged(info.data.groupHeaderVisible);\n            this._registry.execute(\"group-header-changed\", info.data);\n        }\n\n        // handle focus changed\n        if (windowInfo.type === \"FocusChanged\") {\n            const windowInfoFocusChanged = (windowInfo as FocusChanged);\n            this.focusChanged(theWindowEvents, theWindow, windowInfoFocusChanged.data);\n        }\n\n        if (windowInfo.type === \"WindowFrameChanged\") {\n            theWindowEvents.handleFrameAttached(windowInfo.data.frameId, windowInfo.data.isTabHeaderVisible);\n            this._registry.execute(\"frame-changed\");\n        }\n\n        if (windowInfo.type === \"WindowFrameAdded\") {\n            theWindowEvents.handleAttached(windowInfo.data.frameId, windowInfo.data.isTabHeaderVisible);\n            const winsToBeNotified: { [key: string]: WindowWrapper } = getWindowsByTabGroupId(theWindow.id, windowInfo.data.frameId);\n            // Getting all windows, except current, with same tabGroupId\n            Object.keys(winsToBeNotified).forEach((id: string) => {\n                const win = winsToBeNotified[id];\n                // Executing event windowAttached to all windows\n                win.Events.handleWindowAttached(theWindow);\n            });\n            this._registry.execute(\"tab-attached\", theWindow, windowInfo.data.frameId, windowInfo.data.isTabHeaderVisible);\n        }\n\n        if (windowInfo.type === \"WindowFrameRemoved\") {\n            // In the event, tabGroupId is empty, will be update on the next event FrameAttached\n            const oldTabGroupId = theWindow.tabGroupId;\n            theWindowEvents.handleDetached(windowInfo.data.frameId);\n            const winsToBeNotified: { [key: string]: WindowWrapper } = getWindowsByTabGroupId(theWindow.id, oldTabGroupId);\n\n            Object.keys(winsToBeNotified).forEach((id: string) => {\n                const win = winsToBeNotified[id];\n                win.Events.handleWindowDetached(theWindow);\n            });\n\n            const un = this._registry.add(\"frame-changed\", () => {\n                un();\n                this._registry.execute(\"tab-detached\", theWindow, windowInfo.data.frameId, theWindow.tabGroupId);\n            });\n\n        }\n\n        if (windowInfo.type === \"TabHeaderVisibilityChanged\") {\n            theWindowEvents.handleTabHeaderVisibilityChanged(windowInfo.data.isTabHeaderVisible);\n        }\n\n        if (windowInfo.type === \"FrameSelectionChanged\") {\n            theWindowEvents.handleFrameSelectionChanged(windowInfo.data.newWindowId, windowInfo.data.prevWindowId);\n        }\n\n        if (windowInfo.type === \"ButtonClicked\") {\n            theWindowEvents.handleFrameButtonClicked(windowInfo.data);\n        }\n\n        if (windowInfo.type === \"ButtonAdded\") {\n            theWindowEvents.handleFrameButtonAdded(windowInfo.data);\n        }\n\n        if (windowInfo.type === \"ButtonRemoved\") {\n            theWindowEvents.handleFrameButtonRemoved(windowInfo.data);\n        }\n        if (windowInfo.type === \"WindowZoomFactorChanged\") {\n            theWindowEvents.handleZoomFactorChanged(windowInfo.data);\n        }\n\n        // Clear the window on close event\n        if (windowInfo.type === \"Closed\") {\n            windowStore.remove(windowObjectAndEvents);\n            theWindowEvents.handleWindowClose();\n        }\n\n        if (windowInfo.type === \"FrameIsLockedChanged\") {\n            theWindowEvents.handleFrameIsLockedChanged(windowInfo.data);\n        }\n\n        // expose to external listeners\n        this._registry.execute(\"window-event\", extendedStreamEvent);\n    }\n\n    private createWindow(windowId: string, options: WindowInfo): WindowWrapper {\n        const windowObjAndEvents: WindowWrapper = windowFactory(windowId, this.mapToWindowConstructorOptions(options), executor, this._logger, this._appManagerGetter, this._agm);\n        windowStore.add(windowObjAndEvents);\n        return windowObjAndEvents;\n    }\n\n    private focusChanged(theWindowEvents: WindowEvents, theWindow: Glue42.Windows.GDWindow, focus: boolean) {\n        theWindowEvents.handleFocusChanged(focus);\n        if (focus) {\n            this._registry.execute(\"got-focus\", theWindow);\n        } else {\n            this._registry.execute(\"lost-focus\", theWindow);\n        }\n    }\n\n    private mapToWindowConstructorOptions(args: WindowInfo): WindowConstructorOptions {\n        // TODO\n        return {\n            name: args.name,\n            context: args.context,\n            bounds: args.bounds,\n            url: args.url,\n            title: args.title,\n            isVisible: args.isVisible,\n            focus: args.isFocused,\n            state: args.state,\n            frameColor: args.frameColor,\n            groupId: args.groupId,\n            neighbours: args.neighbors,\n            isFocused: args.isFocused,\n            isGroupHeaderVisible: args.groupHeaderVisible,\n            isCollapsed: args.isCollapsed,\n            tabGroupId: args.frameId,\n            mode: args.mode,\n            isTabHeaderVisible: args.isTabHeaderVisible,\n            isTabSelected: args.isActiveTab,\n            settings: args.settings,\n            windowType: args.windowType,\n            zoomFactor: args.zoomFactor,\n            // focus: args.focus,\n            isLocked: args.isLocked,\n            // settings: windowStyleAttributes,\n        };\n    }\n\n    private getExtendedStreamEvent(streamEvent: StreamEvent): StreamEvent | ExtendedStreamEvent {\n        try {\n            const result: ExtendedStreamEvent = {\n                state: streamEvent.type,\n                windowName: windowStore.get(streamEvent.windowId).API.name,\n                ...streamEvent\n            };\n\n            if (result.state === \"WindowFrameAdded\") {\n                result.state = \"TabAttached\";\n            }\n\n            if (result.state === \"StateChanged\") {\n                result.state = result.data.charAt(0).toUpperCase() + result.data.slice(1);\n            }\n\n            if (result.state === \"ButtonAdded\") {\n                result.state = \"FrameButtonAdded\";\n            }\n\n            if (result.state === \"ButtonRemoved\") {\n                result.state = \"FrameButtonRemoved\";\n            }\n\n            return result;\n        } catch (error) {\n            return streamEvent;\n        }\n    }\n}\n","import callbackRegistry, { CallbackRegistry } from \"callback-registry\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../glue\";\nimport { default as windowStore } from \"./store\";\nimport { Executor, GroupWrapper, WindowWrapper } from \"./types\";\n\nexport default (id: string, executor: Executor): GroupWrapper => {\n\n    const _registry: CallbackRegistry = callbackRegistry();\n\n    const _windowsId: string[] = [];\n\n    //#region \"API functions\"\n\n    function addWindow(winId: string): void {\n        if (_windowsId.indexOf(winId) === -1) {\n            _windowsId.push(winId);\n            const window: WindowWrapper = windowStore.get(winId);\n            window.Events.handleGroupAssociation(groupObject);\n            _registry.execute(\"window-added\", groupObject, window.API);\n        }\n    }\n\n    function removeWindow(winId: string): void {\n        const index: number = _windowsId.indexOf(winId);\n        if (index !== -1) {\n            _windowsId.splice(index, 1);\n            const window: Glue42.Windows.GDWindow = _mapToWindowObject(winId);\n            _registry.execute(\"window-removed\", groupObject, window);\n        }\n    }\n\n    function find(window: string | Glue42.Windows.GDWindow, success?: (window: Glue42.Windows.GDWindow) => void): Glue42.Windows.GDWindow {\n        let winId: string;\n        if (typeof window === \"string\") {\n            winId = window;\n        } else {\n            winId = window.id;\n        }\n        const index: number = _windowsId.indexOf(winId);\n        if (index !== -1) {\n            const mappedWindow: Glue42.Windows.GDWindow = _mapToWindowObject(_windowsId[index]);\n            if (typeof success === \"function\") {\n                success(mappedWindow);\n            }\n            return mappedWindow;\n        }\n    }\n\n    function windows(success?: (windows: Glue42.Windows.GDWindow[]) => void): Glue42.Windows.GDWindow[] {\n        const mappedWindows: Glue42.Windows.GDWindow[] = _mapToWindowObjects();\n        if (typeof success === \"function\") {\n            success(mappedWindows);\n        }\n        return mappedWindows;\n    }\n\n    function showHeader(success?: (group: Glue42.Windows.Group) => void, error?: Glue42Core.AGM.InvokeErrorHandler): Promise<Glue42.Windows.Group> {\n        return new Promise((resolve, reject) => {\n            Promise.all([\n                    executor.setGroupHeaderVisible(_windowsId[0], true),\n                    waitForHeaderVisibilityChanged()\n                ])\n                .then(() => {\n                    if (typeof success === \"function\") {\n                        success(groupObject);\n                    }\n                    resolve(groupObject);\n                })\n                .catch((e: any) => {\n                    reject(e);\n                });\n        });\n    }\n\n    function hideHeader(success?: (group: Glue42.Windows.Group) => void, error?: () => void): Promise<Glue42.Windows.Group> {\n        return new Promise((resolve, reject) => {\n            Promise.all([\n                    executor.setGroupHeaderVisible(_windowsId[0], false),\n                    waitForHeaderVisibilityChanged()\n                ])\n                .then(() => {\n                    if (typeof success === \"function\") {\n                        success(groupObject);\n                    }\n                    resolve(groupObject);\n                })\n                .catch((e: any) => {\n                    return;\n                });\n        });\n    }\n\n    function capture(captureOptions: Glue42.Windows.CaptureOptions): Promise<string> {\n        return executor.captureGroup(_windowsId, captureOptions);\n    }\n\n    function waitForHeaderVisibilityChanged(): Promise<void> {\n        return new Promise((resolve, reject) => {\n            const unsub = onHeaderVisibilityChanged((group) => {\n                unsub();\n                resolve();\n            });\n\n            // setTimeout(() => {\n            //     resolve();\n            // }, 1500);\n        });\n    }\n\n    function execute(command: string, options?: object, success?: (group: Glue42.Windows.Group) => void, error?: (err?: any) => void): Promise<Glue42.Windows.Group> {\n        return new Promise((resolve, reject) => {\n            executor.execute<Glue42.Windows.Group>(command, options)\n                .then((w) => {\n                    if (typeof success === \"function\") {\n                        success(groupObject);\n                    }\n                    resolve(groupObject);\n                })\n                .catch((e: any) => {\n                    reject(e);\n                });\n        });\n    }\n\n    //#endregion \"API functions\"\n\n    //#region \"Stream function\"\n\n    function handleGroupHeaderVisibilityChanged(windowInfo: any): void {\n        _registry.execute(\"header-visibility-changed\", groupObject);\n    }\n\n    //#endregion \"Stream function\"\n\n    //#region \"Internal function\"\n\n    function _mapToWindowObjects(): Glue42.Windows.GDWindow[] {\n        const winObjects: Glue42.Windows.GDWindow[] = [];\n\n        _windowsId.forEach((winId) => {\n            const windowObject = _mapToWindowObject(winId);\n            if (typeof windowObject !== \"undefined\") {\n                winObjects.push(windowObject);\n            }\n        });\n\n        return winObjects;\n    }\n\n    function _mapToWindowObject(windowId: string): Glue42.Windows.GDWindow {\n        return windowStore.get(windowId) ? windowStore.get(windowId).API : undefined;\n    }\n\n    function _getGroupHeaderVisibility(): boolean {\n        // if one of the windows has a flag hideGroupHeader the group header should be off.\n        const windowWithHiddenHeader = _mapToWindowObjects().find((w) => !w.isGroupHeaderVisible);\n        const _isGroupHeaderVisible = windowWithHiddenHeader === undefined;\n\n        return _isGroupHeaderVisible;\n    }\n\n    //#endregion \"Internal function\"\n\n    //#region \"Events\"\n\n    function onHeaderVisibilityChanged(callback?: (group: Glue42.Windows.Group) => void): () => void {\n        return _registry.add(\"header-visibility-changed\", callback);\n    }\n\n    function onWindowAdded(callback?: (group: Glue42.Windows.Group, window: Glue42.Windows.GDWindow) => void): () => void {\n        return _registry.add(\"window-added\", callback);\n    }\n\n    function onWindowRemoved(callback?: (group: Glue42.Windows.Group, window: Glue42.Windows.GDWindow) => void): () => void {\n        return _registry.add(\"window-removed\", callback);\n    }\n\n    //#endregion \"Events\"\n\n    //#region \"API\"\n\n    const groupObject: Glue42.Windows.Group = {\n        id,\n        get windows() {\n            return windows();\n        },\n        find,\n        get isHeaderVisible() {\n            return _getGroupHeaderVisibility();\n        },\n\n        showHeader,\n        hideHeader,\n        capture,\n        maximize: (success, error) => {\n            return execute(\"maximize\", { groupId: id }, success, error);\n        },\n        restore: (success, error) => {\n            return execute(\"restore\", { groupId: id }, success, error);\n        },\n\n        onHeaderVisibilityChanged,\n        onWindowAdded,\n        onWindowRemoved,\n    };\n\n    const internal = {\n        addWindow,\n        removeWindow,\n        handleGroupHeaderVisibilityChanged,\n    };\n\n    return {\n        groupAPI: groupObject,\n        groupInternal: internal,\n    };\n\n    //#endregion \"API\"\n};\n","import { Glue42Core } from \"@glue42/core\";\nimport callbackRegistry, { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport { Glue42 } from \"../../glue\";\nimport groupFactory from \"./group\";\nimport { default as windowStore } from \"./store\";\nimport {\n    Environment,\n    GroupInternal,\n    GroupsInternal,\n    GroupsWrapper,\n    GroupWrapper,\n    WindowsLibrary,\n    WindowWrapper\n} from \"./types\";\n\nexport default (environment: Environment, logger: Glue42Core.Logger.API): GroupsWrapper => {\n    const _logger = logger.subLogger(\"groups\");\n    const _registry: CallbackRegistry = callbackRegistry();\n    const _groups: { [key: string]: GroupWrapper } = {};\n    let heardForWindowsCounter: number = -1;\n\n    // Getting already existing windows and create Group API for each window\n    const windows = windowStore.list;\n    Object.keys(windows).forEach((k) => {\n        addNewWindow(windows[k]);\n    });\n\n    environment.onCompositionChanged((windowInfo: any) => {\n        handleCompositionChanged(windowInfo);\n    });\n\n    environment.onGroupHeaderVisibilityChanged((windowInfo) => {\n        const windowId = windowInfo.windowId;\n        const group: Glue42.Windows.Group = findGroupByWindow(windowId);\n        if (typeof group !== \"undefined\") {\n            const groupEvents: GroupWrapper = _groups[group.id];\n\n            if (heardForWindowsCounter === -1) {\n                heardForWindowsCounter = group.windows.length;\n            }\n\n            heardForWindowsCounter--;\n            if (heardForWindowsCounter === 0) {\n                heardForWindowsCounter = -1;\n                groupEvents.groupInternal.handleGroupHeaderVisibilityChanged(windowInfo);\n            }\n        }\n    });\n\n    windowStore.onAdded((win) => {\n        addNewWindow(win);\n    });\n    windowStore.onRemoved((win) => {\n        removeWindow(win);\n    });\n\n    // Methods\n\n    function my(): Glue42.Windows.Group {\n        return findGroupByWindow(environment.my());\n    }\n\n    function list(success?: (groups: Glue42.Windows.Group[]) => void): Glue42.Windows.Group[] {\n        const result: Glue42.Windows.Group[] = Object.keys(_groups).map((groupId) => {\n            if (_groups[groupId]) {\n                return _groups[groupId].groupAPI;\n            }\n\n        });\n\n        if (typeof success === \"function\") {\n            success(result);\n        }\n        return result;\n    }\n\n    function findGroupByWindow(winId: string | Glue42.Windows.GDWindow, success?: (group: Glue42.Windows.Group) => void): Glue42.Windows.Group {\n        let windowId: string;\n        if (typeof winId === \"undefined\") {\n            logger.debug(\"trying to find a group by a window, but winId is undefined\");\n            return;\n        }\n        if (typeof winId === \"string\") {\n            windowId = winId;\n        } else {\n            windowId = winId.id;\n        }\n        let groupFound: Glue42.Windows.Group;\n        Object.keys(_groups).forEach((groupId: string) => {\n            const group: Glue42.Windows.Group = _groups[groupId].groupAPI;\n            if (group.find(windowId) !== undefined) {\n                groupFound = group;\n                return;\n            }\n        });\n\n        if (typeof success === \"function\") {\n            success(groupFound);\n        }\n\n        return groupFound;\n    }\n\n    // Events\n\n    function onWindowMoved(callback?: (windowId: string, oldGroup: Glue42.Windows.Group, newGroupId: string) => void): UnsubscribeFunction {\n        return _registry.add(\"window-moved\", callback);\n    }\n\n    // Private\n\n    function createOrGetGroup(groupId: string): GroupWrapper {\n        if (!_groups.hasOwnProperty(groupId)) {\n            const createdGroup: GroupWrapper = groupFactory(groupId, environment.executor);\n            _groups[groupId] = createdGroup;\n            return createdGroup;\n        } else {\n            return _groups[groupId];\n        }\n    }\n\n    function deleteGroup(groupId: string): void {\n        if (_groups.hasOwnProperty(groupId) && typeof _groups[groupId] !== \"undefined\") {\n            if (_groups[groupId].groupAPI.windows.length === 0) {\n                delete _groups[groupId];\n            }\n        }\n    }\n\n    function addNewWindow(win: WindowWrapper) {\n        _logger.trace(`Adding new window ${win.API.id} to win.API.groupId ${win.API.groupId}`);\n        const group = addWindow(win);\n        if (group) {\n            _logger.trace(`handleGroupAssociation ${win.API.id} to group.groupAPI.id ${group.groupAPI.id}`);\n            win.Events.handleGroupAssociation(group.groupAPI);\n        }\n    }\n\n    function addWindow(win: WindowWrapper, groupId?: string): GroupWrapper {\n        const windowGroupId: string = groupId || win.API.groupId;\n        const windowId: string = win.API.id;\n        if (typeof windowGroupId === \"undefined\" || typeof windowId === \"undefined\") {\n            _logger.debug(`trying to add a window without group - winId: ${windowId}`);\n            return;\n        }\n\n        const group = createOrGetGroup(windowGroupId);\n        group.groupInternal.addWindow(windowId);\n        return group;\n    }\n\n    function removeWindow(win: WindowWrapper, groupId?: string) {\n        const windowId: string = win.API.id;\n        const windowGroupId: string = groupId || win.API.groupId;\n        if (typeof windowGroupId !== \"undefined\") {\n            const group = _groups[windowGroupId];\n            group.groupInternal.removeWindow(windowId);\n            win.Events.handleGroupAssociation(undefined);\n            deleteGroup(windowGroupId);\n        }\n    }\n\n    function handleCompositionChanged(windowInfo: any): void {\n        const newGroupId: string = windowInfo.groupId;\n        const windowId: string = windowInfo.windowId;\n        const oldGroup: Glue42.Windows.Group = findGroupByWindow(windowId);\n        const oldGroupId = oldGroup ? oldGroup.id : undefined;\n        _logger.trace(`handleCompositionChanged newGroupId: ${newGroupId} windowId: ${windowId} oldGroup: ${oldGroupId}`);\n        if (oldGroupId === newGroupId) {\n            _logger.trace(`handleCompositionChanged newGroupId: ${newGroupId} windowId: ${windowId} oldGroup: ${oldGroupId} are the same - returning...`);\n            return;\n        }\n\n        const win = windowStore.get(windowId) || windowStore.get(windowId);\n        const newGroup = addWindow(win, newGroupId);\n        if (oldGroup) {\n            removeWindow(win, oldGroupId);\n            _registry.execute(\"window-moved\", windowId, oldGroup, newGroupId);\n        }\n        win.Events.handleGroupChanged(newGroup.groupAPI, oldGroup);\n    }\n\n    //#region \"API\"\n\n    const groups = {\n        get my() {\n            return my();\n        },\n        list,\n        findGroupByWindow,\n    };\n\n    //#endregion \"API\n\n    const events: GroupsInternal = { onWindowMoved };\n\n    return {\n        groupsAPI: groups,\n        groupsEvents: events,\n    };\n};\n","import { Glue42Core } from \"@glue42/core\";\nimport { CallbackRegistry, UnsubscribeFunction, default as CallbackFactory } from \"callback-registry\";\nimport { Glue42 } from \"../../glue\";\nimport { Environment, GroupsWrapper, WindowWrapper } from \"./types\";\n\nimport { default as envDetector } from \"./environment/detector\";\nimport groupsFactory from \"./groups\";\nimport { default as windowStore } from \"./store\";\n\nexport default (agm: Glue42Core.AGM.API, logger: Glue42Core.Logger.API, appManagerGetter: () => Glue42.AppManager.API, gdMajorVersion: number): Glue42.Windows.API => {\n    const _registry: CallbackRegistry = CallbackFactory();\n    const _logger = logger;\n    let groups: GroupsWrapper;\n    let environment: Environment;\n\n    windowStore.init(_logger);\n\n    const isReady = new Promise((resolve, reject) => {\n        envDetector(agm, _logger, appManagerGetter, gdMajorVersion)\n            .then((env) => {\n                environment = env;\n                groups = groupsFactory(env, _logger);\n                resolve();\n            })\n            .catch((e) => {\n                const err = `Environment detector fails with: ${e}`;\n                _logger.error(err);\n                reject(err);\n            });\n    });\n\n    function ready() {\n        return isReady;\n    }\n\n    function my(): Glue42.Windows.GDWindow {\n        const myWindow = windowStore.getIfReady(environment.my());\n        return myWindow ? myWindow.API : undefined;\n    }\n\n    function open(name: string, url: string, options?: Glue42.Windows.WindowSettings, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: object) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n\n            const errorHandler = (errorResponse: object) => {\n                if (typeof error === \"function\") {\n                    error(errorResponse);\n                }\n                reject(errorResponse);\n            };\n\n            const successHandler = (id: string) => {\n                windowStore.waitFor(id)\n                    .then((win) => {\n                        if (typeof success === \"function\") {\n                            success(win.API);\n                        }\n                        resolve(win.API);\n\n                        if (win.API.windowType === \"electron\") {\n                            // on normal windows urlCHanged has to be detected first in orer for the window to be ready\n                            // that causes the user callbacks to miss urlChanged since they are not registered yet\n                            // here we 'replay' the urlChanged event\n                            win.Events.handleUrlChanged(win.API.url);\n                        }\n                    })\n                    .catch(errorHandler);\n            };\n\n            environment.open(name, url, options, successHandler, errorHandler);\n        });\n    }\n\n    function find(name: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Glue42.Windows.GDWindow {\n        const windows: { [key: string]: WindowWrapper } = windowStore.list;\n\n        const windowsForListing: Glue42.Windows.GDWindow[] = Object.keys(windows).reduce((memo, winId) => {\n            const window: WindowWrapper = windows[winId];\n            if (window && window.API.name === name) {\n                memo.push(window.API);\n            }\n            return memo;\n        }, []);\n\n        if (typeof success !== \"function\") {\n            return windowsForListing[0];\n        }\n\n        if (windowsForListing.length > 0) {\n            success(windowsForListing[0]);\n        } else {\n            if (typeof error === \"function\") {\n                error(\"There is no window with name:\" + name);\n            }\n        }\n    }\n\n    function findById(id: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Glue42.Windows.GDWindow {\n        const windows: { [key: string]: WindowWrapper } = windowStore.list;\n        const windowsForListing: Glue42.Windows.GDWindow[] = Object.keys(windows).reduce((memo, winId) => {\n            const window: WindowWrapper = windows[winId];\n            if (typeof window !== \"undefined\" && window.API.id === id) {\n                memo.push(window.API);\n            }\n            return memo;\n        }, []);\n\n        if (typeof success !== \"function\") {\n            return windowsForListing[0];\n        }\n\n        if (windowsForListing.length > 0) {\n            success(windowsForListing[0]);\n        } else {\n            if (typeof error === \"function\") {\n                error(\"There is no window with such id:\" + id);\n            }\n        }\n    }\n\n    function list(success?: (window: Glue42.Windows.GDWindow[]) => void): Glue42.Windows.GDWindow[] {\n        const windows: { [key: string]: WindowWrapper } = windowStore.list;\n\n        const windowsForListing: Glue42.Windows.GDWindow[] = Object.keys(windows)\n            .map((k) => {\n                return windows[k].API;\n            });\n\n        if (typeof success !== \"function\") {\n            return windowsForListing;\n        }\n\n        success(windowsForListing);\n    }\n\n    function windowAdded(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"window-added\", callback);\n    }\n\n    function windowRemoved(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"window-removed\", callback);\n    }\n\n    function tabAttached(callback: (tabWindow: Glue42.Windows.GDWindow, newTabGroupId: string, tabHeaderVisible: boolean) => void): Promise<void> {\n        return isReady.then(() => {\n            environment.tabAttached(callback);\n        });\n    }\n\n    function tabDetached(callback: (window: Glue42.Windows.GDWindow, tabGroupId: string, oldTabGroupId: string) => void): Promise<void> {\n        return isReady.then(() => {\n            environment.tabDetached(callback);\n        });\n    }\n\n    function onWindowFrameColorChanged(callback: (window: Glue42.Windows.GDWindow) => void): Promise<UnsubscribeFunction> {\n        return isReady.then(() => {\n            return environment.onWindowFrameColorChanged(callback);\n        });\n    }\n\n    function onWindowGotFocus(callback: (window: Glue42.Windows.GDWindow) => void) {\n        let unsubscribe: UnsubscribeFunction;\n        isReady.then(() => {\n            unsubscribe = environment.onWindowGotFocus(callback);\n        });\n\n        return () => {\n            if (unsubscribe) {\n                unsubscribe();\n            }\n        };\n    }\n\n    function onWindowLostFocus(callback: (window: Glue42.Windows.GDWindow) => void) {\n        let unsubscribe: UnsubscribeFunction;\n\n        isReady.then(() => {\n            unsubscribe = environment.onWindowLostFocus(callback);\n        });\n\n        return () => {\n            if (unsubscribe) {\n                unsubscribe();\n            }\n        };\n    }\n\n    function onEvent(callback: (stream: any) => void): UnsubscribeFunction {\n        let unsubFunc: UnsubscribeFunction;\n        let unsubscribed = false;\n        isReady.then(() => {\n            if (unsubscribed) {\n                return;\n            }\n            unsubFunc = environment.onEvent(callback);\n        });\n\n        return () => {\n            unsubscribed = true;\n            if (unsubFunc) {\n                unsubFunc();\n            }\n\n        };\n    }\n\n    function createFlydown(targetId: string, config: Glue42.Windows.FlydownOptions): Promise<Glue42.Windows.Flydown> {\n        return environment.createFlydown(targetId, config);\n    }\n\n    function showPopup(targetId: string, config: Glue42.Windows.PopupOptions): Promise<void> {\n        return environment.showPopup(targetId, config);\n    }\n\n    function handleWindowAdded(w: WindowWrapper) {\n        _registry.execute(\"window-added\", w.API);\n    }\n\n    function handleWindowRemoved(w: WindowWrapper) {\n        _registry.execute(\"window-removed\", w.API);\n    }\n\n    windowStore.onReadyWindow(handleWindowAdded);\n    windowStore.onRemoved(handleWindowRemoved);\n\n    // The API itself\n    return {\n        my,\n        open,\n        find,\n        findById,\n        list,\n        ready,\n        onWindowAdded: windowAdded,\n        windowAdded,\n        onWindowRemoved: windowRemoved,\n        windowRemoved,\n        onTabAttached: tabAttached,\n        onTabDetached: tabDetached,\n        onWindowFrameColorChanged,\n\n        get groups() {\n            return groups.groupsAPI;\n        },\n        onWindowGotFocus,\n        onWindowLostFocus,\n        onEvent,\n        createFlydown,\n        showPopup\n    };\n};\n","import { Glue42Core } from \"@glue42/core\";\nimport { Environment } from \"./../types\";\nimport { default as GD } from \"./gd/gd\";\nimport { Glue42 } from \"../../../glue\";\n\nexport default (agm: Glue42Core.AGM.API, logger: Glue42Core.Logger.API, appManagerGetter: () => Glue42.AppManager.API, gdMajorVersion: number): Promise<Environment> => {\n    const _logger = logger;\n    return new Promise((resolve, reject) => {\n        if (gdMajorVersion === 2) {\n            // We are running in HC\n            _logger.trace(\"running in HC\");\n            throw new Error(\"GD2 not supported\");\n        } else if (gdMajorVersion >= 3) {\n            // We are running in GD 3\n            // TODO expose instance in glu42gd\n            _logger.trace(\"running in GD 3\");\n            const gd = new GD(agm, _logger, appManagerGetter, undefined, window.glue42gd.windowId);\n            gd.init()\n                .then(resolve)\n                .catch(reject);\n        } else {\n            // We are running in Browser or Node, we should check which stream is available\n            // But we need to pass the container as dependency\n            const gdPromise = new GD(agm, _logger, appManagerGetter).init();\n            const wait = (ms: number) => new Promise((res, rej) => setTimeout(() => { rej(\"timeout waiting for streams\"); }, ms));\n            Promise.race([gdPromise, wait(10000)])\n                .then(resolve)\n                .catch(reject);\n        }\n    });\n};\n","import { Glue42 } from \"../../glue\";\n\n// provides a unified way to access layouts array\nexport class LayoutStore {\n    private layouts: Glue42.Layouts.Layout[] = [];\n\n    public removeWhere(condition: (l: Glue42.Layouts.Layout) => boolean) {\n        this.layouts = this.layouts.filter(condition);\n    }\n\n    public add(item: Glue42.Layouts.Layout) {\n        this.layouts.push(item);\n    }\n\n    public get all(): Glue42.Layouts.Layout[] {\n        return this.layouts;\n    }\n\n    public where(condition: (l: Glue42.Layouts.Layout) => boolean): Glue42.Layouts.Layout[] {\n        return this.layouts.filter(condition);\n    }\n\n    public first(condition: (l: Glue42.Layouts.Layout) => boolean): Glue42.Layouts.Layout {\n        return this.where(condition)[0];\n    }\n}\n\nexport default new LayoutStore();\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nmodule.exports = {\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nfunction randomByte() {\n    if (!crypto || !crypto.getRandomValues) {\n        return Math.floor(Math.random() * 256) & 0x30;\n    }\n    var dest = new Uint8Array(1);\n    crypto.getRandomValues(dest);\n    return dest[0] & 0x30;\n}\n\nmodule.exports = randomByte;\n","'use strict';\n\nvar randomByte = require('./random/random-byte');\n\nfunction encode(lookup, number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + lookup( ( (number >> (4 * loopCounter)) & 0x0f ) | randomByte() );\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = encode;\n","'use strict';\nvar alphabet = require('./alphabet');\n\n/**\n * Decode the id to get the version and worker\n * Mainly for debugging and testing.\n * @param id - the shortid-generated id.\n */\nfunction decode(id) {\n    var characters = alphabet.shuffled();\n    return {\n        version: characters.indexOf(id.substr(0, 1)) & 0x0f,\n        worker: characters.indexOf(id.substr(1, 1)) & 0x0f\n    };\n}\n\nmodule.exports = decode;\n","'use strict';\n\nvar encode = require('./encode');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1459707606518;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 6;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + encode(alphabet.lookup, version);\n    str = str + encode(alphabet.lookup, clusterWorkerId);\n    if (counter > 0) {\n        str = str + encode(alphabet.lookup, counter);\n    }\n    str = str + encode(alphabet.lookup, seconds);\n\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var characters = alphabet.characters();\n    var len = id.length;\n    for(var i = 0; i < len;i++) {\n        if (characters.indexOf(id[i]) === -1) {\n            return false;\n        }\n    }\n    return true;\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar encode = require('./encode');\nvar decode = require('./decode');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.decode = decode;\nmodule.exports.isValid = isValid;\n","'use strict';\nmodule.exports = require('./lib/index');\n","import { Glue42 } from \"../../glue\";\nimport { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport { Glue42Core } from \"@glue42/core\";\n\nconst SaveContextMethodName = \"T42.HC.GetSaveContext\";\ndeclare var htmlContainer: any;\n\n/**\n * Logic for apps that want to provide custom context on save\n */\nexport default class ContextProvider {\n\n    private registeredRequestsMethods = false;\n\n    constructor(private agm: Glue42Core.AGM.API, private activitiesGetter: () => Glue42.Activities.API, private callbacks: CallbackRegistry) {\n    }\n\n    public onSaveRequested(callback: (context?: object) => Glue42.Layouts.SaveRequestResponse) {\n        if (!this.registeredRequestsMethods) {\n            this.registerRequestMethods();\n            this.registeredRequestsMethods = true;\n        }\n        return this.callbacks.add(\"saveRequested\", callback);\n    }\n\n    private isActivityOwner() {\n        // fallback for GD2 - remove once the bellow code is tested\n        if (typeof htmlContainer !== \"undefined\") {\n            const context = htmlContainer.getContext();\n            return context && context._t42 && context._t42.activityIsOwner;\n        }\n\n        // check if we're the activity owners\n        const activities = this.activitiesGetter();\n        if (!activities) {\n            return false;\n        }\n\n        if (!activities.inActivity) {\n            return false;\n        }\n\n        const myWindow = activities.my.window;\n        const myActivity = activities.my.activity;\n\n        if (!myActivity && !myWindow) {\n            return false;\n        }\n\n        // TODO - fix activities typings\n        return (myActivity.owner as any).id === (myWindow as any).id;\n    }\n\n    private registerRequestMethods() {\n        this.agm.register(SaveContextMethodName, (args) => {\n            const requestResult: Glue42.Layouts.SaveRequestResponse = this.callbacks.execute(\"saveRequested\", args)[0] as Glue42.Layouts.SaveRequestResponse;\n            if (!requestResult) {\n                return {};\n            }\n\n            requestResult.activityContext = requestResult.activityContext || {};\n            requestResult.windowContext = requestResult.windowContext || {};\n\n            // always include the window context\n            const result: Glue42.Layouts.SaveRequestResponse = { windowContext: requestResult.windowContext, activityContext: undefined };\n\n            // if we're the activity owner put the context too\n            if (this.isActivityOwner()) {\n                result.activityContext = requestResult.activityContext;\n            }\n\n            return result;\n        });\n    }\n}\n","// A simple transformation that makes object to start with lowercase\n// Note that this is not full implementation as it supports only:\n// undefined, null, arrays, number, string, bool. Anything out of this\n// list is considered Object\nexport default function transformACSLayout(something: { [key: string]: any }): { [key: string]: any } {\n    if (!something) {\n        return something;\n    }\n\n    if (Array.isArray(something)) {\n        return something.map((item) => {\n            return transformACSLayout(item);\n        });\n    }\n\n    if (typeof something === \"string\" || typeof something === \"number\" || typeof something === \"boolean\") {\n        return something;\n    }\n\n    const initial: { [key: string]: any } = {};\n    return Object.keys(something).reduce((accumulator, current) => {\n        const value = something[current];\n        const convertedValue = transformACSLayout(value);\n\n        let key = current;\n        if (current[0].toLowerCase() !== current[0]) {\n            key = current[0].toLowerCase() + current.substr(1);\n        }\n\n        accumulator[key] = convertedValue;\n        return accumulator;\n    }, initial);\n}\n","import { Glue42 } from \"../../glue\";\n\nexport default class LayoutImpl implements Glue42.Layouts.Layout {\n    /** Name of the layout */\n    public name: string;\n\n    /** Type of the layout */\n    public type: Glue42.Layouts.LayoutType;\n\n    /** Array of components describing the applications that are saved in the layout */\n    public components: Glue42.Layouts.LayoutComponent[];\n\n    /** Context passed when the layout was saved */\n    public context: any;\n\n    /** Metadata passed when the layout was saved */\n    public metadata: any;\n\n    constructor(data: any) {\n        this.name = data.name;\n        this.type = data.type;\n        this.components = data.components;\n        this.context = data.context;\n        this.metadata = data.metadata;\n    }\n}\n","import { Glue42 } from \"../../glue\";\nimport callbackRegistry, { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport { LayoutsStream, HibernationResumeMessage, UpdateLayoutComponentContextMessage } from \"./types\";\nimport store from \"./store\";\nimport generate from \"shortid\";\nimport { ACSSaveLayoutMessage, ACSRestoreMessage, ACSRestoreMessageContext, ACSRestoreMessageInstanceInfo, ACSMessage, ACSRenameMessage, ACSRemoveLayoutMessage, ACSImportMessage, ExportResultMessage } from \"./types\";\nimport { Glue42Core } from \"@glue42/core\";\nimport ContextProvider from \"./contextProvider\";\nimport transformACSLayout from \"./transform\";\nimport LayoutImpl from \"./layout\";\n\nexport default class LayoutsAPIImpl implements Glue42.Layouts.API {\n    private appManager: Glue42.AppManager.API;\n    private provider: ContextProvider;\n\n    constructor(private config: Glue42.Layouts.Configuration, private stream: LayoutsStream, private callbacks: CallbackRegistry) {\n        this.appManager = config.appManager;\n        this.onEvent = stream.onEvent;\n        this.provider = new ContextProvider(config.agm, config.activityGetter, callbacks);\n        stream.subscribe();\n    }\n\n    public async setDefaultGlobal(name: string): Promise<void> {\n        await this.config.agm.invoke(\"T42.ACS.SelectDefaultLayout\", { name });\n        return;\n    }\n\n    public async clearDefaultGlobal(): Promise<void> {\n        await this.config.agm.invoke(\"T42.ACS.DeselectDefaultLayout\");\n        return;\n    }\n\n    public async getDefaultGlobal(): Promise<Glue42.Layouts.Layout | undefined> {\n        const result = await this.config.agm.invoke(\"T42.ACS.GetDefaultLayout\");\n        const layout = result.returned;\n        if (!layout) {\n            return undefined;\n        }\n        if (this.isSlimMode()) {\n            return layout;\n        }\n        return this.list().find((l) => l.name === layout.name && l.type === \"Global\");\n    }\n\n    public ready(): Promise<void> {\n        if (this.config.mode === \"fullWaitSnapshot\") {\n            return this.stream.gotSnapshot;\n        }\n        return this.stream.ready;\n    }\n\n    public save(layout: Glue42.Layouts.NewLayoutOptions): Promise<Glue42.Layouts.Layout> {\n        return new Promise<Glue42.Layouts.Layout>((resolve, reject) => {\n\n            this.verifyNotSlimMode();\n\n            if (!layout.name) {\n                throw Error(\"layout.name argument is required\");\n            }\n\n            if (!layout.type) {\n                layout.type = \"Global\";\n            }\n\n            if (layout.activityId) {\n                layout.type = \"Activity\";\n            }\n\n            if (typeof layout.ignoreHidden === \"undefined\") {\n                layout.ignoreHidden = true; // default to true\n            }\n\n            const layoutObject: ACSSaveLayoutMessage = {\n                name: layout.name,\n                actIds: [],\n                appIds: [],\n                type: layout.type,\n                context: layout.context,\n                metadata: layout.metadata || {},\n                options: { ignoreLayoutRestrictions: false },\n            };\n\n            if (layout.type === \"Activity\") {\n                let actId = layout.activityId;\n                if (!actId) {\n                    if (!this.appManager.myInstance.inActivity) {\n                        throw new Error(\"Current application is not in activity. Can not save activity layout for it\");\n                    }\n                    actId = this.appManager.myInstance.activityId;\n                }\n\n                layoutObject.actIds.push(actId);\n                layoutObject.options = { ignoreLayoutRestrictions: true };\n            } else if (layout.type === \"Global\") {\n                if (this.config.gdMajorVersion === 2) {\n                    let instances: any[] = this.appManager.instances();\n\n                    if (layout.ignoreHidden) {\n                        instances = instances.filter((i) => this.isVisibleWindow(i));\n                    }\n\n                    if (layout.ignoreMyInstance && this.appManager.myInstance) {\n                        instances = instances.filter((i) => i.id !== this.appManager.myInstance.id);\n                    }\n\n                    instances.reduce((prev, current) => {\n                        if (!current.id) {\n                            return prev;\n                        }\n\n                        if (current.inActivity) {\n                            const actId = current.activityId;\n\n                            if (prev.actIds.indexOf(actId) === -1) {\n                                prev.actIds.push(actId);\n                            }\n                        } else {\n                            prev.appIds.push(current.id);\n                        }\n\n                        return prev;\n                    }, layoutObject);\n                } else {\n                    layoutObject.autoCollectApps = true;\n                }\n            } else {\n                throw new Error(\"layout type \" + layout.type + \" not supported\");\n            }\n\n            this.invokeMethodAndTrack(\"T42.ACS.SaveLayout\", layoutObject, resolve, reject);\n        });\n    }\n\n    public restore(options: Glue42.Layouts.RestoreOptions): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            this.verifyNotSlimMode();\n\n            if (typeof options === \"undefined\") {\n                throw Error(\"options argument is required\");\n            }\n\n            if (!options.name) {\n                throw Error(\"options.name argument is required\");\n            }\n\n            if (!options.type) {\n                options.type = \"Global\";\n            }\n\n            if (options.activityIdToJoin) {\n                options.type = \"Activity\";\n            }\n\n            if (typeof options.restoreActivityOwner === \"undefined\") {\n                options.restoreActivityOwner = false;\n            }\n\n            if (typeof options.ignoreActivityWindowTypes === \"undefined\") {\n                options.ignoreActivityWindowTypes = [];\n            }\n\n            if (typeof options.setActivityContext === \"undefined\") {\n                options.setActivityContext = true;\n            }\n\n            // if no closeOwnRunning we set closeRunningInstance to true; if\n            if (typeof options.closeRunningInstance === \"undefined\") {\n                if (options.type === \"Global\") {\n                    options.closeRunningInstance = true;\n                } else if (options.type === \"Activity\") {\n                    // we don't close anything in case of activity layout type\n                    options.closeRunningInstance = false;\n                }\n            }\n\n            if (typeof options.reuseWindows === \"undefined\") {\n                options.reuseWindows = true;\n            }\n\n            options.context = options.context || {};\n\n            const t42: ACSRestoreMessageContext = {\n                restoreOptions: {\n                    activityToJoin: options.activityIdToJoin,\n                    setActivityContext: options.setActivityContext,\n                    ignoreActivityWindowTypes: options.ignoreActivityWindowTypes,\n                    restoreActivityOwner: options.restoreActivityOwner,\n                    closeOldWindows: options.closeRunningInstance,\n                    reuseExistingWindows: options.reuseWindows\n                }\n            };\n\n            const arg: ACSRestoreMessage = {\n                type: options.type,\n                name: options.name,\n                context: options.context,\n                toClose: [],\n                splash: options.splash\n            };\n\n            // getting instance for closing is necessary only for GD2\n            // G4E-2418 - A global layout including swimlane app can not be restored, when the activities configuration is set to false\n            if (this.config.gdMajorVersion === 2) {\n                if (options.closeRunningInstance) {\n                    arg.toClose = this.getInstancesToClose(options);\n                }\n            }\n\n            if (options.timeout) {\n                arg.timeout = options.timeout;\n            }\n\n            arg.context._t42 = t42;\n\n            this.invokeMethodAndTrack(\"T42.ACS.RestoreLayout\", arg, resolve, reject, true);\n        });\n    }\n\n    public remove(type: string, name: string): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            this.verifyNotSlimMode();\n\n            if (!name) {\n                throw Error(\"name argument is required\");\n            }\n\n            if (!type) {\n                throw Error(\"type argument is required\");\n            }\n\n            const msg: ACSRemoveLayoutMessage = {\n                type,\n                name,\n            };\n\n            this.invokeMethodAndTrack(\"T42.ACS.RemoveLayout\", msg, resolve, reject);\n        });\n    }\n\n    public list(): Glue42.Layouts.Layout[] {\n        this.verifyNotSlimMode();\n        return store.all;\n    }\n\n    public import(layouts: Glue42.Layouts.Layout[], mode?: Glue42.Layouts.ImportMode): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            this.verifyNotSlimMode();\n\n            const msg: ACSImportMessage = {\n                mode: mode || \"replace\",\n                layouts\n            };\n\n            this.invokeMethodAndTrack(\"T42.ACS.ImportLayouts\", msg, resolve, reject);\n        });\n    }\n\n    public export(): Promise<Glue42.Layouts.Layout[]> {\n        return new Promise<Glue42.Layouts.Layout[]>((resolve, reject) => {\n            const handleResult = (result: ExportResultMessage) => {\n                const layouts: Glue42.Layouts.Layout[] = this.getObjectValues(result.Layouts).map((t) => new LayoutImpl(transformACSLayout(t)));\n                resolve(layouts);\n            };\n\n            this.invokeMethodAndTrack(\"T42.ACS.ExportLayouts\", {}, handleResult, reject, true);\n        });\n    }\n\n    public rename(layout: Glue42.Layouts.Layout, newName: string): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            this.verifyNotSlimMode();\n\n            if (!layout) {\n                throw Error(\"layout argument is required\");\n            }\n\n            if (!layout.name) {\n                throw Error(\"name argument is required\");\n            }\n\n            if (!layout.type) {\n                throw Error(\"type argument is required\");\n            }\n\n            const msg: ACSRenameMessage = { type: layout.type, oldName: layout.name, newName };\n\n            this.invokeMethodAndTrack(\"T42.ACS.RenameLayout\", msg, resolve, reject);\n        });\n    }\n\n    public updateMetadata(layout: Glue42.Layouts.Layout): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (!layout) {\n                throw Error(\"layout argument is required\");\n            }\n\n            if (!layout.name) {\n                throw Error(\"name argument is required\");\n            }\n\n            if (!layout.type) {\n                throw Error(\"type argument is required\");\n            }\n\n            if (!layout.metadata) {\n                throw Error(\"metadata argument is required\");\n            }\n\n            const layoutObject: any = {\n                name: layout.name,\n                type: layout.type,\n                metadata: layout.metadata\n            };\n\n            this.invokeMethodAndTrack(\"T42.ACS.UpdateMetadata\", layoutObject, resolve, reject, true);\n        });\n    }\n\n    public hibernate(name: string, options?: Glue42.Layouts.HibernationOptions): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (!name) {\n                return reject(\"name cannot be empty\");\n            }\n            options = options || {};\n            const request: HibernationResumeMessage = {\n                name,\n                type: \"Global\",\n                context: options.context || {},\n                metadata: options.metadata || {},\n            };\n            this.invokeMethodAndTrack(\"T42.ACS.HibernateLayout\", request, resolve, reject, true);\n        });\n    }\n\n    public resume(name: string, context?: any, options?: Glue42.Layouts.ResumeOptions): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (!name) {\n                return reject(\"name cannot be empty\");\n            }\n            const request: HibernationResumeMessage = {\n                name,\n                type: \"Global\",\n                context,\n                ...options\n            };\n            this.invokeMethodAndTrack(\"T42.ACS.ResumeLayout\", request, resolve, reject, true);\n        });\n    }\n\n    public async getCurrentLayout(): Promise<Glue42.Layouts.Layout | undefined> {\n        const result = await this.config.agm.invoke(\"T42.ACS.GetCurrentLayout\", {}, \"best\", { methodResponseTimeoutMs: 120 * 1000 });\n        let layout = result.returned.layout;\n        if (!layout) {\n            return undefined;\n        }\n        if (!this.isSlimMode()) {\n            // we have internal if we track layouts (so not slim mode), if not return the object we received from GD\n            layout = this.list().find((l) => l.name === layout.name && l.type === layout.type);\n        }\n        return layout;\n    }\n\n    public onAdded(callback: (layout: Glue42.Layouts.Layout) => void): () => void {\n        const result = this.callbacks.add(\"added\", callback);\n\n        if (store.all.length > 0) {\n            store.all.forEach((layout) => {\n                try {\n                    callback(layout);\n                } catch (err) { /** */ }\n            });\n        }\n\n        return result;\n    }\n\n    public onRemoved(callback: (layout: Glue42.Layouts.Layout) => void): () => void {\n        return this.callbacks.add(\"removed\", callback);\n    }\n\n    public onChanged(callback: (layout: Glue42.Layouts.Layout) => void): () => void {\n        return this.callbacks.add(\"changed\", callback);\n    }\n\n    public onRestored(callback: (layout: Glue42.Layouts.Layout) => void): () => void {\n        return this.callbacks.add(\"restored\", callback);\n    }\n\n    public onRenamed(callback: (layout: Glue42.Layouts.Layout) => void): () => void {\n        return this.callbacks.add(\"renamed\", callback);\n    }\n\n    public onEvent(callback: (event: any) => void): () => void {\n        return this.stream.onEvent(callback);\n    }\n\n    public onSaveRequested(callback: (context?: object) => Glue42.Layouts.SaveRequestResponse): UnsubscribeFunction {\n        return this.provider.onSaveRequested(callback);\n    }\n\n    public updateAppContextInCurrent(context: object): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (context && typeof context !== \"object\") {\n                reject(\"context must be an object\");\n            }\n            context = context ?? {};\n            const request: UpdateLayoutComponentContextMessage = {\n                context\n            };\n            this.invokeMethodAndTrack(\"T42.ACS.UpdateLayoutComponentContext\", request, resolve, reject, false);\n        });\n    }\n\n    private isSlimMode() {\n        return this.config.mode === \"slim\";\n    }\n\n    private verifyNotSlimMode() {\n        if (this.isSlimMode()) {\n            throw Error(\"Operation not allowed in slim mode. Run in full mode.\");\n        }\n    }\n\n    private isVisibleWindow(instance: Glue42.AppManager.Instance) {\n        // GD3\n        // allow exes to participate in layouts (TODO - check if the app is layouts aware (has the layouts methods) - if not treat it as not visible window)\n        if (instance.application.type === \"exe\" || instance.application.type === \"node\") {\n            return true;\n        }\n        // allow activities to participate in layouts\n        if (instance.application.type === \"activity\") {\n            return true;\n        }\n\n        if (!instance || !instance.window) {\n            return false;\n        }\n\n        return instance.window.isVisible;\n    }\n\n    private invokeMethodAndTrack(methodName: string, args: ACSMessage, resolve: (result: any) => void, reject: (err: any) => void, skipStreamEvent?: boolean) {\n        let streamEventReceived = skipStreamEvent;\n        let agmResult: any;\n\n        const token = generate();\n        args.token = token;\n\n        const handleResult = () => {\n            if (streamEventReceived && agmResult) {\n                resolve(agmResult);\n            }\n        };\n\n        if (!skipStreamEvent) {\n            this.stream.waitFor(token)\n                .then(() => {\n                    streamEventReceived = true;\n                    handleResult();\n                })\n                .catch((err: any) => {\n                    reject(err);\n                });\n        }\n\n        const responseHandler = (result: Glue42Core.AGM.InvocationResult<any>) => {\n            if (!result.returned) {\n                reject(\"No result from method \" + methodName);\n            }\n\n            if (result.returned.status && (result.returned.status !== \"Success\" && result.returned.status !== \"PartialSuccess\")) {\n                reject(result.returned);\n            }\n\n            agmResult = result.returned;\n            handleResult();\n        };\n\n        this.config.agm.invoke(methodName, args, \"best\", { methodResponseTimeoutMs: 120 * 1000 })\n            .then(responseHandler)\n            .catch((err: any) => reject(err));\n    }\n\n    private getInstancesToClose(options: Glue42.Layouts.RestoreOptions) {\n        const instances: ACSRestoreMessageInstanceInfo[] = [];\n        const shellApp = this.appManager.applications().filter((a: any) => a.isShell)[0];\n        const shellApplicationName = shellApp ? shellApp.name : \"AppManager\";\n\n        this.appManager.instances().forEach((i: any) => {\n\n            // ignore my instance\n            if (this.appManager.myInstance && i.id === this.appManager.myInstance.id) {\n                return;\n            }\n\n            // ignore shell app\n            if (i.application.name === shellApplicationName) {\n                return;\n            }\n\n            // ignore hidden windows\n            if (!this.isVisibleWindow(i)) {\n                return;\n            }\n\n            // if activity layout stop only the instances\n            // running in the same activity\n            if (options.type === \"Activity\") {\n                if (i.activityId !== options.activityIdToJoin) {\n                    return;\n                }\n            }\n            instances.push({ application: i.application.name, instance: i.id });\n        });\n\n        return instances;\n    }\n\n    private getObjectValues(obj: any) {\n        if (!obj) {\n            return [];\n        }\n\n        return Object.keys(obj).map((k) => obj[k]);\n    }\n}\n","import { LayoutsStream } from \"../types\";\nimport store, { LayoutStore } from \"../store\";\nimport { ACSStreamData, ACSLayout } from \"./messages\";\nimport LayoutImpl from \"../layout\";\nimport { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport transformACSLayout from \"../transform\";\n\nimport { Glue42Core } from \"@glue42/core\";\n\n/**\n * ACS event stream related to layouts\n */\nexport default class ACSStream implements LayoutsStream {\n\n    public ready: Promise<void>;\n    public gotSnapshot: Promise<void>;\n\n    private resolveReady: () => void;\n    private rejectReady: (err: any) => void;\n\n    private resolveGotSnapshot: () => void;\n    private rejectGotSnapshot: (err: any) => void;\n\n    constructor(private agm: Glue42Core.AGM.API, private callbacks: CallbackRegistry) {\n\n        this.ready = new Promise<void>((resolve, reject) => {\n            this.resolveReady = resolve;\n            this.rejectReady = reject;\n        });\n\n        this.gotSnapshot = new Promise<void>((resolve, reject) => {\n            this.resolveGotSnapshot = resolve;\n            this.rejectGotSnapshot = reject;\n        });\n    }\n\n    public subscribe(noRetry?: boolean) {\n        const transform = (obj: object) => {\n            return this.getObjectValues(obj).map((t) => transformACSLayout(t));\n        };\n\n        // if we don't have OnLayoutEvent stream  we're running pre 2.1 GD version or outside GD,\n        if (!this.checkForLayoutEventMethod()) {\n            // if no retry resolve right away\n            if (noRetry) {\n                this.resolveReady();\n            }\n\n            // if we should retry, schedule  one more time\n            setTimeout(() => {\n                this.subscribe(true);\n            }, 500);\n        } else {\n            this.agm.subscribe(\"T42.ACS.OnLayoutEvent\", { waitTimeoutMs: 10000 })\n                .then((subs) => {\n                    subs.onData((args) => {\n                        const data = args.data as ACSStreamData;\n                        if (data.IsSnapshot) {\n                            this.resolveGotSnapshot();\n                        }\n\n                        this.addLayouts(transform(data.OnLayoutAdded));\n                        this.removeLayouts(transform(data.OnLayoutRemoved));\n                        this.changeLayouts(transform(data.OnLayoutChanged));\n                        this.renameLayouts(transform(data.OnLayoutRenamed));\n                        this.restoredLayout(transform(data.OnLayoutRestored));\n                        this.callbacks.execute(\"streamEvent\", data);\n                    });\n\n                    subs.onFailed((err) => {\n                        const msg = \"can not subscribe to T42.ACS.OnLayoutEvent \" + err;\n                        this.rejectReady(msg);\n                        this.rejectGotSnapshot(msg);\n                    });\n\n                    this.resolveReady();\n                })\n                .catch((err) => {\n                    const msg = \"Error subscribing for T42.ACS.OnLayoutEvent stream. Err: \" + err;\n                    this.rejectReady(msg);\n                    this.rejectGotSnapshot(msg);\n                });\n        }\n    }\n\n    public onEvent(callback: (streamEvent: ACSStreamData) => void): UnsubscribeFunction {\n        return this.callbacks.add(\"streamEvent\", callback);\n    }\n\n    public waitFor(token: string, timeout?: number): Promise<void> {\n        if (!timeout) {\n            timeout = 10000; // default timeout is 10 seconds\n        }\n        return new Promise<void>((resolve, reject) => {\n            let done = false;\n            const unsubscribe = this.onEvent((streamEvent) => {\n                if (streamEvent.Token === token) {\n                    done = true;\n                    unsubscribe();\n                    resolve();\n                }\n            });\n\n            setTimeout(() => {\n                if (!done) {\n                    reject(\"timed out\");\n                }\n            }, timeout);\n        });\n    }\n\n    private checkForLayoutEventMethod() {\n        try {\n            return this.agm\n                .methods()\n                .map((m) => m.name)\n                .indexOf(\"T42.ACS.OnLayoutEvent\") !== -1;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    private addLayouts(layoutsData: any[]) {\n        if (!layoutsData) {\n            return;\n        }\n\n        layoutsData.forEach((layoutData) => {\n            const layout = new LayoutImpl(layoutData);\n            store.add(layout);\n            this.callbacks.execute(\"added\", layout);\n        });\n    }\n\n    private removeLayouts(removedLayouts: any[]) {\n        if (!removedLayouts) {\n            return;\n        }\n        removedLayouts.forEach((removedLayout) => {\n            store.removeWhere((existingLayout) => !this.compareLayouts(existingLayout, removedLayout));\n\n            this.callbacks.execute(\"removed\", removedLayout);\n        });\n    }\n\n    private changeLayouts(changedLayouts: any[]) {\n        if (!changedLayouts) {\n            return;\n        }\n\n        changedLayouts.forEach((changedLayout) => {\n            // removed the changed layout and push it again\n            store.removeWhere((existingLayout) => !this.compareLayouts(existingLayout, changedLayout));\n            store.add(new LayoutImpl(changedLayout));\n            // execute callback\n            this.callbacks.execute(\"changed\", changedLayout);\n        });\n\n    }\n\n    private renameLayouts(renamedLayouts: any[]) {\n        if (!renamedLayouts) {\n            return;\n        }\n\n        renamedLayouts.forEach((renamedLayout) => {\n            const existingLayout = store.first((current) => this.compareLayouts(current, { type: renamedLayout.type, name: renamedLayout.oldName }));\n\n            if (!existingLayout) {\n                throw Error(\"received rename event for unknown layout with type \" + renamedLayout.type + \" and name \" + renamedLayout.oldName);\n            }\n\n            existingLayout.name = renamedLayout.newName;\n\n            this.callbacks.execute(\"renamed\", existingLayout);\n        });\n    }\n\n    private compareLayouts(layout1: { name: string, type: string }, layout2: { name: string, type: string }) {\n        return layout1.name === layout2.name && layout1.type === layout2.type;\n    }\n\n    private getObjectValues(obj: any) {\n        if (!obj) {\n            return [];\n        }\n\n        return Object.keys(obj).map((k) => obj[k]);\n    }\n\n    private restoredLayout(restoredLayouts: any[]) {\n\n        if (!restoredLayouts) {\n            return;\n        }\n\n        restoredLayouts.forEach((restoredLayout) => {\n            const existingLayout = store.first((current) => this.compareLayouts(current, { type: restoredLayout.type, name: restoredLayout.name }));\n            this.callbacks.execute(\"restored\", existingLayout);\n        });\n    }\n}\n","import contextProviderFactory from \"./contextProvider\";\nimport Layouts from \"./layouts\";\nimport store from \"./store\";\nimport ACSStream from \"./stream/acsStream\";\nimport streamNull from \"./stream/nullStream\";\nimport { Glue42 } from \"../../glue\";\nimport { LayoutsStream } from \"./types\";\nimport callbackRegistry, { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\n\nexport default function(config: Glue42.Layouts.Configuration): Layouts {\n\n    if (!config.agm) {\n        throw Error(\"config.agm is required\");\n    }\n\n    if (!config.logger) {\n        throw Error(\"config.logger is required\");\n    }\n\n    // default mode to slim\n    config.mode = config.mode || \"slim\";\n\n    const logger = config.logger;\n    const callbacks: CallbackRegistry = callbackRegistry();\n\n    let acsStream: LayoutsStream;\n\n    if (config.mode === \"full\" || \"fullWaitSnapshot\") {\n        acsStream = new ACSStream(config.agm, callbacks);\n    } else {\n        acsStream = streamNull();\n    }\n\n    return new Layouts(config, acsStream, callbacks);\n}\n","import { Glue42 } from \"../../glue\";\nimport { Glue42Core } from \"@glue42/core\";\nimport CaptureOptions = Glue42.Displays.CaptureOptions;\n\nconst T42DisplayCommand = \"T42.Displays.Command\";\n\nexport default class DisplayManager implements Glue42.Displays.API {\n    constructor(\n        private _agm: Glue42Core.AGM.API,\n        private _logger: Glue42Core.Logger.API,\n    ) {\n        //\n    }\n\n    public all = async (): Promise<Glue42.Displays.Display[]> => {\n        const displays = await this.callGD<Glue42.Displays.Display[]>(DisplayCommand.GetAll, {});\n        return displays.map(this.decorateDisplay);\n    }\n\n    public get = async (id: number): Promise<Glue42.Displays.Display> => {\n        const display = await this.callGD<Glue42.Displays.Display>(DisplayCommand.Get, {id});\n        return this.decorateDisplay(display);\n    }\n\n    public getPrimary = async (): Promise<Glue42.Displays.Display> => {\n        const primary = (await this.all()).find((d) => d.isPrimary);\n        return primary;\n    }\n\n    public capture = async (options: CaptureOptions): Promise<string> => {\n        const screenshot = await this.callGD<string>(DisplayCommand.Capture, { ...options });\n        return screenshot;\n    }\n\n    public captureAll = async (options: Glue42.Displays.CaptureAllOptions): Promise<string | string[]> => {\n        const screenshots = await this.callGD<string | string[]>(DisplayCommand.CaptureAll, { ...options });\n        return screenshots;\n    }\n\n    public getMousePosition = async (): Promise<Glue42.Displays.Point> => {\n        const point = await this.callGD<Glue42.Displays.Point>(DisplayCommand.GetMousePosition);\n        return point;\n    }\n\n    private callGD = async <T>(command: string, options?: object): Promise<T> => {\n        // Consider targetting only GD\n        const invocationResult = await this._agm.invoke(T42DisplayCommand, { options: {...options}, command });\n        return invocationResult.returned.data;\n    }\n\n    private decorateDisplay = (original: Glue42.Displays.Display): Glue42.Displays.Display => {\n        return {\n            ...original,\n            capture: (size: SizeOptions) => this.capture({ id: original.id, size })\n        };\n    }\n}\n\ntype SizeOptions =  Glue42.Displays.ScaleOptions |  Glue42.Displays.AbsoluteSizeOptions;\n\nenum DisplayCommand {\n    Capture = \"capture\",\n    CaptureAll = \"captureAll\",\n    GetAll = \"getAll\",\n    Get = \"get\",\n    GetMousePosition = \"getMousePosition\",\n}\n","import { Glue42 } from \"../../glue\";\n\nconst CONTEXT_PREFIX = \"___channel___\";\n\nexport class SharedContextSubscriber {\n    private unsubscribeFunc: () => void = undefined;\n    private current: string = undefined;\n    private callback: any;\n\n    constructor(private contexts: Glue42.Contexts.API) {\n    }\n\n    public subscribe(callback: any) {\n        this.callback = callback;\n    }\n\n    public async subscribeFor(name: string, callback: (data: object, context: Glue42.Channels.ChannelContext, updaterId: string) => void): Promise<() => void> {\n        if (!await this.isChannel(name)) {\n            return Promise.reject(Error(`Channel with id: ${name} doesn't exist !`));\n        }\n        return this.contexts.subscribe(this.createContextName(name), (data: any, delta: any, removed: any, unsubscribe: any, extraData: any) => {\n            callback(data.data, data, extraData && extraData.updaterId);\n        });\n    }\n\n    public async switchChannel(name: string) {\n        this.unsubscribe();\n        this.current = name;\n        const sharedContextName = this.createContextName(name);\n        this.unsubscribeFunc = await this.contexts.subscribe(sharedContextName, (data) => {\n            if (this.callback) {\n                this.callback(data);\n            }\n        });\n    }\n\n    public unsubscribe(): Promise<void> {\n        if (this.unsubscribeFunc) {\n            this.unsubscribeFunc();\n        }\n        return Promise.resolve();\n    }\n\n    public async add(id: string, data: Glue42.Channels.ChannelContext): Promise<void> {\n        const name = this.createContextName(id);\n        return this.contexts.set(name, data);\n    }\n\n    public all(): Promise<string[]> {\n        const allContexts = this.contexts.all();\n        const channels = allContexts.filter((c: string) => c.startsWith(CONTEXT_PREFIX));\n        const ids = channels.map((c: string) => c.substr(CONTEXT_PREFIX.length));\n        return Promise.resolve(ids);\n    }\n\n    public async getContextData(name: string): Promise<Glue42.Channels.ChannelContext> {\n        if (!await this.isChannel(name)) {\n            return Promise.reject(Error(`A channel with name: ${name} doesn't exist !`));\n        }\n\n        return new Promise((resolve, reject) => {\n            this.contexts.subscribe(this.createContextName(name), (data) => {\n                resolve(data);\n            }).then((unsub) => unsub);\n        });\n    }\n\n    public update(id: string, data: any): Promise<void> {\n        const name = this.createContextName(id);\n        return this.contexts.update(name, data);\n    }\n\n    private createContextName(id: string) {\n        return CONTEXT_PREFIX + id;\n    }\n\n    private async isChannel(id: string): Promise<boolean> {\n        return (await this.all()).some((channelId) => channelId === id);\n    }\n}\n","import { Glue42 } from \"../../glue\";\nimport { default as CallbackRegistryFactory, CallbackRegistry } from \"callback-registry\";\nimport { SharedContextSubscriber } from \"./contexts\";\n\nexport class ChannelsImpl implements Glue42.Channels.API {\n    private subsKey = \"subs\";\n    private changedKey = \"changed\";\n\n    private registry: CallbackRegistry = CallbackRegistryFactory();\n    private currentContext: string;\n\n    constructor(private shared: SharedContextSubscriber) {\n        this.shared.subscribe(this.handler.bind(this));\n    }\n\n    public current(): string {\n        return this.currentContext;\n    }\n\n    public subscribe(callback: (data: object, context: Glue42.Channels.ChannelContext, updaterId: string) => void, channelContext?: Glue42.Channels.ChannelContext): () => void {\n        return this.registry.add(this.subsKey, callback);\n    }\n\n    public async subscribeFor(name: string, callback: (data: object, context: Glue42.Channels.ChannelContext, updateId: string) => void): Promise<() => void> {\n        const unsub = await this.shared.subscribeFor(name, callback);\n        return unsub;\n    }\n\n    public async publish(data: object, channelId?: string): Promise<void> {\n        if (channelId) {\n            if (typeof channelId !== \"string\") {\n                return Promise.reject(Error(\"Please provide the channelId as a string !\"));\n            }\n\n            const context: Glue42.Channels.ChannelContext = await this.get(channelId);\n\n            if (!context.name) {\n                return Promise.reject(Error(\"no name provided\")); // TODO: better error\n            }\n\n            return this.shared.update(context.name, {data});\n        }\n\n        if (!this.currentContext) {\n            throw new Error(\"not joined to any channel\");\n        }\n        return this.shared.update(this.currentContext, {data});\n    }\n\n    public join(id: string): Promise<void> {\n        this.currentContext = id;\n        this.registry.execute(this.changedKey, id);\n        return this.shared.switchChannel(id);\n    }\n\n    public leave(): Promise<void> {\n        this.currentContext = undefined;\n        this.registry.execute(this.changedKey, undefined);\n        return this.shared.unsubscribe();\n    }\n\n    public all(): Promise<string[]> {\n        return this.shared.all();\n    }\n\n    public get(channelName: string): Promise<Glue42.Channels.ChannelContext> {\n        return this.shared.getContextData(channelName);\n    }\n\n    public changed(callback: (channel: string) => () => void) {\n        this.registry.add(this.changedKey, callback);\n    }\n\n    public meta(name: string, meta: object): Promise<void> {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    public async add(info: Glue42.Channels.ChannelContext): Promise<Glue42.Channels.ChannelContext> {\n        if (!info) {\n            throw new Error(\"info argument can not be undefined\");\n        }\n\n        if (!info.name) {\n            throw new Error(\"info.name is missing\");\n        }\n\n        const context: Glue42.Channels.ChannelContext = {\n            name: info.name,\n            meta: info.meta || {},\n            data: info.data || {}\n        };\n\n        await this.shared.add(info.name, context);\n        return context;\n    }\n\n    public remove(id: string): void {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    public onChannelAdded(cb: () => void): void {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    public onChannelRemoved(cb: () => void): void {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    public apps(channelId?: string): Promise<any[]> {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    private handler(context: Glue42.Channels.ChannelContext, updaterId: string): any {\n        this.registry.execute(this.subsKey, context.data, context, updaterId);\n    }\n}\n","import { Glue42 } from \"../../glue\";\nimport { setupAGM } from \"./agm\";\nimport { SharedContextSubscriber } from \"./contexts\";\nimport { ChannelsImpl } from \"./channels\";\n\nexport function factory(contexts: Glue42.Contexts.API, agm: Glue42.AGM.API): Glue42.Channels.API & { ready: () => Promise<void>; } {\n    const sharedContexts = new SharedContextSubscriber(contexts);\n    const channels = new ChannelsImpl(sharedContexts);\n\n    setupAGM(agm, channels);\n\n    return {\n        subscribe: channels.subscribe.bind(channels),\n        subscribeFor: channels.subscribeFor.bind(channels),\n        publish: channels.publish.bind(channels),\n        all: channels.all.bind(channels),\n        current: channels.current.bind(channels),\n        join: channels.join.bind(channels),\n        leave: channels.leave.bind(channels),\n        add: channels.add.bind(channels),\n        get: channels.get.bind(channels),\n        changed: channels.changed.bind(channels),\n\n        ready: () => (contexts as any).ready()\n    };\n}\n","import { Glue42 } from \"../../glue\";\n\nexport async function setupAGM(agm: Glue42.AGM.API, channels: Glue42.Channels.API) {\n\n    let windowId;\n    if (typeof window !== \"undefined\") {\n        if (window.glue42gd) {\n            windowId = window.glue42gd.windowId;\n        }\n    }\n\n    if (!windowId) {\n        // not supported\n        return;\n    }\n    await agm.register(\"T42.Channels.Command\", (args: any) => {\n        const command = args.command;\n        if (!command) {\n            throw new Error(\"missing command argument\");\n        }\n        if (command === \"join\") {\n            const id = args.channel;\n            if (!id) {\n                throw new Error(\"missing argument id\");\n            }\n            channels.join(id);\n            return;\n        }\n        if (command === \"leave\") {\n            channels.leave();\n            return;\n        }\n        if (command === \"get\") {\n            const id = channels.current();\n            return { id };\n        }\n        throw new Error(`unknown command ${command}`);\n    });\n\n    // agm interface is available for SW windows only\n    agm.invoke(\"T42.Channels.Announce\", { swId: windowId, instance: agm.instance.instance });\n}\n","import { Glue42 } from \"../../glue\";\r\nimport { default as CallbackRegistryFactory, CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\r\n\r\nconst CommandMethod = \"T42.Hotkeys.Command\";\r\nconst InvokeMethod = \"T42.Hotkeys.Invoke\";\r\n\r\nconst RegisterCommand = \"register\";\r\nconst UnregisterCommand = \"unregister\";\r\nconst UnregisterAllCommand = \"unregisterAll\";\r\n\r\nexport class HotkeysImpl implements Glue42.Hotkeys.API {\r\n\r\n    private registry: CallbackRegistry = CallbackRegistryFactory();\r\n    private firstHotkey = true;\r\n    private hotkeys = new Map<string, Glue42.Hotkeys.HotkeyInfo>();\r\n\r\n    constructor(private agm: Glue42.AGM.API) {\r\n    }\r\n\r\n    public async register(info: string | Glue42.Hotkeys.HotkeyInfo, callback: Glue42.Hotkeys.HotkeyCallback): Promise<void> {\r\n        if (typeof info === \"undefined\") {\r\n            throw new Error(\"Hotkey parameter missing\");\r\n        }\r\n\r\n        if (typeof info === \"string\") {\r\n            info = {\r\n                hotkey: info\r\n            };\r\n        } else {\r\n            if (!info.hotkey) {\r\n                throw new Error(\"Info's hotkey parameter missing\");\r\n            }\r\n\r\n            info = {\r\n                hotkey: info.hotkey,\r\n                description: info.description\r\n            };\r\n        }\r\n\r\n        const hkToLower = this.formatHotkey(info.hotkey);\r\n        if (this.hotkeys.has(hkToLower)) {\r\n            throw new Error(`Shortcut for ${hkToLower} already registered`);\r\n        }\r\n\r\n        // if very first a hotkey is registered by this application register invoke AGM method\r\n        if (this.firstHotkey) {\r\n            this.firstHotkey = false;\r\n            await this.registerInvokeAGMMethod();\r\n        }\r\n        // store the callback\r\n        this.registry.add(hkToLower, callback);\r\n\r\n        // invoke GD method\r\n        await this.agm.invoke(CommandMethod, { command: RegisterCommand, hotkey: hkToLower, description: info.description });\r\n\r\n        this.hotkeys.set(hkToLower, info);\r\n    }\r\n\r\n    public async unregister(hotkey: string): Promise<void> {\r\n        if (typeof hotkey === \"undefined\") {\r\n            throw new Error(\"hotkey parameter missing\");\r\n        }\r\n\r\n        if (typeof hotkey !== \"string\") {\r\n            throw new Error(\"hotkey parameter must be string\");\r\n        }\r\n\r\n        const hkToLower = this.formatHotkey(hotkey);\r\n        await this.agm.invoke(CommandMethod, { command: UnregisterCommand, hotkey: hkToLower });\r\n        this.hotkeys.delete(hkToLower);\r\n        this.registry.clearKey(hkToLower);\r\n    }\r\n\r\n    public async unregisterAll(): Promise<void> {\r\n        await this.agm.invoke(CommandMethod, { command: UnregisterAllCommand });\r\n        this.hotkeys.clear();\r\n        this.registry.clear();\r\n    }\r\n\r\n    /**\r\n     * Whether this application has registered accelerator.\r\n     * @param hotkey\r\n     */\r\n    public isRegistered(hotkey: string): boolean {\r\n        const hkToLower = this.formatHotkey(hotkey);\r\n        return this.hotkeys.has(hkToLower);\r\n    }\r\n\r\n    private registerInvokeAGMMethod(): void {\r\n        this.agm.register(InvokeMethod, (args: {\r\n            key: string;\r\n        }) => {\r\n            const hkToLower = args.key.toLowerCase();\r\n            const info = this.hotkeys.get(hkToLower);\r\n            this.registry.execute(hkToLower, info);\r\n        });\r\n    }\r\n\r\n    private formatHotkey(hotkey: string): string {\r\n        if (hotkey) {\r\n            return hotkey.replace(/\\s/g, \"\").toLowerCase();\r\n        }\r\n    }\r\n}\r\n","import { Glue42 } from \"../../glue\";\nimport generate from \"shortid\";\n\nconst T42_INTENTS_COMMAND = \"T42.Intents.Command\";\nconst T42_INTENTS_EVENTS = \"T42.Intents.Events\";\nlet agm: Glue42.AGM.API;\n\nenum IntentCommand {\n    Find = \"find\",\n    FindByContext = \"findByContext\",\n    GetAll = \"all\",\n    Raise = \"raise\",\n}\n\ninterface Handler {\n    unsubId: string;\n    callback: (context: object) => void;\n}\n\nconst intentListeners: { [intent: string]: Handler[] } = {};\n\nasync function raise(request: string | Glue42.Intents.IntentRequest): Promise<Glue42.Intents.IntentResult> {\n    if (typeof request === \"string\") {\n        request = { intent: request };\n    }\n\n    return invokeGlue<Glue42.Intents.IntentResult>(IntentCommand.Raise, request);\n}\n\nasync function find(intentFilter?: string | Glue42.Intents.IntentFilter): Promise<Glue42.Intents.Intent> {\n    if (typeof intentFilter === \"string\") {\n        intentFilter = { name: intentFilter };\n    }\n\n    // TODO: review filters\n    return invokeGlue<Glue42.Intents.Intent>(IntentCommand.Find, { intentFilter });\n}\n\nasync function findByContext(contextType: string): Promise<Glue42.Intents.Intent[]> {\n    if (!contextType || typeof contextType !== \"string\") {\n        return Promise.reject(Error(`findByContext called with invalid contextType: ${contextType}`));\n    }\n\n    return invokeGlue<Glue42.Intents.Intent[]>(IntentCommand.FindByContext, { contextType });\n}\n\nasync function all(): Promise<Glue42.Intents.Intent[]> {\n    return invokeGlue<Glue42.Intents.Intent[]>(IntentCommand.GetAll);\n}\n\nfunction addIntentListener(intent: string, handler: (context: object) => void): () => void {\n    if (!intentListeners[intent]) {\n        intentListeners[intent] = [];\n    }\n\n    const unsubId: string = generate();\n    intentListeners[intent].push({ unsubId, callback: handler });\n\n    return () => {\n        intentListeners[intent] = intentListeners[intent]\n            .filter((h) => h.unsubId !== unsubId);\n    };\n}\n\nasync function invokeGlue<T>(command: string, options?: object): Promise<T> {\n    // Consider targetting only GD\n    const invocationResult = await agm.invoke(T42_INTENTS_COMMAND, { options: { ...options }, command });\n    return invocationResult.returned.result;\n}\n\nexport function factory(agmAPI: Glue42.AGM.API): Glue42.Intents.API & { ready: () => Promise<void>; } {\n    agm = agmAPI;\n\n    agm.register(T42_INTENTS_EVENTS, handleEvent);\n\n    return {\n        raise,\n        find,\n        findByContext,\n        all,\n        addIntentListener,\n        ready: () => Promise.resolve()\n    };\n}\n\nenum IntentEvents {\n    IntentListenerRaised = \"intentListenerRaised\"\n}\n\ninterface IntentEventData {\n    type: IntentEvents;\n    intent: string;\n\n    [prop: string]: any;\n}\n\nfunction handleEvent(args: IntentEventData) {\n    const { type, intent, context } = args;\n\n    switch (type) {\n        case IntentEvents.IntentListenerRaised:\n            const callbacks = intentListeners[intent]?.map((handler) => handler.callback);\n            // Todo: What should happen when there is no context ?\n            if (callbacks && callbacks.length > 0) {\n                callbacks.forEach((cb) => cb(context));\n            }\n\n    }\n}\n","import { Glue42 } from \"../glue\";\nimport { ActivitiesLibConfigObject, LibConfigObject, InternalConfig } from \"./types\";\n\ninterface InputModeObject {\n    mode?: boolean | string;\n    logger?: Glue42.LoggerConfig;\n}\n\nexport default (options: Glue42.Config): InternalConfig => {\n\n    // Possible options per lib (this is InputLibConfig type)\n    // * false - library is disabled (e.g. config.appManager = false)\n    // * true - library is enabled in running in default mode (e.g config.appManager = true).\n    //          Exception is if default mode is false - in that case it runs default true mode.\n    // * string - start in some mode (e.g. config.appManager = \"full\")\n    // * object - allows further customization (e.g config.appManager = {mode: \"full\", someSetting: 42})\n    //\n    // Some libs support different running modes, some do not.\n    //\n    // Currently defaults are:\n    // appManager: disabled\n    // layouts: enabled in 'slim' mode\n    // activities: enabled in 'trackMyTypeAndInitiatedFromMe' mode\n    // windows: enabled (does not support modes)\n    //\n    // InputLibConfig is transformed to LibConfigObject\n\n    type InputLibConfig = boolean | string | InputModeObject;\n\n    /**\n     * Transforms InputLibConfig (the config as specified from the user)\n     * to LibConfigObject(internal library configuration)\n     */\n    function getLibConfig<T extends LibConfigObject>(value: InputLibConfig, defaultMode: boolean | string, trueMode?: boolean | string): T {\n\n        // if value is false return undefined\n        if (typeof value === \"boolean\" && !value) {\n            return undefined;\n        }\n\n        // find the mode of the library\n        const mode = getModeAsString(value, defaultMode, trueMode);\n\n        // if object we will replace the mode because appManager = {mode: true, setting: 42}\n        // should be turned into appManager = {mode: 'slim', setting: 42}\n        if (typeof value === \"object\") {\n            value.mode = mode;\n            return value as T;\n        }\n\n        return {\n            mode,\n        } as T;\n    }\n\n    /**\n     * Finds the mode based for a given library\n     * 1. If object we call recursively using object.mode for value\n     * 1. If the user hasn't specified anything we use the hard coded defaults\n     * 3. If the value is false or it got defaulted to false, we return undefined\n     * 4. If the value is true we return trueMode or defaultMode (if trueMode is undefined)\n     */\n    function getModeAsString(value: InputLibConfig, defaultMode: boolean | string, trueMode?: boolean | string): string {\n\n        if (typeof value === \"object\") {\n            // 1. if object\n            return getModeAsString(value.mode, defaultMode, trueMode) + \"\";\n        } else if (typeof value === \"undefined\") {\n            // 2. if the user does not pass anything\n            if (typeof defaultMode === \"boolean\" && !defaultMode) {\n                // 3. if gets defaulted to false, the library should be off\n                return undefined;\n            } else {\n                return defaultMode + \"\";\n            }\n        } else if (typeof value === \"boolean\") {\n            // 4. if the user passes true, use trueMode or defaultMode\n            if (value) {\n                // if the user passes true, use trueMode or defaultMode\n                return ((trueMode === undefined) ? defaultMode : trueMode) + \"\";\n            } else {\n                // 3. if the user passes false, the library should be off\n                return undefined;\n            }\n        }\n\n        return value + \"\";\n    }\n\n    const appDefaultMode = false;\n    const appDefaultTrueMode = \"startOnly\";\n\n    const activitiesDefaultMode = \"trackMyTypeAndInitiatedFromMe\";\n\n    const layoutsDefaultMode = \"slim\";\n\n    return {\n        layouts: getLibConfig<LibConfigObject>(options.layouts, layoutsDefaultMode),\n        activities: getLibConfig<ActivitiesLibConfigObject>(options.activities, activitiesDefaultMode),\n        appManager: getLibConfig<LibConfigObject>(options.appManager, appDefaultMode, appDefaultTrueMode),\n        windows: getLibConfig<LibConfigObject>(options.windows, true),\n        channels: getLibConfig<LibConfigObject>(options.channels || false, false),\n        displays: getLibConfig<LibConfigObject>(options.displays, true),\n    };\n};\n","import CoreFactory, { Glue42Core } from \"@glue42/core\";\n\nimport { ActivityModule } from \"./activity/main\";\nimport AppManagerFactory from \"./app-manager/main\";\nimport WindowsFactory from \"./windows/main\";\nimport LayoutsFactory from \"./layouts/main\";\nimport DisplayManager from \"./displays/displayManager\";\nimport { factory as channels } from \"./channels/main\";\nimport { factory as hotkeys } from \"./hotkeys/main\";\n\nimport { Glue42 } from \"../glue\";\nimport { version } from \"../package.json\";\nimport prepareConfig from \"./config\";\nimport { LibConfigObject } from \"./types\";\nimport { ActivityMode } from \"./activity/activityConfig\";\nimport Utils from \"./utils\";\nimport { factory as intents } from \"./intents/main\";\n\nconst factory = (options: Glue42.Config): Promise<Glue42.Glue> => {\n    const gdMajorVersion = Utils.getGDMajorVersion();\n    // get config object\n    // basically selecting some properties (and defaulting them)\n    // it's used to extract things like layouts, appManager, activities etc things\n    // that glueCore itself doesn't know about\n    options = options || {};\n    const glueConfig = prepareConfig(options);\n    options.gateway = options.gateway || {};\n\n    let _appManager: any;\n    let _activity: any;\n    let _windows: any;\n    let _displays: any;\n\n    // dependency graph:\n    //   windows: agm, appManager (via getter)\n    //   activities: contexts, agm, logger, windows, appManager (via getter)\n    //   appManager: agm, windows, logger, activities\n    //   layouts: agm, appManager, logger\n    function createWindows(core: Glue42Core.GlueCore) {\n        if (glueConfig.windows) {\n\n            const windowsLogger = getLibLogger(\"windows\", core.logger, glueConfig.windows);\n\n            _windows = WindowsFactory(\n                core.agm,\n                windowsLogger,\n                () => {\n                    return _appManager;\n                },\n                gdMajorVersion);\n            debugLog(_windows);\n            return _windows;\n        }\n    }\n\n    function createActivities(core: Glue42Core.GlueCore) {\n        if (glueConfig.activities) {\n            if ((gdMajorVersion === 2) ||\n                (ActivityModule.checkIsUsingGW3Implementation &&\n                    ActivityModule.checkIsUsingGW3Implementation(core.connection))) {\n\n                const activityLogger = getLibLogger(\"activity\", core.logger, glueConfig.activities);\n\n                _activity = new ActivityModule({\n                    connection: core.connection,\n                    contexts: core.contexts,\n                    agm: core.agm,\n                    logger: activityLogger,\n                    logLevel: \"info\",\n                    disableAutoAnnounce: false,\n                    disposeRequestHandling: \"ignore\",\n                    announcementInfo: null,\n                    windows: _windows,\n                    appManagerGetter: () => {\n                        return _appManager;\n                    },\n                    mode: glueConfig.activities.mode as ActivityMode,\n                    typesToTrack: glueConfig.activities.typesToTrack,\n                    activityId: typeof window !== \"undefined\" && window.glue42gd && window.glue42gd.activityInfo && window.glue42gd.activityInfo.activityId,\n                    gdMajorVersion\n                }).api;\n                debugLog(_activity);\n                return _activity;\n            }\n        }\n    }\n\n    function createAppManager(core: Glue42Core.GlueCore) {\n        if (!glueConfig.appManager) {\n            return;\n        }\n\n        const logger = getLibLogger(\"appManager\", core.logger, glueConfig.appManager);\n\n        // AppManager v3\n        _appManager = AppManagerFactory({\n            agm: core.agm,\n            windows: _windows,\n            logger,\n            activities: _activity,\n            mode: glueConfig.appManager.mode as Glue42.AppManager.Mode,\n            gdMajorVersion\n        });\n        debugLog(_appManager);\n        return _appManager;\n    }\n\n    function createLayouts(core: Glue42Core.GlueCore) {\n        if (!glueConfig.layouts) {\n            return;\n        }\n\n        const logger = getLibLogger(\"layouts\", core.logger, glueConfig.layouts);\n        const lay = LayoutsFactory({\n            agm: core.agm,\n            appManager: _appManager,\n            activityGetter: () => _activity,\n            logger,\n            mode: glueConfig.layouts.mode as Glue42.Layouts.Mode,\n            gdMajorVersion\n        });\n        debugLog(lay);\n        return lay;\n    }\n\n    function createChannels(core: Glue42Core.GlueCore) {\n        if (!glueConfig.channels) {\n            return;\n        }\n\n        if (!core.contexts) {\n            // TODO log - notify the user that he can not use channels without context\n            return;\n        }\n\n        // Logger\n        const channelsAPI = channels(core.contexts, core.agm);\n\n        debugLog(channelsAPI);\n        return channelsAPI;\n    }\n\n    function createHotkeys(core: Glue42Core.GlueCore) {\n        const hotkeysAPI = hotkeys(core.agm);\n\n        debugLog(hotkeysAPI);\n        return hotkeysAPI;\n    }\n\n    function createIntents(core: Glue42Core.GlueCore) {\n        const intentsAPI = intents(core.agm);\n\n        debugLog(intentsAPI);\n        return intentsAPI;\n    }\n\n    function createDisplaysApi(core: Glue42Core.GlueCore) {\n        if (glueConfig.displays) {\n            const displaysLogger = getLibLogger(\"displays\", core.logger, glueConfig.displays);\n\n            _displays = new DisplayManager(core.agm, displaysLogger);\n            debugLog(_displays);\n            return _displays;\n        }\n    }\n\n    function getLibLogger(loggerName: string, logger: Glue42Core.Logger.API, config: LibConfigObject) {\n        const newLogger = logger.subLogger(loggerName);\n\n        if (config && config.logger) {\n            const loggerConfig = config.logger;\n            if (loggerConfig.console) {\n                newLogger.consoleLevel(loggerConfig.console);\n            }\n            if (loggerConfig.publish) {\n                newLogger.publishLevel(loggerConfig.publish);\n            }\n            // not supported in GD3\n            // if (loggerConfig.metrics) {\n            //  newLogger.metricsLevel(loggerConfig.metrics);\n            // }\n        }\n\n        return newLogger;\n    }\n\n    const ext: Glue42Core.Extension = {\n        // define extra libraries for glue-core to raise\n        libs: [\n            { name: \"windows\", create: createWindows },\n            { name: \"activities\", create: createActivities },\n            { name: \"appManager\", create: createAppManager },\n            { name: \"layouts\", create: createLayouts },\n            { name: \"channels\", create: createChannels },\n            { name: \"hotkeys\", create: createHotkeys },\n            { name: \"displays\", create: createDisplaysApi },\n            { name: \"intents\", create: createIntents },\n        ],\n\n        version,\n\n        enrichGlue: (glue: Glue42Core.GlueCore) => {\n            // put some data to config\n            glue.config.activities = glueConfig.activities;\n            glue.config.windows = glueConfig.windows;\n            glue.config.appManager = glueConfig.appManager;\n            glue.config.layouts = glueConfig.layouts;\n            glue.config.channels = glueConfig.channels;\n            glue.config.displays = glueConfig.displays;\n        },\n    };\n\n    const currentLog: any[] = [];\n    if (typeof window !== \"undefined\") {\n        if (!(window as any).glueFactoryLog) {\n            (window as any).glueFactoryLog = [];\n        }\n        (window as any).glueFactoryLog.push(currentLog);\n    }\n\n    function debugLog(entry: any) {\n        currentLog.push(entry);\n    }\n\n    return CoreFactory(options, ext);\n};\n\nfactory.coreVersion = (CoreFactory as any).version;\nfactory.version = version;\n\nexport default factory;\n","import { Glue42 } from \"../../glue\";\nimport { HotkeysImpl } from \"./hotkeys\";\n\nexport function factory(agm: Glue42.AGM.API): Glue42.Hotkeys.API & { ready: () => Promise<void>; } {\n    const hotkeys = new HotkeysImpl(agm);\n\n    return {\n        register: hotkeys.register.bind(hotkeys),\n        unregister: hotkeys.unregister.bind(hotkeys),\n        unregisterAll: hotkeys.unregisterAll.bind(hotkeys),\n        isRegistered: hotkeys.isRegistered.bind(hotkeys),\n\n        ready: () => Promise.resolve()\n    };\n}\n","import CreateGlue from \"./glue\";\n\nlet whatToExpose = CreateGlue;\nlet shouldSetToWindow = true;\n\nif (typeof window !== \"undefined\") {\n    // if glue42gd (running in GD3) and autoInjected\n    const glue42gd = (window as any).glue42gd;\n    if (glue42gd && glue42gd.autoInjected) {\n        whatToExpose = (window as any).Glue;\n        // no need to set to window, it's already there\n        shouldSetToWindow = false;\n    }\n\n    if (shouldSetToWindow) {\n        (window as any).Glue = whatToExpose;\n    }\n\n    // remove GlueCore from the window object (injected by Glue-core)\n    delete (window as any).GlueCore;\n}\n// add default library for ES6 modules\n(whatToExpose as any).default = whatToExpose;\n\nexport default whatToExpose;\n"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__spreadArrays","il","r","k","a","j","jl","MetricTypes","getMetricTypeByValue","metric","type","getTypeByValue","Date","serializeMetric","serializedMetrics","values","keys","reduce","memo","key","innerType","composite","defineNestedComposite","description","context","name","normalizeMetricName","path","join","getMetricValueByType","now","publishNestedComposite","getTime","Boolean","toString","composeMsgForRootStateMetric","system","merged","flatten","arr","flat","toFlatten","concat","isArray","root","getAggregateState","highestState","sort","state","msg","forEach","m","idx","slice","aggregateDescription","Helpers","definition","parent","transport","Error","BaseMetric","createMetric","defineProperty","get","_a","repo","enumerable","configurable","update","newValue","updateMetric","NumberMetric","_super","incrementBy","num","increment","decrement","decrementBy","ObjectMetric","mergeValues","_this","StringMetric","TimestampMetric","Repository","options","protocol","init","separator","_transport","_name","_description","_repo","_parent","_path","_buildPath","shadowedSystem","_state","id","_subSystems","_metrics","_getOrCreateMetric","metricObject","expectedType","metricDef","matching","filter","shadowedMetric","existing","me","subSystems","metrics","subSystem","nameSystem","descriptionSystem","match","_system","getState","setState","stateDescription","updateSystem","stringMetric","timestampMetric","objectMetric","numberMetric","aggState","shadowedSubSystem","createSystem","addSystemMetrics","clickStream","undefined","rootSystem","useClickStream","navigator","userAgent","document","clickStream_1","documentClickHandler","target","timestamp","className","tagName","toLowerCase","href","title","page","window","location","addEventListener","attachEvent","urlMetric","appNameMetric","startUrl","glue42gd","appName","NullProtocol","connection","config","joinPromise","session","replayRepo","replaySystem","ss","createMetricsMsg","Description","Value","send","metricClone","cloneMetric","updateMetricCore","publishMetricsMsg","resolveReadyPromise","domain","onJoined","reconnect","defineRootMetricsMsg","shadowedUpdateMetric","stateObj","rootMetric","peer_id","peerId","gw3","createRegistry","errorHandling","_userErrorHandler","callbacks","_handleError","exceptionArtifact","errParam","stack","console","error","add","callback","callbacksForKey","allForKey","acc","element","index","execute","argumentsArr","_i","results","err","clear","clearKey","default","lib","InProcTransport","settings","logger","registry","gw","facade","connect","_client","message","messageHandler","client","sendObject","_msg","onMessage","onConnectedChanged","close","open","SharedWorkerTransport","workerFile","worker","SharedWorker","port","onmessage","data","postMessage","Utils","getGDMajorVersion","glueDesktop","version","ver","Number","substr","isNaN","isNode","_isNode","global","process","PromiseWrapper","resolved","promise","delay","time","setTimeout","WebSocketConstructor","require","WebSocket","WS","_running","_registry","wsRequests","ws","waitForSocketConnection","info","pw","failed","readyState","openSocket","retryInterval","retriesLeft","_b","reconnectInterval","notifyForSocketState","debug","initiateSocket","retries","onerror","reason","JSON","stringify","seen_1","WeakSet","has","notifyStatusChanged","onclose","onopen","identity","application","wsRequest","status","seed","alphabet","previousSeed","shuffled","randomFromSeed","nextValue","_seed_","ORIGINAL","reset","setCharacters","_alphabet_","unique","split","item","ind","lastIndexOf","getShuffled","characterIndex","sourceArray","targetArray","Math","floor","splice","shuffle","alphabet_1","characters","lookup","crypto","msCrypto","randomByteBrowser","getRandomValues","random","dest","Uint8Array","encode_1","number","loopCounter","str","pow","decode_1","indexOf","isValid","len","lib$1","fn","module","exports","createCommonjsModule","counter","previousSeconds","clusterWorkerId","generate","seconds","seedValue","workerId","newCharacters","decode","shortid","domainSession","successMessages","errorMessages","_latestOptions","isJoined","tryReconnecting","_connectionOn","disconnected","loggedIn","on","handleSuccessMessage","handleErrorMessage","sm","requestsMap","destination","wasReconnect","handleJoined","catch","requestId","request_id","entry","success","getNextRequestId","tag","skipPeerId","successMsg","_tag","errorMsg","warn","leave","onLeft","sendFireAndForget","connected","GW3ProtocolImpl","protocolVersion","datePrefix","datePrefixLen","dateMinLen","datePrefixFirstChar","_isLoggedIn","shouldTryLogin","initialLogin","initialLoginAttempts","sessions","handleDisconnected","ping","processStringMessage","parse","substring","milliseconds","parseInt","ex","msgType","createStringMessage","oldToJson","toJSON","datePrefix_1","processObjectMessage","createObjectMessage","login","authentication","e_1","helloMsg","sendOptions","welcomeMsg","token","_c","err_1","_d","loginConfig","username","password","gatewayToken","getNewGWToken","method","flowName","provider","flowCallback","sessionId","secret","globalDomain","subLogger","maxRetries","reconnectAttempts","Buffer","from","resolvedIdentity","resolved_identity","availableDomains","available_domains","access_token","setLoggedIn","logout","promises","pingTimer","clearTimeout","map","all","domainName","domainLogger","authToken","res","getGWToken","MessageReplayerImpl","specs","specsNames","messages","subs","subsRefCount","specs_1","spec","name_1","_loop_1","refCount","this_1","sub","processMessage","types","isDone","name_2","drain","off","Connection","messageHandlers","ids","_connected","isTrace","inproc","sharedWorker","canPublish","handleConnectionChanged","bind","handleTransportMessage","replaySpecs","replayer","isObjectBasedTransport","trace","strMessage","isLoggedIn","authRequest","distributeMessage","handlers","handlerId","handler","msgObj","order","Logger","logFn","subLoggers","customLogFn","loggerFullName","includeTimeAndLevel","existingSub","publishLevel","level","_publishLevel","consoleLevel","_consoleLevel","log","publishMessage","compareWith","loggerName","Interop","methods","InteropMethodName","invoke","prefix","date","getHours","getMinutes","getSeconds","getMilliseconds","toPrint","ContextMessageReplaySpec","prepareConfig","configuration","ext","nodeStartingContext","startingContextString","env","_GD_STARTING_CONTEXT_","_e","_f","_g","_h","_j","_k","instanceId","windowId","pid","environment","region","gwConfig","gateway","gwURL","applicationName","uid","applicationConfig","getApplication","uniqueAppName","appInstanceId","instance","api","getConnection","bus","auth","gwToken","getAuth","publish","getLogger","contexts","libs","customLogger","timer","endTime","period","startTime","stop","GW3ContextData","contextId","isAnnounced","activityId","updateCallbacks","hasCallbacks","applyContextDelta","delta","deepClone","added_1","added","updated_1","updated","removed","mergeObjectsProperties","obj","hash","WeakMap","Set","RegExp","source","flags","set","what","withWhat","right","left","deepEqual","x","InvokeStatus","GW3Bridge","_contextNameToData","_gw3Subscriptions","_nextCallbackSubscriptionNumber","_contextNameToId","_contextIdToName","_connection","_logger","_gw3Session","subscribeToContextCreatedMessages","subscribeToContextUpdatedMessages","subscribeToContextDestroyedMessages","handleContextCreatedMessage","handleContextUpdatedMessage","handleContextDestroyedMessage","dispose","contextName","createContext","lifetime","createContextMsg","context_id","contextData","sentExplicitSubscription","invokeUpdateCallbacks","currentContext","calculatedDelta","calculateContextDelta","gwResponse","handleUpdated","updaterId","resolveImmediately","subscribe","un","unsubscribe","thisCallbackSubscriptionNumber","hadCallbacks","joinedActivity","sendSubscribe","subscriptionKey","sendUnsubscribe","extraData","oldContext","createdMessageTypes_1","createdMessageType","contextCreatedMsg","activity_id","updatedMessageTypes_1","updatedMessageType","contextUpdatedMsg","justSeen","context_snapshot","updater_id","updateCallbackIndex","updateCallback","destroyedMessageTypes_1","destroyedMessageType","destroyedMsg","to","ContextsModule","_bridge","checkName","ready","promisify","successCallback","errorCallback","rejectAfter","ms","Client","callProtocolSubscribe","targetServers","stream","successProxy","errorProxy","methodResponseTimeout","waitTimeoutMs","methodDef","method_response_timeout","wait_for_method_timeout","delayTillNow","currentServers","getServerMethodsByFilterAndTarget","retry_1","streamInfo","servers","methodFilter","filterCopy","getServers","serverMethodMap","server","getMethods","methodsForInstance","getMethodsForInstance","methodAdded","onMethodAdded","methodRemoved","onMethodRemoved","serverAdded","onServerAdded","serverRemoved","onServerRemoved","serverMethodAdded","onServerMethodAdded","serverMethodRemoved","onServerMethodRemoved","argumentObj","additionalOptions","methodDefinition","serversMethodMap","errorObj","timeout","additionalOptionsCopy","invokePromises","invocationMessages","methodResponseTimeoutMs","tryToAwaitForMethods","called_with","executed_by","returned","serversMethodPair","invId","race","invocationId","getInvocationResultObj","every","getInvokePromise","invocationResults","calledWith","all_return_values","invokeMessage","Success","allValues","currentValue","all_errors","allErrors","currError","invResult","interval","setInterval","clearInterval","filterByTarget","matches","myMatches","serverMethodPair","instanceMatch","localMachine","find","isLocal","instanceFilter","instanceDefinition","containsProps","methodMatch","repoMethod","prop","isMatch","filterValue","repoMethodValue","filterObjTypes","repoObjectTypes","objTypeToContains","object","objType","repoObjType","isFullfiled","containsAllFromFilter","String","matchingServers","resultMethodsObject","methodKey","identifier","prev","current","matchingMethods","getServerMethodsById","ServerSubscription","subscription","branchKey","closeSingleSubscription","pushDataToSingle","Request","requestContext","accept","acceptRequestOnBranch","acceptOnBranch","branch","rejectRequest","ServerStreaming","onSubRequest","rc","rm","handleSubRequest","onSubAdded","handleSubAdded","onSubRemoved","handleSubRemoved","streamCallbacks","subscriptionRequestHandler","request","subscriptionAddedHandler","subscriptionRemovedHandler","ServerBranch","subscriptions","getSubscriptionList","closeAllSubscriptions","pushData","ServerStream","_protocol","_repoMethod","_server","branches","bList","getBranchList","def2","accepts","displayName","objectTypes","returns","supportsStreaming","unregister","updateRepoMethod","Server","serverRepository","invocations","currentlyUnregistering","streaming","onInvoked","onMethodInvoked","createStream","streamDef","existingStream","streamMethodDefinition","getList","some","serverMethod","protocolState","streamUserObject","repoId","remove","register","wrappedCallbackFunction","resultCallback","resultValue","args","userCallback","registerCore","registerAsync","wrappedCallback","resultCalled_1","methodResult","userCallbackAsync","forStream","methodToBeRemoved","unregisterWithPredicate","removeMethodsOrStreams","filterPredicate","methodsOrStreamsToRemove","methodsToRemove","methodUnregPromises","addAsCurrentlyUnregistering","methodName","theFunction","unregisterInProgress","methodToExecute","invocationArgs","unStrException","_value","methodInvocationResult","InstanceWrapper","wrapped","getStreams","refreshWrappedObject","refresh","unwrap","user","machine","service","API","ClientRepository","methodsCount","addServer","serverId","wrapper","serverEntry","removeServerById","methodId","removeServerMethod","addServerMethod","createMethodIdentifier","gatewayId","display_name","object_types","input_signature","result_signature","that","getServersByMethod","allMethods","allServers","unsubscribeFunc","serversWithMethodsToReplay","returnUnsubWithDelayedReplay","methodsToReplay","unsubCalled","getServerById","methodInfo","collectionToReplay","ServerRepository","nextId","getById","ServerStreaming$1","repository","ERR_URI_SUBSCRIPTION_FAILED","nextStreamId","handleAddInterest","handleRemoveInterest","streamingMethod","subscriptionsMap","branchKeyToStreamIdMap","streamId","getStreamId","subscription_id","subscribeMsg","stream_id","sendSubscriptionFailed","br","dropSubscriptionMessage","closeMultipleSubscriptions","subscriptionsToClose","drop","allSubscriptions","onSubscriptionLifetimeEvent","method_id","eventName","handlerFunc","getNextStreamId","caller_id","arguments_kv","subscriptionId","errorMessage","reason_uri","needleBranch","ServerProtocol","clientRepository","handleInvokeMessage","isStreaming","registerMsg","restrictions","invocation_id","callerId","UserSubscription","subscriptionData","params","trackedServers","pair","onData","dataCallback","queued","dataItem","onClosed","closedCallback","onFailed","onConnected","setNewSubscription","newSub","ClientStreaming","subscriptionsList","subscriptionIdToLocalKeyMap","nextSubLocalKey","handleErrorSubscribing","errorResponse","subLocalKey","pendingSub","timeoutId","callArgs","callOnClosedHandlers","handleSubscribed","acceptingServer","isFirstResponse","serverInstance","handleEventData","trackedServersFound","isPrivateData","oob","sendingServerId","receivedStreamData","requestArguments","private","onDataHandlers","queuedData","handleSubscriptionCancelled","expectedNewLength","closers","getNextSubscriptionLocalKey","registerSubscription","server_id","ERR_MSG_SUB_FAILED","drainSubscriptions","subsInfo","localKey","closeSubscription","closingServer","closersCount","closingServerId","ClientProtocol","handlePeerAdded","handlePeerRemoved","handleMethodsAddedMessage","handleMethodsRemovedMessage","handleResultMessage","handleInvocationError","newPeerId","new_peer_id","remoteId","meta","local","serverInfo","removedPeerId","removed_id","methodIdList","gW3ProtocolFactory","libConfig","interop","readyPromise","existingSubscriptions_1","registeredMethods","registeredMethods_1","def","handleReconnect","protocolPromise","MessageBus","topic","routingKey","removeEmptyValues","routing_key","target_identity","response","watchOnEvent","keysMatch","cleaned","obj1","obj2","keysObj1","allMatch","GlueCore","userConfig","gdVersion","preloadPromise","gdPreloadPromise","_interop","_contexts","_bus","glueInitTimer","internalConfig","registerLib","inner","initTime","initEndTime","initStartTime","setupMetrics","initTimer","rootMetrics","disableAutoAppSystem","featureMetric","reportingSystem","action","payload","addFAVSupport","setupContexts","hasActivities","activities","setupBus","setupExternalLibs","externalLibs","createCallback","setupExternalLib","authPromise","authConfig","agmConfig","libsReadyPromises","coreVersion","glue","feedback","feedbackInfo","agm","performance","glueVer","glueConfig","browser","timing","memory","initTimes","extOptions","enrichGlue","updatePerfData","_id","ActivityEntity","other","_updateCore","isString","arg","isUndefined","isUndefinedOrNull","isFunction","ifNotUndefined","doWithIt","ownerWindow","helperWindows","_ownerWindow","_helperWindows","ActivityType","_manager","initiate","appByWindowTypeGetter","_appByWindowTypeGetter","WindowType","getWindows","activity","isIndependent","createWindow","entitiy","entity","eventType","newStatus","oldStatus","EntityEventType","StatusChange","EntityEventContext","ActivityContextChange","ActivityState","_activity","ActivityAGM","_ensureHasAgm","AGM","util.isUndefinedOrNull","windows","w","methodNames","methodsForWindow","currentWindowMethod","activityServers","util.isString","potentialTargets","util.isArray","firstElem","_isInstance","_isActivityWindow","win","parameters","manager","ownerActivityId","_ownerActivityId","AttachedActivityDescriptor","ownerId","windowIds","frameColor","descriptor","detachActivities","nextTick","cb","nodeify","util.isFunction","resp","actType","_actType","_status","_context","_ownerId","_agm","Activity","getActivityType","addWindowToActivity","windowType","windowTypes","createStackedWindows","leaveWindowFromActivity","setActivityContext","updateActivityContext","subscribeActivityEvents","ns","os","subscribeWindowEvents","subscribeActivityContextChanged","act","stopActivity","clone","attachActivities","subscribeActivitiesAttached","newActId","oldActId","subscribeActivitiesDetached","newAct","originalActivity","allStates","_attached","color","callbacksToWait","underlyingWindow","setFrameColor","LogLevel","GlueLogger","_glueLogger","owner","GetTypeName","Level","Trace","_getMessage","Debug","Info","Warn","exec","windowGetter","hcWindowId","Get","_type","_activityId","_instance","_isIndependent","_windowGetter","_hcWindowId","ActivityWindow","getWindowBounds","getWindowType","util.isUndefined","getActivityById","isVisible","setWindowVisibility","focus","activateWindow","bounds","setWindowBounds","closeWindow","_subscribeForActivityWindowEvent","ActivityWindowJoinedActivity","ActivityWindowLeftActivity","event","ActivityStatus","_config","_sessionJoinedPromise","_sessionJoinedPromiseResolve","_activityJoinedPromise","_activityJoinedPromiseResolve","glue42gd_1","addRefreshHandler","setGWToken","nameToWindowType","windowName","owner_type","helper_types","peer_type","owner_id","activity_type","EntityEvent","ActivityStatusChangeEventContext","forwardActivityTypeMessagesToStatusEventHandlers","handleActivityCreatedMessage","handleActivityDestroyedMessage","forwardActivityMessagesToStatusEventHandlers","forwardActivityCreatedAndJoinedActivityToActivityWindowEventHandlers","forwardPeerFactoryMessagesToStatusEventHandlers","forwardPeerFactoryMessagesToPeerFactoryRequests","handlePeerFactoriesAdded","handlePeerFactoriesRemoved","forwardActivityWindowMessagesToEventHandlers","disposeRequestHandling","exit","mode","activity_types","typesToTrack","_activityTypeStatusChangeCallbacks","activityTypeName","toActivityPeerConfig","windowDefinition","activityType","activityTypeGwMessageEntityToActivityType","invokeCallbacks","Added","Removed","_windowTypeStatusChangeCallbacks","factory","_peerFactoriesRegisteredByUs","factories","peerFactoryGwMessageEntityToWindowType","factory_ids","_activityChangeCallbacks","initiateMsg","initial_context","isOverrideTypeDefinition","types_override","helpers","wd","sendCreateAndMapResultingMessagesToPromise","initMsg","_activityTypesInitiatedFromMe","fullReplace","removedKeys","removedKeys_1","activityWindowId","independent","shouldSendReady","activityInfo","_activityWindowChangeCallbacks","getAgmInstance","generateWindowGetter","layout","width","height","top","cellSize","peer_name","created_id","joinActivity","destroy_peer_id","announcementInfo","activityWindowType","activityWindowIndependent","activityWindowName","search","URLSearchParams","searchParams","maybeName","target_id","Updated","windowDefinitions","visible","cloneOptions","into","merge","newActivityInfo","addedMessageType","removedMessageType","mapper","getGetEntityEvent","isAdded","forwardMessageToEventHandler","messageType","getEntityEvent","ent","h","initiatedMessageType","initiatedMessageFilter","createdMessageFilter","cancelledMessageType","cancelledMessageFilter","createdMessageToPromiseResolution","resolveCreatedPromise","rejectCreatedPromise","initiatedSubscription","createdSubscription","cancelledSubscription","errorSubscription","reqId","getRandomRequestId","createdPromise","initiatedMessageAck","dropSubscriptions","dropSubscription","msg4","msg1","msg2","msg3","toReturn","factoryId","peerType","_peerIdAndFactoryIdToPeerType","_contextSubscriptions","subscribeToContext","ActivityContextChangedEventContext","unsubscribeContext","forwardAddedAndRemovedMessagesToEventHandler","activityCreatedMessage","participants","createdMessage","activityGwMessageToActivity","activityToActivityStatusChangeEvent","peerFactoryIdAndOwnerIdToWindowType","peer_factory","gateway_token","joinedMessage","joinedId","joined_id","joinedType","joined_type","joinedName","joined_name","left_id","list","_m","am","_subscribeMyContextChanged","_subscribeMyWindowEvent","_subscribeActivitiesAttached","_subscribeActivitiesDetached","onWindowFrameColorChanged","_subscribeWindowFrameColorChanged","ActivityMy","_w","announcedWindows","myWin","updateContext","setContext","_myActivityJoinedCallbacks","_myActivityRemovedCallbacks","_myContextUpdateCallbacks","_myAttached","_myDetached","_myAttachedTo","_myDetachedFrom","attached","getFrameColor","_myActivityFrameColorChanged","myActivity","_notifyMyContextChanged","_notifyMyWindowEvent","callbackStore","detached","_notifyAttachedTo","_notifyAttached","oldAct","_notifyDetached","_notifyDetachedFrom","signalsToWait","_signals","_callbacks","ReadyMarker","isSet","isError","_error","processNew","_processNew","EntityObservableCollection","items","_items","htmlContainer","internalEntity","_updateInternalCollections","_notifyListeners","entityAddedHandler","getByName","_listeners","listener","entityAsAny","isActivityDestroy","Destroyed","isWindowClose","Closed","oldEntity","_beforeDelete","_update","bridge","autoAnnounce","_activityTypes","_grabEntity","_windowTypes","_activities","_windows","_dataReadyMarker","_descriptorsMarker","_readyMarker","setCallback","dataErr","announceWindow","_announcedWindows","signal","errCatch","refreshDescriptors","onActivitiesAttached","_handleActivitiesAttached","onActivitiesDetached","_handleActivitiesDetached","onActivityAttachedDescriptorsRefreshed","_handleActivityDescriptorsRefreshed","_handleWindowFrameColorChanged","_subscribeForData","initReady","aw","_getInitialData","ActivityManager","bridgeType","getError","ownerWindowType","helperWindowTypes","ownerDefinition","helperDefinitions","relativeTo","relativeDirection","windowStyleAttributes","registerActivityType","unregisterActivityType","initiateActivity","actId","getOrWait","at","factoryMethod","getName","registerWindowFactory","unregisterWindowFactory","array","predicate","util.some","getAnnouncementInfo","registerWindow","currentWindow","windowEventHandler_1","unsubscribeWindowEvents","wt","window_1","wrappingHandler","_windowHandlers","found","windowTypeOrConfiguration","relativeToWindow","wid","relativeWindowTypes","relativeWindows","useExisting","activityWindows","alreadyCreated","leaveActivity","removedKey","cloneActivity","descriptors","_updateDescriptors","stateWrapped","u","_attachedCallbacks","_detachedCallbacks","_frameColorChangesCallbacks","getActivityTypes","getWindowTypes","getActivities","ac","getActivityWindows","onActivityTypeStatusChange","onWindowTypeStatusChange","onActivityWindowChange","descriptorAsObjectFromAPI","oldActivityId","newActivityId","getAttachedDescriptors","my","_my","activityTypes","_getActivityTypesWrapper","subscribeActivityTypeEvents","_getWindowTypesWrapper","registerFactory","unregisterFactory","subscribeWindowTypeEvents","announce","instances","ActivityManagementAPI","subscribeActivityFrameColorChanged","_mgr","ActivityAPI","aware","inActivity","logLevel","_isUsingHCImplementation","gdMajorVersion","_isUsingGW3Implementation","ActivityModule","checkIsUsingGW3Implementation","activityManager","disableAutoAnnounce","My","_api","_readyPromise","objectValues","objectClone","_appManager","CallbackRegistryFactory","onInstanceStarted","onInstanceStopped","onAppRemoved","app","onAppChanged","onAppAvailable","onAppUnavailable","ApplicationImpl","_props","Title","Version","AutoStart","IsShell","Caption","IsHidden","ApplicationName","ActivityWindowType","Arguments","AllowMultiple","IsReady","Icon","IconUrl","SortOrder","UserProperties","autoStart","caption","hidden","container","allowMultiple","Type","Mode","isActivity","styleAttributes","WindowStyleAttributes","modeIndex","startModeIndex","stopModeIndex","style","props","Name","Context","Options","acsResult","Instance_0","Id","handleInstanceStarted","unsub","check","filtered","isActivityInstance","onInstanceAgmServerReady","waitForApplicationInstance","_appName","startFailed","_addToRegistry","_unsubscribeInstanceStopped","_unsubscribeInstanceAgmServerReady","InstanceImpl","activityInstance","instWinCntx","_t42","activityIsOwner","activityOwnerInstance","_startUpContext","_title","_isActivityInstance","_inActivity","_agmInstance","ActivityId","updateAgmInstanceFromProps","AgmServers","GD3","agmInstances","gdAgmServers","propsAgmServer","propsAgm","machineName","userName","handleInstanceStopped","_gdMajorVersion","_apps","_instances","instanceId_1","_getAppId","_updateAppFromProps","_getAppOrThrow","updateFromProps","available","_getInstanceId","_getInstanceAppName","_updateInstanceFromProps","_getInstanceOrThrow","_matchInstance","_replay","AppManagerImpl","_getInstanceByIdAndName","itemsToReplay","_agmInvoke","Region","Branches","Branch","ResultMessage","funct","Entitlement","Function","func","Result","transformFunction","appManager","entitlements","EntitlementsImpl","skipIcon","applications","handleAppAdded","snapshot","skipIcons","start","resolveFunc","rejectFunc","resultPromise","streamData","events","handleAppUpdated","handleAppRemoved","handleAppReady","handleInstanceStartFailed","handleInstanceUpdated","handleInstanceAgmServerReady","handleBranchModified","handleBranchesModified","subscriptionFactory","onAppAdded","myInstance","getMyInstance","onInstanceUpdated","onInstanceStartFailed","getRegion","getBranches","getCurrentBranch","getFunctionalEntitlement","getFunctionalEntitlementBranch","setCurrentBranch","setRegion","currentUser","canI","canIBranch","onBranchesChanged","restart","CallbackFactory","WindowStore","_pendingWindows","remote","_pendingWindowsStates","urlChanged","targetWindowState","markReadyToShow","waitForTimeoutInMilliseconds","onReadyWindow","fail","displays","monitor","totalOverlap","calculateTotalOverlap","display","max","workingAreaWidth","workingAreaHeight","r1","r2","r1x","r1y","r1xMax","r1yMax","r2x","r2y","r2xMax","r2yMax","min","executor","appManagerGetter","_group","resultWindow","_mode","_url","url","_bounds","_frameColor","_focus","_neighbours","neighbours","_groupId","groupId","_isGroupHeaderVisible","isGroupHeaderVisible","_isTabHeaderVisible","isTabHeaderVisible","_isTabSelected","isTabSelected","_settings","_isVisible","isCollapsed","_windowState","_tabGroupId","tabGroupId","_isLocked","isLocked","_frameButtons","_zoomFactor","zoomFactor","moveResize","dimensions","resolveTimeout","unsubscribeBoundsChanged","areBoundsEqual","onBoundsChanged","setVisible","toBeVisible","isVisibilityCorrect","onVisibilityChanged","waitForLockingChanged","onLockingChanged","onUrlChanged","onCollapsed","onExpanded","onMaximized","onMinimized","onNormal","onDetached","onTabHeaderVisibilityChanged","getNeighboursByDirection","direction","winId","windowStore","getApplicationName","_APPLICATION_NAME","getWindowInfo","requested","minHeight","maxHeight","minWidth","maxWidth","areHeightsEqual","areWidthsEqual","areLeftsEqual","areTopsEqual","handleWindowClose","handleWindowChangeState","handleTitleChanged","newTitle","handleVisibilityChanged","handleUrlChanged","newUrl","handleWindowSettingsChanged","handleContextUpdated","handleFrameIsLockedChanged","handleBoundsChanged","handleFocusChanged","isFocused","handleFrameButtonAdded","frameButton","buttonObj","btn","buttonId","handleFrameButtonRemoved","frameButtonId","button","handleFrameButtonClicked","handleFrameColorChanged","handleFrameAttached","handleFrameSelectionChanged","newWindow","prevWindow","selectedWindow","previousWindow","un_1","onTabSelectionChanged","newWin","prevWin","handleCompositionChanged","handleGroupHeaderVisibilityChanged","handleTabHeaderVisibilityChanged","handleGroupChanged","newGroup","oldGroup","handleGroupAssociation","group","handleAttached","newTabGroupId","tabHeaderVisible","handleDetached","handleWindowAttached","handleWindowDetached","handleZoomFactorChanged","hostInstance","agmInstance","frameButtons","opened","topNeighbours","leftNeighbours","rightNeighbours","bottomNeighbours","screen","utils","getMonitor","monitors","maximize","restore","minimize","maximizeRestore","currEvent","collapse","expand","toggleCollapse","activate","setTitle","setStyle","errMessage","callbackifyPromise","setOnTop","onTop","resetButtons","buttons","setSizeConstraints","constraints","navigate","addFrameButton","buttonInfo","imageBase64","removeFrameButton","show","hide","center","getDisplayCenterOfScreen","snap","targetWindowGroup","targetGroup","targetWindow","onWindowAdded","showLoader","loader","hideLoader","lock","unlock","getIcon","icon","setIcon","base64Image","attachTab","tab","sourceWindowId","targetWindowId","argsForSend","sourceWin","onAttached","detachTab","opt","_options","hideTabHeader","visibilityChangeHeard","detachedHeard","unVisibility","unDetached","setTabHeaderVisible","toBeTabHeaderVisible","showPopup","createFlydown","setModalState","isModal","setZoomFactor","zoomIn","zoomOut","showDevTools","capture","captureOptions","flash","suppliedOptions","flashOptions","shouldFlash","onClose","onTitleChanged","onFrameButtonAdded","onFrameButtonRemoved","onFrameButtonClicked","onContextUpdated","onFrameColorChanged","onFocusChanged","onGroupChanged","onWindowAttached","onWindowDetached","onClosing","onRefreshing","prevent","onZoomFactorChanged","tabs","allWindows","getURL","getTitle","getBounds","getContext","resizeTo","moveTo","Events","GDExecutor","agmTarget","stylePromises","wait","allowClose","allowCollapse","allowLockUnlock","allowMaximize","allowMinimize","buttonsConfig","snappingEdge","command","replace","dataURL","toShow","optionsCopy","targetLocation","reformatedOptions","popupBounds","size","targetId","popupId","horizontalOffset","verticalOffset","fullOptions","reformatFlydownOptions","zoneIds","zones","z","flydownSize","cancel","destroy","clearFlydownArea","cancelCallback","callbackData","zoneId","flydownId","flydownWindowBounds","flydownWindowId","responses","defaultResponse","groupWindowIds","addCloseHandler","assignGeneralIfUnassigned","zone","valueFromOptions","flydownBounds","flydownActiveArea","activeArea","areaIds","getWindowsByTabGroupId","wndId","normalizeInstance","_windowId","_appManagerGetter","GDEnvironment","caller","respondToEvent","streamResolve","streamReject","_waitTimeout","updateWindow","copyOptions","windowState","handleFlydownBoundsRequested","windowInfo","extendedStreamEvent","getExtendedStreamEvent","windowInfoCreatedEvent","setReadyState","windowObjectAndEvents","theWindow","theWindowEvents","windowInfoBoundsChangedEvent","windowInfoUrlChangedEvent","setUrlChangedState","windowInfoTitleChanged","windowInfoCompositionChanged","neighbors","groupHeaderVisible","windowInfoFocusChanged","focusChanged","frameId","winsToBeNotified_1","oldTabGroupId","winsToBeNotified_2","newWindowId","prevWindowId","windowObjAndEvents","windowFactory","mapToWindowConstructorOptions","isActiveTab","streamEvent","charAt","toUpperCase","callbackRegistry","_windowsId","waitForHeaderVisibilityChanged","onHeaderVisibilityChanged","groupObject","_mapToWindowObjects","winObjects","windowObject","_mapToWindowObject","mappedWindows","mappedWindow","isHeaderVisible","showHeader","setGroupHeaderVisible","hideHeader","captureGroup","onWindowRemoved","groupAPI","groupInternal","addWindow","removeWindow","window_2","_groups","heardForWindowsCounter","findGroupByWindow","groupFound","addNewWindow","windowGroupId","createdGroup","groupFactory","createOrGetGroup","deleteGroup","onCompositionChanged","newGroupId","oldGroupId","onGroupHeaderVisibilityChanged","groupEvents","onAdded","onRemoved","groupsAPI","groupsEvents","onWindowMoved","groups","isReady","GD","gdPromise","rej","envDetector","groupsFactory","windowAdded","windowRemoved","myWindow","getIfReady","errorHandler","waitFor","windowsForListing","findById","onTabAttached","tabAttached","onTabDetached","tabDetached","onWindowGotFocus","onWindowLostFocus","onEvent","unsubFunc","unsubscribed","LayoutStore","condition","layouts","where","randomByte","encode","build","require$$0","activitiesGetter","ContextProvider","registeredRequestsMethods","registerRequestMethods","context_1","requestResult","activityContext","windowContext","isActivityOwner","transformACSLayout","something","accumulator","convertedValue","components","metadata","activityGetter","LayoutsAPIImpl","isSlimMode","l","gotSnapshot","verifyNotSlimMode","ignoreHidden","layoutObject","actIds","appIds","ignoreLayoutRestrictions","isVisibleWindow","ignoreMyInstance","autoCollectApps","invokeMethodAndTrack","activityIdToJoin","restoreActivityOwner","ignoreActivityWindowTypes","closeRunningInstance","reuseWindows","t42","restoreOptions","activityToJoin","closeOldWindows","reuseExistingWindows","toClose","splash","getInstancesToClose","store","getObjectValues","Layouts","LayoutImpl","newName","oldName","onSaveRequested","skipStreamEvent","agmResult","streamEventReceived","handleResult","shellApp","isShell","shellApplicationName","resolveReady","rejectReady","resolveGotSnapshot","rejectGotSnapshot","ACSStream","noRetry","transform","checkForLayoutEventMethod","IsSnapshot","addLayouts","OnLayoutAdded","removeLayouts","OnLayoutRemoved","changeLayouts","OnLayoutChanged","renameLayouts","OnLayoutRenamed","restoredLayout","OnLayoutRestored","Token","layoutsData","layoutData","removedLayouts","removedLayout","removeWhere","existingLayout","compareLayouts","changedLayouts","changedLayout","renamedLayouts","renamedLayout","first","layout1","layout2","restoredLayouts","acsStream","DisplayCommand","callGD","GetAll","decorateDisplay","isPrimary","Capture","CaptureAll","GetMousePosition","original","SharedContextSubscriber","isChannel","createContextName","sharedContextName","c","startsWith","channelId","shared","ChannelsImpl","channelContext","subsKey","subscribeFor","changedKey","switchChannel","channelName","getContextData","sharedContexts","channels","channel","swId","setupAGM","changed","Map","HotkeysImpl","hotkey","hkToLower","formatHotkey","hotkeys","firstHotkey","registerInvokeAGMMethod","delete","IntentCommand","getLibConfig","defaultMode","trueMode","getModeAsString","IntentEvents","intentListeners","raise","intent","invokeGlue","Raise","intentFilter","Find","findByContext","contextType","FindByContext","addIntentListener","unsubId","handleEvent","IntentListenerRaised","_displays","getLibLogger","newLogger","loggerConfig","core","windowsLogger","debugLog","WindowsFactory","activityLogger","AppManagerFactory","lay","LayoutsFactory","channelsAPI","hotkeysAPI","unregisterAll","isRegistered","displaysLogger","DisplayManager","agmAPI","intentsAPI","currentLog","glueFactoryLog","CoreFactory","whatToExpose","CreateGlue","shouldSetToWindow","autoInjected","Glue"],"mappings":"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"}