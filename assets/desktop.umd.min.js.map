{"version":3,"file":"desktop.umd.min.js","sources":["../node_modules/@glue42/core/dist/core.es.js","../src/activity/entities/activityEntity.ts","../src/activity/helpers/util.ts","../src/activity/entities/activityType.ts","../src/activity/entities/windowType.ts","../src/activity/contracts/entityEvent.ts","../src/activity/core/activityAGM.ts","../src/activity/entities/attachedActivityDescriptor.ts","../src/activity/helpers/promiseExtensions.ts","../src/activity/entities/activity.ts","../src/activity/helpers/logger.ts","../src/activity/entities/activityWindow.ts","../src/activity/contracts/activityStatus.ts","../src/activity/bridges/gw3Bridge.ts","../src/activity/API/activityMyAPI.ts","../src/activity/helpers/readyMarker.ts","../src/activity/helpers/entityObservableCollection.ts","../src/activity/core/activityManager.ts","../src/activity/API/activityManagementAPI.ts","../src/activity/API/activityAPI.ts","../src/activity/activityModule.ts","../node_modules/callback-registry/lib/index.js","../src/app-manager/helper.ts","../src/app-manager/application.ts","../src/app-manager/const/agm-names.ts","../src/app-manager/instance.ts","../src/app-manager/app-manager.ts","../src/app-manager/entitlements.ts","../src/app-manager/main.ts","../src/app-manager/snapshot.ts","../src/app-manager/data-subscription.ts","../src/windows/store.ts","../src/utils.ts","../src/windows/window.ts","../src/windows/environment/gd/executor.ts","../src/windows/environment/helpers.ts","../src/windows/environment/gd/gd.ts","../src/windows/group.ts","../src/windows/groups.ts","../src/windows/main.ts","../src/windows/environment/detector.ts","../src/layouts/store.ts","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/alphabet.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/shortid/lib/encode.js","../node_modules/shortid/lib/decode.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/index.js","../src/layouts/contextProvider.ts","../src/layouts/transform.ts","../src/layouts/layout.ts","../src/layouts/layouts.ts","../src/layouts/stream/acsStream.ts","../src/layouts/main.ts","../src/displays/displayManager.ts","../src/channels/agm.ts","../src/channels/contexts.ts","../src/channels/channels.ts","../src/channels/main.ts","../src/hotkeys/hotkeys.ts","../src/intents/main.ts","../src/config.ts","../src/notifications/notification.ts","../src/notifications/main.ts","../src/themes/themes.ts","../src/glue.ts","../src/hotkeys/main.ts","../src/themes/main.ts","../src/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\n\nvar MetricTypes = {\r\n    STRING: 1,\r\n    NUMBER: 2,\r\n    TIMESTAMP: 3,\r\n    OBJECT: 4\r\n};\n\nfunction getMetricTypeByValue(metric) {\r\n    if (metric.type === MetricTypes.TIMESTAMP) {\r\n        return \"timestamp\";\r\n    }\r\n    else if (metric.type === MetricTypes.NUMBER) {\r\n        return \"number\";\r\n    }\r\n    else if (metric.type === MetricTypes.STRING) {\r\n        return \"string\";\r\n    }\r\n    else if (metric.type === MetricTypes.OBJECT) {\r\n        return \"object\";\r\n    }\r\n    return \"unknown\";\r\n}\r\nfunction getTypeByValue(value) {\r\n    if (value.constructor === Date) {\r\n        return \"timestamp\";\r\n    }\r\n    else if (typeof value === \"number\") {\r\n        return \"number\";\r\n    }\r\n    else if (typeof value === \"string\") {\r\n        return \"string\";\r\n    }\r\n    else if (typeof value === \"object\") {\r\n        return \"object\";\r\n    }\r\n    else {\r\n        return \"string\";\r\n    }\r\n}\r\nfunction serializeMetric(metric) {\r\n    var serializedMetrics = {};\r\n    var type = getMetricTypeByValue(metric);\r\n    if (type === \"object\") {\r\n        var values = Object.keys(metric.value).reduce(function (memo, key) {\r\n            var innerType = getTypeByValue(metric.value[key]);\r\n            if (innerType === \"object\") {\r\n                var composite = defineNestedComposite(metric.value[key]);\r\n                memo[key] = {\r\n                    type: \"object\",\r\n                    description: \"\",\r\n                    context: {},\r\n                    composite: composite,\r\n                };\r\n            }\r\n            else {\r\n                memo[key] = {\r\n                    type: innerType,\r\n                    description: \"\",\r\n                    context: {},\r\n                };\r\n            }\r\n            return memo;\r\n        }, {});\r\n        serializedMetrics.composite = values;\r\n    }\r\n    serializedMetrics.name = normalizeMetricName(metric.path.join(\"/\") + \"/\" + metric.name);\r\n    serializedMetrics.type = type;\r\n    serializedMetrics.description = metric.description;\r\n    serializedMetrics.context = {};\r\n    return serializedMetrics;\r\n}\r\nfunction defineNestedComposite(values) {\r\n    return Object.keys(values).reduce(function (memo, key) {\r\n        var type = getTypeByValue(values[key]);\r\n        if (type === \"object\") {\r\n            memo[key] = {\r\n                type: \"object\",\r\n                description: \"\",\r\n                context: {},\r\n                composite: defineNestedComposite(values[key]),\r\n            };\r\n        }\r\n        else {\r\n            memo[key] = {\r\n                type: type,\r\n                description: \"\",\r\n                context: {},\r\n            };\r\n        }\r\n        return memo;\r\n    }, {});\r\n}\r\nfunction normalizeMetricName(name) {\r\n    if (typeof name !== \"undefined\" && name.length > 0 && name[0] !== \"/\") {\r\n        return \"/\" + name;\r\n    }\r\n    else {\r\n        return name;\r\n    }\r\n}\r\nfunction getMetricValueByType(metric) {\r\n    var type = getMetricTypeByValue(metric);\r\n    if (type === \"timestamp\") {\r\n        return Date.now();\r\n    }\r\n    else {\r\n        return publishNestedComposite(metric.value);\r\n    }\r\n}\r\nfunction publishNestedComposite(values) {\r\n    if (typeof values !== \"object\") {\r\n        return values;\r\n    }\r\n    return Object.keys(values).reduce(function (memo, key) {\r\n        var value = values[key];\r\n        if (typeof value === \"object\" && value.constructor !== Date) {\r\n            memo[key] = publishNestedComposite(value);\r\n        }\r\n        else if (value.constructor === Date) {\r\n            memo[key] = new Date(value).getTime();\r\n        }\r\n        else if (value.constructor === Boolean) {\r\n            memo[key] = value.toString();\r\n        }\r\n        else {\r\n            memo[key] = value;\r\n        }\r\n        return memo;\r\n    }, {});\r\n}\r\nfunction flatten(arr) {\r\n    return arr.reduce(function (flat, toFlatten) {\r\n        return flat.concat(Array.isArray(toFlatten) ? flatten(toFlatten) : toFlatten);\r\n    }, []);\r\n}\r\nfunction getHighestState(arr) {\r\n    return arr.sort(function (a, b) {\r\n        if (!a.state) {\r\n            return 1;\r\n        }\r\n        if (!b.state) {\r\n            return -1;\r\n        }\r\n        return b.state - a.state;\r\n    })[0];\r\n}\r\nfunction aggregateDescription(arr) {\r\n    var msg = \"\";\r\n    arr.forEach(function (m, idx, a) {\r\n        var path = m.path.join(\".\");\r\n        if (idx === a.length - 1) {\r\n            msg += path + \".\" + m.name + \": \" + m.description;\r\n        }\r\n        else {\r\n            msg += path + \".\" + m.name + \": \" + m.description + \",\";\r\n        }\r\n    });\r\n    if (msg.length > 100) {\r\n        return msg.slice(0, 100) + \"...\";\r\n    }\r\n    else {\r\n        return msg;\r\n    }\r\n}\r\nfunction composeMsgForRootStateMetric(system) {\r\n    var aggregatedState = system.root.getAggregateState();\r\n    var merged = flatten(aggregatedState);\r\n    var highestState = getHighestState(merged);\r\n    var aggregateDesc = aggregateDescription(merged);\r\n    return {\r\n        description: aggregateDesc,\r\n        value: highestState.state,\r\n    };\r\n}\n\nfunction gw3 (connection, config) {\r\n    if (!connection || typeof connection !== \"object\") {\r\n        throw new Error(\"Connection is required parameter\");\r\n    }\r\n    var joinPromise;\r\n    var session;\r\n    var init = function (repo) {\r\n        var resolveReadyPromise;\r\n        joinPromise = new Promise(function (resolve) {\r\n            resolveReadyPromise = resolve;\r\n        });\r\n        session = connection.domain(\"metrics\");\r\n        session.onJoined(function (reconnect) {\r\n            if (!reconnect && resolveReadyPromise) {\r\n                resolveReadyPromise();\r\n                resolveReadyPromise = undefined;\r\n            }\r\n            var rootStateMetric = {\r\n                name: \"/State\",\r\n                type: \"object\",\r\n                composite: {\r\n                    Description: {\r\n                        type: \"string\",\r\n                        description: \"\",\r\n                    },\r\n                    Value: {\r\n                        type: \"number\",\r\n                        description: \"\",\r\n                    },\r\n                },\r\n                description: \"System state\",\r\n                context: {},\r\n            };\r\n            var defineRootMetricsMsg = {\r\n                type: \"define\",\r\n                metrics: [rootStateMetric],\r\n            };\r\n            session.send(defineRootMetricsMsg);\r\n            if (reconnect) {\r\n                replayRepo(repo);\r\n            }\r\n        });\r\n        session.join({\r\n            system: config.system,\r\n            service: config.service,\r\n            instance: config.instance\r\n        });\r\n    };\r\n    var replayRepo = function (repo) {\r\n        replaySystem(repo.root);\r\n    };\r\n    var replaySystem = function (system) {\r\n        createSystem(system);\r\n        system.metrics.forEach(function (m) {\r\n            createMetric(m);\r\n        });\r\n        system.subSystems.forEach(function (ss) {\r\n            replaySystem(ss);\r\n        });\r\n    };\r\n    var createSystem = function (system) {\r\n        if (system.parent === undefined) {\r\n            return;\r\n        }\r\n        joinPromise.then(function () {\r\n            var metric = {\r\n                name: normalizeMetricName(system.path.join(\"/\") + \"/\" + system.name + \"/State\"),\r\n                type: \"object\",\r\n                composite: {\r\n                    Description: {\r\n                        type: \"string\",\r\n                        description: \"\",\r\n                    },\r\n                    Value: {\r\n                        type: \"number\",\r\n                        description: \"\",\r\n                    },\r\n                },\r\n                description: \"System state\",\r\n                context: {},\r\n            };\r\n            var createMetricsMsg = {\r\n                type: \"define\",\r\n                metrics: [metric],\r\n            };\r\n            session.send(createMetricsMsg);\r\n        });\r\n    };\r\n    var updateSystem = function (system, state) {\r\n        joinPromise.then(function () {\r\n            var shadowedUpdateMetric = {\r\n                type: \"publish\",\r\n                values: [{\r\n                        name: normalizeMetricName(system.path.join(\"/\") + \"/\" + system.name + \"/State\"),\r\n                        value: {\r\n                            Description: state.description,\r\n                            Value: state.state,\r\n                        },\r\n                        timestamp: Date.now(),\r\n                    }],\r\n            };\r\n            session.send(shadowedUpdateMetric);\r\n            var stateObj = composeMsgForRootStateMetric(system);\r\n            var rootMetric = {\r\n                type: \"publish\",\r\n                peer_id: connection.peerId,\r\n                values: [{\r\n                        name: \"/State\",\r\n                        value: {\r\n                            Description: stateObj.description,\r\n                            Value: stateObj.value,\r\n                        },\r\n                        timestamp: Date.now(),\r\n                    }],\r\n            };\r\n            session.send(rootMetric);\r\n        });\r\n    };\r\n    var createMetric = function (metric) {\r\n        var metricClone = cloneMetric(metric);\r\n        joinPromise.then(function () {\r\n            var m = serializeMetric(metricClone);\r\n            var createMetricsMsg = {\r\n                type: \"define\",\r\n                metrics: [m],\r\n            };\r\n            session.send(createMetricsMsg);\r\n            if (typeof metricClone.value !== \"undefined\") {\r\n                updateMetricCore(metricClone);\r\n            }\r\n        });\r\n    };\r\n    var updateMetric = function (metric) {\r\n        var metricClone = cloneMetric(metric);\r\n        joinPromise.then(function () { return updateMetricCore(metricClone); });\r\n    };\r\n    var updateMetricCore = function (metric) {\r\n        if (canUpdate()) {\r\n            var value = getMetricValueByType(metric);\r\n            var publishMetricsMsg = {\r\n                type: \"publish\",\r\n                values: [{\r\n                        name: normalizeMetricName(metric.path.join(\"/\") + \"/\" + metric.name),\r\n                        value: value,\r\n                        timestamp: Date.now(),\r\n                    }],\r\n            };\r\n            session.send(publishMetricsMsg);\r\n        }\r\n    };\r\n    var cloneMetric = function (metric) {\r\n        var metricClone = __assign({}, metric);\r\n        if (typeof metric.value === \"object\" && metric.value !== null) {\r\n            metricClone.value = __assign({}, metric.value);\r\n        }\r\n        return metricClone;\r\n    };\r\n    var canUpdate = function () {\r\n        var _a;\r\n        try {\r\n            var func = (_a = config.canUpdateMetric) !== null && _a !== void 0 ? _a : (function () { return true; });\r\n            return func();\r\n        }\r\n        catch (_b) {\r\n            return true;\r\n        }\r\n    };\r\n    return {\r\n        init: init,\r\n        createSystem: createSystem,\r\n        updateSystem: updateSystem,\r\n        createMetric: createMetric,\r\n        updateMetric: updateMetric,\r\n    };\r\n}\n\nvar Helpers = {\r\n    validate: function (definition, parent, transport) {\r\n        if (definition === null || typeof definition !== \"object\") {\r\n            throw new Error(\"Missing definition\");\r\n        }\r\n        if (parent === null || typeof parent !== \"object\") {\r\n            throw new Error(\"Missing parent\");\r\n        }\r\n        if (transport === null || typeof transport !== \"object\") {\r\n            throw new Error(\"Missing transport\");\r\n        }\r\n    },\r\n};\n\nvar BaseMetric = (function () {\r\n    function BaseMetric(definition, system, transport, value, type) {\r\n        this.definition = definition;\r\n        this.system = system;\r\n        this.transport = transport;\r\n        this.value = value;\r\n        this.type = type;\r\n        this.path = [];\r\n        Helpers.validate(definition, system, transport);\r\n        this.path = system.path.slice(0);\r\n        this.path.push(system.name);\r\n        this.name = definition.name;\r\n        this.description = definition.description;\r\n        transport.createMetric(this);\r\n    }\r\n    Object.defineProperty(BaseMetric.prototype, \"repo\", {\r\n        get: function () {\r\n            var _a;\r\n            return (_a = this.system) === null || _a === void 0 ? void 0 : _a.repo;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BaseMetric.prototype, \"id\", {\r\n        get: function () { return this.system.path + \"/\" + name; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    BaseMetric.prototype.update = function (newValue) {\r\n        this.value = newValue;\r\n        this.transport.updateMetric(this);\r\n    };\r\n    return BaseMetric;\r\n}());\n\nvar NumberMetric = (function (_super) {\r\n    __extends(NumberMetric, _super);\r\n    function NumberMetric(definition, system, transport, value) {\r\n        return _super.call(this, definition, system, transport, value, MetricTypes.NUMBER) || this;\r\n    }\r\n    NumberMetric.prototype.incrementBy = function (num) {\r\n        this.update(this.value + num);\r\n    };\r\n    NumberMetric.prototype.increment = function () {\r\n        this.incrementBy(1);\r\n    };\r\n    NumberMetric.prototype.decrement = function () {\r\n        this.incrementBy(-1);\r\n    };\r\n    NumberMetric.prototype.decrementBy = function (num) {\r\n        this.incrementBy(num * -1);\r\n    };\r\n    return NumberMetric;\r\n}(BaseMetric));\n\nvar ObjectMetric = (function (_super) {\r\n    __extends(ObjectMetric, _super);\r\n    function ObjectMetric(definition, system, transport, value) {\r\n        return _super.call(this, definition, system, transport, value, MetricTypes.OBJECT) || this;\r\n    }\r\n    ObjectMetric.prototype.update = function (newValue) {\r\n        this.mergeValues(newValue);\r\n        this.transport.updateMetric(this);\r\n    };\r\n    ObjectMetric.prototype.mergeValues = function (values) {\r\n        var _this = this;\r\n        return Object.keys(this.value).forEach(function (k) {\r\n            if (typeof values[k] !== \"undefined\") {\r\n                _this.value[k] = values[k];\r\n            }\r\n        });\r\n    };\r\n    return ObjectMetric;\r\n}(BaseMetric));\n\nvar StringMetric = (function (_super) {\r\n    __extends(StringMetric, _super);\r\n    function StringMetric(definition, system, transport, value) {\r\n        return _super.call(this, definition, system, transport, value, MetricTypes.STRING) || this;\r\n    }\r\n    return StringMetric;\r\n}(BaseMetric));\n\nvar TimestampMetric = (function (_super) {\r\n    __extends(TimestampMetric, _super);\r\n    function TimestampMetric(definition, system, transport, value) {\r\n        return _super.call(this, definition, system, transport, value, MetricTypes.TIMESTAMP) || this;\r\n    }\r\n    TimestampMetric.prototype.now = function () {\r\n        this.update(new Date());\r\n    };\r\n    return TimestampMetric;\r\n}(BaseMetric));\n\nfunction system(name, repo, protocol, parent, description) {\r\n    if (!repo) {\r\n        throw new Error(\"Repository is required\");\r\n    }\r\n    if (!protocol) {\r\n        throw new Error(\"Transport is required\");\r\n    }\r\n    var _transport = protocol;\r\n    var _name = name;\r\n    var _description = description || \"\";\r\n    var _repo = repo;\r\n    var _parent = parent;\r\n    var _path = _buildPath(parent);\r\n    var _state = {};\r\n    var id = _arrayToString(_path, \"/\") + name;\r\n    var root = repo.root;\r\n    var _subSystems = [];\r\n    var _metrics = [];\r\n    function subSystem(nameSystem, descriptionSystem) {\r\n        if (!nameSystem || nameSystem.length === 0) {\r\n            throw new Error(\"name is required\");\r\n        }\r\n        var match = _subSystems.filter(function (s) { return s.name === nameSystem; });\r\n        if (match.length > 0) {\r\n            return match[0];\r\n        }\r\n        var _system = system(nameSystem, _repo, _transport, me, descriptionSystem);\r\n        _subSystems.push(_system);\r\n        return _system;\r\n    }\r\n    function setState(state, stateDescription) {\r\n        _state = { state: state, description: stateDescription };\r\n        _transport.updateSystem(me, _state);\r\n    }\r\n    function stringMetric(definition, value) {\r\n        return _getOrCreateMetric(definition, MetricTypes.STRING, value, function (metricDef) { return new StringMetric(metricDef, me, _transport, value); });\r\n    }\r\n    function numberMetric(definition, value) {\r\n        return _getOrCreateMetric(definition, MetricTypes.NUMBER, value, function (metricDef) { return new NumberMetric(metricDef, me, _transport, value); });\r\n    }\r\n    function objectMetric(definition, value) {\r\n        return _getOrCreateMetric(definition, MetricTypes.OBJECT, value, function (metricDef) { return new ObjectMetric(metricDef, me, _transport, value); });\r\n    }\r\n    function timestampMetric(definition, value) {\r\n        return _getOrCreateMetric(definition, MetricTypes.TIMESTAMP, value, function (metricDef) { return new TimestampMetric(metricDef, me, _transport, value); });\r\n    }\r\n    function _getOrCreateMetric(metricObject, expectedType, value, createMetric) {\r\n        var metricDef = { name: \"\" };\r\n        if (typeof metricObject === \"string\") {\r\n            metricDef = { name: metricObject };\r\n        }\r\n        else {\r\n            metricDef = metricObject;\r\n        }\r\n        var matching = _metrics.filter(function (shadowedMetric) { return shadowedMetric.name === metricDef.name; });\r\n        if (matching.length > 0) {\r\n            var existing = matching[0];\r\n            if (existing.type !== expectedType) {\r\n                throw new Error(\"A metric named \" + metricDef.name + \" is already defined with different type.\");\r\n            }\r\n            if (typeof value !== \"undefined\") {\r\n                existing.update(value);\r\n            }\r\n            return existing;\r\n        }\r\n        var metric = createMetric(metricDef);\r\n        _metrics.push(metric);\r\n        return metric;\r\n    }\r\n    function _buildPath(shadowedSystem) {\r\n        if (!shadowedSystem || !shadowedSystem.parent) {\r\n            return [];\r\n        }\r\n        var path = _buildPath(shadowedSystem.parent);\r\n        path.push(shadowedSystem.name);\r\n        return path;\r\n    }\r\n    function _arrayToString(path, separator) {\r\n        return ((path && path.length > 0) ? path.join(separator) : \"\");\r\n    }\r\n    function getAggregateState() {\r\n        var aggState = [];\r\n        if (Object.keys(_state).length > 0) {\r\n            aggState.push({\r\n                name: _name,\r\n                path: _path,\r\n                state: _state.state,\r\n                description: _state.description,\r\n            });\r\n        }\r\n        _subSystems.forEach(function (shadowedSubSystem) {\r\n            var result = shadowedSubSystem.getAggregateState();\r\n            if (result.length > 0) {\r\n                aggState.push.apply(aggState, result);\r\n            }\r\n        });\r\n        return aggState;\r\n    }\r\n    var me = {\r\n        get name() {\r\n            return _name;\r\n        },\r\n        get description() {\r\n            return _description;\r\n        },\r\n        get repo() {\r\n            return _repo;\r\n        },\r\n        get parent() {\r\n            return _parent;\r\n        },\r\n        path: _path,\r\n        id: id,\r\n        root: root,\r\n        get subSystems() {\r\n            return _subSystems;\r\n        },\r\n        get metrics() {\r\n            return _metrics;\r\n        },\r\n        subSystem: subSystem,\r\n        getState: function () {\r\n            return _state;\r\n        },\r\n        setState: setState,\r\n        stringMetric: stringMetric,\r\n        timestampMetric: timestampMetric,\r\n        objectMetric: objectMetric,\r\n        numberMetric: numberMetric,\r\n        getAggregateState: getAggregateState,\r\n    };\r\n    _transport.createSystem(me);\r\n    return me;\r\n}\n\nvar Repository = (function () {\r\n    function Repository(options, protocol) {\r\n        protocol.init(this);\r\n        this.root = system(\"\", this, protocol);\r\n        this.addSystemMetrics(this.root, options.clickStream || options.clickStream === undefined);\r\n    }\r\n    Repository.prototype.addSystemMetrics = function (rootSystem, useClickStream) {\r\n        if (typeof navigator !== \"undefined\") {\r\n            rootSystem.stringMetric(\"UserAgent\", navigator.userAgent);\r\n        }\r\n        if (useClickStream && typeof document !== \"undefined\") {\r\n            var clickStream_1 = rootSystem.subSystem(\"ClickStream\");\r\n            var documentClickHandler = function (e) {\r\n                if (!e.target) {\r\n                    return;\r\n                }\r\n                var target = e.target;\r\n                clickStream_1.objectMetric(\"LastBrowserEvent\", {\r\n                    type: \"click\",\r\n                    timestamp: new Date(),\r\n                    target: {\r\n                        className: e.target ? target.className : \"\",\r\n                        id: target.id,\r\n                        type: \"<\" + target.tagName.toLowerCase() + \">\",\r\n                        href: target.href || \"\",\r\n                    },\r\n                });\r\n            };\r\n            clickStream_1.objectMetric(\"Page\", {\r\n                title: document.title,\r\n                page: window.location.href,\r\n            });\r\n            if (document.addEventListener) {\r\n                document.addEventListener(\"click\", documentClickHandler);\r\n            }\r\n            else {\r\n                document.attachEvent(\"onclick\", documentClickHandler);\r\n            }\r\n        }\r\n        var startTime = rootSystem.stringMetric(\"StartTime\", (new Date()).toString());\r\n        var urlMetric = rootSystem.stringMetric(\"StartURL\", \"\");\r\n        var appNameMetric = rootSystem.stringMetric(\"AppName\", \"\");\r\n        if (typeof window !== \"undefined\") {\r\n            if (typeof window.location !== \"undefined\") {\r\n                var startUrl = window.location.href;\r\n                urlMetric.update(startUrl);\r\n            }\r\n            if (typeof window.glue42gd !== \"undefined\") {\r\n                appNameMetric.update(window.glue42gd.appName);\r\n            }\r\n        }\r\n    };\r\n    return Repository;\r\n}());\n\nvar NullProtocol = (function () {\r\n    function NullProtocol() {\r\n    }\r\n    NullProtocol.prototype.init = function (repo) {\r\n    };\r\n    NullProtocol.prototype.createSystem = function (system) {\r\n    };\r\n    NullProtocol.prototype.updateSystem = function (metric, state) {\r\n    };\r\n    NullProtocol.prototype.createMetric = function (metric) {\r\n    };\r\n    NullProtocol.prototype.updateMetric = function (metric) {\r\n    };\r\n    return NullProtocol;\r\n}());\n\nvar metrics = (function (options) {\r\n    var protocol;\r\n    if (!options.connection || typeof options.connection !== \"object\") {\r\n        protocol = new NullProtocol();\r\n    }\r\n    else {\r\n        protocol = gw3(options.connection, options);\r\n    }\r\n    var repo = new Repository(options, protocol);\r\n    return repo.root;\r\n});\r\nfunction addFAVSupport(system) {\r\n    var reportingSystem = system.subSystem(\"reporting\");\r\n    var def = {\r\n        name: \"features\"\r\n    };\r\n    var featureMetric;\r\n    var featureMetricFunc = function (name, action, payload) {\r\n        if (typeof name === \"undefined\" || name === \"\") {\r\n            throw new Error(\"name is mandatory\");\r\n        }\r\n        else if (typeof action === \"undefined\" || action === \"\") {\r\n            throw new Error(\"action is mandatory\");\r\n        }\r\n        else if (typeof payload === \"undefined\" || payload === \"\") {\r\n            throw new Error(\"payload is mandatory\");\r\n        }\r\n        if (!featureMetric) {\r\n            featureMetric = reportingSystem.objectMetric(def, { name: name, action: action, payload: payload });\r\n        }\r\n        else {\r\n            featureMetric.update({\r\n                name: name,\r\n                action: action,\r\n                payload: payload\r\n            });\r\n        }\r\n    };\r\n    system.featureMetric = featureMetricFunc;\r\n    return system;\r\n}\n\nfunction createRegistry(options) {\r\n    if (options && options.errorHandling\r\n        && typeof options.errorHandling !== \"function\"\r\n        && options.errorHandling !== \"log\"\r\n        && options.errorHandling !== \"silent\"\r\n        && options.errorHandling !== \"throw\") {\r\n        throw new Error(\"Invalid options passed to createRegistry. Prop errorHandling should be [\\\"log\\\" | \\\"silent\\\" | \\\"throw\\\" | (err) => void], but \" + typeof options.errorHandling + \" was passed\");\r\n    }\r\n    var _userErrorHandler = options && typeof options.errorHandling === \"function\" && options.errorHandling;\r\n    var callbacks = {};\r\n    function add(key, callback) {\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey) {\r\n            callbacksForKey = [];\r\n            callbacks[key] = callbacksForKey;\r\n        }\r\n        callbacksForKey.push(callback);\r\n        return function () {\r\n            var allForKey = callbacks[key];\r\n            if (!allForKey) {\r\n                return;\r\n            }\r\n            allForKey = allForKey.reduce(function (acc, element, index) {\r\n                if (!(element === callback && acc.length === index)) {\r\n                    acc.push(element);\r\n                }\r\n                return acc;\r\n            }, []);\r\n            callbacks[key] = allForKey;\r\n        };\r\n    }\r\n    function execute(key) {\r\n        var argumentsArr = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            argumentsArr[_i - 1] = arguments[_i];\r\n        }\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey || callbacksForKey.length === 0) {\r\n            return [];\r\n        }\r\n        var results = [];\r\n        callbacksForKey.forEach(function (callback) {\r\n            try {\r\n                var result = callback.apply(undefined, argumentsArr);\r\n                results.push(result);\r\n            }\r\n            catch (err) {\r\n                results.push(undefined);\r\n                _handleError(err, key);\r\n            }\r\n        });\r\n        return results;\r\n    }\r\n    function _handleError(exceptionArtifact, key) {\r\n        var errParam = exceptionArtifact instanceof Error ? exceptionArtifact : new Error(exceptionArtifact);\r\n        if (_userErrorHandler) {\r\n            _userErrorHandler(errParam);\r\n            return;\r\n        }\r\n        var msg = \"[ERROR] callback-registry: User callback for key \\\"\" + key + \"\\\" failed: \" + errParam.stack;\r\n        if (options) {\r\n            switch (options.errorHandling) {\r\n                case \"log\":\r\n                    return console.error(msg);\r\n                case \"silent\":\r\n                    return;\r\n                case \"throw\":\r\n                    throw new Error(msg);\r\n            }\r\n        }\r\n        console.error(msg);\r\n    }\r\n    function clear() {\r\n        callbacks = {};\r\n    }\r\n    function clearKey(key) {\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey) {\r\n            return;\r\n        }\r\n        delete callbacks[key];\r\n    }\r\n    return {\r\n        add: add,\r\n        execute: execute,\r\n        clear: clear,\r\n        clearKey: clearKey\r\n    };\r\n}\r\ncreateRegistry.default = createRegistry;\r\nvar lib = createRegistry;\n\nvar InProcTransport = (function () {\r\n    function InProcTransport(settings, logger) {\r\n        var _this = this;\r\n        this.registry = lib();\r\n        this.gw = settings.facade;\r\n        this.gw.connect(function (_client, message) {\r\n            _this.messageHandler(message);\r\n        }).then(function (client) {\r\n            _this.client = client;\r\n        });\r\n    }\r\n    Object.defineProperty(InProcTransport.prototype, \"isObjectBasedTransport\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    InProcTransport.prototype.sendObject = function (msg) {\r\n        if (this.client) {\r\n            this.client.send(msg);\r\n            return Promise.resolve(undefined);\r\n        }\r\n        else {\r\n            return Promise.reject(\"not connected\");\r\n        }\r\n    };\r\n    InProcTransport.prototype.send = function (_msg) {\r\n        return Promise.reject(\"not supported\");\r\n    };\r\n    InProcTransport.prototype.onMessage = function (callback) {\r\n        return this.registry.add(\"onMessage\", callback);\r\n    };\r\n    InProcTransport.prototype.onConnectedChanged = function (callback) {\r\n        callback(true);\r\n    };\r\n    InProcTransport.prototype.close = function () {\r\n        return Promise.resolve();\r\n    };\r\n    InProcTransport.prototype.open = function () {\r\n        return Promise.resolve();\r\n    };\r\n    InProcTransport.prototype.name = function () {\r\n        return \"in-memory\";\r\n    };\r\n    InProcTransport.prototype.reconnect = function () {\r\n        return Promise.resolve();\r\n    };\r\n    InProcTransport.prototype.messageHandler = function (msg) {\r\n        this.registry.execute(\"onMessage\", msg);\r\n    };\r\n    return InProcTransport;\r\n}());\n\nvar SharedWorkerTransport = (function () {\r\n    function SharedWorkerTransport(workerFile, logger) {\r\n        var _this = this;\r\n        this.logger = logger;\r\n        this.registry = lib();\r\n        this.worker = new SharedWorker(workerFile);\r\n        this.worker.port.onmessage = function (e) {\r\n            _this.messageHandler(e.data);\r\n        };\r\n    }\r\n    Object.defineProperty(SharedWorkerTransport.prototype, \"isObjectBasedTransport\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SharedWorkerTransport.prototype.sendObject = function (msg) {\r\n        this.worker.port.postMessage(msg);\r\n        return Promise.resolve();\r\n    };\r\n    SharedWorkerTransport.prototype.send = function (_msg) {\r\n        return Promise.reject(\"not supported\");\r\n    };\r\n    SharedWorkerTransport.prototype.onMessage = function (callback) {\r\n        return this.registry.add(\"onMessage\", callback);\r\n    };\r\n    SharedWorkerTransport.prototype.onConnectedChanged = function (callback) {\r\n        callback(true);\r\n    };\r\n    SharedWorkerTransport.prototype.close = function () {\r\n        return Promise.resolve();\r\n    };\r\n    SharedWorkerTransport.prototype.open = function () {\r\n        return Promise.resolve();\r\n    };\r\n    SharedWorkerTransport.prototype.name = function () {\r\n        return \"shared-worker\";\r\n    };\r\n    SharedWorkerTransport.prototype.reconnect = function () {\r\n        return Promise.resolve();\r\n    };\r\n    SharedWorkerTransport.prototype.messageHandler = function (msg) {\r\n        this.registry.execute(\"onMessage\", msg);\r\n    };\r\n    return SharedWorkerTransport;\r\n}());\n\nvar Utils = (function () {\r\n    function Utils() {\r\n    }\r\n    Utils.getGDMajorVersion = function () {\r\n        if (typeof window === \"undefined\") {\r\n            return undefined;\r\n        }\r\n        if (!window.glueDesktop) {\r\n            return undefined;\r\n        }\r\n        if (!window.glueDesktop.version) {\r\n            return undefined;\r\n        }\r\n        var ver = Number(window.glueDesktop.version.substr(0, 1));\r\n        return isNaN(ver) ? undefined : ver;\r\n    };\r\n    Utils.isNode = function () {\r\n        if (typeof Utils._isNode !== \"undefined\") {\r\n            return Utils._isNode;\r\n        }\r\n        if (typeof window !== \"undefined\") {\r\n            Utils._isNode = false;\r\n            return false;\r\n        }\r\n        try {\r\n            Utils._isNode = Object.prototype.toString.call(global.process) === \"[object process]\";\r\n        }\r\n        catch (e) {\r\n            Utils._isNode = false;\r\n        }\r\n        return Utils._isNode;\r\n    };\r\n    return Utils;\r\n}());\n\nvar PromiseWrapper = (function () {\r\n    function PromiseWrapper() {\r\n        var _this = this;\r\n        this.rejected = false;\r\n        this.resolved = false;\r\n        this.promise = new Promise(function (resolve, reject) {\r\n            _this.resolve = function (t) {\r\n                _this.resolved = true;\r\n                resolve(t);\r\n            };\r\n            _this.reject = function (err) {\r\n                _this.rejected = true;\r\n                reject(err);\r\n            };\r\n        });\r\n    }\r\n    PromiseWrapper.delay = function (time) {\r\n        return new Promise(function (resolve) { return setTimeout(resolve, time); });\r\n    };\r\n    Object.defineProperty(PromiseWrapper.prototype, \"ended\", {\r\n        get: function () {\r\n            return this.rejected || this.resolved;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return PromiseWrapper;\r\n}());\n\nvar WebSocketConstructor = Utils.isNode() ? require(\"ws\") : window.WebSocket;\r\nvar WS = (function () {\r\n    function WS(settings, logger) {\r\n        this._running = true;\r\n        this._registry = lib();\r\n        this.wsRequests = [];\r\n        this.settings = settings;\r\n        this.logger = logger;\r\n        if (!this.settings.ws) {\r\n            throw new Error(\"ws is missing\");\r\n        }\r\n    }\r\n    WS.prototype.onMessage = function (callback) {\r\n        return this._registry.add(\"onMessage\", callback);\r\n    };\r\n    WS.prototype.send = function (msg, options) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.waitForSocketConnection(function () {\r\n                var _a;\r\n                try {\r\n                    (_a = _this.ws) === null || _a === void 0 ? void 0 : _a.send(msg);\r\n                    resolve();\r\n                }\r\n                catch (e) {\r\n                    reject(e);\r\n                }\r\n            }, reject);\r\n        });\r\n    };\r\n    WS.prototype.open = function () {\r\n        var _this = this;\r\n        this.logger.info(\"opening ws...\");\r\n        this._running = true;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.waitForSocketConnection(resolve, reject);\r\n        });\r\n    };\r\n    WS.prototype.close = function () {\r\n        this._running = false;\r\n        if (this.ws) {\r\n            this.ws.close();\r\n        }\r\n        return Promise.resolve();\r\n    };\r\n    WS.prototype.onConnectedChanged = function (callback) {\r\n        return this._registry.add(\"onConnectedChanged\", callback);\r\n    };\r\n    WS.prototype.name = function () {\r\n        return \"ws \" + this.settings.ws;\r\n    };\r\n    WS.prototype.reconnect = function () {\r\n        var _a;\r\n        (_a = this.ws) === null || _a === void 0 ? void 0 : _a.close();\r\n        var pw = new PromiseWrapper();\r\n        this.waitForSocketConnection(function () {\r\n            pw.resolve();\r\n        });\r\n        return pw.promise;\r\n    };\r\n    WS.prototype.waitForSocketConnection = function (callback, failed) {\r\n        var _a;\r\n        failed = failed !== null && failed !== void 0 ? failed : (function () { });\r\n        if (!this._running) {\r\n            failed(\"wait for socket on \" + this.settings.ws + \" failed - socket closed by user\");\r\n            return;\r\n        }\r\n        if (((_a = this.ws) === null || _a === void 0 ? void 0 : _a.readyState) === 1) {\r\n            callback();\r\n            return;\r\n        }\r\n        this.wsRequests.push({ callback: callback, failed: failed });\r\n        if (this.wsRequests.length > 1) {\r\n            return;\r\n        }\r\n        this.openSocket();\r\n    };\r\n    WS.prototype.openSocket = function (retryInterval, retriesLeft) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            var _this = this;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        if (retryInterval === undefined) {\r\n                            retryInterval = this.settings.reconnectInterval;\r\n                        }\r\n                        if (retriesLeft !== undefined) {\r\n                            if (retriesLeft === 0) {\r\n                                this.notifyForSocketState(\"wait for socket on \" + this.settings.ws + \" failed - no more retries left\");\r\n                                return [2];\r\n                            }\r\n                            this.logger.debug(\"will retry \" + retriesLeft + \" more times (every \" + retryInterval + \" ms)\");\r\n                        }\r\n                        _b.label = 1;\r\n                    case 1:\r\n                        _b.trys.push([1, 3, , 4]);\r\n                        return [4, this.initiateSocket()];\r\n                    case 2:\r\n                        _b.sent();\r\n                        this.notifyForSocketState();\r\n                        return [3, 4];\r\n                    case 3:\r\n                        _a = _b.sent();\r\n                        setTimeout(function () {\r\n                            var retries = retriesLeft === undefined ? undefined : retriesLeft - 1;\r\n                            _this.openSocket(retryInterval, retries);\r\n                        }, retryInterval);\r\n                        return [3, 4];\r\n                    case 4: return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    WS.prototype.initiateSocket = function () {\r\n        var _this = this;\r\n        var pw = new PromiseWrapper();\r\n        this.logger.debug(\"initiating ws to \" + this.settings.ws + \"...\");\r\n        this.ws = new WebSocketConstructor(this.settings.ws || \"\");\r\n        this.ws.onerror = function (err) {\r\n            var reason = \"\";\r\n            try {\r\n                reason = JSON.stringify(err);\r\n            }\r\n            catch (error) {\r\n                var seen_1 = new WeakSet();\r\n                var replacer = function (key, value) {\r\n                    if (typeof value === \"object\" && value !== null) {\r\n                        if (seen_1.has(value)) {\r\n                            return;\r\n                        }\r\n                        seen_1.add(value);\r\n                    }\r\n                    return value;\r\n                };\r\n                reason = JSON.stringify(err, replacer);\r\n            }\r\n            pw.reject(\"error\");\r\n            _this.notifyStatusChanged(false, reason);\r\n        };\r\n        this.ws.onclose = function (err) {\r\n            _this.logger.info(\"ws closed \" + err);\r\n            pw.reject(\"closed\");\r\n            _this.notifyStatusChanged(false);\r\n        };\r\n        this.ws.onopen = function () {\r\n            var _a;\r\n            _this.logger.info(\"ws opened \" + ((_a = _this.settings.identity) === null || _a === void 0 ? void 0 : _a.application));\r\n            pw.resolve();\r\n            _this.notifyStatusChanged(true);\r\n        };\r\n        this.ws.onmessage = function (message) {\r\n            _this._registry.execute(\"onMessage\", message.data);\r\n        };\r\n        return pw.promise;\r\n    };\r\n    WS.prototype.notifyForSocketState = function (error) {\r\n        this.wsRequests.forEach(function (wsRequest) {\r\n            if (error) {\r\n                if (wsRequest.failed) {\r\n                    wsRequest.failed(error);\r\n                }\r\n            }\r\n            else {\r\n                wsRequest.callback();\r\n            }\r\n        });\r\n        this.wsRequests = [];\r\n    };\r\n    WS.prototype.notifyStatusChanged = function (status, reason) {\r\n        this._registry.execute(\"onConnectedChanged\", status, reason);\r\n    };\r\n    return WS;\r\n}());\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nvar randomFromSeed = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed$1(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nvar alphabet_1 = {\n    characters: characters,\n    seed: setSeed$1,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nfunction randomByte() {\n    if (!crypto || !crypto.getRandomValues) {\n        return Math.floor(Math.random() * 256) & 0x30;\n    }\n    var dest = new Uint8Array(1);\n    crypto.getRandomValues(dest);\n    return dest[0] & 0x30;\n}\n\nvar randomByteBrowser = randomByte;\n\nfunction encode(lookup, number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + lookup( ( (number >> (4 * loopCounter)) & 0x0f ) | randomByteBrowser() );\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nvar encode_1 = encode;\n\n/**\n * Decode the id to get the version and worker\n * Mainly for debugging and testing.\n * @param id - the shortid-generated id.\n */\nfunction decode(id) {\n    var characters = alphabet_1.shuffled();\n    return {\n        version: characters.indexOf(id.substr(0, 1)) & 0x0f,\n        worker: characters.indexOf(id.substr(1, 1)) & 0x0f\n    };\n}\n\nvar decode_1 = decode;\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var characters = alphabet_1.characters();\n    var len = id.length;\n    for(var i = 0; i < len;i++) {\n        if (characters.indexOf(id[i]) === -1) {\n            return false;\n        }\n    }\n    return true;\n}\n\nvar isValid = isShortId;\n\nvar lib$1 = createCommonjsModule(function (module) {\n\n\n\n\n\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1459707606518;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 6;\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId =  0;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + encode_1(alphabet_1.lookup, version);\n    str = str + encode_1(alphabet_1.lookup, clusterWorkerId);\n    if (counter > 0) {\n        str = str + encode_1(alphabet_1.lookup, counter);\n    }\n    str = str + encode_1(alphabet_1.lookup, seconds);\n\n    return str;\n}\n\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet_1.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet_1.characters(newCharacters);\n    }\n\n    return alphabet_1.shuffled();\n}\n\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.decode = decode_1;\nmodule.exports.isValid = isValid;\n});\nvar lib_1 = lib$1.generate;\nvar lib_2 = lib$1.seed;\nvar lib_3 = lib$1.worker;\nvar lib_4 = lib$1.characters;\nvar lib_5 = lib$1.decode;\nvar lib_6 = lib$1.isValid;\n\nvar shortid = lib$1;\n\nfunction domainSession (domain, connection, logger, successMessages, errorMessages) {\r\n    if (domain == null) {\r\n        domain = \"global\";\r\n    }\r\n    successMessages = successMessages || [\"success\"];\r\n    errorMessages = errorMessages || [\"error\"];\r\n    var isJoined = false;\r\n    var tryReconnecting = false;\r\n    var _latestOptions;\r\n    var _connectionOn = false;\r\n    var callbacks = lib();\r\n    connection.disconnected(handleConnectionDisconnected);\r\n    connection.loggedIn(handleConnectionLoggedIn);\r\n    connection.on(\"success\", function (msg) { return handleSuccessMessage(msg); });\r\n    connection.on(\"error\", function (msg) { return handleErrorMessage(msg); });\r\n    connection.on(\"result\", function (msg) { return handleSuccessMessage(msg); });\r\n    if (successMessages) {\r\n        successMessages.forEach(function (sm) {\r\n            connection.on(sm, function (msg) { return handleSuccessMessage(msg); });\r\n        });\r\n    }\r\n    if (errorMessages) {\r\n        errorMessages.forEach(function (sm) {\r\n            connection.on(sm, function (msg) { return handleErrorMessage(msg); });\r\n        });\r\n    }\r\n    var requestsMap = {};\r\n    function join(options) {\r\n        _latestOptions = options;\r\n        return new Promise(function (resolve, reject) {\r\n            if (isJoined) {\r\n                resolve();\r\n                return;\r\n            }\r\n            var joinPromise;\r\n            if (domain === \"global\") {\r\n                joinPromise = _connectionOn ? Promise.resolve({}) : Promise.reject(\"not connected to gateway\");\r\n            }\r\n            else {\r\n                logger.debug(\"joining domain \" + domain);\r\n                var joinMsg = {\r\n                    type: \"join\",\r\n                    destination: domain,\r\n                    domain: \"global\",\r\n                    options: options,\r\n                };\r\n                joinPromise = send(joinMsg);\r\n            }\r\n            joinPromise\r\n                .then(function () {\r\n                handleJoined();\r\n                resolve();\r\n            })\r\n                .catch(function (err) {\r\n                logger.debug(\"error joining \" + domain + \" domain: \" + JSON.stringify(err));\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n    function leave() {\r\n        if (domain === \"global\") {\r\n            return Promise.resolve();\r\n        }\r\n        logger.debug(\"stopping session \" + domain + \"...\");\r\n        var leaveMsg = {\r\n            type: \"leave\",\r\n            destination: domain,\r\n            domain: \"global\",\r\n        };\r\n        tryReconnecting = false;\r\n        return send(leaveMsg).then(function () {\r\n            isJoined = false;\r\n            callbacks.execute(\"onLeft\");\r\n        });\r\n    }\r\n    function handleJoined() {\r\n        logger.debug(\"did join \" + domain);\r\n        isJoined = true;\r\n        var wasReconnect = tryReconnecting;\r\n        tryReconnecting = false;\r\n        callbacks.execute(\"onJoined\", wasReconnect);\r\n    }\r\n    function handleConnectionDisconnected() {\r\n        _connectionOn = false;\r\n        logger.debug(\"connection is down\");\r\n        isJoined = false;\r\n        tryReconnecting = true;\r\n        callbacks.execute(\"onLeft\", { disconnected: true });\r\n    }\r\n    function handleConnectionLoggedIn() {\r\n        _connectionOn = true;\r\n        if (tryReconnecting) {\r\n            logger.debug(\"connection is now up - trying to reconnect...\");\r\n            join(_latestOptions);\r\n        }\r\n    }\r\n    function onJoined(callback) {\r\n        if (isJoined) {\r\n            callback(false);\r\n        }\r\n        return callbacks.add(\"onJoined\", callback);\r\n    }\r\n    function onLeft(callback) {\r\n        if (!isJoined) {\r\n            callback();\r\n        }\r\n        return callbacks.add(\"onLeft\", callback);\r\n    }\r\n    function handleErrorMessage(msg) {\r\n        if (domain !== msg.domain) {\r\n            return;\r\n        }\r\n        var requestId = msg.request_id;\r\n        if (!requestId) {\r\n            return;\r\n        }\r\n        var entry = requestsMap[requestId];\r\n        if (!entry) {\r\n            return;\r\n        }\r\n        entry.error(msg);\r\n    }\r\n    function handleSuccessMessage(msg) {\r\n        if (msg.domain !== domain) {\r\n            return;\r\n        }\r\n        var requestId = msg.request_id;\r\n        if (!requestId) {\r\n            return;\r\n        }\r\n        var entry = requestsMap[requestId];\r\n        if (!entry) {\r\n            return;\r\n        }\r\n        entry.success(msg);\r\n    }\r\n    function getNextRequestId() {\r\n        return shortid();\r\n    }\r\n    function send(msg, tag, options) {\r\n        options = options || {};\r\n        msg.request_id = msg.request_id || getNextRequestId();\r\n        msg.domain = msg.domain || domain;\r\n        if (!options.skipPeerId) {\r\n            msg.peer_id = connection.peerId;\r\n        }\r\n        var requestId = msg.request_id;\r\n        return new Promise(function (resolve, reject) {\r\n            requestsMap[requestId] = {\r\n                success: function (successMsg) {\r\n                    delete requestsMap[requestId];\r\n                    successMsg._tag = tag;\r\n                    resolve(successMsg);\r\n                },\r\n                error: function (errorMsg) {\r\n                    logger.warn(\"GW error - \" + JSON.stringify(errorMsg) + \" for request \" + JSON.stringify(msg));\r\n                    delete requestsMap[requestId];\r\n                    errorMsg._tag = tag;\r\n                    reject(errorMsg);\r\n                },\r\n            };\r\n            connection\r\n                .send(msg, options)\r\n                .catch(function (err) {\r\n                requestsMap[requestId].error({ err: err });\r\n            });\r\n        });\r\n    }\r\n    function sendFireAndForget(msg) {\r\n        msg.request_id = msg.request_id ? msg.request_id : getNextRequestId();\r\n        msg.domain = msg.domain || domain;\r\n        msg.peer_id = connection.peerId;\r\n        connection.send(msg);\r\n    }\r\n    return {\r\n        join: join,\r\n        leave: leave,\r\n        onJoined: onJoined,\r\n        onLeft: onLeft,\r\n        send: send,\r\n        sendFireAndForget: sendFireAndForget,\r\n        on: function (type, callback) {\r\n            connection.on(type, function (msg) {\r\n                if (msg.domain !== domain) {\r\n                    return;\r\n                }\r\n                try {\r\n                    callback(msg);\r\n                }\r\n                catch (e) {\r\n                    logger.error(\"Callback  failed: \" + e + \" \\n \" + e.stack + \" \\n msg was: \" + JSON.stringify(msg), e);\r\n                }\r\n            });\r\n        },\r\n        loggedIn: function (callback) { return connection.loggedIn(callback); },\r\n        connected: function (callback) { return connection.connected(callback); },\r\n        disconnected: function (callback) { return connection.disconnected(callback); },\r\n        get peerId() {\r\n            return connection.peerId;\r\n        },\r\n        get domain() {\r\n            return domain;\r\n        },\r\n    };\r\n}\n\nvar GW3ProtocolImpl = (function () {\r\n    function GW3ProtocolImpl(connection, settings, logger) {\r\n        var _this = this;\r\n        this.connection = connection;\r\n        this.settings = settings;\r\n        this.logger = logger;\r\n        this.protocolVersion = 3;\r\n        this.datePrefix = \"#T42_DATE#\";\r\n        this.datePrefixLen = this.datePrefix.length;\r\n        this.dateMinLen = this.datePrefixLen + 1;\r\n        this.datePrefixFirstChar = this.datePrefix[0];\r\n        this.registry = lib();\r\n        this._isLoggedIn = false;\r\n        this.shouldTryLogin = true;\r\n        this.initialLogin = true;\r\n        this.initialLoginAttempts = 3;\r\n        this.sessions = [];\r\n        connection.disconnected(function () {\r\n            _this.handleDisconnected();\r\n        });\r\n        this.ping();\r\n    }\r\n    Object.defineProperty(GW3ProtocolImpl.prototype, \"isLoggedIn\", {\r\n        get: function () {\r\n            return this._isLoggedIn;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    GW3ProtocolImpl.prototype.processStringMessage = function (message) {\r\n        var _this = this;\r\n        var msg = JSON.parse(message, function (key, value) {\r\n            if (typeof value !== \"string\") {\r\n                return value;\r\n            }\r\n            if (value.length < _this.dateMinLen) {\r\n                return value;\r\n            }\r\n            if (value[0] !== _this.datePrefixFirstChar) {\r\n                return value;\r\n            }\r\n            if (value.substring(0, _this.datePrefixLen) !== _this.datePrefix) {\r\n                return value;\r\n            }\r\n            try {\r\n                var milliseconds = parseInt(value.substring(_this.datePrefixLen, value.length), 10);\r\n                if (isNaN(milliseconds)) {\r\n                    return value;\r\n                }\r\n                return new Date(milliseconds);\r\n            }\r\n            catch (ex) {\r\n                return value;\r\n            }\r\n        });\r\n        return {\r\n            msg: msg,\r\n            msgType: msg.type,\r\n        };\r\n    };\r\n    GW3ProtocolImpl.prototype.createStringMessage = function (message) {\r\n        var oldToJson = Date.prototype.toJSON;\r\n        try {\r\n            var datePrefix_1 = this.datePrefix;\r\n            Date.prototype.toJSON = function () {\r\n                return datePrefix_1 + this.getTime();\r\n            };\r\n            var result = JSON.stringify(message);\r\n            return result;\r\n        }\r\n        finally {\r\n            Date.prototype.toJSON = oldToJson;\r\n        }\r\n    };\r\n    GW3ProtocolImpl.prototype.processObjectMessage = function (message) {\r\n        if (!message.type) {\r\n            throw new Error(\"Object should have type property\");\r\n        }\r\n        return {\r\n            msg: message,\r\n            msgType: message.type,\r\n        };\r\n    };\r\n    GW3ProtocolImpl.prototype.createObjectMessage = function (message) {\r\n        return message;\r\n    };\r\n    GW3ProtocolImpl.prototype.login = function (config, reconnect) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var authentication, token, e_1, _a, helloMsg, sendOptions, welcomeMsg, msg, token, _b, err_1;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        this.logger.debug(\"logging in...\");\r\n                        this.loginConfig = config;\r\n                        if (!this.loginConfig) {\r\n                            this.loginConfig = { username: \"\", password: \"\" };\r\n                        }\r\n                        this.shouldTryLogin = true;\r\n                        authentication = {};\r\n                        this.connection.gatewayToken = config.gatewayToken;\r\n                        if (!config.gatewayToken) return [3, 5];\r\n                        if (!reconnect) return [3, 4];\r\n                        _c.label = 1;\r\n                    case 1:\r\n                        _c.trys.push([1, 3, , 4]);\r\n                        return [4, this.getNewGWToken()];\r\n                    case 2:\r\n                        token = _c.sent();\r\n                        config.gatewayToken = token;\r\n                        return [3, 4];\r\n                    case 3:\r\n                        e_1 = _c.sent();\r\n                        this.logger.warn(\"failed to get GW token when reconnecting \" + ((e_1 === null || e_1 === void 0 ? void 0 : e_1.message) || e_1));\r\n                        return [3, 4];\r\n                    case 4:\r\n                        authentication.method = \"gateway-token\";\r\n                        authentication.token = config.gatewayToken;\r\n                        this.connection.gatewayToken = config.gatewayToken;\r\n                        return [3, 10];\r\n                    case 5:\r\n                        if (!(config.flowName === \"sspi\")) return [3, 9];\r\n                        authentication.provider = \"win\";\r\n                        authentication.method = \"access-token\";\r\n                        if (!(config.flowCallback && config.sessionId)) return [3, 7];\r\n                        _a = authentication;\r\n                        return [4, config.flowCallback(config.sessionId, null)];\r\n                    case 6:\r\n                        _a.token =\r\n                            (_c.sent())\r\n                                .data\r\n                                .toString(\"base64\");\r\n                        return [3, 8];\r\n                    case 7: throw new Error(\"Invalid SSPI config\");\r\n                    case 8: return [3, 10];\r\n                    case 9:\r\n                        if (config.token) {\r\n                            authentication.method = \"access-token\";\r\n                            authentication.token = config.token;\r\n                        }\r\n                        else if (config.username) {\r\n                            authentication.method = \"secret\";\r\n                            authentication.login = config.username;\r\n                            authentication.secret = config.password;\r\n                        }\r\n                        else {\r\n                            throw new Error(\"invalid auth message\" + JSON.stringify(config));\r\n                        }\r\n                        _c.label = 10;\r\n                    case 10:\r\n                        helloMsg = {\r\n                            type: \"hello\",\r\n                            identity: this.settings.identity,\r\n                            authentication: authentication\r\n                        };\r\n                        if (config.sessionId) {\r\n                            helloMsg.request_id = config.sessionId;\r\n                        }\r\n                        this.globalDomain = domainSession(\"global\", this.connection, this.logger.subLogger(\"global-domain\"), [\r\n                            \"welcome\",\r\n                            \"token\",\r\n                            \"authentication-request\"\r\n                        ]);\r\n                        sendOptions = { skipPeerId: true };\r\n                        if (this.initialLogin) {\r\n                            sendOptions.retryInterval = this.settings.reconnectInterval;\r\n                            sendOptions.maxRetries = this.settings.reconnectAttempts;\r\n                        }\r\n                        _c.label = 11;\r\n                    case 11:\r\n                        _c.trys.push([11, 19, 20, 21]);\r\n                        welcomeMsg = void 0;\r\n                        _c.label = 12;\r\n                    case 12:\r\n                        return [4, this.globalDomain.send(helloMsg, undefined, sendOptions)];\r\n                    case 13:\r\n                        msg = _c.sent();\r\n                        if (!(msg.type === \"authentication-request\")) return [3, 16];\r\n                        token = Buffer.from(msg.authentication.token, \"base64\");\r\n                        if (!(config.flowCallback && config.sessionId)) return [3, 15];\r\n                        _b = helloMsg.authentication;\r\n                        return [4, config.flowCallback(config.sessionId, token)];\r\n                    case 14:\r\n                        _b.token =\r\n                            (_c.sent())\r\n                                .data\r\n                                .toString(\"base64\");\r\n                        _c.label = 15;\r\n                    case 15:\r\n                        helloMsg.request_id = config.sessionId;\r\n                        return [3, 12];\r\n                    case 16:\r\n                        if (msg.type === \"welcome\") {\r\n                            welcomeMsg = msg;\r\n                            return [3, 18];\r\n                        }\r\n                        else if (msg.type === \"error\") {\r\n                            throw new Error(\"Authentication failed: \" + msg.reason);\r\n                        }\r\n                        else {\r\n                            throw new Error(\"Unexpected message type during authentication: \" + msg.type);\r\n                        }\r\n                    case 17: return [3, 12];\r\n                    case 18:\r\n                        this.initialLogin = false;\r\n                        this.logger.info(\"login successful with peerId \" + welcomeMsg.peer_id);\r\n                        this.connection.peerId = welcomeMsg.peer_id;\r\n                        this.connection.resolvedIdentity = welcomeMsg.resolved_identity;\r\n                        this.connection.availableDomains = welcomeMsg.available_domains;\r\n                        if (welcomeMsg.options) {\r\n                            this.connection.token = welcomeMsg.options.access_token;\r\n                            this.connection.info = welcomeMsg.options.info;\r\n                        }\r\n                        this.setLoggedIn(true);\r\n                        return [2, welcomeMsg.resolved_identity];\r\n                    case 19:\r\n                        err_1 = _c.sent();\r\n                        this.logger.error(\"error sending hello message - \" + (err_1.message || err_1.msg || err_1.reason || err_1), err_1);\r\n                        throw err_1;\r\n                    case 20:\r\n                        if (config && config.flowCallback && config.sessionId) {\r\n                            config.flowCallback(config.sessionId, null);\r\n                        }\r\n                        return [7];\r\n                    case 21: return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    GW3ProtocolImpl.prototype.logout = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var promises;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.logger.debug(\"logging out...\");\r\n                        this.shouldTryLogin = false;\r\n                        if (this.pingTimer) {\r\n                            clearTimeout(this.pingTimer);\r\n                        }\r\n                        promises = this.sessions.map(function (session) {\r\n                            session.leave();\r\n                        });\r\n                        return [4, Promise.all(promises)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    GW3ProtocolImpl.prototype.loggedIn = function (callback) {\r\n        if (this._isLoggedIn) {\r\n            callback();\r\n        }\r\n        return this.registry.add(\"onLoggedIn\", callback);\r\n    };\r\n    GW3ProtocolImpl.prototype.domain = function (domainName, domainLogger, successMessages, errorMessages) {\r\n        var session = this.sessions.filter(function (s) { return s.domain === domainName; })[0];\r\n        if (!session) {\r\n            session = domainSession(domainName, this.connection, domainLogger, successMessages, errorMessages);\r\n            this.sessions.push(session);\r\n        }\r\n        return session;\r\n    };\r\n    GW3ProtocolImpl.prototype.handleDisconnected = function () {\r\n        var _this = this;\r\n        this.setLoggedIn(false);\r\n        var tryToLogin = this.shouldTryLogin;\r\n        if (tryToLogin && this.initialLogin) {\r\n            if (this.initialLoginAttempts <= 0) {\r\n                return;\r\n            }\r\n            this.initialLoginAttempts--;\r\n        }\r\n        this.logger.debug(\"disconnected - will try new login?\" + this.shouldTryLogin);\r\n        if (this.shouldTryLogin) {\r\n            if (!this.loginConfig) {\r\n                throw new Error(\"no login info\");\r\n            }\r\n            this.connection.login(this.loginConfig, true)\r\n                .catch(function () {\r\n                setTimeout(_this.handleDisconnected, 1000);\r\n            });\r\n        }\r\n    };\r\n    GW3ProtocolImpl.prototype.setLoggedIn = function (value) {\r\n        this._isLoggedIn = value;\r\n        if (this._isLoggedIn) {\r\n            this.registry.execute(\"onLoggedIn\");\r\n        }\r\n    };\r\n    GW3ProtocolImpl.prototype.ping = function () {\r\n        var _this = this;\r\n        if (!this.shouldTryLogin) {\r\n            return;\r\n        }\r\n        if (this._isLoggedIn) {\r\n            this.connection.send({ type: \"ping\" });\r\n        }\r\n        this.pingTimer = setTimeout(function () {\r\n            _this.ping();\r\n        }, 30 * 1000);\r\n    };\r\n    GW3ProtocolImpl.prototype.authToken = function () {\r\n        var createTokenReq = {\r\n            type: \"create-token\"\r\n        };\r\n        if (!this.globalDomain) {\r\n            return Promise.reject(new Error(\"no global domain session\"));\r\n        }\r\n        return this.globalDomain.send(createTokenReq)\r\n            .then(function (res) {\r\n            return res.token;\r\n        });\r\n    };\r\n    GW3ProtocolImpl.prototype.getNewGWToken = function () {\r\n        if (typeof window !== undefined) {\r\n            var glue42gd = window.glue42gd;\r\n            if (glue42gd) {\r\n                return glue42gd.getGWToken();\r\n            }\r\n        }\r\n        return Promise.reject(new Error(\"not running in GD\"));\r\n    };\r\n    return GW3ProtocolImpl;\r\n}());\n\nvar MessageReplayerImpl = (function () {\r\n    function MessageReplayerImpl(specs) {\r\n        this.specsNames = [];\r\n        this.messages = {};\r\n        this.subs = {};\r\n        this.subsRefCount = {};\r\n        this.specs = {};\r\n        for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {\r\n            var spec = specs_1[_i];\r\n            this.specs[spec.name] = spec;\r\n            this.specsNames.push(spec.name);\r\n        }\r\n    }\r\n    MessageReplayerImpl.prototype.init = function (connection) {\r\n        var _this = this;\r\n        this.connection = connection;\r\n        for (var _i = 0, _a = this.specsNames; _i < _a.length; _i++) {\r\n            var name_1 = _a[_i];\r\n            var _loop_1 = function (type) {\r\n                var refCount = this_1.subsRefCount[type];\r\n                if (!refCount) {\r\n                    refCount = 0;\r\n                }\r\n                refCount += 1;\r\n                this_1.subsRefCount[type] = refCount;\r\n                if (refCount > 1) {\r\n                    return \"continue\";\r\n                }\r\n                var sub = connection.on(type, function (msg) { return _this.processMessage(type, msg); });\r\n                this_1.subs[type] = sub;\r\n            };\r\n            var this_1 = this;\r\n            for (var _b = 0, _c = this.specs[name_1].types; _b < _c.length; _b++) {\r\n                var type = _c[_b];\r\n                _loop_1(type);\r\n            }\r\n        }\r\n    };\r\n    MessageReplayerImpl.prototype.processMessage = function (type, msg) {\r\n        if (this.isDone || !msg) {\r\n            return;\r\n        }\r\n        for (var _i = 0, _a = this.specsNames; _i < _a.length; _i++) {\r\n            var name_2 = _a[_i];\r\n            if (this.specs[name_2].types.indexOf(type) !== -1) {\r\n                var messages = this.messages[name_2] || [];\r\n                this.messages[name_2] = messages;\r\n                messages.push(msg);\r\n            }\r\n        }\r\n    };\r\n    MessageReplayerImpl.prototype.drain = function (name, callback) {\r\n        var _a;\r\n        if (callback) {\r\n            (this.messages[name] || []).forEach(callback);\r\n        }\r\n        delete this.messages[name];\r\n        for (var _i = 0, _b = this.specs[name].types; _i < _b.length; _i++) {\r\n            var type = _b[_i];\r\n            this.subsRefCount[type] -= 1;\r\n            if (this.subsRefCount[type] <= 0) {\r\n                (_a = this.connection) === null || _a === void 0 ? void 0 : _a.off(this.subs[type]);\r\n                delete this.subs[type];\r\n                delete this.subsRefCount[type];\r\n            }\r\n        }\r\n        delete this.specs[name];\r\n        if (!this.specs.length) {\r\n            this.isDone = true;\r\n        }\r\n    };\r\n    return MessageReplayerImpl;\r\n}());\n\nvar Connection = (function () {\r\n    function Connection(settings, logger) {\r\n        this.settings = settings;\r\n        this.logger = logger;\r\n        this.messageHandlers = {};\r\n        this.ids = 1;\r\n        this.registry = lib();\r\n        this._connected = false;\r\n        this.isTrace = false;\r\n        settings = settings || {};\r\n        settings.reconnectAttempts = settings.reconnectAttempts || 10;\r\n        settings.reconnectInterval = settings.reconnectInterval || 1000;\r\n        if (settings.inproc) {\r\n            this.transport = new InProcTransport(settings.inproc, logger.subLogger(\"inMemory\"));\r\n        }\r\n        else if (settings.sharedWorker) {\r\n            this.transport = new SharedWorkerTransport(settings.sharedWorker, logger.subLogger(\"shared-worker\"));\r\n        }\r\n        else if (settings.ws !== undefined) {\r\n            this.transport = new WS(settings, logger.subLogger(\"ws\"));\r\n        }\r\n        else {\r\n            throw new Error(\"No connection information specified\");\r\n        }\r\n        this.isTrace = logger.canPublish(\"trace\");\r\n        logger.info(\"starting with \" + this.transport.name() + \" transport\");\r\n        this.protocol = new GW3ProtocolImpl(this, settings, logger.subLogger(\"protocol\"));\r\n        this.transport.onConnectedChanged(this.handleConnectionChanged.bind(this));\r\n        this.transport.onMessage(this.handleTransportMessage.bind(this));\r\n        if (settings.replaySpecs && settings.replaySpecs.length) {\r\n            this.replayer = new MessageReplayerImpl(settings.replaySpecs);\r\n            this.replayer.init(this);\r\n        }\r\n    }\r\n    Object.defineProperty(Connection.prototype, \"protocolVersion\", {\r\n        get: function () {\r\n            var _a;\r\n            return (_a = this.protocol) === null || _a === void 0 ? void 0 : _a.protocolVersion;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Connection.prototype.send = function (message, options) {\r\n        if (this.transport.sendObject &&\r\n            this.transport.isObjectBasedTransport) {\r\n            var msg = this.protocol.createObjectMessage(message);\r\n            if (this.isTrace) {\r\n                this.logger.trace(\">> \" + JSON.stringify(msg));\r\n            }\r\n            return this.transport.sendObject(msg, options);\r\n        }\r\n        else {\r\n            var strMessage = this.protocol.createStringMessage(message);\r\n            if (this.isTrace) {\r\n                this.logger.trace(\">> \" + strMessage);\r\n            }\r\n            return this.transport.send(strMessage, options);\r\n        }\r\n    };\r\n    Connection.prototype.on = function (type, messageHandler) {\r\n        type = type.toLowerCase();\r\n        if (this.messageHandlers[type] === undefined) {\r\n            this.messageHandlers[type] = {};\r\n        }\r\n        var id = this.ids++;\r\n        this.messageHandlers[type][id] = messageHandler;\r\n        return {\r\n            type: type,\r\n            id: id,\r\n        };\r\n    };\r\n    Connection.prototype.off = function (info) {\r\n        delete this.messageHandlers[info.type.toLowerCase()][info.id];\r\n    };\r\n    Object.defineProperty(Connection.prototype, \"isConnected\", {\r\n        get: function () {\r\n            return this.protocol.isLoggedIn;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Connection.prototype.connected = function (callback) {\r\n        var _this = this;\r\n        return this.protocol.loggedIn(function () {\r\n            callback(_this.settings.ws || _this.settings.sharedWorker || \"\");\r\n        });\r\n    };\r\n    Connection.prototype.disconnected = function (callback) {\r\n        return this.registry.add(\"disconnected\", callback);\r\n    };\r\n    Connection.prototype.login = function (authRequest, reconnect) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var identity;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4, this.transport.open()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        identity = this.protocol.login(authRequest, reconnect);\r\n                        return [2, identity];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Connection.prototype.logout = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4, this.protocol.logout()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [4, this.transport.close()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Connection.prototype.loggedIn = function (callback) {\r\n        return this.protocol.loggedIn(callback);\r\n    };\r\n    Connection.prototype.domain = function (domain, successMessages, errorMessages) {\r\n        return this.protocol.domain(domain, this.logger.subLogger(\"domain=\" + domain), successMessages, errorMessages);\r\n    };\r\n    Connection.prototype.authToken = function () {\r\n        return this.protocol.authToken();\r\n    };\r\n    Connection.prototype.reconnect = function () {\r\n        return this.transport.reconnect();\r\n    };\r\n    Connection.prototype.distributeMessage = function (message, type) {\r\n        var _this = this;\r\n        var handlers = this.messageHandlers[type.toLowerCase()];\r\n        if (handlers !== undefined) {\r\n            Object.keys(handlers).forEach(function (handlerId) {\r\n                var handler = handlers[handlerId];\r\n                if (handler !== undefined) {\r\n                    try {\r\n                        handler(message);\r\n                    }\r\n                    catch (error) {\r\n                        _this.logger.error(\"Message handler failed with \" + error.stack, error);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    Connection.prototype.handleConnectionChanged = function (connected) {\r\n        if (this._connected === connected) {\r\n            return;\r\n        }\r\n        this._connected = connected;\r\n        if (connected) {\r\n            this.registry.execute(\"connected\");\r\n        }\r\n        else {\r\n            this.registry.execute(\"disconnected\");\r\n        }\r\n    };\r\n    Connection.prototype.handleTransportMessage = function (msg) {\r\n        var msgObj;\r\n        if (typeof msg === \"string\") {\r\n            msgObj = this.protocol.processStringMessage(msg);\r\n        }\r\n        else {\r\n            msgObj = this.protocol.processObjectMessage(msg);\r\n        }\r\n        if (this.isTrace) {\r\n            this.logger.trace(\"<< \" + JSON.stringify(msgObj));\r\n        }\r\n        this.distributeMessage(msgObj.msg, msgObj.msgType);\r\n    };\r\n    return Connection;\r\n}());\n\nvar order = [\"trace\", \"debug\", \"info\", \"warn\", \"error\", \"off\"];\r\nvar Logger = (function () {\r\n    function Logger(name, parent, logFn) {\r\n        this.name = name;\r\n        this.parent = parent;\r\n        this.subLoggers = [];\r\n        this.logFn = console;\r\n        this.customLogFn = false;\r\n        this.name = name;\r\n        if (parent) {\r\n            this.path = parent.path + \".\" + name;\r\n        }\r\n        else {\r\n            this.path = name;\r\n        }\r\n        this.loggerFullName = \"[\" + this.path + \"]\";\r\n        this.includeTimeAndLevel = !logFn;\r\n        if (logFn) {\r\n            this.logFn = logFn;\r\n            this.customLogFn = true;\r\n        }\r\n    }\r\n    Logger.prototype.subLogger = function (name) {\r\n        var existingSub = this.subLoggers.filter(function (subLogger) {\r\n            return subLogger.name === name;\r\n        })[0];\r\n        if (existingSub !== undefined) {\r\n            return existingSub;\r\n        }\r\n        Object.keys(this).forEach(function (key) {\r\n            if (key === name) {\r\n                throw new Error(\"This sub logger name is not allowed.\");\r\n            }\r\n        });\r\n        var sub = new Logger(name, this, this.customLogFn ? this.logFn : undefined);\r\n        this.subLoggers.push(sub);\r\n        return sub;\r\n    };\r\n    Logger.prototype.publishLevel = function (level) {\r\n        var _a;\r\n        if (level) {\r\n            this._publishLevel = level;\r\n        }\r\n        return this._publishLevel || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.publishLevel());\r\n    };\r\n    Logger.prototype.consoleLevel = function (level) {\r\n        var _a;\r\n        if (level) {\r\n            this._consoleLevel = level;\r\n        }\r\n        return this._consoleLevel || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.consoleLevel());\r\n    };\r\n    Logger.prototype.log = function (message, level, error) {\r\n        this.publishMessage(level || \"info\", message, error);\r\n    };\r\n    Logger.prototype.trace = function (message) {\r\n        this.log(message, \"trace\");\r\n    };\r\n    Logger.prototype.debug = function (message) {\r\n        this.log(message, \"debug\");\r\n    };\r\n    Logger.prototype.info = function (message) {\r\n        this.log(message, \"info\");\r\n    };\r\n    Logger.prototype.warn = function (message) {\r\n        this.log(message, \"warn\");\r\n    };\r\n    Logger.prototype.error = function (message, err) {\r\n        this.log(message, \"error\");\r\n    };\r\n    Logger.prototype.canPublish = function (level, compareWith) {\r\n        var levelIdx = order.indexOf(level);\r\n        var restrictionIdx = order.indexOf(compareWith || this.consoleLevel() || \"trace\");\r\n        return levelIdx >= restrictionIdx;\r\n    };\r\n    Logger.prototype.publishMessage = function (level, message, error) {\r\n        var _a, _b;\r\n        var loggerName = this.loggerFullName;\r\n        if (level === \"error\" && !error) {\r\n            var e = new Error();\r\n            if (e.stack) {\r\n                message =\r\n                    message +\r\n                        \"\\n\" +\r\n                        e.stack\r\n                            .split(\"\\n\")\r\n                            .slice(3)\r\n                            .join(\"\\n\");\r\n            }\r\n        }\r\n        if (this.canPublish(level, this.publishLevel())) {\r\n            if (((_a = Logger.Interop) === null || _a === void 0 ? void 0 : _a.methods({ name: Logger.InteropMethodName }).length) > 0) {\r\n                (_b = Logger.Interop) === null || _b === void 0 ? void 0 : _b.invoke(Logger.InteropMethodName, {\r\n                    msg: \"\" + message,\r\n                    logger: loggerName,\r\n                    level: level\r\n                });\r\n            }\r\n        }\r\n        if (this.canPublish(level)) {\r\n            var prefix = \"\";\r\n            if (this.includeTimeAndLevel) {\r\n                var date = new Date();\r\n                var time = date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds() + \":\" + date.getMilliseconds();\r\n                prefix = \"[\" + time + \"] [\" + level + \"] \";\r\n            }\r\n            var toPrint = \"\" + prefix + loggerName + \": \" + message;\r\n            switch (level) {\r\n                case \"trace\":\r\n                    this.logFn.debug(toPrint);\r\n                    break;\r\n                case \"debug\":\r\n                    if (this.logFn.debug) {\r\n                        this.logFn.debug(toPrint);\r\n                    }\r\n                    else {\r\n                        this.logFn.log(toPrint);\r\n                    }\r\n                    break;\r\n                case \"info\":\r\n                    this.logFn.info(toPrint);\r\n                    break;\r\n                case \"warn\":\r\n                    this.logFn.warn(toPrint);\r\n                    break;\r\n                case \"error\":\r\n                    this.logFn.error(toPrint, error);\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n    Logger.InteropMethodName = \"T42.AppLogger.Log\";\r\n    return Logger;\r\n}());\n\nvar GW_MESSAGE_CREATE_CONTEXT = \"create-context\";\r\nvar GW_MESSAGE_ACTIVITY_CREATED = \"created\";\r\nvar GW_MESSAGE_ACTIVITY_DESTROYED = \"destroyed\";\r\nvar GW_MESSAGE_CONTEXT_CREATED = \"context-created\";\r\nvar GW_MESSAGE_CONTEXT_ADDED = \"context-added\";\r\nvar GW_MESSAGE_SUBSCRIBE_CONTEXT = \"subscribe-context\";\r\nvar GW_MESSAGE_SUBSCRIBED_CONTEXT = \"subscribed-context\";\r\nvar GW_MESSAGE_UNSUBSCRIBE_CONTEXT = \"unsubscribe-context\";\r\nvar GW_MESSAGE_DESTROY_CONTEXT = \"destroy-context\";\r\nvar GW_MESSAGE_CONTEXT_DESTROYED = \"context-destroyed\";\r\nvar GW_MESSAGE_UPDATE_CONTEXT = \"update-context\";\r\nvar GW_MESSAGE_CONTEXT_UPDATED = \"context-updated\";\r\nvar GW_MESSAGE_JOINED_ACTIVITY = \"joined\";\n\nvar ContextMessageReplaySpec = {\r\n    get name() {\r\n        return \"context\";\r\n    },\r\n    get types() {\r\n        return [\r\n            GW_MESSAGE_CREATE_CONTEXT,\r\n            GW_MESSAGE_ACTIVITY_CREATED,\r\n            GW_MESSAGE_ACTIVITY_DESTROYED,\r\n            GW_MESSAGE_CONTEXT_CREATED,\r\n            GW_MESSAGE_CONTEXT_ADDED,\r\n            GW_MESSAGE_SUBSCRIBE_CONTEXT,\r\n            GW_MESSAGE_SUBSCRIBED_CONTEXT,\r\n            GW_MESSAGE_UNSUBSCRIBE_CONTEXT,\r\n            GW_MESSAGE_DESTROY_CONTEXT,\r\n            GW_MESSAGE_CONTEXT_DESTROYED,\r\n            GW_MESSAGE_UPDATE_CONTEXT,\r\n            GW_MESSAGE_CONTEXT_UPDATED,\r\n            GW_MESSAGE_JOINED_ACTIVITY\r\n        ];\r\n    }\r\n};\n\nvar version = \"5.0.7\";\n\nfunction prepareConfig (configuration, ext, glue42gd) {\r\n    var _a, _b, _c, _d;\r\n    var nodeStartingContext;\r\n    if (Utils.isNode()) {\r\n        var startingContextString = process.env._GD_STARTING_CONTEXT_;\r\n        if (startingContextString) {\r\n            try {\r\n                nodeStartingContext = JSON.parse(startingContextString);\r\n            }\r\n            catch (_e) {\r\n            }\r\n        }\r\n    }\r\n    function getConnection() {\r\n        var _a, _b, _c, _d;\r\n        var gwConfig = configuration.gateway;\r\n        var protocolVersion = (_a = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.protocolVersion) !== null && _a !== void 0 ? _a : 3;\r\n        var reconnectInterval = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.reconnectInterval;\r\n        var reconnectAttempts = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.reconnectAttempts;\r\n        var defaultWs = \"ws://localhost:8385\";\r\n        var ws = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.ws;\r\n        var sharedWorker = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.sharedWorker;\r\n        var inproc = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.inproc;\r\n        if (glue42gd) {\r\n            ws = glue42gd.gwURL;\r\n        }\r\n        if (Utils.isNode() && nodeStartingContext && nodeStartingContext.gwURL) {\r\n            ws = nodeStartingContext.gwURL;\r\n        }\r\n        if (!ws && !sharedWorker && !inproc) {\r\n            ws = defaultWs;\r\n        }\r\n        var instanceId;\r\n        var windowId;\r\n        var pid;\r\n        var environment;\r\n        var region;\r\n        var appName = getApplication();\r\n        var uniqueAppName = appName;\r\n        if (typeof glue42gd !== \"undefined\") {\r\n            windowId = glue42gd.windowId;\r\n            pid = glue42gd.pid;\r\n            if (glue42gd.env) {\r\n                environment = glue42gd.env.env;\r\n                region = glue42gd.env.region;\r\n            }\r\n            uniqueAppName = (_b = glue42gd.application) !== null && _b !== void 0 ? _b : \"glue-app\";\r\n            instanceId = glue42gd.appInstanceId;\r\n        }\r\n        else if (Utils.isNode()) {\r\n            pid = process.pid;\r\n            if (nodeStartingContext) {\r\n                environment = nodeStartingContext.env;\r\n                region = nodeStartingContext.region;\r\n                instanceId = nodeStartingContext.instanceId;\r\n            }\r\n        }\r\n        else {\r\n            windowId = window.name || shortid();\r\n        }\r\n        var replaySpecs = (_d = (_c = configuration.gateway) === null || _c === void 0 ? void 0 : _c.replaySpecs) !== null && _d !== void 0 ? _d : [];\r\n        replaySpecs.push(ContextMessageReplaySpec);\r\n        return {\r\n            identity: {\r\n                application: uniqueAppName,\r\n                applicationName: appName,\r\n                windowId: windowId,\r\n                instance: instanceId,\r\n                process: pid,\r\n                region: region,\r\n                environment: environment,\r\n                api: ext.version || version\r\n            },\r\n            reconnectInterval: reconnectInterval,\r\n            ws: ws,\r\n            sharedWorker: sharedWorker,\r\n            inproc: inproc,\r\n            protocolVersion: protocolVersion,\r\n            reconnectAttempts: reconnectAttempts,\r\n            replaySpecs: replaySpecs,\r\n        };\r\n    }\r\n    function getApplication() {\r\n        if (configuration.application) {\r\n            return configuration.application;\r\n        }\r\n        if (glue42gd) {\r\n            return glue42gd.applicationName;\r\n        }\r\n        var uid = shortid();\r\n        if (Utils.isNode()) {\r\n            if (nodeStartingContext) {\r\n                return nodeStartingContext.applicationConfig.name;\r\n            }\r\n            return \"NodeJS\" + uid;\r\n        }\r\n        if (typeof window !== \"undefined\" && typeof document !== \"undefined\") {\r\n            return document.title + (\" (\" + uid + \")\");\r\n        }\r\n        return uid;\r\n    }\r\n    function getAuth() {\r\n        var _a, _b;\r\n        if (typeof configuration.auth === \"string\") {\r\n            return {\r\n                token: configuration.auth\r\n            };\r\n        }\r\n        if (configuration.auth) {\r\n            return configuration.auth;\r\n        }\r\n        if (Utils.isNode() && nodeStartingContext && nodeStartingContext.gwToken) {\r\n            return {\r\n                gatewayToken: nodeStartingContext.gwToken\r\n            };\r\n        }\r\n        if (((_a = configuration.gateway) === null || _a === void 0 ? void 0 : _a.inproc) || ((_b = configuration.gateway) === null || _b === void 0 ? void 0 : _b.sharedWorker)) {\r\n            return {\r\n                username: \"glue42\", password: \"glue42\"\r\n            };\r\n        }\r\n    }\r\n    function getLogger() {\r\n        var _a, _b;\r\n        var config = configuration.logger;\r\n        var defaultLevel = \"error\";\r\n        if (!config) {\r\n            config = defaultLevel;\r\n        }\r\n        if (typeof config === \"string\") {\r\n            return { console: config, publish: defaultLevel };\r\n        }\r\n        return {\r\n            console: (_a = config.console) !== null && _a !== void 0 ? _a : defaultLevel,\r\n            publish: (_b = config.publish) !== null && _b !== void 0 ? _b : defaultLevel\r\n        };\r\n    }\r\n    var connection = getConnection();\r\n    return {\r\n        bus: (_a = configuration.bus) !== null && _a !== void 0 ? _a : false,\r\n        auth: getAuth(),\r\n        logger: getLogger(),\r\n        connection: connection,\r\n        metrics: (_b = configuration.metrics) !== null && _b !== void 0 ? _b : true,\r\n        contexts: (_c = configuration.contexts) !== null && _c !== void 0 ? _c : true,\r\n        version: ext.version || version,\r\n        libs: (_d = ext.libs) !== null && _d !== void 0 ? _d : [],\r\n        customLogger: configuration.customLogger\r\n    };\r\n}\n\nfunction timer () {\r\n    function now() {\r\n        return new Date().getTime();\r\n    }\r\n    var startTime = now();\r\n    var endTime;\r\n    var period;\r\n    function stop() {\r\n        endTime = now();\r\n        period = now() - startTime;\r\n        return period;\r\n    }\r\n    return {\r\n        get startTime() {\r\n            return startTime;\r\n        },\r\n        get endTime() {\r\n            return endTime;\r\n        },\r\n        get period() {\r\n            return period;\r\n        },\r\n        stop: stop\r\n    };\r\n}\n\nvar GW3ContextData = (function () {\r\n    function GW3ContextData(contextId, name, isAnnounced, activityId) {\r\n        this.updateCallbacks = {};\r\n        this.contextId = contextId;\r\n        this.name = name;\r\n        this.isAnnounced = isAnnounced;\r\n        this.activityId = activityId;\r\n        this.context = {};\r\n    }\r\n    GW3ContextData.prototype.hasCallbacks = function () {\r\n        return Object.keys(this.updateCallbacks).length > 0;\r\n    };\r\n    GW3ContextData.prototype.getState = function () {\r\n        if (this.isAnnounced && this.hasCallbacks()) {\r\n            return 3;\r\n        }\r\n        if (this.isAnnounced) {\r\n            return 2;\r\n        }\r\n        if (this.hasCallbacks()) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    };\r\n    return GW3ContextData;\r\n}());\n\nfunction applyContextDelta(context, delta) {\r\n    if (delta) {\r\n        if (delta.reset) {\r\n            context = __assign({}, delta.reset);\r\n            return context;\r\n        }\r\n        context = deepClone(context, undefined);\r\n        var added_1 = delta.added;\r\n        var updated_1 = delta.updated;\r\n        var removed = delta.removed;\r\n        if (added_1) {\r\n            Object.keys(added_1).forEach(function (key) {\r\n                context[key] = added_1[key];\r\n            });\r\n        }\r\n        if (updated_1) {\r\n            Object.keys(updated_1).forEach(function (key) {\r\n                mergeObjectsProperties(key, context, updated_1);\r\n            });\r\n        }\r\n        if (removed) {\r\n            removed.forEach(function (key) {\r\n                delete context[key];\r\n            });\r\n        }\r\n    }\r\n    return context;\r\n}\r\nfunction deepClone(obj, hash) {\r\n    hash = hash || new WeakMap();\r\n    if (Object(obj) !== obj) {\r\n        return obj;\r\n    }\r\n    if (obj instanceof Set) {\r\n        return new Set(obj);\r\n    }\r\n    if (hash.has(obj)) {\r\n        return hash.get(obj);\r\n    }\r\n    var result = obj instanceof Date ? new Date(obj)\r\n        : obj instanceof RegExp ? new RegExp(obj.source, obj.flags)\r\n            : obj.constructor ? new obj.constructor()\r\n                : Object.create(null);\r\n    hash.set(obj, result);\r\n    return Object.assign.apply(Object, __spreadArrays([result], Object.keys(obj).map(function (key) {\r\n        var _a;\r\n        return (_a = {}, _a[key] = deepClone(obj[key], hash), _a);\r\n    })));\r\n}\r\nvar mergeObjectsProperties = function (key, what, withWhat) {\r\n    var right = withWhat[key];\r\n    if (right === undefined) {\r\n        return what;\r\n    }\r\n    var left = what[key];\r\n    if (!left || !right) {\r\n        what[key] = right;\r\n        return what;\r\n    }\r\n    if (typeof left === \"string\" ||\r\n        typeof left === \"number\" ||\r\n        typeof left === \"boolean\" ||\r\n        typeof right === \"string\" ||\r\n        typeof right === \"number\" ||\r\n        typeof right === \"boolean\" ||\r\n        Array.isArray(left) ||\r\n        Array.isArray(right)) {\r\n        what[key] = right;\r\n        return what;\r\n    }\r\n    what[key] = Object.assign({}, left, right);\r\n    return what;\r\n};\r\nfunction deepEqual(x, y) {\r\n    if (x === y) {\r\n        return true;\r\n    }\r\n    if (!(x instanceof Object) || !(y instanceof Object)) {\r\n        return false;\r\n    }\r\n    if (x.constructor !== y.constructor) {\r\n        return false;\r\n    }\r\n    for (var p in x) {\r\n        if (!x.hasOwnProperty(p)) {\r\n            continue;\r\n        }\r\n        if (!y.hasOwnProperty(p)) {\r\n            return false;\r\n        }\r\n        if (x[p] === y[p]) {\r\n            continue;\r\n        }\r\n        if (typeof (x[p]) !== \"object\") {\r\n            return false;\r\n        }\r\n        if (!deepEqual(x[p], y[p])) {\r\n            return false;\r\n        }\r\n    }\r\n    for (var p in y) {\r\n        if (y.hasOwnProperty(p) && !x.hasOwnProperty(p)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\n\nvar GW3Bridge = (function () {\r\n    function GW3Bridge(config) {\r\n        var _this = this;\r\n        var _a;\r\n        this._contextNameToData = {};\r\n        this._gw3Subscriptions = [];\r\n        this._nextCallbackSubscriptionNumber = 0;\r\n        this._contextNameToId = {};\r\n        this._contextIdToName = {};\r\n        this._connection = config.connection;\r\n        this._logger = config.logger;\r\n        this._gw3Session = this._connection.domain(\"global\", [\r\n            GW_MESSAGE_CONTEXT_CREATED,\r\n            GW_MESSAGE_SUBSCRIBED_CONTEXT,\r\n            GW_MESSAGE_CONTEXT_DESTROYED,\r\n            GW_MESSAGE_CONTEXT_UPDATED,\r\n        ]);\r\n        this.subscribeToContextCreatedMessages();\r\n        this.subscribeToContextUpdatedMessages();\r\n        this.subscribeToContextDestroyedMessages();\r\n        (_a = this._connection.replayer) === null || _a === void 0 ? void 0 : _a.drain(ContextMessageReplaySpec.name, function (message) {\r\n            var type = message.type;\r\n            if (!type) {\r\n                return;\r\n            }\r\n            if (type === GW_MESSAGE_CONTEXT_CREATED ||\r\n                type === GW_MESSAGE_CONTEXT_ADDED ||\r\n                type === GW_MESSAGE_ACTIVITY_CREATED) {\r\n                _this.handleContextCreatedMessage(message);\r\n            }\r\n            else if (type === GW_MESSAGE_SUBSCRIBED_CONTEXT ||\r\n                type === GW_MESSAGE_CONTEXT_UPDATED ||\r\n                type === GW_MESSAGE_JOINED_ACTIVITY) {\r\n                _this.handleContextUpdatedMessage(message);\r\n            }\r\n            else if (type === GW_MESSAGE_CONTEXT_DESTROYED ||\r\n                type === GW_MESSAGE_ACTIVITY_DESTROYED) {\r\n                _this.handleContextDestroyedMessage(message);\r\n            }\r\n        });\r\n    }\r\n    GW3Bridge.prototype.dispose = function () {\r\n        for (var _i = 0, _a = this._gw3Subscriptions; _i < _a.length; _i++) {\r\n            var sub = _a[_i];\r\n            this._connection.off(sub);\r\n        }\r\n        this._gw3Subscriptions.length = 0;\r\n        for (var contextName in this._contextNameToData) {\r\n            if (this._contextNameToId.hasOwnProperty(contextName)) {\r\n                delete this._contextNameToData[contextName];\r\n            }\r\n        }\r\n    };\r\n    GW3Bridge.prototype.createContext = function (name, data) {\r\n        var _this = this;\r\n        return this._gw3Session\r\n            .send({\r\n            type: GW_MESSAGE_CREATE_CONTEXT,\r\n            domain: \"global\",\r\n            name: name,\r\n            data: data,\r\n            lifetime: \"retained\",\r\n        })\r\n            .then(function (createContextMsg) {\r\n            _this._contextNameToId[name] = createContextMsg.context_id;\r\n            if (!_this._contextIdToName[createContextMsg.context_id]) {\r\n                _this._contextIdToName[createContextMsg.context_id] = name;\r\n                var contextData = _this._contextNameToData[name] || new GW3ContextData(createContextMsg.context_id, name, true, undefined);\r\n                contextData.isAnnounced = true;\r\n                contextData.name = name;\r\n                contextData.contextId = createContextMsg.context_id;\r\n                _this._contextNameToData[name] = contextData;\r\n                contextData.context = createContextMsg.data;\r\n                contextData.sentExplicitSubscription = true;\r\n                if (contextData.context) {\r\n                    _this.invokeUpdateCallbacks(contextData, contextData.context, undefined);\r\n                }\r\n                return _this.update(name, data).then(function () { return createContextMsg.context_id; });\r\n            }\r\n            return createContextMsg.context_id;\r\n        });\r\n    };\r\n    GW3Bridge.prototype.all = function () {\r\n        var _this = this;\r\n        return Object.keys(this._contextNameToData)\r\n            .filter(function (name) { return _this._contextNameToData[name].isAnnounced; });\r\n    };\r\n    GW3Bridge.prototype.update = function (name, delta) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var contextData, currentContext, calculatedDelta;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        contextData = this._contextNameToData[name];\r\n                        if (!contextData || !contextData.isAnnounced) {\r\n                            return [2, this.createContext(name, delta)];\r\n                        }\r\n                        currentContext = contextData.context;\r\n                        if (!!contextData.hasCallbacks()) return [3, 2];\r\n                        return [4, this.get(contextData.name, false)];\r\n                    case 1:\r\n                        currentContext = _a.sent();\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        calculatedDelta = this.calculateContextDelta(currentContext, delta);\r\n                        if (!Object.keys(calculatedDelta.added).length\r\n                            && !Object.keys(calculatedDelta.updated).length\r\n                            && !calculatedDelta.removed.length) {\r\n                            return [2, Promise.resolve()];\r\n                        }\r\n                        return [2, this._gw3Session\r\n                                .send({\r\n                                type: GW_MESSAGE_UPDATE_CONTEXT,\r\n                                domain: \"global\",\r\n                                context_id: contextData.contextId,\r\n                                delta: calculatedDelta,\r\n                            }, {}, { skipPeerId: false })\r\n                                .then(function (gwResponse) {\r\n                                _this.handleUpdated(contextData, calculatedDelta, {\r\n                                    updaterId: gwResponse.peer_id\r\n                                });\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    GW3Bridge.prototype.set = function (name, data) {\r\n        var _this = this;\r\n        var contextData = this._contextNameToData[name];\r\n        if (!contextData || !contextData.isAnnounced) {\r\n            return this.createContext(name, data);\r\n        }\r\n        return this._gw3Session\r\n            .send({\r\n            type: GW_MESSAGE_UPDATE_CONTEXT,\r\n            domain: \"global\",\r\n            context_id: contextData.contextId,\r\n            delta: { reset: data },\r\n        }, {}, { skipPeerId: false })\r\n            .then(function (gwResponse) {\r\n            _this.handleUpdated(contextData, { reset: data, added: {}, removed: [], updated: {} }, { updaterId: gwResponse.peer_id });\r\n        });\r\n    };\r\n    GW3Bridge.prototype.get = function (name, resolveImmediately) {\r\n        var _this = this;\r\n        if (resolveImmediately === undefined) {\r\n            resolveImmediately = true;\r\n        }\r\n        var contextData = this._contextNameToData[name];\r\n        if (!contextData ||\r\n            !contextData.isAnnounced ||\r\n            !contextData.hasCallbacks()) {\r\n            if (!resolveImmediately) {\r\n                return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                    var _this = this;\r\n                    return __generator(this, function (_a) {\r\n                        this.subscribe(name, function (data, delta, removed, un) {\r\n                            _this.unsubscribe(un);\r\n                            resolve(data);\r\n                        });\r\n                        return [2];\r\n                    });\r\n                }); });\r\n            }\r\n        }\r\n        return Promise.resolve(contextData && contextData.context);\r\n    };\r\n    GW3Bridge.prototype.subscribe = function (name, callback) {\r\n        var thisCallbackSubscriptionNumber = this._nextCallbackSubscriptionNumber;\r\n        this._nextCallbackSubscriptionNumber += 1;\r\n        var contextData = this._contextNameToData[name];\r\n        if (!contextData ||\r\n            !contextData.isAnnounced) {\r\n            contextData = contextData || new GW3ContextData(undefined, name, false, undefined);\r\n            this._contextNameToData[name] = contextData;\r\n            contextData.updateCallbacks[thisCallbackSubscriptionNumber] = callback;\r\n            return Promise.resolve(thisCallbackSubscriptionNumber);\r\n        }\r\n        var hadCallbacks = contextData.hasCallbacks();\r\n        contextData.updateCallbacks[thisCallbackSubscriptionNumber] = callback;\r\n        if (!hadCallbacks) {\r\n            if (!contextData.joinedActivity) {\r\n                if (contextData.context &&\r\n                    contextData.sentExplicitSubscription) {\r\n                    callback(contextData.context, contextData.context, [], thisCallbackSubscriptionNumber);\r\n                    return Promise.resolve(thisCallbackSubscriptionNumber);\r\n                }\r\n                return this.sendSubscribe(contextData)\r\n                    .then(function () { return thisCallbackSubscriptionNumber; });\r\n            }\r\n            else {\r\n                callback(contextData.context, contextData.context, [], thisCallbackSubscriptionNumber);\r\n                return Promise.resolve(thisCallbackSubscriptionNumber);\r\n            }\r\n        }\r\n        else {\r\n            callback(contextData.context, contextData.context, [], thisCallbackSubscriptionNumber);\r\n            return Promise.resolve(thisCallbackSubscriptionNumber);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.unsubscribe = function (subscriptionKey) {\r\n        for (var _i = 0, _a = Object.keys(this._contextNameToData); _i < _a.length; _i++) {\r\n            var name_1 = _a[_i];\r\n            var contextId = this._contextNameToId[name_1];\r\n            var contextData = this._contextNameToData[name_1];\r\n            if (!contextData) {\r\n                return;\r\n            }\r\n            var hadCallbacks = contextData.hasCallbacks();\r\n            delete contextData.updateCallbacks[subscriptionKey];\r\n            if (contextData.isAnnounced &&\r\n                hadCallbacks &&\r\n                !contextData.hasCallbacks() &&\r\n                contextData.sentExplicitSubscription) {\r\n                this.sendUnsubscribe(contextData);\r\n            }\r\n            if (!contextData.isAnnounced &&\r\n                !contextData.hasCallbacks()) {\r\n                delete this._contextNameToData[name_1];\r\n            }\r\n        }\r\n    };\r\n    GW3Bridge.prototype.handleUpdated = function (contextData, delta, extraData) {\r\n        var oldContext = contextData.context;\r\n        contextData.context = applyContextDelta(contextData.context, delta);\r\n        if (this._contextNameToData[contextData.name] === contextData &&\r\n            !deepEqual(oldContext, contextData.context)) {\r\n            this.invokeUpdateCallbacks(contextData, contextData.context, delta, extraData);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.subscribeToContextCreatedMessages = function () {\r\n        var createdMessageTypes = [\r\n            GW_MESSAGE_CONTEXT_ADDED,\r\n            GW_MESSAGE_CONTEXT_CREATED,\r\n            GW_MESSAGE_ACTIVITY_CREATED,\r\n        ];\r\n        for (var _i = 0, createdMessageTypes_1 = createdMessageTypes; _i < createdMessageTypes_1.length; _i++) {\r\n            var createdMessageType = createdMessageTypes_1[_i];\r\n            var sub = this._connection.on(createdMessageType, this.handleContextCreatedMessage.bind(this));\r\n            this._gw3Subscriptions.push(sub);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.handleContextCreatedMessage = function (contextCreatedMsg) {\r\n        var createdMessageType = contextCreatedMsg.type;\r\n        if (createdMessageType === GW_MESSAGE_ACTIVITY_CREATED) {\r\n            this._contextNameToId[contextCreatedMsg.activity_id] = contextCreatedMsg.context_id;\r\n            this._contextIdToName[contextCreatedMsg.context_id] = contextCreatedMsg.activity_id;\r\n        }\r\n        else if (createdMessageType === GW_MESSAGE_CONTEXT_ADDED) {\r\n            this._contextNameToId[contextCreatedMsg.name] = contextCreatedMsg.context_id;\r\n            this._contextIdToName[contextCreatedMsg.context_id] = contextCreatedMsg.name;\r\n        }\r\n        var name = this._contextIdToName[contextCreatedMsg.context_id];\r\n        if (!name) {\r\n            throw new Error(\"Received created event for context with unknown name: \" + contextCreatedMsg.context_id);\r\n        }\r\n        if (!this._contextNameToId[name]) {\r\n            throw new Error(\"Received created event for context with unknown id: \" + contextCreatedMsg.context_id);\r\n        }\r\n        var contextData = this._contextNameToData[name];\r\n        if (contextData) {\r\n            if (contextData.isAnnounced) {\r\n                return;\r\n            }\r\n            else {\r\n                if (!contextData.hasCallbacks()) {\r\n                    throw new Error(\"Assertion failure: contextData.hasCallbacks()\");\r\n                }\r\n                contextData.isAnnounced = true;\r\n                contextData.contextId = contextCreatedMsg.context_id;\r\n                contextData.activityId = contextCreatedMsg.activity_id;\r\n                if (!contextData.sentExplicitSubscription) {\r\n                    this.sendSubscribe(contextData);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this._contextNameToData[name] = contextData =\r\n                new GW3ContextData(contextCreatedMsg.context_id, name, true, contextCreatedMsg.activity_id);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.subscribeToContextUpdatedMessages = function () {\r\n        var updatedMessageTypes = [\r\n            GW_MESSAGE_CONTEXT_UPDATED,\r\n            GW_MESSAGE_SUBSCRIBED_CONTEXT,\r\n            GW_MESSAGE_JOINED_ACTIVITY,\r\n        ];\r\n        for (var _i = 0, updatedMessageTypes_1 = updatedMessageTypes; _i < updatedMessageTypes_1.length; _i++) {\r\n            var updatedMessageType = updatedMessageTypes_1[_i];\r\n            var sub = this._connection.on(updatedMessageType, this.handleContextUpdatedMessage.bind(this));\r\n            this._gw3Subscriptions.push(sub);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.handleContextUpdatedMessage = function (contextUpdatedMsg) {\r\n        var updatedMessageType = contextUpdatedMsg.type;\r\n        var contextId = contextUpdatedMsg.context_id;\r\n        var contextData = this._contextNameToData[this._contextIdToName[contextId]];\r\n        var justSeen = !contextData || !contextData.isAnnounced;\r\n        if (updatedMessageType === GW_MESSAGE_JOINED_ACTIVITY) {\r\n            if (!contextData) {\r\n                contextData = new GW3ContextData(contextId, contextUpdatedMsg.activity_id, true, contextUpdatedMsg.activity_id);\r\n                this._contextNameToData[contextUpdatedMsg.activity_id] = contextData;\r\n                this._contextIdToName[contextId] = contextUpdatedMsg.activity_id;\r\n                this._contextNameToId[contextUpdatedMsg.activity_id] = contextId;\r\n            }\r\n            else {\r\n                contextData.contextId = contextId;\r\n                contextData.isAnnounced = true;\r\n                contextData.activityId = contextUpdatedMsg.activity_id;\r\n            }\r\n            contextData.joinedActivity = true;\r\n        }\r\n        else {\r\n            if (!contextData || !contextData.isAnnounced) {\r\n                if (updatedMessageType === GW_MESSAGE_SUBSCRIBED_CONTEXT) {\r\n                    contextData = contextData || new GW3ContextData(contextId, contextUpdatedMsg.name, true, undefined);\r\n                    contextData.sentExplicitSubscription = true;\r\n                    this._contextNameToData[contextUpdatedMsg.name] = contextData;\r\n                    this._contextIdToName[contextId] = contextUpdatedMsg.name;\r\n                    this._contextNameToId[contextUpdatedMsg.name] = contextId;\r\n                }\r\n                else {\r\n                    this._logger.error(\"Received 'update' for unknown context: \" + contextId);\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        var oldContext = contextData.context;\r\n        if (updatedMessageType === GW_MESSAGE_SUBSCRIBED_CONTEXT) {\r\n            contextData.context = contextUpdatedMsg.data || {};\r\n        }\r\n        else if (updatedMessageType === GW_MESSAGE_JOINED_ACTIVITY) {\r\n            contextData.context = contextUpdatedMsg.context_snapshot || {};\r\n        }\r\n        else if (updatedMessageType === GW_MESSAGE_CONTEXT_UPDATED) {\r\n            contextData.context = applyContextDelta(contextData.context, contextUpdatedMsg.delta);\r\n        }\r\n        else {\r\n            throw new Error(\"Unrecognized context update message \" + updatedMessageType);\r\n        }\r\n        if (justSeen ||\r\n            !deepEqual(contextData.context, oldContext) ||\r\n            updatedMessageType === GW_MESSAGE_SUBSCRIBED_CONTEXT) {\r\n            this.invokeUpdateCallbacks(contextData, contextData.context, contextUpdatedMsg.delta, { updaterId: contextUpdatedMsg.updater_id });\r\n        }\r\n    };\r\n    GW3Bridge.prototype.invokeUpdateCallbacks = function (contextData, data, delta, extraData) {\r\n        delta = delta || { added: {}, updated: {}, reset: {}, removed: [] };\r\n        for (var updateCallbackIndex in contextData.updateCallbacks) {\r\n            if (contextData.updateCallbacks.hasOwnProperty(updateCallbackIndex)) {\r\n                try {\r\n                    var updateCallback = contextData.updateCallbacks[updateCallbackIndex];\r\n                    updateCallback(deepClone(data), Object.assign({}, delta.added || {}, delta.updated || {}, delta.reset || {}), delta.removed, parseInt(updateCallbackIndex, 10), extraData);\r\n                }\r\n                catch (err) {\r\n                    this._logger.debug(\"callback error: \" + JSON.stringify(err));\r\n                }\r\n            }\r\n        }\r\n    };\r\n    GW3Bridge.prototype.subscribeToContextDestroyedMessages = function () {\r\n        var destroyedMessageTypes = [\r\n            GW_MESSAGE_CONTEXT_DESTROYED,\r\n            GW_MESSAGE_ACTIVITY_DESTROYED,\r\n        ];\r\n        for (var _i = 0, destroyedMessageTypes_1 = destroyedMessageTypes; _i < destroyedMessageTypes_1.length; _i++) {\r\n            var destroyedMessageType = destroyedMessageTypes_1[_i];\r\n            var sub = this._connection.on(destroyedMessageType, this.handleContextDestroyedMessage.bind(this));\r\n            this._gw3Subscriptions.push(sub);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.handleContextDestroyedMessage = function (destroyedMsg) {\r\n        var destroyedMessageType = destroyedMsg.type;\r\n        var contextId;\r\n        var name;\r\n        if (destroyedMessageType === GW_MESSAGE_ACTIVITY_DESTROYED) {\r\n            name = destroyedMsg.activity_id;\r\n            contextId = this._contextNameToId[name];\r\n            if (!contextId) {\r\n                this._logger.error(\"Received 'destroyed' for unknown activity: \" + destroyedMsg.activity_id);\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            contextId = destroyedMsg.context_id;\r\n            name = this._contextIdToName[contextId];\r\n            if (!name) {\r\n                this._logger.error(\"Received 'destroyed' for unknown context: \" + destroyedMsg.context_id);\r\n                return;\r\n            }\r\n        }\r\n        delete this._contextIdToName[contextId];\r\n        delete this._contextNameToId[name];\r\n        var contextData = this._contextNameToData[name];\r\n        delete this._contextNameToData[name];\r\n        if (!contextData || !contextData.isAnnounced) {\r\n            this._logger.error(\"Received 'destroyed' for unknown context: \" + contextId);\r\n            return;\r\n        }\r\n    };\r\n    GW3Bridge.prototype.sendSubscribe = function (contextData) {\r\n        contextData.sentExplicitSubscription = true;\r\n        return this._gw3Session\r\n            .send({\r\n            type: GW_MESSAGE_SUBSCRIBE_CONTEXT,\r\n            domain: \"global\",\r\n            context_id: contextData.contextId,\r\n        }).then(function (_) { return undefined; });\r\n    };\r\n    GW3Bridge.prototype.sendUnsubscribe = function (contextData) {\r\n        contextData.sentExplicitSubscription = false;\r\n        return this._gw3Session\r\n            .send({\r\n            type: GW_MESSAGE_UNSUBSCRIBE_CONTEXT,\r\n            domain: \"global\",\r\n            context_id: contextData.contextId,\r\n        }).then(function (_) { return undefined; });\r\n    };\r\n    GW3Bridge.prototype.calculateContextDelta = function (from, to) {\r\n        var delta = { added: {}, updated: {}, removed: [], reset: undefined };\r\n        if (from) {\r\n            for (var _i = 0, _a = Object.keys(from); _i < _a.length; _i++) {\r\n                var x = _a[_i];\r\n                if (Object.keys(to).indexOf(x) !== -1\r\n                    && to[x] !== null\r\n                    && !deepEqual(from[x], to[x])) {\r\n                    delta.updated[x] = to[x];\r\n                }\r\n            }\r\n        }\r\n        for (var _b = 0, _c = Object.keys(to); _b < _c.length; _b++) {\r\n            var x = _c[_b];\r\n            if (!from || (Object.keys(from).indexOf(x) === -1)) {\r\n                if (to[x] !== null) {\r\n                    delta.added[x] = to[x];\r\n                }\r\n            }\r\n            else if (to[x] === null) {\r\n                delta.removed.push(x);\r\n            }\r\n        }\r\n        return delta;\r\n    };\r\n    return GW3Bridge;\r\n}());\n\nvar ContextsModule = (function () {\r\n    function ContextsModule(config) {\r\n        this._bridge = new GW3Bridge(config);\r\n    }\r\n    ContextsModule.prototype.all = function () {\r\n        return this._bridge.all();\r\n    };\r\n    ContextsModule.prototype.update = function (name, delta) {\r\n        this.checkName(name);\r\n        return this._bridge.update(name, delta);\r\n    };\r\n    ContextsModule.prototype.set = function (name, data) {\r\n        this.checkName(name);\r\n        return this._bridge.set(name, data);\r\n    };\r\n    ContextsModule.prototype.subscribe = function (name, callback) {\r\n        var _this = this;\r\n        this.checkName(name);\r\n        return this._bridge\r\n            .subscribe(name, function (data, delta, removed, key, extraData) { return callback(data, delta, removed, function () { return _this._bridge.unsubscribe(key); }, extraData); })\r\n            .then(function (key) {\r\n            return function () {\r\n                _this._bridge.unsubscribe(key);\r\n            };\r\n        });\r\n    };\r\n    ContextsModule.prototype.get = function (name, resolveImmediately) {\r\n        if (resolveImmediately === undefined) {\r\n            resolveImmediately = true;\r\n        }\r\n        return this._bridge.get(name, resolveImmediately);\r\n    };\r\n    ContextsModule.prototype.ready = function () {\r\n        return Promise.resolve(this);\r\n    };\r\n    ContextsModule.prototype.checkName = function (name) {\r\n        if (typeof name !== \"string\" ||\r\n            name === \"\") {\r\n            throw new Error(\"'name' must be non-empty string, got '\" + name + \"'\");\r\n        }\r\n    };\r\n    return ContextsModule;\r\n}());\n\nfunction promisify (promise, successCallback, errorCallback) {\r\n    if (typeof successCallback !== \"function\" && typeof errorCallback !== \"function\") {\r\n        return promise;\r\n    }\r\n    if (typeof successCallback !== \"function\") {\r\n        successCallback = function () { };\r\n    }\r\n    else if (typeof errorCallback !== \"function\") {\r\n        errorCallback = function () { };\r\n    }\r\n    return promise.then(successCallback, errorCallback);\r\n}\n\nfunction rejectAfter(ms, error) {\r\n    if (ms === void 0) { ms = 0; }\r\n    return new Promise(function (resolve, reject) { return setTimeout(function () { return reject(error); }, ms); });\r\n}\n\nvar InvokeStatus;\r\n(function (InvokeStatus) {\r\n    InvokeStatus[InvokeStatus[\"Success\"] = 0] = \"Success\";\r\n    InvokeStatus[InvokeStatus[\"Error\"] = 1] = \"Error\";\r\n})(InvokeStatus || (InvokeStatus = {}));\r\nvar Client = (function () {\r\n    function Client(protocol, repo, instance, configuration) {\r\n        this.protocol = protocol;\r\n        this.repo = repo;\r\n        this.instance = instance;\r\n        this.configuration = configuration;\r\n    }\r\n    Client.prototype.subscribe = function (method, options, successCallback, errorCallback, existingSub) {\r\n        var _this = this;\r\n        var callProtocolSubscribe = function (targetServers, stream, successProxy, errorProxy) {\r\n            var _a;\r\n            options.methodResponseTimeout = (_a = options.methodResponseTimeout) !== null && _a !== void 0 ? _a : options.waitTimeoutMs;\r\n            _this.protocol.client.subscribe(stream, options, targetServers, successProxy, errorProxy, existingSub);\r\n        };\r\n        var promise = new Promise(function (resolve, reject) {\r\n            var successProxy = function (sub) {\r\n                resolve(sub);\r\n            };\r\n            var errorProxy = function (err) {\r\n                reject(err);\r\n            };\r\n            if (!method) {\r\n                reject(\"Method definition is required. Please, provide either a unique string for a method name or a \\u201CmethodDefinition\\u201D object with a required \\u201Cname\\u201D property.\");\r\n                return;\r\n            }\r\n            var methodDef;\r\n            if (typeof method === \"string\") {\r\n                methodDef = { name: method };\r\n            }\r\n            else {\r\n                methodDef = method;\r\n            }\r\n            if (!methodDef.name) {\r\n                reject(\"Method definition is required. Please, provide either a unique string for a method name or a \\u201CmethodDefinition\\u201D object with a required \\u201Cname\\u201D property.\");\r\n                return;\r\n            }\r\n            if (options === undefined) {\r\n                options = {};\r\n            }\r\n            var target = options.target;\r\n            if (target === undefined) {\r\n                target = \"best\";\r\n            }\r\n            if (typeof target === \"string\" && target !== \"all\" && target !== \"best\") {\r\n                reject(new Error(\"\\\"\" + target + \"\\\" is not a valid target. Valid targets are \\\"all\\\", \\\"best\\\", or an instance.\"));\r\n                return;\r\n            }\r\n            if (options.methodResponseTimeout === undefined) {\r\n                options.methodResponseTimeout = options.method_response_timeout;\r\n                if (options.methodResponseTimeout === undefined) {\r\n                    options.methodResponseTimeout = _this.configuration.methodResponseTimeout;\r\n                }\r\n            }\r\n            if (options.waitTimeoutMs === undefined) {\r\n                options.waitTimeoutMs = options.wait_for_method_timeout;\r\n                if (options.waitTimeoutMs === undefined) {\r\n                    options.waitTimeoutMs = _this.configuration.waitTimeoutMs;\r\n                }\r\n            }\r\n            var delayStep = 500;\r\n            var delayTillNow = 0;\r\n            var currentServers = _this.getServerMethodsByFilterAndTarget(methodDef, target);\r\n            if (currentServers.length > 0) {\r\n                callProtocolSubscribe(currentServers, currentServers[0].methods[0], successProxy, errorProxy);\r\n            }\r\n            else {\r\n                var retry_1 = function () {\r\n                    if (!target || !(options.waitTimeoutMs)) {\r\n                        return;\r\n                    }\r\n                    delayTillNow += delayStep;\r\n                    currentServers = _this.getServerMethodsByFilterAndTarget(methodDef, target);\r\n                    if (currentServers.length > 0) {\r\n                        var streamInfo = currentServers[0].methods[0];\r\n                        callProtocolSubscribe(currentServers, streamInfo, successProxy, errorProxy);\r\n                    }\r\n                    else if (delayTillNow >= options.waitTimeoutMs) {\r\n                        var def = typeof method === \"string\" ? { name: method } : method;\r\n                        callProtocolSubscribe(currentServers, def, successProxy, errorProxy);\r\n                    }\r\n                    else {\r\n                        setTimeout(retry_1, delayStep);\r\n                    }\r\n                };\r\n                setTimeout(retry_1, delayStep);\r\n            }\r\n        });\r\n        return promisify(promise, successCallback, errorCallback);\r\n    };\r\n    Client.prototype.servers = function (methodFilter) {\r\n        var filterCopy = methodFilter === undefined\r\n            ? undefined\r\n            : __assign({}, methodFilter);\r\n        return this.getServers(filterCopy).map(function (serverMethodMap) {\r\n            return serverMethodMap.server.instance;\r\n        });\r\n    };\r\n    Client.prototype.methods = function (methodFilter) {\r\n        if (typeof methodFilter === \"string\") {\r\n            methodFilter = { name: methodFilter };\r\n        }\r\n        else {\r\n            methodFilter = __assign({}, methodFilter);\r\n        }\r\n        return this.getMethods(methodFilter);\r\n    };\r\n    Client.prototype.methodsForInstance = function (instance) {\r\n        return this.getMethodsForInstance(instance);\r\n    };\r\n    Client.prototype.methodAdded = function (callback) {\r\n        return this.repo.onMethodAdded(callback);\r\n    };\r\n    Client.prototype.methodRemoved = function (callback) {\r\n        return this.repo.onMethodRemoved(callback);\r\n    };\r\n    Client.prototype.serverAdded = function (callback) {\r\n        return this.repo.onServerAdded(callback);\r\n    };\r\n    Client.prototype.serverRemoved = function (callback) {\r\n        return this.repo.onServerRemoved(function (server, reason) {\r\n            callback(server, reason);\r\n        });\r\n    };\r\n    Client.prototype.serverMethodAdded = function (callback) {\r\n        return this.repo.onServerMethodAdded(function (server, method) {\r\n            callback({ server: server, method: method });\r\n        });\r\n    };\r\n    Client.prototype.serverMethodRemoved = function (callback) {\r\n        return this.repo.onServerMethodRemoved(function (server, method) {\r\n            callback({ server: server, method: method });\r\n        });\r\n    };\r\n    Client.prototype.invoke = function (methodFilter, argumentObj, target, additionalOptions, success, error) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var getInvokePromise;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                getInvokePromise = function () { return __awaiter(_this, void 0, void 0, function () {\r\n                    var methodDefinition, serversMethodMap, err_1, method, errorObj, timeout, additionalOptionsCopy, invokePromises, invocationMessages, results, allRejected;\r\n                    var _this = this;\r\n                    var _a;\r\n                    return __generator(this, function (_b) {\r\n                        switch (_b.label) {\r\n                            case 0:\r\n                                if (typeof methodFilter === \"string\") {\r\n                                    methodDefinition = { name: methodFilter };\r\n                                }\r\n                                else {\r\n                                    methodDefinition = __assign({}, methodFilter);\r\n                                }\r\n                                if (!methodDefinition.name) {\r\n                                    return [2, Promise.reject(\"Method definition is required. Please, provide either a unique string for a method name or a \\u201CmethodDefinition\\u201D object with a required \\u201Cname\\u201D property.\")];\r\n                                }\r\n                                if (!argumentObj) {\r\n                                    argumentObj = {};\r\n                                }\r\n                                if (!target) {\r\n                                    target = \"best\";\r\n                                }\r\n                                if (typeof target === \"string\" && target !== \"all\" && target !== \"best\" && target !== \"skipMine\") {\r\n                                    return [2, Promise.reject(new Error(\"\\\"\" + target + \"\\\" is not a valid target. Valid targets are \\\"all\\\" and \\\"best\\\".\"))];\r\n                                }\r\n                                if (!additionalOptions) {\r\n                                    additionalOptions = {};\r\n                                }\r\n                                if (additionalOptions.methodResponseTimeoutMs === undefined) {\r\n                                    additionalOptions.methodResponseTimeoutMs = additionalOptions.method_response_timeout;\r\n                                    if (additionalOptions.methodResponseTimeoutMs === undefined) {\r\n                                        additionalOptions.methodResponseTimeoutMs = this.configuration.methodResponseTimeout;\r\n                                    }\r\n                                }\r\n                                if (additionalOptions.waitTimeoutMs === undefined) {\r\n                                    additionalOptions.waitTimeoutMs = additionalOptions.wait_for_method_timeout;\r\n                                    if (additionalOptions.waitTimeoutMs === undefined) {\r\n                                        additionalOptions.waitTimeoutMs = this.configuration.waitTimeoutMs;\r\n                                    }\r\n                                }\r\n                                if (additionalOptions.waitTimeoutMs !== undefined && typeof additionalOptions.waitTimeoutMs !== \"number\") {\r\n                                    return [2, Promise.reject(new Error(\"\\\"\" + additionalOptions.waitTimeoutMs + \"\\\" is not a valid number for \\\"waitTimeoutMs\\\" \"))];\r\n                                }\r\n                                if (typeof argumentObj !== \"object\") {\r\n                                    return [2, Promise.reject(new Error(\"The method arguments must be an object. method: \" + methodDefinition.name))];\r\n                                }\r\n                                serversMethodMap = this.getServerMethodsByFilterAndTarget(methodDefinition, target);\r\n                                if (!(serversMethodMap.length === 0)) return [3, 4];\r\n                                _b.label = 1;\r\n                            case 1:\r\n                                _b.trys.push([1, 3, , 4]);\r\n                                return [4, this.tryToAwaitForMethods(methodDefinition, target, additionalOptions)];\r\n                            case 2:\r\n                                serversMethodMap = _b.sent();\r\n                                return [3, 4];\r\n                            case 3:\r\n                                err_1 = _b.sent();\r\n                                method = __assign(__assign({}, methodDefinition), { getServers: function () { return []; }, supportsStreaming: false, objectTypes: (_a = methodDefinition.objectTypes) !== null && _a !== void 0 ? _a : [] });\r\n                                errorObj = {\r\n                                    method: method,\r\n                                    called_with: argumentObj,\r\n                                    message: \"Can not find a method matching \" + JSON.stringify(methodFilter) + \" with server filter \" + JSON.stringify(target),\r\n                                    executed_by: undefined,\r\n                                    returned: undefined,\r\n                                    status: undefined,\r\n                                };\r\n                                return [2, Promise.reject(errorObj)];\r\n                            case 4:\r\n                                timeout = additionalOptions.methodResponseTimeoutMs;\r\n                                additionalOptionsCopy = additionalOptions;\r\n                                invokePromises = serversMethodMap.map(function (serversMethodPair) {\r\n                                    var invId = shortid();\r\n                                    var invokePromise = _this.protocol.client.invoke(invId, serversMethodPair.methods[0], argumentObj, serversMethodPair.server, additionalOptionsCopy);\r\n                                    return Promise.race([\r\n                                        invokePromise,\r\n                                        rejectAfter(timeout, {\r\n                                            invocationId: invId,\r\n                                            message: \"Invocation timeout (\" + timeout + \" ms) reached\",\r\n                                            status: InvokeStatus.Error,\r\n                                        })\r\n                                    ]);\r\n                                });\r\n                                return [4, Promise.all(invokePromises)];\r\n                            case 5:\r\n                                invocationMessages = _b.sent();\r\n                                results = this.getInvocationResultObj(invocationMessages, methodDefinition, argumentObj);\r\n                                allRejected = invocationMessages.every(function (result) { return result.status === InvokeStatus.Error; });\r\n                                if (allRejected) {\r\n                                    return [2, Promise.reject(results)];\r\n                                }\r\n                                return [2, results];\r\n                        }\r\n                    });\r\n                }); };\r\n                return [2, promisify(getInvokePromise(), success, error)];\r\n            });\r\n        });\r\n    };\r\n    Client.prototype.getInvocationResultObj = function (invocationResults, method, calledWith) {\r\n        var all_return_values = invocationResults\r\n            .filter(function (invokeMessage) { return invokeMessage.status === InvokeStatus.Success; })\r\n            .reduce(function (allValues, currentValue) {\r\n            allValues = __spreadArrays(allValues, [\r\n                {\r\n                    executed_by: currentValue.instance,\r\n                    returned: currentValue.result,\r\n                    called_with: calledWith,\r\n                    method: method,\r\n                    message: currentValue.message,\r\n                    status: currentValue.status,\r\n                }\r\n            ]);\r\n            return allValues;\r\n        }, []);\r\n        var all_errors = invocationResults\r\n            .filter(function (invokeMessage) { return invokeMessage.status === InvokeStatus.Error; })\r\n            .reduce(function (allErrors, currError) {\r\n            allErrors = __spreadArrays(allErrors, [\r\n                {\r\n                    executed_by: currError.instance,\r\n                    called_with: calledWith,\r\n                    name: method.name,\r\n                    message: currError.message,\r\n                }\r\n            ]);\r\n            return allErrors;\r\n        }, []);\r\n        var invResult = invocationResults[0];\r\n        var result = {\r\n            method: method,\r\n            called_with: calledWith,\r\n            returned: invResult.result,\r\n            executed_by: invResult.instance,\r\n            all_return_values: all_return_values,\r\n            all_errors: all_errors,\r\n            message: invResult.message,\r\n            status: invResult.status\r\n        };\r\n        return result;\r\n    };\r\n    Client.prototype.tryToAwaitForMethods = function (methodDefinition, target, additionalOptions) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (additionalOptions.waitTimeoutMs === 0) {\r\n                reject();\r\n                return;\r\n            }\r\n            var delayStep = 500;\r\n            var delayTillNow = 0;\r\n            var retry = function () {\r\n                delayTillNow += delayStep;\r\n                var serversMethodMap = _this.getServerMethodsByFilterAndTarget(methodDefinition, target);\r\n                if (serversMethodMap.length > 0) {\r\n                    clearInterval(interval);\r\n                    resolve(serversMethodMap);\r\n                }\r\n                else if (delayTillNow >= (additionalOptions.waitTimeoutMs || 10000)) {\r\n                    clearInterval(interval);\r\n                    reject();\r\n                    return;\r\n                }\r\n            };\r\n            var interval = setInterval(retry, delayStep);\r\n        });\r\n    };\r\n    Client.prototype.filterByTarget = function (target, serverMethodMap) {\r\n        var _this = this;\r\n        if (typeof target === \"string\") {\r\n            if (target === \"all\") {\r\n                return __spreadArrays(serverMethodMap);\r\n            }\r\n            else if (target === \"best\") {\r\n                var localMachine = serverMethodMap\r\n                    .find(function (s) { return s.server.instance.isLocal; });\r\n                if (localMachine) {\r\n                    return [localMachine];\r\n                }\r\n                if (serverMethodMap[0] !== undefined) {\r\n                    return [serverMethodMap[0]];\r\n                }\r\n            }\r\n            else if (target === \"skipMine\") {\r\n                return serverMethodMap.filter(function (_a) {\r\n                    var server = _a.server;\r\n                    return server.instance.peerId !== _this.instance.peerId;\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            var targetArray = void 0;\r\n            if (!Array.isArray(target)) {\r\n                targetArray = [target];\r\n            }\r\n            else {\r\n                targetArray = target;\r\n            }\r\n            var allServersMatching = targetArray.reduce(function (matches, filter) {\r\n                var myMatches = serverMethodMap.filter(function (serverMethodPair) {\r\n                    return _this.instanceMatch(filter, serverMethodPair.server.instance);\r\n                });\r\n                return matches.concat(myMatches);\r\n            }, []);\r\n            return allServersMatching;\r\n        }\r\n        return [];\r\n    };\r\n    Client.prototype.instanceMatch = function (instanceFilter, instanceDefinition) {\r\n        return this.containsProps(instanceFilter, instanceDefinition);\r\n    };\r\n    Client.prototype.methodMatch = function (methodFilter, methodDefinition) {\r\n        return this.containsProps(methodFilter, methodDefinition);\r\n    };\r\n    Client.prototype.containsProps = function (filter, repoMethod) {\r\n        var filterProps = Object.keys(filter)\r\n            .filter(function (prop) {\r\n            return filter[prop] !== undefined\r\n                && typeof filter[prop] !== \"function\"\r\n                && prop !== \"object_types\"\r\n                && prop !== \"display_name\"\r\n                && prop !== \"id\"\r\n                && prop !== \"gatewayId\"\r\n                && prop !== \"identifier\"\r\n                && prop[0] !== \"_\";\r\n        });\r\n        return filterProps.reduce(function (isMatch, prop) {\r\n            var filterValue = filter[prop];\r\n            var repoMethodValue = repoMethod[prop];\r\n            if (prop === \"objectTypes\") {\r\n                var containsAllFromFilter = function (filterObjTypes, repoObjectTypes) {\r\n                    var objTypeToContains = filterObjTypes.reduce(function (object, objType) {\r\n                        object[objType] = false;\r\n                        return object;\r\n                    }, {});\r\n                    repoObjectTypes.forEach(function (repoObjType) {\r\n                        if (objTypeToContains[repoObjType] !== undefined) {\r\n                            objTypeToContains[repoObjType] = true;\r\n                        }\r\n                    });\r\n                    var filterIsFullfilled = function () { return Object.keys(objTypeToContains).reduce(function (isFullfiled, objType) {\r\n                        if (!objTypeToContains[objType]) {\r\n                            isFullfiled = false;\r\n                        }\r\n                        return isFullfiled;\r\n                    }, true); };\r\n                    return filterIsFullfilled();\r\n                };\r\n                if (filterValue.length > repoMethodValue.length\r\n                    || containsAllFromFilter(filterValue, repoMethodValue) === false) {\r\n                    isMatch = false;\r\n                }\r\n            }\r\n            else if (String(filterValue).toLowerCase() !== String(repoMethodValue).toLowerCase()) {\r\n                isMatch = false;\r\n            }\r\n            return isMatch;\r\n        }, true);\r\n    };\r\n    Client.prototype.getMethods = function (methodFilter) {\r\n        var _this = this;\r\n        if (methodFilter === undefined) {\r\n            return this.repo.getMethods();\r\n        }\r\n        var methods = this.repo.getMethods().filter(function (method) {\r\n            return _this.methodMatch(methodFilter, method);\r\n        });\r\n        return methods;\r\n    };\r\n    Client.prototype.getMethodsForInstance = function (instanceFilter) {\r\n        var _this = this;\r\n        var allServers = this.repo.getServers();\r\n        var matchingServers = allServers.filter(function (server) {\r\n            return _this.instanceMatch(instanceFilter, server.instance);\r\n        });\r\n        if (matchingServers.length === 0) {\r\n            return [];\r\n        }\r\n        var resultMethodsObject = {};\r\n        if (matchingServers.length === 1) {\r\n            resultMethodsObject = matchingServers[0].methods;\r\n        }\r\n        else {\r\n            matchingServers.forEach(function (server) {\r\n                Object.keys(server.methods).forEach(function (methodKey) {\r\n                    var method = server.methods[methodKey];\r\n                    resultMethodsObject[method.identifier] = method;\r\n                });\r\n            });\r\n        }\r\n        return Object.keys(resultMethodsObject)\r\n            .map(function (key) {\r\n            return resultMethodsObject[key];\r\n        });\r\n    };\r\n    Client.prototype.getServers = function (methodFilter) {\r\n        var _this = this;\r\n        var servers = this.repo.getServers();\r\n        if (methodFilter === undefined) {\r\n            return servers.map(function (server) {\r\n                return { server: server, methods: [] };\r\n            });\r\n        }\r\n        return servers.reduce(function (prev, current) {\r\n            var methodsForServer = _this.repo.getServerMethodsById(current.id);\r\n            var matchingMethods = methodsForServer.filter(function (method) {\r\n                return _this.methodMatch(methodFilter, method);\r\n            });\r\n            if (matchingMethods.length > 0) {\r\n                prev.push({ server: current, methods: matchingMethods });\r\n            }\r\n            return prev;\r\n        }, []);\r\n    };\r\n    Client.prototype.getServerMethodsByFilterAndTarget = function (methodFilter, target) {\r\n        var serversMethodMap = this.getServers(methodFilter);\r\n        return this.filterByTarget(target, serversMethodMap);\r\n    };\r\n    return Client;\r\n}());\n\nvar ServerSubscription = (function () {\r\n    function ServerSubscription(protocol, repoMethod, subscription) {\r\n        this.protocol = protocol;\r\n        this.repoMethod = repoMethod;\r\n        this.subscription = subscription;\r\n    }\r\n    Object.defineProperty(ServerSubscription.prototype, \"stream\", {\r\n        get: function () {\r\n            if (!this.repoMethod.stream) {\r\n                throw new Error(\"no stream\");\r\n            }\r\n            return this.repoMethod.stream;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ServerSubscription.prototype, \"arguments\", {\r\n        get: function () { return this.subscription.arguments || {}; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ServerSubscription.prototype, \"branchKey\", {\r\n        get: function () { return this.subscription.branchKey; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ServerSubscription.prototype, \"instance\", {\r\n        get: function () {\r\n            if (!this.subscription.instance) {\r\n                throw new Error(\"no instance\");\r\n            }\r\n            return this.subscription.instance;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ServerSubscription.prototype.close = function () {\r\n        this.protocol.server.closeSingleSubscription(this.repoMethod, this.subscription);\r\n    };\r\n    ServerSubscription.prototype.push = function (data) {\r\n        this.protocol.server.pushDataToSingle(this.repoMethod, this.subscription, data);\r\n    };\r\n    return ServerSubscription;\r\n}());\n\nvar Request = (function () {\r\n    function Request(protocol, repoMethod, requestContext) {\r\n        this.protocol = protocol;\r\n        this.repoMethod = repoMethod;\r\n        this.requestContext = requestContext;\r\n        this.arguments = requestContext.arguments;\r\n        this.instance = requestContext.instance;\r\n    }\r\n    Request.prototype.accept = function () {\r\n        this.protocol.server.acceptRequestOnBranch(this.requestContext, this.repoMethod, \"\");\r\n    };\r\n    Request.prototype.acceptOnBranch = function (branch) {\r\n        this.protocol.server.acceptRequestOnBranch(this.requestContext, this.repoMethod, branch);\r\n    };\r\n    Request.prototype.reject = function (reason) {\r\n        this.protocol.server.rejectRequest(this.requestContext, this.repoMethod, reason);\r\n    };\r\n    return Request;\r\n}());\n\nvar ServerStreaming = (function () {\r\n    function ServerStreaming(protocol, server) {\r\n        var _this = this;\r\n        this.protocol = protocol;\r\n        this.server = server;\r\n        protocol.server.onSubRequest(function (rc, rm) { return _this.handleSubRequest(rc, rm); });\r\n        protocol.server.onSubAdded(function (sub, rm) { return _this.handleSubAdded(sub, rm); });\r\n        protocol.server.onSubRemoved(function (sub, rm) { return _this.handleSubRemoved(sub, rm); });\r\n    }\r\n    ServerStreaming.prototype.handleSubRequest = function (requestContext, repoMethod) {\r\n        if (!(repoMethod &&\r\n            repoMethod.streamCallbacks &&\r\n            typeof repoMethod.streamCallbacks.subscriptionRequestHandler === \"function\")) {\r\n            return;\r\n        }\r\n        var request = new Request(this.protocol, repoMethod, requestContext);\r\n        repoMethod.streamCallbacks.subscriptionRequestHandler(request);\r\n    };\r\n    ServerStreaming.prototype.handleSubAdded = function (subscription, repoMethod) {\r\n        if (!(repoMethod &&\r\n            repoMethod.streamCallbacks &&\r\n            typeof repoMethod.streamCallbacks.subscriptionAddedHandler === \"function\")) {\r\n            return;\r\n        }\r\n        var sub = new ServerSubscription(this.protocol, repoMethod, subscription);\r\n        repoMethod.streamCallbacks.subscriptionAddedHandler(sub);\r\n    };\r\n    ServerStreaming.prototype.handleSubRemoved = function (subscription, repoMethod) {\r\n        if (!(repoMethod &&\r\n            repoMethod.streamCallbacks &&\r\n            typeof repoMethod.streamCallbacks.subscriptionRemovedHandler === \"function\")) {\r\n            return;\r\n        }\r\n        var sub = new ServerSubscription(this.protocol, repoMethod, subscription);\r\n        repoMethod.streamCallbacks.subscriptionRemovedHandler(sub);\r\n    };\r\n    return ServerStreaming;\r\n}());\n\nvar ServerBranch = (function () {\r\n    function ServerBranch(key, protocol, repoMethod) {\r\n        this.key = key;\r\n        this.protocol = protocol;\r\n        this.repoMethod = repoMethod;\r\n    }\r\n    ServerBranch.prototype.subscriptions = function () {\r\n        var _this = this;\r\n        var subList = this.protocol.server.getSubscriptionList(this.repoMethod, this.key);\r\n        return subList.map(function (sub) {\r\n            return new ServerSubscription(_this.protocol, _this.repoMethod, sub);\r\n        });\r\n    };\r\n    ServerBranch.prototype.close = function () {\r\n        this.protocol.server.closeAllSubscriptions(this.repoMethod, this.key);\r\n    };\r\n    ServerBranch.prototype.push = function (data) {\r\n        this.protocol.server.pushData(this.repoMethod, data, [this.key]);\r\n    };\r\n    return ServerBranch;\r\n}());\n\nvar ServerStream = (function () {\r\n    function ServerStream(_protocol, _repoMethod, _server) {\r\n        this._protocol = _protocol;\r\n        this._repoMethod = _repoMethod;\r\n        this._server = _server;\r\n        this.name = this._repoMethod.definition.name;\r\n    }\r\n    ServerStream.prototype.branches = function (key) {\r\n        var _this = this;\r\n        var bList = this._protocol.server.getBranchList(this._repoMethod);\r\n        if (key) {\r\n            if (bList.indexOf(key) > -1) {\r\n                return new ServerBranch(key, this._protocol, this._repoMethod);\r\n            }\r\n            return undefined;\r\n        }\r\n        else {\r\n            return bList.map(function (branchKey) {\r\n                return new ServerBranch(branchKey, _this._protocol, _this._repoMethod);\r\n            });\r\n        }\r\n    };\r\n    ServerStream.prototype.branch = function (key) {\r\n        return this.branches(key);\r\n    };\r\n    ServerStream.prototype.subscriptions = function () {\r\n        var _this = this;\r\n        var subList = this._protocol.server.getSubscriptionList(this._repoMethod);\r\n        return subList.map(function (sub) {\r\n            return new ServerSubscription(_this._protocol, _this._repoMethod, sub);\r\n        });\r\n    };\r\n    Object.defineProperty(ServerStream.prototype, \"definition\", {\r\n        get: function () {\r\n            var def2 = this._repoMethod.definition;\r\n            return {\r\n                accepts: def2.accepts,\r\n                description: def2.description,\r\n                displayName: def2.displayName,\r\n                name: def2.name,\r\n                objectTypes: def2.objectTypes,\r\n                returns: def2.returns,\r\n                supportsStreaming: def2.supportsStreaming,\r\n            };\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ServerStream.prototype.close = function () {\r\n        this._protocol.server.closeAllSubscriptions(this._repoMethod);\r\n        this._server.unregister(this._repoMethod.definition, true);\r\n    };\r\n    ServerStream.prototype.push = function (data, branches) {\r\n        if (typeof branches !== \"string\" && !Array.isArray(branches) && branches !== undefined) {\r\n            throw new Error(\"invalid branches should be string or string array\");\r\n        }\r\n        if (typeof data !== \"object\") {\r\n            throw new Error(\"Invalid arguments. Data must be an object.\");\r\n        }\r\n        this._protocol.server.pushData(this._repoMethod, data, branches);\r\n    };\r\n    ServerStream.prototype.updateRepoMethod = function (repoMethod) {\r\n        this._repoMethod = repoMethod;\r\n    };\r\n    return ServerStream;\r\n}());\n\nvar Server = (function () {\r\n    function Server(protocol, serverRepository) {\r\n        this.protocol = protocol;\r\n        this.serverRepository = serverRepository;\r\n        this.invocations = 0;\r\n        this.currentlyUnregistering = {};\r\n        this.streaming = new ServerStreaming(protocol, this);\r\n        this.protocol.server.onInvoked(this.onMethodInvoked.bind(this));\r\n    }\r\n    Server.prototype.createStream = function (streamDef, callbacks, successCallback, errorCallback, existingStream) {\r\n        var _this = this;\r\n        var promise = new Promise(function (resolve, reject) {\r\n            if (!streamDef) {\r\n                reject(\"The stream name must be unique! Please, provide either a unique string for a stream name to \\u201Cglue.interop.createStream()\\u201D or a \\u201CmethodDefinition\\u201D object with a unique \\u201Cname\\u201D property for the stream.\");\r\n                return;\r\n            }\r\n            var streamMethodDefinition;\r\n            if (typeof streamDef === \"string\") {\r\n                streamMethodDefinition = { name: \"\" + streamDef };\r\n            }\r\n            else {\r\n                streamMethodDefinition = __assign({}, streamDef);\r\n            }\r\n            if (!streamMethodDefinition.name) {\r\n                return reject(\"The \\u201Cname\\u201D property is required for the \\u201CstreamDefinition\\u201D object and must be unique. Stream definition: \" + JSON.stringify(streamMethodDefinition));\r\n            }\r\n            var nameAlreadyExists = _this.serverRepository.getList()\r\n                .some(function (serverMethod) { return serverMethod.definition.name === streamMethodDefinition.name; });\r\n            if (nameAlreadyExists) {\r\n                return reject(\"A stream with the name \\\"\" + streamMethodDefinition.name + \"\\\" already exists! Please, provide a unique name for the stream.\");\r\n            }\r\n            streamMethodDefinition.supportsStreaming = true;\r\n            if (!callbacks) {\r\n                callbacks = {};\r\n            }\r\n            if (typeof callbacks.subscriptionRequestHandler !== \"function\") {\r\n                callbacks.subscriptionRequestHandler = function (request) {\r\n                    request.accept();\r\n                };\r\n            }\r\n            var repoMethod = _this.serverRepository.add({\r\n                definition: streamMethodDefinition,\r\n                streamCallbacks: callbacks,\r\n                protocolState: {},\r\n            });\r\n            _this.protocol.server.createStream(repoMethod)\r\n                .then(function () {\r\n                var streamUserObject;\r\n                if (existingStream) {\r\n                    streamUserObject = existingStream;\r\n                    existingStream.updateRepoMethod(repoMethod);\r\n                }\r\n                else {\r\n                    streamUserObject = new ServerStream(_this.protocol, repoMethod, _this);\r\n                }\r\n                repoMethod.stream = streamUserObject;\r\n                resolve(streamUserObject);\r\n            })\r\n                .catch(function (err) {\r\n                if (repoMethod.repoId) {\r\n                    _this.serverRepository.remove(repoMethod.repoId);\r\n                }\r\n                reject(err);\r\n            });\r\n        });\r\n        return promisify(promise, successCallback, errorCallback);\r\n    };\r\n    Server.prototype.register = function (methodDefinition, callback) {\r\n        var _this = this;\r\n        if (!methodDefinition) {\r\n            return Promise.reject(\"Method definition is required. Please, provide either a unique string for a method name or a \\u201CmethodDefinition\\u201D object with a required \\u201Cname\\u201D property.\");\r\n        }\r\n        if (typeof callback !== \"function\") {\r\n            return Promise.reject(\"The second parameter must be a callback function. Method: \" + (typeof methodDefinition === \"string\" ? methodDefinition : methodDefinition.name));\r\n        }\r\n        var wrappedCallbackFunction = function (context, resultCallback) { return __awaiter(_this, void 0, void 0, function () {\r\n            var result, resultValue, e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 4, , 5]);\r\n                        result = callback(context.args, context.instance);\r\n                        if (!(result && typeof result.then === \"function\")) return [3, 2];\r\n                        return [4, result];\r\n                    case 1:\r\n                        resultValue = _a.sent();\r\n                        resultCallback(undefined, resultValue);\r\n                        return [3, 3];\r\n                    case 2:\r\n                        resultCallback(undefined, result);\r\n                        _a.label = 3;\r\n                    case 3: return [3, 5];\r\n                    case 4:\r\n                        e_1 = _a.sent();\r\n                        if (!e_1) {\r\n                            e_1 = \"\";\r\n                        }\r\n                        resultCallback(e_1, e_1);\r\n                        return [3, 5];\r\n                    case 5: return [2];\r\n                }\r\n            });\r\n        }); };\r\n        wrappedCallbackFunction.userCallback = callback;\r\n        return this.registerCore(methodDefinition, wrappedCallbackFunction);\r\n    };\r\n    Server.prototype.registerAsync = function (methodDefinition, callback) {\r\n        if (!methodDefinition) {\r\n            return Promise.reject(\"Method definition is required. Please, provide either a unique string for a method name or a \\u201CmethodDefinition\\u201D object with a required \\u201Cname\\u201D property.\");\r\n        }\r\n        if (typeof callback !== \"function\") {\r\n            return Promise.reject(\"The second parameter must be a callback function. Method: \" + (typeof methodDefinition === \"string\" ? methodDefinition : methodDefinition.name));\r\n        }\r\n        var wrappedCallback = function (context, resultCallback) {\r\n            try {\r\n                var resultCalled_1 = false;\r\n                var success = function (result) {\r\n                    if (!resultCalled_1) {\r\n                        resultCallback(undefined, result);\r\n                    }\r\n                    resultCalled_1 = true;\r\n                };\r\n                var error = function (e) {\r\n                    if (!resultCalled_1) {\r\n                        if (!e) {\r\n                            e = \"\";\r\n                        }\r\n                        resultCallback(e, e);\r\n                    }\r\n                    resultCalled_1 = true;\r\n                };\r\n                var methodResult = callback(context.args, context.instance, success, error);\r\n                if (methodResult && typeof methodResult.then === \"function\") {\r\n                    methodResult\r\n                        .then(success)\r\n                        .catch(error);\r\n                }\r\n            }\r\n            catch (e) {\r\n                resultCallback(e, undefined);\r\n            }\r\n        };\r\n        wrappedCallback.userCallbackAsync = callback;\r\n        return this.registerCore(methodDefinition, wrappedCallback);\r\n    };\r\n    Server.prototype.unregister = function (methodFilter, forStream) {\r\n        if (forStream === void 0) { forStream = false; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var methodDefinition, methodToBeRemoved;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (methodFilter === undefined) {\r\n                            return [2, Promise.reject(\"Please, provide either a unique string for a name or an object containing a \\u201Cname\\u201D property.\")];\r\n                        }\r\n                        if (!(typeof methodFilter === \"function\")) return [3, 2];\r\n                        return [4, this.unregisterWithPredicate(methodFilter, forStream)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2];\r\n                    case 2:\r\n                        if (typeof methodFilter === \"string\") {\r\n                            methodDefinition = { name: methodFilter };\r\n                        }\r\n                        else {\r\n                            methodDefinition = methodFilter;\r\n                        }\r\n                        if (methodDefinition.name === undefined) {\r\n                            return [2, Promise.reject(\"Method name is required. Cannot find a method if the method name is undefined!\")];\r\n                        }\r\n                        methodToBeRemoved = this.serverRepository.getList().find(function (serverMethod) {\r\n                            return serverMethod.definition.name === methodDefinition.name\r\n                                && (serverMethod.definition.supportsStreaming || false) === forStream;\r\n                        });\r\n                        if (!methodToBeRemoved) {\r\n                            return [2, Promise.reject(\"Method with a name \\\"\" + methodDefinition.name + \"\\\" does not exist or is not registered by your application!\")];\r\n                        }\r\n                        return [4, this.removeMethodsOrStreams([methodToBeRemoved])];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Server.prototype.unregisterWithPredicate = function (filterPredicate, forStream) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var methodsOrStreamsToRemove;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        methodsOrStreamsToRemove = this.serverRepository.getList()\r\n                            .filter(function (sm) { return filterPredicate(sm.definition); })\r\n                            .filter(function (serverMethod) {\r\n                            return (serverMethod.definition.supportsStreaming || false) === forStream;\r\n                        });\r\n                        if (!methodsOrStreamsToRemove || methodsOrStreamsToRemove.length === 0) {\r\n                            return [2, Promise.reject(\"Could not find a \" + (forStream ? \"stream\" : \"method\") + \" matching the specified condition!\")];\r\n                        }\r\n                        return [4, this.removeMethodsOrStreams(methodsOrStreamsToRemove)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Server.prototype.removeMethodsOrStreams = function (methodsToRemove) {\r\n        var _this = this;\r\n        var methodUnregPromises = [];\r\n        methodsToRemove.forEach(function (method) {\r\n            var promise = _this.protocol.server.unregister(method)\r\n                .then(function () {\r\n                if (method.repoId) {\r\n                    _this.serverRepository.remove(method.repoId);\r\n                }\r\n            });\r\n            methodUnregPromises.push(promise);\r\n            _this.addAsCurrentlyUnregistering(method.definition.name, promise);\r\n        });\r\n        return Promise.all(methodUnregPromises);\r\n    };\r\n    Server.prototype.addAsCurrentlyUnregistering = function (methodName, promise) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var timeout;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                timeout = new Promise(function (resolve) { return setTimeout(resolve, 5000); });\r\n                this.currentlyUnregistering[methodName] = Promise.race([promise, timeout]).then(function () {\r\n                    delete _this.currentlyUnregistering[methodName];\r\n                });\r\n                return [2];\r\n            });\r\n        });\r\n    };\r\n    Server.prototype.registerCore = function (method, theFunction) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var methodDefinition, unregisterInProgress, nameAlreadyExists, repoMethod;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (typeof method === \"string\") {\r\n                            methodDefinition = { name: \"\" + method };\r\n                        }\r\n                        else {\r\n                            methodDefinition = __assign({}, method);\r\n                        }\r\n                        if (!methodDefinition.name) {\r\n                            return [2, Promise.reject(\"Please, provide a (unique) string value for the \\u201Cname\\u201D property in the \\u201CmethodDefinition\\u201D object: \" + JSON.stringify(method))];\r\n                        }\r\n                        unregisterInProgress = this.currentlyUnregistering[methodDefinition.name];\r\n                        if (!unregisterInProgress) return [3, 2];\r\n                        return [4, unregisterInProgress];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        nameAlreadyExists = this.serverRepository.getList()\r\n                            .some(function (serverMethod) { return serverMethod.definition.name === methodDefinition.name; });\r\n                        if (nameAlreadyExists) {\r\n                            return [2, Promise.reject(\"A method with the name \\\"\" + methodDefinition.name + \"\\\" already exists! Please, provide a unique name for the method.\")];\r\n                        }\r\n                        if (methodDefinition.supportsStreaming) {\r\n                            return [2, Promise.reject(\"When you create methods with \\u201Cglue.interop.register()\\u201D or \\u201Cglue.interop.registerAsync()\\u201D the property \\u201CsupportsStreaming\\u201D cannot be \\u201Ctrue\\u201D. If you want \\u201C\" + methodDefinition.name + \"\\u201D to be a stream, please use the \\u201Cglue.interop.createStream()\\u201D method.\")];\r\n                        }\r\n                        repoMethod = this.serverRepository.add({\r\n                            definition: methodDefinition,\r\n                            theFunction: theFunction,\r\n                            protocolState: {},\r\n                        });\r\n                        return [2, this.protocol.server.register(repoMethod)\r\n                                .catch(function (err) {\r\n                                if (repoMethod === null || repoMethod === void 0 ? void 0 : repoMethod.repoId) {\r\n                                    _this.serverRepository.remove(repoMethod.repoId);\r\n                                }\r\n                                throw err;\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Server.prototype.onMethodInvoked = function (methodToExecute, invocationId, invocationArgs) {\r\n        var _this = this;\r\n        if (!methodToExecute || !methodToExecute.theFunction) {\r\n            return;\r\n        }\r\n        methodToExecute.theFunction(invocationArgs, function (err, result) {\r\n            if (err !== undefined && err !== null) {\r\n                if (err.message && typeof err.message === \"string\") {\r\n                    err = err.message;\r\n                }\r\n                else if (typeof err !== \"string\") {\r\n                    try {\r\n                        err = JSON.stringify(err);\r\n                    }\r\n                    catch (unStrException) {\r\n                        err = \"un-stringifyable error in onMethodInvoked! Top level prop names: \" + Object.keys(err);\r\n                    }\r\n                }\r\n            }\r\n            if (!result) {\r\n                result = {};\r\n            }\r\n            else if (typeof result !== \"object\" || Array.isArray(result)) {\r\n                result = { _value: result };\r\n            }\r\n            _this.protocol.server.methodInvocationResult(methodToExecute, invocationId, err, result);\r\n        });\r\n    };\r\n    return Server;\r\n}());\n\nvar InstanceWrapper = (function () {\r\n    function InstanceWrapper(instance, connection) {\r\n        var _this = this;\r\n        this.wrapped = {\r\n            getMethods: getMethods,\r\n            getStreams: getStreams,\r\n        };\r\n        if (instance) {\r\n            this.refreshWrappedObject(instance);\r\n        }\r\n        if (connection) {\r\n            connection.loggedIn(function () {\r\n                _this.refresh(connection);\r\n            });\r\n            this.refresh(connection);\r\n        }\r\n    }\r\n    InstanceWrapper.prototype.unwrap = function () {\r\n        return this.wrapped;\r\n    };\r\n    InstanceWrapper.prototype.refresh = function (connection) {\r\n        if (!connection) {\r\n            return;\r\n        }\r\n        var resolvedIdentity = connection === null || connection === void 0 ? void 0 : connection.resolvedIdentity;\r\n        var instance = Object.assign({}, resolvedIdentity !== null && resolvedIdentity !== void 0 ? resolvedIdentity : {}, { peerId: connection === null || connection === void 0 ? void 0 : connection.peerId });\r\n        this.refreshWrappedObject(instance);\r\n    };\r\n    InstanceWrapper.prototype.refreshWrappedObject = function (resolvedIdentity) {\r\n        var _a, _b, _c;\r\n        this.wrapped.user = resolvedIdentity.user;\r\n        this.wrapped.instance = resolvedIdentity.instance;\r\n        this.wrapped.application = (_a = resolvedIdentity.application) !== null && _a !== void 0 ? _a : shortid();\r\n        this.wrapped.applicationName = resolvedIdentity.applicationName;\r\n        this.wrapped.pid = (_c = (_b = resolvedIdentity.pid) !== null && _b !== void 0 ? _b : resolvedIdentity.process) !== null && _c !== void 0 ? _c : Math.floor(Math.random() * 10000000000);\r\n        this.wrapped.machine = resolvedIdentity.machine;\r\n        this.wrapped.environment = resolvedIdentity.environment;\r\n        this.wrapped.region = resolvedIdentity.region;\r\n        this.wrapped.windowId = resolvedIdentity.windowId;\r\n        this.wrapped.isLocal = true;\r\n        this.wrapped.api = resolvedIdentity.api;\r\n        this.wrapped.service = resolvedIdentity.service;\r\n        this.wrapped.peerId = resolvedIdentity.peerId;\r\n    };\r\n    return InstanceWrapper;\r\n}());\r\nfunction getMethods() {\r\n    var _a;\r\n    return (_a = InstanceWrapper.API) === null || _a === void 0 ? void 0 : _a.methodsForInstance(this);\r\n}\r\nfunction getStreams() {\r\n    var _a;\r\n    return (_a = InstanceWrapper.API) === null || _a === void 0 ? void 0 : _a.methodsForInstance(this).filter(function (m) { return m.supportsStreaming; });\r\n}\n\nvar ClientRepository = (function () {\r\n    function ClientRepository(logger) {\r\n        this.logger = logger;\r\n        this.servers = {};\r\n        this.methodsCount = {};\r\n        this.callbacks = lib();\r\n    }\r\n    ClientRepository.prototype.addServer = function (info, serverId) {\r\n        this.logger.debug(\"adding server \" + serverId);\r\n        var current = this.servers[serverId];\r\n        if (current) {\r\n            return current.id;\r\n        }\r\n        var wrapper = new InstanceWrapper(info);\r\n        var serverEntry = {\r\n            id: serverId,\r\n            methods: {},\r\n            instance: wrapper.unwrap(),\r\n            wrapper: wrapper,\r\n        };\r\n        this.servers[serverId] = serverEntry;\r\n        this.callbacks.execute(\"onServerAdded\", serverEntry.instance);\r\n        return serverId;\r\n    };\r\n    ClientRepository.prototype.removeServerById = function (id, reason) {\r\n        var _this = this;\r\n        var server = this.servers[id];\r\n        if (!server) {\r\n            this.logger.warn(\"not aware of server \" + id + \", my state \" + JSON.stringify(Object.keys(this.servers)));\r\n            return;\r\n        }\r\n        else {\r\n            this.logger.debug(\"removing server \" + id);\r\n        }\r\n        Object.keys(server.methods).forEach(function (methodId) {\r\n            _this.removeServerMethod(id, methodId);\r\n        });\r\n        delete this.servers[id];\r\n        this.callbacks.execute(\"onServerRemoved\", server.instance, reason);\r\n    };\r\n    ClientRepository.prototype.addServerMethod = function (serverId, method) {\r\n        var server = this.servers[serverId];\r\n        if (!server) {\r\n            throw new Error(\"server does not exists\");\r\n        }\r\n        if (server.methods[method.id]) {\r\n            return;\r\n        }\r\n        var identifier = this.createMethodIdentifier(method);\r\n        var that = this;\r\n        var methodDefinition = {\r\n            identifier: identifier,\r\n            gatewayId: method.id,\r\n            name: method.name,\r\n            displayName: method.display_name,\r\n            description: method.description,\r\n            version: method.version,\r\n            objectTypes: method.object_types || [],\r\n            accepts: method.input_signature,\r\n            returns: method.result_signature,\r\n            supportsStreaming: typeof method.flags !== \"undefined\" ? method.flags.streaming : false,\r\n            getServers: function () {\r\n                return that.getServersByMethod(identifier);\r\n            }\r\n        };\r\n        methodDefinition.object_types = methodDefinition.objectTypes;\r\n        methodDefinition.display_name = methodDefinition.displayName;\r\n        methodDefinition.version = methodDefinition.version;\r\n        server.methods[method.id] = methodDefinition;\r\n        if (!this.methodsCount[identifier]) {\r\n            this.methodsCount[identifier] = 0;\r\n            this.callbacks.execute(\"onMethodAdded\", methodDefinition);\r\n        }\r\n        this.methodsCount[identifier] = this.methodsCount[identifier] + 1;\r\n        this.callbacks.execute(\"onServerMethodAdded\", server.instance, methodDefinition);\r\n        return methodDefinition;\r\n    };\r\n    ClientRepository.prototype.removeServerMethod = function (serverId, methodId) {\r\n        var server = this.servers[serverId];\r\n        if (!server) {\r\n            throw new Error(\"server does not exists\");\r\n        }\r\n        var method = server.methods[methodId];\r\n        delete server.methods[methodId];\r\n        this.methodsCount[method.identifier] = this.methodsCount[method.identifier] - 1;\r\n        if (this.methodsCount[method.identifier] === 0) {\r\n            this.callbacks.execute(\"onMethodRemoved\", method);\r\n        }\r\n        this.callbacks.execute(\"onServerMethodRemoved\", server.instance, method);\r\n    };\r\n    ClientRepository.prototype.getMethods = function () {\r\n        var _this = this;\r\n        var allMethods = {};\r\n        Object.keys(this.servers).forEach(function (serverId) {\r\n            var server = _this.servers[serverId];\r\n            Object.keys(server.methods).forEach(function (methodId) {\r\n                var method = server.methods[methodId];\r\n                allMethods[method.identifier] = method;\r\n            });\r\n        });\r\n        var methodsAsArray = Object.keys(allMethods).map(function (id) {\r\n            return allMethods[id];\r\n        });\r\n        return methodsAsArray;\r\n    };\r\n    ClientRepository.prototype.getServers = function () {\r\n        var _this = this;\r\n        var allServers = [];\r\n        Object.keys(this.servers).forEach(function (serverId) {\r\n            var server = _this.servers[serverId];\r\n            allServers.push(server);\r\n        });\r\n        return allServers;\r\n    };\r\n    ClientRepository.prototype.getServerMethodsById = function (serverId) {\r\n        var server = this.servers[serverId];\r\n        return Object.keys(server.methods).map(function (id) {\r\n            return server.methods[id];\r\n        });\r\n    };\r\n    ClientRepository.prototype.onServerAdded = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onServerAdded\", callback);\r\n        var serversWithMethodsToReplay = this.getServers().map(function (s) { return s.instance; });\r\n        return this.returnUnsubWithDelayedReplay(unsubscribeFunc, serversWithMethodsToReplay, callback);\r\n    };\r\n    ClientRepository.prototype.onMethodAdded = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onMethodAdded\", callback);\r\n        var methodsToReplay = this.getMethods();\r\n        return this.returnUnsubWithDelayedReplay(unsubscribeFunc, methodsToReplay, callback);\r\n    };\r\n    ClientRepository.prototype.onServerMethodAdded = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onServerMethodAdded\", callback);\r\n        var unsubCalled = false;\r\n        var servers = this.getServers();\r\n        setTimeout(function () {\r\n            servers.forEach(function (server) {\r\n                var methods = server.methods;\r\n                Object.keys(methods).forEach(function (methodId) {\r\n                    if (!unsubCalled) {\r\n                        callback(server.instance, methods[methodId]);\r\n                    }\r\n                });\r\n            });\r\n        }, 0);\r\n        return function () {\r\n            unsubCalled = true;\r\n            unsubscribeFunc();\r\n        };\r\n    };\r\n    ClientRepository.prototype.onMethodRemoved = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onMethodRemoved\", callback);\r\n        return unsubscribeFunc;\r\n    };\r\n    ClientRepository.prototype.onServerRemoved = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onServerRemoved\", callback);\r\n        return unsubscribeFunc;\r\n    };\r\n    ClientRepository.prototype.onServerMethodRemoved = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onServerMethodRemoved\", callback);\r\n        return unsubscribeFunc;\r\n    };\r\n    ClientRepository.prototype.getServerById = function (id) {\r\n        return this.servers[id];\r\n    };\r\n    ClientRepository.prototype.reset = function () {\r\n        var _this = this;\r\n        Object.keys(this.servers).forEach(function (key) {\r\n            _this.removeServerById(key, \"reset\");\r\n        });\r\n        this.servers = {};\r\n        this.methodsCount = {};\r\n    };\r\n    ClientRepository.prototype.createMethodIdentifier = function (methodInfo) {\r\n        var accepts = methodInfo.input_signature !== undefined ? methodInfo.input_signature : \"\";\r\n        var returns = methodInfo.result_signature !== undefined ? methodInfo.result_signature : \"\";\r\n        return (methodInfo.name + accepts + returns).toLowerCase();\r\n    };\r\n    ClientRepository.prototype.getServersByMethod = function (identifier) {\r\n        var _this = this;\r\n        var allServers = [];\r\n        Object.keys(this.servers).forEach(function (serverId) {\r\n            var server = _this.servers[serverId];\r\n            Object.keys(server.methods).forEach(function (methodId) {\r\n                var methodInfo = server.methods[methodId];\r\n                if (methodInfo.identifier === identifier) {\r\n                    allServers.push(server.instance);\r\n                }\r\n            });\r\n        });\r\n        return allServers;\r\n    };\r\n    ClientRepository.prototype.returnUnsubWithDelayedReplay = function (unsubscribeFunc, collectionToReplay, callback) {\r\n        var unsubCalled = false;\r\n        setTimeout(function () {\r\n            collectionToReplay.forEach(function (item) {\r\n                if (!unsubCalled) {\r\n                    callback(item);\r\n                }\r\n            });\r\n        }, 0);\r\n        return function () {\r\n            unsubCalled = true;\r\n            unsubscribeFunc();\r\n        };\r\n    };\r\n    return ClientRepository;\r\n}());\n\nvar ServerRepository = (function () {\r\n    function ServerRepository() {\r\n        this.nextId = 0;\r\n        this.methods = [];\r\n    }\r\n    ServerRepository.prototype.add = function (method) {\r\n        method.repoId = String(this.nextId);\r\n        this.nextId += 1;\r\n        this.methods.push(method);\r\n        return method;\r\n    };\r\n    ServerRepository.prototype.remove = function (repoId) {\r\n        if (typeof repoId !== \"string\") {\r\n            return new TypeError(\"Expecting a string\");\r\n        }\r\n        this.methods = this.methods.filter(function (m) {\r\n            return m.repoId !== repoId;\r\n        });\r\n    };\r\n    ServerRepository.prototype.getById = function (id) {\r\n        if (typeof id !== \"string\") {\r\n            return undefined;\r\n        }\r\n        return this.methods.find(function (m) {\r\n            return m.repoId === id;\r\n        });\r\n    };\r\n    ServerRepository.prototype.getList = function () {\r\n        return this.methods.map(function (m) { return m; });\r\n    };\r\n    ServerRepository.prototype.length = function () {\r\n        return this.methods.length;\r\n    };\r\n    ServerRepository.prototype.reset = function () {\r\n        this.methods = [];\r\n    };\r\n    return ServerRepository;\r\n}());\n\nvar SUBSCRIPTION_REQUEST = \"onSubscriptionRequest\";\r\nvar SUBSCRIPTION_ADDED = \"onSubscriptionAdded\";\r\nvar SUBSCRIPTION_REMOVED = \"onSubscriptionRemoved\";\r\nvar ServerStreaming$1 = (function () {\r\n    function ServerStreaming(session, repository, serverRepository) {\r\n        var _this = this;\r\n        this.session = session;\r\n        this.repository = repository;\r\n        this.serverRepository = serverRepository;\r\n        this.ERR_URI_SUBSCRIPTION_FAILED = \"com.tick42.agm.errors.subscription.failure\";\r\n        this.callbacks = lib();\r\n        this.nextStreamId = 0;\r\n        session.on(\"add-interest\", function (msg) {\r\n            _this.handleAddInterest(msg);\r\n        });\r\n        session.on(\"remove-interest\", function (msg) {\r\n            _this.handleRemoveInterest(msg);\r\n        });\r\n    }\r\n    ServerStreaming.prototype.acceptRequestOnBranch = function (requestContext, streamingMethod, branch) {\r\n        if (typeof branch !== \"string\") {\r\n            branch = \"\";\r\n        }\r\n        if (typeof streamingMethod.protocolState.subscriptionsMap !== \"object\") {\r\n            throw new TypeError(\"The streaming method is missing its subscriptions.\");\r\n        }\r\n        if (!Array.isArray(streamingMethod.protocolState.branchKeyToStreamIdMap)) {\r\n            throw new TypeError(\"The streaming method is missing its branches.\");\r\n        }\r\n        var streamId = this.getStreamId(streamingMethod, branch);\r\n        var key = requestContext.msg.subscription_id;\r\n        var subscription = {\r\n            id: key,\r\n            arguments: requestContext.arguments,\r\n            instance: requestContext.instance,\r\n            branchKey: branch,\r\n            streamId: streamId,\r\n            subscribeMsg: requestContext.msg,\r\n        };\r\n        streamingMethod.protocolState.subscriptionsMap[key] = subscription;\r\n        this.session.sendFireAndForget({\r\n            type: \"accepted\",\r\n            subscription_id: key,\r\n            stream_id: streamId,\r\n        });\r\n        this.callbacks.execute(SUBSCRIPTION_ADDED, subscription, streamingMethod);\r\n    };\r\n    ServerStreaming.prototype.rejectRequest = function (requestContext, streamingMethod, reason) {\r\n        if (typeof reason !== \"string\") {\r\n            reason = \"\";\r\n        }\r\n        this.sendSubscriptionFailed(\"Subscription rejected by user. \" + reason, requestContext.msg.subscription_id);\r\n    };\r\n    ServerStreaming.prototype.pushData = function (streamingMethod, data, branches) {\r\n        var _this = this;\r\n        if (typeof streamingMethod !== \"object\" || !Array.isArray(streamingMethod.protocolState.branchKeyToStreamIdMap)) {\r\n            return;\r\n        }\r\n        if (typeof data !== \"object\") {\r\n            throw new Error(\"Invalid arguments. Data must be an object.\");\r\n        }\r\n        if (typeof branches === \"string\") {\r\n            branches = [branches];\r\n        }\r\n        else if (!Array.isArray(branches) || branches.length <= 0) {\r\n            branches = [];\r\n        }\r\n        var streamIdList = streamingMethod.protocolState.branchKeyToStreamIdMap\r\n            .filter(function (br) {\r\n            if (!branches || branches.length === 0) {\r\n                return true;\r\n            }\r\n            return branches.indexOf(br.key) >= 0;\r\n        }).map(function (br) {\r\n            return br.streamId;\r\n        });\r\n        streamIdList.forEach(function (streamId) {\r\n            var publishMessage = {\r\n                type: \"publish\",\r\n                stream_id: streamId,\r\n                data: data,\r\n            };\r\n            _this.session.sendFireAndForget(publishMessage);\r\n        });\r\n    };\r\n    ServerStreaming.prototype.pushDataToSingle = function (method, subscription, data) {\r\n        if (typeof data !== \"object\") {\r\n            throw new Error(\"Invalid arguments. Data must be an object.\");\r\n        }\r\n        var postMessage = {\r\n            type: \"post\",\r\n            subscription_id: subscription.id,\r\n            data: data,\r\n        };\r\n        this.session.sendFireAndForget(postMessage);\r\n    };\r\n    ServerStreaming.prototype.closeSingleSubscription = function (streamingMethod, subscription) {\r\n        if (streamingMethod.protocolState.subscriptionsMap) {\r\n            delete streamingMethod.protocolState.subscriptionsMap[subscription.id];\r\n        }\r\n        var dropSubscriptionMessage = {\r\n            type: \"drop-subscription\",\r\n            subscription_id: subscription.id,\r\n            reason: \"Server dropping a single subscription\",\r\n        };\r\n        this.session.sendFireAndForget(dropSubscriptionMessage);\r\n        var subscriber = subscription.instance;\r\n        this.callbacks.execute(SUBSCRIPTION_REMOVED, subscription, streamingMethod);\r\n    };\r\n    ServerStreaming.prototype.closeMultipleSubscriptions = function (streamingMethod, branchKey) {\r\n        var _this = this;\r\n        if (typeof streamingMethod !== \"object\" || typeof streamingMethod.protocolState.subscriptionsMap !== \"object\") {\r\n            return;\r\n        }\r\n        if (!streamingMethod.protocolState.subscriptionsMap) {\r\n            return;\r\n        }\r\n        var subscriptionsMap = streamingMethod.protocolState.subscriptionsMap;\r\n        var subscriptionsToClose = Object.keys(subscriptionsMap)\r\n            .map(function (key) {\r\n            return subscriptionsMap[key];\r\n        });\r\n        if (typeof branchKey === \"string\") {\r\n            subscriptionsToClose = subscriptionsToClose.filter(function (sub) {\r\n                return sub.branchKey === branchKey;\r\n            });\r\n        }\r\n        subscriptionsToClose.forEach(function (subscription) {\r\n            delete subscriptionsMap[subscription.id];\r\n            var drop = {\r\n                type: \"drop-subscription\",\r\n                subscription_id: subscription.id,\r\n                reason: \"Server dropping all subscriptions on stream_id: \" + subscription.streamId,\r\n            };\r\n            _this.session.sendFireAndForget(drop);\r\n        });\r\n    };\r\n    ServerStreaming.prototype.getSubscriptionList = function (streamingMethod, branchKey) {\r\n        if (typeof streamingMethod !== \"object\") {\r\n            return [];\r\n        }\r\n        var subscriptions = [];\r\n        if (!streamingMethod.protocolState.subscriptionsMap) {\r\n            return [];\r\n        }\r\n        var subscriptionsMap = streamingMethod.protocolState.subscriptionsMap;\r\n        var allSubscriptions = Object.keys(subscriptionsMap)\r\n            .map(function (key) {\r\n            return subscriptionsMap[key];\r\n        });\r\n        if (typeof branchKey !== \"string\") {\r\n            subscriptions = allSubscriptions;\r\n        }\r\n        else {\r\n            subscriptions = allSubscriptions.filter(function (sub) {\r\n                return sub.branchKey === branchKey;\r\n            });\r\n        }\r\n        return subscriptions;\r\n    };\r\n    ServerStreaming.prototype.getBranchList = function (streamingMethod) {\r\n        if (typeof streamingMethod !== \"object\") {\r\n            return [];\r\n        }\r\n        if (!streamingMethod.protocolState.subscriptionsMap) {\r\n            return [];\r\n        }\r\n        var subscriptionsMap = streamingMethod.protocolState.subscriptionsMap;\r\n        var allSubscriptions = Object.keys(subscriptionsMap)\r\n            .map(function (key) {\r\n            return subscriptionsMap[key];\r\n        });\r\n        var result = [];\r\n        allSubscriptions.forEach(function (sub) {\r\n            var branch = \"\";\r\n            if (typeof sub === \"object\" && typeof sub.branchKey === \"string\") {\r\n                branch = sub.branchKey;\r\n            }\r\n            if (result.indexOf(branch) === -1) {\r\n                result.push(branch);\r\n            }\r\n        });\r\n        return result;\r\n    };\r\n    ServerStreaming.prototype.onSubAdded = function (callback) {\r\n        this.onSubscriptionLifetimeEvent(SUBSCRIPTION_ADDED, callback);\r\n    };\r\n    ServerStreaming.prototype.onSubRequest = function (callback) {\r\n        this.onSubscriptionLifetimeEvent(SUBSCRIPTION_REQUEST, callback);\r\n    };\r\n    ServerStreaming.prototype.onSubRemoved = function (callback) {\r\n        this.onSubscriptionLifetimeEvent(SUBSCRIPTION_REMOVED, callback);\r\n    };\r\n    ServerStreaming.prototype.handleRemoveInterest = function (msg) {\r\n        var streamingMethod = this.serverRepository.getById(msg.method_id);\r\n        if (typeof msg.subscription_id !== \"string\" ||\r\n            typeof streamingMethod !== \"object\") {\r\n            return;\r\n        }\r\n        if (!streamingMethod.protocolState.subscriptionsMap) {\r\n            return;\r\n        }\r\n        if (typeof streamingMethod.protocolState.subscriptionsMap[msg.subscription_id] !== \"object\") {\r\n            return;\r\n        }\r\n        var subscription = streamingMethod.protocolState.subscriptionsMap[msg.subscription_id];\r\n        delete streamingMethod.protocolState.subscriptionsMap[msg.subscription_id];\r\n        this.callbacks.execute(SUBSCRIPTION_REMOVED, subscription, streamingMethod);\r\n    };\r\n    ServerStreaming.prototype.onSubscriptionLifetimeEvent = function (eventName, handlerFunc) {\r\n        this.callbacks.add(eventName, handlerFunc);\r\n    };\r\n    ServerStreaming.prototype.getNextStreamId = function () {\r\n        return this.nextStreamId++ + \"\";\r\n    };\r\n    ServerStreaming.prototype.handleAddInterest = function (msg) {\r\n        var caller = this.repository.getServerById(msg.caller_id);\r\n        var instance = caller.instance;\r\n        var requestContext = {\r\n            msg: msg,\r\n            arguments: msg.arguments_kv || {},\r\n            instance: instance,\r\n        };\r\n        var streamingMethod = this.serverRepository.getById(msg.method_id);\r\n        if (streamingMethod === undefined) {\r\n            var errorMsg = \"No method with id \" + msg.method_id + \" on this server.\";\r\n            this.sendSubscriptionFailed(errorMsg, msg.subscription_id);\r\n            return;\r\n        }\r\n        if (streamingMethod.protocolState.subscriptionsMap &&\r\n            streamingMethod.protocolState.subscriptionsMap[msg.subscription_id]) {\r\n            this.sendSubscriptionFailed(\"A subscription with id \" + msg.subscription_id + \" already exists.\", msg.subscription_id);\r\n            return;\r\n        }\r\n        this.callbacks.execute(SUBSCRIPTION_REQUEST, requestContext, streamingMethod);\r\n    };\r\n    ServerStreaming.prototype.sendSubscriptionFailed = function (reason, subscriptionId) {\r\n        var errorMessage = {\r\n            type: \"error\",\r\n            reason_uri: this.ERR_URI_SUBSCRIPTION_FAILED,\r\n            reason: reason,\r\n            request_id: subscriptionId,\r\n        };\r\n        this.session.sendFireAndForget(errorMessage);\r\n    };\r\n    ServerStreaming.prototype.getStreamId = function (streamingMethod, branchKey) {\r\n        if (typeof branchKey !== \"string\") {\r\n            branchKey = \"\";\r\n        }\r\n        if (!streamingMethod.protocolState.branchKeyToStreamIdMap) {\r\n            throw new Error(\"streaming \" + streamingMethod.definition.name + \" method without protocol state\");\r\n        }\r\n        var needleBranch = streamingMethod.protocolState.branchKeyToStreamIdMap.filter(function (branch) {\r\n            return branch.key === branchKey;\r\n        })[0];\r\n        var streamId = (needleBranch ? needleBranch.streamId : undefined);\r\n        if (typeof streamId !== \"string\" || streamId === \"\") {\r\n            streamId = this.getNextStreamId();\r\n            streamingMethod.protocolState.branchKeyToStreamIdMap.push({ key: branchKey, streamId: streamId });\r\n        }\r\n        return streamId;\r\n    };\r\n    return ServerStreaming;\r\n}());\n\nvar ServerProtocol = (function () {\r\n    function ServerProtocol(session, clientRepository, serverRepository, logger) {\r\n        var _this = this;\r\n        this.session = session;\r\n        this.clientRepository = clientRepository;\r\n        this.serverRepository = serverRepository;\r\n        this.logger = logger;\r\n        this.callbacks = lib();\r\n        this.streaming = new ServerStreaming$1(session, clientRepository, serverRepository);\r\n        this.session.on(\"invoke\", function (msg) { return _this.handleInvokeMessage(msg); });\r\n    }\r\n    ServerProtocol.prototype.createStream = function (repoMethod) {\r\n        repoMethod.protocolState.subscriptionsMap = {};\r\n        repoMethod.protocolState.branchKeyToStreamIdMap = [];\r\n        return this.register(repoMethod, true);\r\n    };\r\n    ServerProtocol.prototype.register = function (repoMethod, isStreaming) {\r\n        var _this = this;\r\n        var methodDef = repoMethod.definition;\r\n        var flags = { streaming: isStreaming || false };\r\n        var registerMsg = {\r\n            type: \"register\",\r\n            methods: [{\r\n                    id: repoMethod.repoId,\r\n                    name: methodDef.name,\r\n                    display_name: methodDef.displayName,\r\n                    description: methodDef.description,\r\n                    version: methodDef.version,\r\n                    flags: flags,\r\n                    object_types: methodDef.objectTypes || methodDef.object_types,\r\n                    input_signature: methodDef.accepts,\r\n                    result_signature: methodDef.returns,\r\n                    restrictions: undefined,\r\n                }],\r\n        };\r\n        return this.session.send(registerMsg, { methodId: repoMethod.repoId })\r\n            .then(function () {\r\n            _this.logger.debug(\"registered method \" + repoMethod.definition.name + \" with id \" + repoMethod.repoId);\r\n        })\r\n            .catch(function (msg) {\r\n            _this.logger.warn(\"failed to register method \" + repoMethod.definition.name + \" with id \" + repoMethod.repoId + \" - \" + JSON.stringify(msg));\r\n            throw msg;\r\n        });\r\n    };\r\n    ServerProtocol.prototype.onInvoked = function (callback) {\r\n        this.callbacks.add(\"onInvoked\", callback);\r\n    };\r\n    ServerProtocol.prototype.methodInvocationResult = function (method, invocationId, err, result) {\r\n        var msg;\r\n        if (err || err === \"\") {\r\n            msg = {\r\n                type: \"error\",\r\n                request_id: invocationId,\r\n                reason_uri: \"agm.errors.client_error\",\r\n                reason: err,\r\n                context: result,\r\n                peer_id: undefined,\r\n            };\r\n        }\r\n        else {\r\n            msg = {\r\n                type: \"yield\",\r\n                invocation_id: invocationId,\r\n                peer_id: this.session.peerId,\r\n                result: result,\r\n                request_id: undefined,\r\n            };\r\n        }\r\n        this.session.sendFireAndForget(msg);\r\n    };\r\n    ServerProtocol.prototype.unregister = function (method) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var msg;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        msg = {\r\n                            type: \"unregister\",\r\n                            methods: [method.repoId],\r\n                        };\r\n                        return [4, this.session.send(msg)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ServerProtocol.prototype.getBranchList = function (method) {\r\n        return this.streaming.getBranchList(method);\r\n    };\r\n    ServerProtocol.prototype.getSubscriptionList = function (method, branchKey) {\r\n        return this.streaming.getSubscriptionList(method, branchKey);\r\n    };\r\n    ServerProtocol.prototype.closeAllSubscriptions = function (method, branchKey) {\r\n        this.streaming.closeMultipleSubscriptions(method, branchKey);\r\n    };\r\n    ServerProtocol.prototype.pushData = function (method, data, branches) {\r\n        this.streaming.pushData(method, data, branches);\r\n    };\r\n    ServerProtocol.prototype.pushDataToSingle = function (method, subscription, data) {\r\n        this.streaming.pushDataToSingle(method, subscription, data);\r\n    };\r\n    ServerProtocol.prototype.closeSingleSubscription = function (method, subscription) {\r\n        this.streaming.closeSingleSubscription(method, subscription);\r\n    };\r\n    ServerProtocol.prototype.acceptRequestOnBranch = function (requestContext, method, branch) {\r\n        this.streaming.acceptRequestOnBranch(requestContext, method, branch);\r\n    };\r\n    ServerProtocol.prototype.rejectRequest = function (requestContext, method, reason) {\r\n        this.streaming.rejectRequest(requestContext, method, reason);\r\n    };\r\n    ServerProtocol.prototype.onSubRequest = function (callback) {\r\n        this.streaming.onSubRequest(callback);\r\n    };\r\n    ServerProtocol.prototype.onSubAdded = function (callback) {\r\n        this.streaming.onSubAdded(callback);\r\n    };\r\n    ServerProtocol.prototype.onSubRemoved = function (callback) {\r\n        this.streaming.onSubRemoved(callback);\r\n    };\r\n    ServerProtocol.prototype.handleInvokeMessage = function (msg) {\r\n        var invocationId = msg.invocation_id;\r\n        var callerId = msg.caller_id;\r\n        var methodId = msg.method_id;\r\n        var args = msg.arguments_kv;\r\n        var methodList = this.serverRepository.getList();\r\n        var method = methodList.filter(function (m) {\r\n            return m.repoId === methodId;\r\n        })[0];\r\n        if (method === undefined) {\r\n            return;\r\n        }\r\n        var client = this.clientRepository.getServerById(callerId).instance;\r\n        var invocationArgs = { args: args, instance: client };\r\n        this.callbacks.execute(\"onInvoked\", method, invocationId, invocationArgs);\r\n    };\r\n    return ServerProtocol;\r\n}());\n\nvar UserSubscription = (function () {\r\n    function UserSubscription(repository, subscriptionData) {\r\n        this.repository = repository;\r\n        this.subscriptionData = subscriptionData;\r\n    }\r\n    Object.defineProperty(UserSubscription.prototype, \"requestArguments\", {\r\n        get: function () {\r\n            return this.subscriptionData.params.arguments || {};\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserSubscription.prototype, \"servers\", {\r\n        get: function () {\r\n            var _this = this;\r\n            return this.subscriptionData.trackedServers\r\n                .filter(function (pair) { return pair.subscriptionId; })\r\n                .map(function (pair) { return _this.repository.getServerById(pair.serverId).instance; });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserSubscription.prototype, \"serverInstance\", {\r\n        get: function () {\r\n            return this.servers[0];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserSubscription.prototype, \"stream\", {\r\n        get: function () {\r\n            return this.subscriptionData.method;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    UserSubscription.prototype.onData = function (dataCallback) {\r\n        if (typeof dataCallback !== \"function\") {\r\n            throw new TypeError(\"The data callback must be a function.\");\r\n        }\r\n        this.subscriptionData.handlers.onData.push(dataCallback);\r\n        if (this.subscriptionData.handlers.onData.length === 1 && this.subscriptionData.queued.data.length > 0) {\r\n            this.subscriptionData.queued.data.forEach(function (dataItem) {\r\n                dataCallback(dataItem);\r\n            });\r\n        }\r\n    };\r\n    UserSubscription.prototype.onClosed = function (closedCallback) {\r\n        if (typeof closedCallback !== \"function\") {\r\n            throw new TypeError(\"The callback must be a function.\");\r\n        }\r\n        this.subscriptionData.handlers.onClosed.push(closedCallback);\r\n    };\r\n    UserSubscription.prototype.onFailed = function (callback) {\r\n    };\r\n    UserSubscription.prototype.onConnected = function (callback) {\r\n        if (typeof callback !== \"function\") {\r\n            throw new TypeError(\"The callback must be a function.\");\r\n        }\r\n        this.subscriptionData.handlers.onConnected.push(callback);\r\n    };\r\n    UserSubscription.prototype.close = function () {\r\n        this.subscriptionData.close();\r\n    };\r\n    UserSubscription.prototype.setNewSubscription = function (newSub) {\r\n        this.subscriptionData = newSub;\r\n    };\r\n    return UserSubscription;\r\n}());\n\nvar STATUS_AWAITING_ACCEPT = \"awaitingAccept\";\r\nvar STATUS_SUBSCRIBED = \"subscribed\";\r\nvar ERR_MSG_SUB_FAILED = \"Subscription failed.\";\r\nvar ERR_MSG_SUB_REJECTED = \"Subscription rejected.\";\r\nvar ON_CLOSE_MSG_SERVER_INIT = \"ServerInitiated\";\r\nvar ON_CLOSE_MSG_CLIENT_INIT = \"ClientInitiated\";\r\nvar ClientStreaming = (function () {\r\n    function ClientStreaming(session, repository, logger) {\r\n        var _this = this;\r\n        this.session = session;\r\n        this.repository = repository;\r\n        this.logger = logger;\r\n        this.subscriptionsList = {};\r\n        this.subscriptionIdToLocalKeyMap = {};\r\n        this.nextSubLocalKey = 0;\r\n        this.handleErrorSubscribing = function (errorResponse) {\r\n            var tag = errorResponse._tag;\r\n            var subLocalKey = tag.subLocalKey;\r\n            var pendingSub = _this.subscriptionsList[subLocalKey];\r\n            if (typeof pendingSub !== \"object\") {\r\n                return;\r\n            }\r\n            pendingSub.trackedServers = pendingSub.trackedServers.filter(function (server) {\r\n                return server.serverId !== tag.serverId;\r\n            });\r\n            if (pendingSub.trackedServers.length <= 0) {\r\n                clearTimeout(pendingSub.timeoutId);\r\n                if (pendingSub.status === STATUS_AWAITING_ACCEPT) {\r\n                    var reason = (typeof errorResponse.reason === \"string\" && errorResponse.reason !== \"\") ?\r\n                        ' Publisher said \"' + errorResponse.reason + '\".' :\r\n                        \" No reason given.\";\r\n                    var callArgs = typeof pendingSub.params.arguments === \"object\" ?\r\n                        JSON.stringify(pendingSub.params.arguments) :\r\n                        \"{}\";\r\n                    pendingSub.error({\r\n                        message: ERR_MSG_SUB_REJECTED + reason + \" Called with:\" + callArgs,\r\n                        called_with: pendingSub.params.arguments,\r\n                        method: pendingSub.method,\r\n                    });\r\n                }\r\n                else if (pendingSub.status === STATUS_SUBSCRIBED) {\r\n                    _this.callOnClosedHandlers(pendingSub);\r\n                }\r\n                delete _this.subscriptionsList[subLocalKey];\r\n            }\r\n        };\r\n        this.handleSubscribed = function (msg) {\r\n            var subLocalKey = msg._tag.subLocalKey;\r\n            var pendingSub = _this.subscriptionsList[subLocalKey];\r\n            if (typeof pendingSub !== \"object\") {\r\n                return;\r\n            }\r\n            var serverId = msg._tag.serverId;\r\n            var acceptingServer = pendingSub.trackedServers\r\n                .filter(function (server) {\r\n                return server.serverId === serverId;\r\n            })[0];\r\n            if (typeof acceptingServer !== \"object\") {\r\n                return;\r\n            }\r\n            acceptingServer.subscriptionId = msg.subscription_id;\r\n            _this.subscriptionIdToLocalKeyMap[msg.subscription_id] = subLocalKey;\r\n            var isFirstResponse = (pendingSub.status === STATUS_AWAITING_ACCEPT);\r\n            pendingSub.status = STATUS_SUBSCRIBED;\r\n            if (isFirstResponse) {\r\n                var reconnect = false;\r\n                var sub = pendingSub.subscription;\r\n                if (sub) {\r\n                    sub.setNewSubscription(pendingSub);\r\n                    pendingSub.success(sub);\r\n                    reconnect = true;\r\n                }\r\n                else {\r\n                    sub = new UserSubscription(_this.repository, pendingSub);\r\n                    pendingSub.subscription = sub;\r\n                    pendingSub.success(sub);\r\n                }\r\n                for (var _i = 0, _a = pendingSub.handlers.onConnected; _i < _a.length; _i++) {\r\n                    var handler = _a[_i];\r\n                    try {\r\n                        handler(sub.serverInstance, reconnect);\r\n                    }\r\n                    catch (e) {\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        this.handleEventData = function (msg) {\r\n            var subLocalKey = _this.subscriptionIdToLocalKeyMap[msg.subscription_id];\r\n            if (typeof subLocalKey === \"undefined\") {\r\n                return;\r\n            }\r\n            var subscription = _this.subscriptionsList[subLocalKey];\r\n            if (typeof subscription !== \"object\") {\r\n                return;\r\n            }\r\n            var trackedServersFound = subscription.trackedServers.filter(function (server) {\r\n                return server.subscriptionId === msg.subscription_id;\r\n            });\r\n            if (trackedServersFound.length !== 1) {\r\n                return;\r\n            }\r\n            var isPrivateData = msg.oob;\r\n            var sendingServerId = trackedServersFound[0].serverId;\r\n            var receivedStreamData = function () {\r\n                return {\r\n                    data: msg.data,\r\n                    server: _this.repository.getServerById(sendingServerId).instance,\r\n                    requestArguments: subscription.params.arguments,\r\n                    message: undefined,\r\n                    private: isPrivateData,\r\n                };\r\n            };\r\n            var onDataHandlers = subscription.handlers.onData;\r\n            var queuedData = subscription.queued.data;\r\n            if (onDataHandlers.length > 0) {\r\n                onDataHandlers.forEach(function (callback) {\r\n                    if (typeof callback === \"function\") {\r\n                        callback(receivedStreamData());\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                queuedData.push(receivedStreamData());\r\n            }\r\n        };\r\n        this.handleSubscriptionCancelled = function (msg) {\r\n            var subLocalKey = _this.subscriptionIdToLocalKeyMap[msg.subscription_id];\r\n            if (typeof subLocalKey === \"undefined\") {\r\n                return;\r\n            }\r\n            var subscription = _this.subscriptionsList[subLocalKey];\r\n            if (typeof subscription !== \"object\") {\r\n                return;\r\n            }\r\n            var expectedNewLength = subscription.trackedServers.length - 1;\r\n            subscription.trackedServers = subscription.trackedServers.filter(function (server) {\r\n                if (server.subscriptionId === msg.subscription_id) {\r\n                    subscription.queued.closers.push(server.serverId);\r\n                    return false;\r\n                }\r\n                else {\r\n                    return true;\r\n                }\r\n            });\r\n            if (subscription.trackedServers.length !== expectedNewLength) {\r\n                return;\r\n            }\r\n            if (subscription.trackedServers.length <= 0) {\r\n                clearTimeout(subscription.timeoutId);\r\n                _this.callOnClosedHandlers(subscription);\r\n                delete _this.subscriptionsList[subLocalKey];\r\n            }\r\n            delete _this.subscriptionIdToLocalKeyMap[msg.subscription_id];\r\n        };\r\n        session.on(\"subscribed\", this.handleSubscribed);\r\n        session.on(\"event\", this.handleEventData);\r\n        session.on(\"subscription-cancelled\", this.handleSubscriptionCancelled);\r\n    }\r\n    ClientStreaming.prototype.subscribe = function (streamingMethod, params, targetServers, success, error, existingSub) {\r\n        var _this = this;\r\n        if (targetServers.length === 0) {\r\n            error({\r\n                method: streamingMethod,\r\n                called_with: params.arguments,\r\n                message: ERR_MSG_SUB_FAILED + \" No available servers matched the target params.\",\r\n            });\r\n            return;\r\n        }\r\n        var subLocalKey = this.getNextSubscriptionLocalKey();\r\n        var pendingSub = this.registerSubscription(subLocalKey, streamingMethod, params, success, error, params.methodResponseTimeout || 10000, existingSub);\r\n        if (typeof pendingSub !== \"object\") {\r\n            error({\r\n                method: streamingMethod,\r\n                called_with: params.arguments,\r\n                message: ERR_MSG_SUB_FAILED + \" Unable to register the user callbacks.\",\r\n            });\r\n            return;\r\n        }\r\n        targetServers.forEach(function (target) {\r\n            var serverId = target.server.id;\r\n            var method = target.methods.find(function (m) { return m.name === streamingMethod.name; });\r\n            if (!method) {\r\n                _this.logger.error(\"can not find method \" + streamingMethod.name + \" for target \" + target.server.id);\r\n                return;\r\n            }\r\n            pendingSub.trackedServers.push({\r\n                serverId: serverId,\r\n                subscriptionId: undefined,\r\n            });\r\n            var msg = {\r\n                type: \"subscribe\",\r\n                server_id: serverId,\r\n                method_id: method.gatewayId,\r\n                arguments_kv: params.arguments,\r\n            };\r\n            _this.session.send(msg, { serverId: serverId, subLocalKey: subLocalKey })\r\n                .then(function (m) { return _this.handleSubscribed(m); })\r\n                .catch(function (err) { return _this.handleErrorSubscribing(err); });\r\n        });\r\n    };\r\n    ClientStreaming.prototype.drainSubscriptions = function () {\r\n        var existing = Object.values(this.subscriptionsList);\r\n        this.subscriptionsList = {};\r\n        this.subscriptionIdToLocalKeyMap = {};\r\n        return existing;\r\n    };\r\n    ClientStreaming.prototype.getNextSubscriptionLocalKey = function () {\r\n        var current = this.nextSubLocalKey;\r\n        this.nextSubLocalKey += 1;\r\n        return current;\r\n    };\r\n    ClientStreaming.prototype.registerSubscription = function (subLocalKey, method, params, success, error, timeout, existingSub) {\r\n        var _this = this;\r\n        var subsInfo = {\r\n            localKey: subLocalKey,\r\n            status: STATUS_AWAITING_ACCEPT,\r\n            method: method,\r\n            params: params,\r\n            success: success,\r\n            error: error,\r\n            trackedServers: [],\r\n            handlers: {\r\n                onData: (existingSub === null || existingSub === void 0 ? void 0 : existingSub.handlers.onData) || [],\r\n                onClosed: (existingSub === null || existingSub === void 0 ? void 0 : existingSub.handlers.onClosed) || [],\r\n                onConnected: (existingSub === null || existingSub === void 0 ? void 0 : existingSub.handlers.onConnected) || [],\r\n            },\r\n            queued: {\r\n                data: [],\r\n                closers: [],\r\n            },\r\n            timeoutId: undefined,\r\n            close: function () { return _this.closeSubscription(subLocalKey); },\r\n            subscription: existingSub === null || existingSub === void 0 ? void 0 : existingSub.subscription\r\n        };\r\n        if (!existingSub) {\r\n            if (params.onData) {\r\n                subsInfo.handlers.onData.push(params.onData);\r\n            }\r\n            if (params.onClosed) {\r\n                subsInfo.handlers.onClosed.push(params.onClosed);\r\n            }\r\n            if (params.onConnected) {\r\n                subsInfo.handlers.onConnected.push(params.onConnected);\r\n            }\r\n        }\r\n        this.subscriptionsList[subLocalKey] = subsInfo;\r\n        subsInfo.timeoutId = setTimeout(function () {\r\n            if (_this.subscriptionsList[subLocalKey] === undefined) {\r\n                return;\r\n            }\r\n            var pendingSub = _this.subscriptionsList[subLocalKey];\r\n            if (pendingSub.status === STATUS_AWAITING_ACCEPT) {\r\n                error({\r\n                    method: method,\r\n                    called_with: params.arguments,\r\n                    message: ERR_MSG_SUB_FAILED + \" Subscription attempt timed out after \" + timeout + \" ms.\",\r\n                });\r\n                delete _this.subscriptionsList[subLocalKey];\r\n            }\r\n            else if (pendingSub.status === STATUS_SUBSCRIBED && pendingSub.trackedServers.length > 0) {\r\n                pendingSub.trackedServers = pendingSub.trackedServers.filter(function (server) {\r\n                    return (typeof server.subscriptionId !== \"undefined\");\r\n                });\r\n                delete pendingSub.timeoutId;\r\n                if (pendingSub.trackedServers.length <= 0) {\r\n                    _this.callOnClosedHandlers(pendingSub);\r\n                    delete _this.subscriptionsList[subLocalKey];\r\n                }\r\n            }\r\n        }, timeout);\r\n        return subsInfo;\r\n    };\r\n    ClientStreaming.prototype.callOnClosedHandlers = function (subscription, reason) {\r\n        var closersCount = subscription.queued.closers.length;\r\n        var closingServerId = (closersCount > 0) ? subscription.queued.closers[closersCount - 1] : null;\r\n        var closingServer;\r\n        if (closingServerId !== undefined && typeof closingServerId === \"string\") {\r\n            closingServer = this.repository.getServerById(closingServerId).instance;\r\n        }\r\n        subscription.handlers.onClosed.forEach(function (callback) {\r\n            if (typeof callback !== \"function\") {\r\n                return;\r\n            }\r\n            callback({\r\n                message: reason || ON_CLOSE_MSG_SERVER_INIT,\r\n                requestArguments: subscription.params.arguments || {},\r\n                server: closingServer,\r\n                stream: subscription.method,\r\n            });\r\n        });\r\n    };\r\n    ClientStreaming.prototype.closeSubscription = function (subLocalKey) {\r\n        var _this = this;\r\n        var subscription = this.subscriptionsList[subLocalKey];\r\n        if (typeof subscription !== \"object\") {\r\n            return;\r\n        }\r\n        subscription.trackedServers.forEach(function (server) {\r\n            if (typeof server.subscriptionId === \"undefined\") {\r\n                return;\r\n            }\r\n            subscription.queued.closers.push(server.serverId);\r\n            _this.session.sendFireAndForget({\r\n                type: \"unsubscribe\",\r\n                subscription_id: server.subscriptionId,\r\n                reason_uri: \"\",\r\n                reason: ON_CLOSE_MSG_CLIENT_INIT,\r\n            });\r\n            delete _this.subscriptionIdToLocalKeyMap[server.subscriptionId];\r\n        });\r\n        subscription.trackedServers = [];\r\n        this.callOnClosedHandlers(subscription, ON_CLOSE_MSG_CLIENT_INIT);\r\n        delete this.subscriptionsList[subLocalKey];\r\n    };\r\n    return ClientStreaming;\r\n}());\n\nvar ClientProtocol = (function () {\r\n    function ClientProtocol(session, repository, logger) {\r\n        var _this = this;\r\n        this.session = session;\r\n        this.repository = repository;\r\n        this.logger = logger;\r\n        session.on(\"peer-added\", function (msg) { return _this.handlePeerAdded(msg); });\r\n        session.on(\"peer-removed\", function (msg) { return _this.handlePeerRemoved(msg); });\r\n        session.on(\"methods-added\", function (msg) { return _this.handleMethodsAddedMessage(msg); });\r\n        session.on(\"methods-removed\", function (msg) { return _this.handleMethodsRemovedMessage(msg); });\r\n        this.streaming = new ClientStreaming(session, repository, logger);\r\n    }\r\n    ClientProtocol.prototype.subscribe = function (stream, options, targetServers, success, error, existingSub) {\r\n        this.streaming.subscribe(stream, options, targetServers, success, error, existingSub);\r\n    };\r\n    ClientProtocol.prototype.invoke = function (id, method, args, target) {\r\n        var _this = this;\r\n        var serverId = target.id;\r\n        var methodId = method.gatewayId;\r\n        var msg = {\r\n            type: \"call\",\r\n            server_id: serverId,\r\n            method_id: methodId,\r\n            arguments_kv: args,\r\n        };\r\n        return this.session.send(msg, { invocationId: id, serverId: serverId })\r\n            .then(function (m) { return _this.handleResultMessage(m); })\r\n            .catch(function (err) { return _this.handleInvocationError(err); });\r\n    };\r\n    ClientProtocol.prototype.drainSubscriptions = function () {\r\n        return this.streaming.drainSubscriptions();\r\n    };\r\n    ClientProtocol.prototype.handlePeerAdded = function (msg) {\r\n        var newPeerId = msg.new_peer_id;\r\n        var remoteId = msg.identity;\r\n        var isLocal = msg.meta ? msg.meta.local : true;\r\n        var pid = Number(remoteId.process);\r\n        var serverInfo = {\r\n            machine: remoteId.machine,\r\n            pid: isNaN(pid) ? remoteId.process : pid,\r\n            instance: remoteId.instance,\r\n            application: remoteId.application,\r\n            applicationName: remoteId.applicationName,\r\n            environment: remoteId.environment,\r\n            region: remoteId.region,\r\n            user: remoteId.user,\r\n            windowId: remoteId.windowId,\r\n            peerId: newPeerId,\r\n            api: remoteId.api,\r\n            isLocal: isLocal\r\n        };\r\n        this.repository.addServer(serverInfo, newPeerId);\r\n    };\r\n    ClientProtocol.prototype.handlePeerRemoved = function (msg) {\r\n        var removedPeerId = msg.removed_id;\r\n        var reason = msg.reason;\r\n        this.repository.removeServerById(removedPeerId, reason);\r\n    };\r\n    ClientProtocol.prototype.handleMethodsAddedMessage = function (msg) {\r\n        var _this = this;\r\n        var serverId = msg.server_id;\r\n        var methods = msg.methods;\r\n        methods.forEach(function (method) {\r\n            _this.repository.addServerMethod(serverId, method);\r\n        });\r\n    };\r\n    ClientProtocol.prototype.handleMethodsRemovedMessage = function (msg) {\r\n        var _this = this;\r\n        var serverId = msg.server_id;\r\n        var methodIdList = msg.methods;\r\n        var server = this.repository.getServerById(serverId);\r\n        var serverMethodKeys = Object.keys(server.methods);\r\n        serverMethodKeys.forEach(function (methodKey) {\r\n            var method = server.methods[methodKey];\r\n            if (methodIdList.indexOf(method.gatewayId) > -1) {\r\n                _this.repository.removeServerMethod(serverId, methodKey);\r\n            }\r\n        });\r\n    };\r\n    ClientProtocol.prototype.handleResultMessage = function (msg) {\r\n        var invocationId = msg._tag.invocationId;\r\n        var result = msg.result;\r\n        var serverId = msg._tag.serverId;\r\n        var server = this.repository.getServerById(serverId);\r\n        return {\r\n            invocationId: invocationId,\r\n            result: result,\r\n            instance: server.instance,\r\n            status: InvokeStatus.Success,\r\n            message: \"\"\r\n        };\r\n    };\r\n    ClientProtocol.prototype.handleInvocationError = function (msg) {\r\n        this.logger.debug(\"handle invocation error \" + JSON.stringify(msg));\r\n        if (\"_tag\" in msg) {\r\n            var invocationId = msg._tag.invocationId;\r\n            var serverId = msg._tag.serverId;\r\n            var server = this.repository.getServerById(serverId);\r\n            var message = msg.reason;\r\n            var context_1 = msg.context;\r\n            return {\r\n                invocationId: invocationId,\r\n                result: context_1,\r\n                instance: server.instance,\r\n                status: InvokeStatus.Error,\r\n                message: message\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                invocationId: \"\",\r\n                message: msg.message,\r\n                status: InvokeStatus.Error,\r\n                error: msg\r\n            };\r\n        }\r\n    };\r\n    return ClientProtocol;\r\n}());\n\nfunction gW3ProtocolFactory (instance, connection, clientRepository, serverRepository, libConfig, interop) {\r\n    var logger = libConfig.logger.subLogger(\"gw3-protocol\");\r\n    var resolveReadyPromise;\r\n    var readyPromise = new Promise(function (resolve) {\r\n        resolveReadyPromise = resolve;\r\n    });\r\n    var session = connection.domain(\"agm\", [\"subscribed\"]);\r\n    var server = new ServerProtocol(session, clientRepository, serverRepository, logger.subLogger(\"server\"));\r\n    var client = new ClientProtocol(session, clientRepository, logger.subLogger(\"client\"));\r\n    function handleReconnect() {\r\n        logger.info(\"reconnected - will replay registered methods and subscriptions\");\r\n        var existingSubscriptions = client.drainSubscriptions();\r\n        for (var _i = 0, existingSubscriptions_1 = existingSubscriptions; _i < existingSubscriptions_1.length; _i++) {\r\n            var sub = existingSubscriptions_1[_i];\r\n            var methodInfo = sub.method;\r\n            var params = Object.assign({}, sub.params);\r\n            logger.info(\"trying to re-subscribe to method \" + methodInfo.name);\r\n            interop.client.subscribe(methodInfo, params, undefined, undefined, sub);\r\n        }\r\n        var registeredMethods = serverRepository.getList();\r\n        serverRepository.reset();\r\n        for (var _a = 0, registeredMethods_1 = registeredMethods; _a < registeredMethods_1.length; _a++) {\r\n            var method = registeredMethods_1[_a];\r\n            var def = method.definition;\r\n            logger.info(\"re-publishing method \" + def.name);\r\n            if (method.stream) {\r\n                interop.server.createStream(def, method.streamCallbacks, undefined, undefined, method.stream);\r\n            }\r\n            else if (method.theFunction && method.theFunction.userCallback) {\r\n                interop.register(def, method.theFunction.userCallback);\r\n            }\r\n            else if (method.theFunction && method.theFunction.userCallbackAsync) {\r\n                interop.registerAsync(def, method.theFunction.userCallbackAsync);\r\n            }\r\n        }\r\n    }\r\n    function handleInitialJoin() {\r\n        if (resolveReadyPromise) {\r\n            resolveReadyPromise({\r\n                client: client,\r\n                server: server,\r\n            });\r\n            resolveReadyPromise = undefined;\r\n        }\r\n    }\r\n    session.onJoined(function (reconnect) {\r\n        clientRepository.addServer(instance, connection.peerId);\r\n        if (reconnect) {\r\n            handleReconnect();\r\n        }\r\n        else {\r\n            handleInitialJoin();\r\n        }\r\n    });\r\n    session.onLeft(function () {\r\n        clientRepository.reset();\r\n    });\r\n    session.join();\r\n    return readyPromise;\r\n}\n\nvar Interop = (function () {\r\n    function Interop(configuration) {\r\n        var _this = this;\r\n        if (typeof configuration === \"undefined\") {\r\n            throw new Error(\"configuration is required\");\r\n        }\r\n        if (typeof configuration.connection === \"undefined\") {\r\n            throw new Error(\"configuration.connections is required\");\r\n        }\r\n        var connection = configuration.connection;\r\n        if (typeof configuration.methodResponseTimeout !== \"number\") {\r\n            configuration.methodResponseTimeout = 30 * 1000;\r\n        }\r\n        if (typeof configuration.waitTimeoutMs !== \"number\") {\r\n            configuration.waitTimeoutMs = 30 * 1000;\r\n        }\r\n        InstanceWrapper.API = this;\r\n        this.instance = new InstanceWrapper(undefined, connection).unwrap();\r\n        this.clientRepository = new ClientRepository(configuration.logger.subLogger(\"cRep\"));\r\n        this.serverRepository = new ServerRepository();\r\n        var protocolPromise;\r\n        if (connection.protocolVersion === 3) {\r\n            protocolPromise = gW3ProtocolFactory(this.instance, connection, this.clientRepository, this.serverRepository, configuration, this);\r\n        }\r\n        else {\r\n            throw new Error(\"protocol \" + connection.protocolVersion + \" not supported\");\r\n        }\r\n        this.readyPromise = protocolPromise.then(function (protocol) {\r\n            _this.protocol = protocol;\r\n            _this.client = new Client(_this.protocol, _this.clientRepository, _this.instance, configuration);\r\n            _this.server = new Server(_this.protocol, _this.serverRepository);\r\n            return _this;\r\n        });\r\n    }\r\n    Interop.prototype.ready = function () {\r\n        return this.readyPromise;\r\n    };\r\n    Interop.prototype.serverRemoved = function (callback) {\r\n        return this.client.serverRemoved(callback);\r\n    };\r\n    Interop.prototype.serverAdded = function (callback) {\r\n        return this.client.serverAdded(callback);\r\n    };\r\n    Interop.prototype.serverMethodRemoved = function (callback) {\r\n        return this.client.serverMethodRemoved(callback);\r\n    };\r\n    Interop.prototype.serverMethodAdded = function (callback) {\r\n        return this.client.serverMethodAdded(callback);\r\n    };\r\n    Interop.prototype.methodRemoved = function (callback) {\r\n        return this.client.methodRemoved(callback);\r\n    };\r\n    Interop.prototype.methodAdded = function (callback) {\r\n        return this.client.methodAdded(callback);\r\n    };\r\n    Interop.prototype.methodsForInstance = function (instance) {\r\n        return this.client.methodsForInstance(instance);\r\n    };\r\n    Interop.prototype.methods = function (methodFilter) {\r\n        return this.client.methods(methodFilter);\r\n    };\r\n    Interop.prototype.servers = function (methodFilter) {\r\n        return this.client.servers(methodFilter);\r\n    };\r\n    Interop.prototype.subscribe = function (method, options, successCallback, errorCallback) {\r\n        return this.client.subscribe(method, options, successCallback, errorCallback);\r\n    };\r\n    Interop.prototype.createStream = function (streamDef, callbacks, successCallback, errorCallback) {\r\n        return this.server.createStream(streamDef, callbacks, successCallback, errorCallback);\r\n    };\r\n    Interop.prototype.unregister = function (methodFilter) {\r\n        return this.server.unregister(methodFilter);\r\n    };\r\n    Interop.prototype.registerAsync = function (methodDefinition, callback) {\r\n        return this.server.registerAsync(methodDefinition, callback);\r\n    };\r\n    Interop.prototype.register = function (methodDefinition, callback) {\r\n        return this.server.register(methodDefinition, callback);\r\n    };\r\n    Interop.prototype.invoke = function (methodFilter, argumentObj, target, additionalOptions, success, error) {\r\n        return this.client.invoke(methodFilter, argumentObj, target, additionalOptions, success, error);\r\n    };\r\n    return Interop;\r\n}());\n\nvar successMessages = [\"subscribed\", \"success\"];\r\nvar MessageBus = (function () {\r\n    function MessageBus(connection, logger) {\r\n        var _this = this;\r\n        this.publish = function (topic, data, options) {\r\n            var _a = options || {}, routingKey = _a.routingKey, target = _a.target;\r\n            var args = _this.removeEmptyValues({\r\n                type: \"publish\",\r\n                topic: topic,\r\n                data: data,\r\n                peer_id: _this.peerId,\r\n                routing_key: routingKey,\r\n                target_identity: target\r\n            });\r\n            _this.session.send(args);\r\n        };\r\n        this.subscribe = function (topic, callback, options) {\r\n            return new Promise(function (resolve, reject) {\r\n                var _a = options || {}, routingKey = _a.routingKey, target = _a.target;\r\n                var args = _this.removeEmptyValues({\r\n                    type: \"subscribe\",\r\n                    topic: topic,\r\n                    peer_id: _this.peerId,\r\n                    routing_key: routingKey,\r\n                    source: target\r\n                });\r\n                _this.session.send(args)\r\n                    .then(function (response) {\r\n                    var subscription_id = response.subscription_id;\r\n                    _this.subscriptions.push({ subscription_id: subscription_id, topic: topic, callback: callback, source: target });\r\n                    resolve({\r\n                        unsubscribe: function () {\r\n                            _this.session.send({ type: \"unsubscribe\", subscription_id: subscription_id, peer_id: _this.peerId });\r\n                            _this.subscriptions = _this.subscriptions.filter(function (s) { return s.subscription_id !== subscription_id; });\r\n                            return Promise.resolve();\r\n                        }\r\n                    });\r\n                })\r\n                    .catch(function (error) { return reject(error); });\r\n            });\r\n        };\r\n        this.watchOnEvent = function () {\r\n            _this.session.on(\"event\", function (args) {\r\n                var data = args.data, subscription_id = args.subscription_id;\r\n                var source = args[\"publisher-identity\"];\r\n                var subscription = _this.subscriptions.find(function (s) { return s.subscription_id === subscription_id; });\r\n                if (subscription) {\r\n                    if (!subscription.source) {\r\n                        subscription.callback(data, subscription.topic, source);\r\n                    }\r\n                    else {\r\n                        if (_this.keysMatch(subscription.source, source)) {\r\n                            subscription.callback(data, subscription.topic, source);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        this.connection = connection;\r\n        this.logger = logger;\r\n        this.peerId = connection.peerId;\r\n        this.subscriptions = [];\r\n        this.session = connection.domain(\"bus\", successMessages);\r\n        this.readyPromise = this.session.join();\r\n        this.readyPromise.then(function () {\r\n            _this.watchOnEvent();\r\n        });\r\n    }\r\n    MessageBus.prototype.ready = function () {\r\n        return this.readyPromise;\r\n    };\r\n    MessageBus.prototype.removeEmptyValues = function (obj) {\r\n        var cleaned = {};\r\n        Object.keys(obj).forEach(function (key) {\r\n            if (obj[key] !== undefined && obj[key] !== null) {\r\n                cleaned[key] = obj[key];\r\n            }\r\n        });\r\n        return cleaned;\r\n    };\r\n    MessageBus.prototype.keysMatch = function (obj1, obj2) {\r\n        var keysObj1 = Object.keys(obj1);\r\n        var allMatch = true;\r\n        keysObj1.forEach(function (key) {\r\n            if (obj1[key] !== obj2[key]) {\r\n                allMatch = false;\r\n            }\r\n        });\r\n        return allMatch;\r\n    };\r\n    return MessageBus;\r\n}());\n\nvar GlueCore = function (userConfig, ext) {\r\n    var gdVersion = Utils.getGDMajorVersion();\r\n    var glue42gd;\r\n    var preloadPromise = Promise.resolve();\r\n    if (gdVersion) {\r\n        if (gdVersion < 3) {\r\n            throw new Error(\"GD v2 is not supported. Use v4 of the API to run in that context.\");\r\n        }\r\n        else if (gdVersion >= 3) {\r\n            glue42gd = window.glue42gd;\r\n            preloadPromise = window.gdPreloadPromise || preloadPromise;\r\n        }\r\n    }\r\n    var glueInitTimer = timer();\r\n    userConfig = userConfig || {};\r\n    ext = ext || {};\r\n    var internalConfig = prepareConfig(userConfig, ext, glue42gd);\r\n    var _connection;\r\n    var _interop;\r\n    var _logger;\r\n    var _metrics;\r\n    var _contexts;\r\n    var _bus;\r\n    var _allowTrace;\r\n    var libs = {};\r\n    function registerLib(name, inner, t) {\r\n        _allowTrace = _logger.canPublish(\"trace\");\r\n        if (_allowTrace) {\r\n            _logger.trace(\"registering \" + name + \" module\");\r\n        }\r\n        var done = function () {\r\n            inner.initTime = t.stop();\r\n            inner.initEndTime = t.endTime;\r\n            _logger.trace(name + \" is ready\");\r\n        };\r\n        inner.initStartTime = t.startTime;\r\n        if (inner.ready) {\r\n            inner.ready().then(function () {\r\n                done();\r\n            });\r\n        }\r\n        else {\r\n            done();\r\n        }\r\n        if (!Array.isArray(name)) {\r\n            name = [name];\r\n        }\r\n        name.forEach(function (n) {\r\n            libs[n] = inner;\r\n            GlueCore[n] = inner;\r\n        });\r\n    }\r\n    function setupConnection() {\r\n        var initTimer = timer();\r\n        _connection = new Connection(internalConfig.connection, _logger.subLogger(\"connection\"));\r\n        var authPromise = Promise.resolve(internalConfig.auth);\r\n        if (internalConfig.connection && !internalConfig.auth) {\r\n            if (glue42gd) {\r\n                _logger.trace(\"trying to get gw token...\");\r\n                authPromise = glue42gd.getGWToken().then(function (token) {\r\n                    _logger.trace(\"got GW token \" + (token === null || token === void 0 ? void 0 : token.substring(token.length - 10)));\r\n                    return {\r\n                        gatewayToken: token\r\n                    };\r\n                });\r\n            }\r\n            else {\r\n                authPromise = Promise.reject(\"You need to provide auth information\");\r\n            }\r\n        }\r\n        return authPromise\r\n            .then(function (authConfig) {\r\n            var authRequest;\r\n            if (Object.prototype.toString.call(authConfig) === \"[object Object]\") {\r\n                authRequest = authConfig;\r\n            }\r\n            else {\r\n                throw new Error(\"Invalid auth object - \" + JSON.stringify(authConfig));\r\n            }\r\n            return _connection.login(authRequest);\r\n        })\r\n            .then(function () {\r\n            registerLib(\"connection\", _connection, initTimer);\r\n            return internalConfig;\r\n        })\r\n            .catch(function (e) {\r\n            if (_connection) {\r\n                _connection.logout();\r\n            }\r\n            throw e;\r\n        });\r\n    }\r\n    function setupLogger() {\r\n        var _a;\r\n        var initTimer = timer();\r\n        _logger = new Logger(\"\" + ((_a = internalConfig.connection.identity) === null || _a === void 0 ? void 0 : _a.application), undefined, internalConfig.customLogger);\r\n        _logger.consoleLevel(internalConfig.logger.console);\r\n        _logger.publishLevel(internalConfig.logger.publish);\r\n        registerLib(\"logger\", _logger, initTimer);\r\n        return Promise.resolve(undefined);\r\n    }\r\n    function setupMetrics() {\r\n        var _a, _b, _c;\r\n        var initTimer = timer();\r\n        var config = internalConfig.metrics;\r\n        var metricsPublishingEnabledFunc = glue42gd === null || glue42gd === void 0 ? void 0 : glue42gd.getMetricsPublishingEnabled;\r\n        var identity = internalConfig.connection.identity;\r\n        var canUpdateMetric = metricsPublishingEnabledFunc ? metricsPublishingEnabledFunc : function () { return true; };\r\n        var rootMetrics = metrics({\r\n            connection: config ? _connection : undefined,\r\n            logger: _logger.subLogger(\"metrics\"),\r\n            canUpdateMetric: canUpdateMetric,\r\n            system: \"Glue42\",\r\n            service: (_a = identity === null || identity === void 0 ? void 0 : identity.service) !== null && _a !== void 0 ? _a : \"metrics-service\",\r\n            instance: (_c = (_b = identity === null || identity === void 0 ? void 0 : identity.instance) !== null && _b !== void 0 ? _b : identity === null || identity === void 0 ? void 0 : identity.windowId) !== null && _c !== void 0 ? _c : shortid(),\r\n        });\r\n        var rootSystem = rootMetrics;\r\n        if (typeof config !== \"boolean\" && config.disableAutoAppSystem) {\r\n            rootSystem = rootMetrics;\r\n        }\r\n        else {\r\n            rootSystem = rootMetrics.subSystem(\"App\");\r\n        }\r\n        _metrics = addFAVSupport(rootSystem);\r\n        registerLib(\"metrics\", _metrics, initTimer);\r\n        return Promise.resolve();\r\n    }\r\n    function setupInterop() {\r\n        var initTimer = timer();\r\n        var agmConfig = {\r\n            connection: _connection,\r\n            logger: _logger.subLogger(\"interop\"),\r\n        };\r\n        _interop = new Interop(agmConfig);\r\n        Logger.Interop = _interop;\r\n        registerLib([\"interop\", \"agm\"], _interop, initTimer);\r\n        return Promise.resolve();\r\n    }\r\n    function setupContexts() {\r\n        var hasActivities = (internalConfig.activities && _connection.protocolVersion === 3);\r\n        var needsContexts = internalConfig.contexts || hasActivities;\r\n        if (needsContexts) {\r\n            var initTimer = timer();\r\n            _contexts = new ContextsModule({\r\n                connection: _connection,\r\n                logger: _logger.subLogger(\"contexts\")\r\n            });\r\n            registerLib(\"contexts\", _contexts, initTimer);\r\n            return _contexts;\r\n        }\r\n        else {\r\n            var replayer = _connection.replayer;\r\n            if (replayer) {\r\n                replayer.drain(ContextMessageReplaySpec.name);\r\n            }\r\n        }\r\n    }\r\n    function setupBus() {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var initTimer;\r\n            return __generator(this, function (_a) {\r\n                if (!internalConfig.bus) {\r\n                    return [2, Promise.resolve()];\r\n                }\r\n                initTimer = timer();\r\n                _bus = new MessageBus(_connection, _logger.subLogger(\"bus\"));\r\n                registerLib(\"bus\", _bus, initTimer);\r\n                return [2, Promise.resolve()];\r\n            });\r\n        });\r\n    }\r\n    function setupExternalLibs(externalLibs) {\r\n        try {\r\n            externalLibs.forEach(function (lib) {\r\n                setupExternalLib(lib.name, lib.create);\r\n            });\r\n            return Promise.resolve();\r\n        }\r\n        catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n    function setupExternalLib(name, createCallback) {\r\n        var initTimer = timer();\r\n        var lib = createCallback(libs);\r\n        if (lib) {\r\n            registerLib(name, lib, initTimer);\r\n        }\r\n    }\r\n    function waitForLibs() {\r\n        var libsReadyPromises = Object.keys(libs).map(function (key) {\r\n            var lib = libs[key];\r\n            return lib.ready ?\r\n                lib.ready() : Promise.resolve();\r\n        });\r\n        return Promise.all(libsReadyPromises);\r\n    }\r\n    function constructGlueObject() {\r\n        var feedbackFunc = function (feedbackInfo) {\r\n            if (!_interop) {\r\n                return;\r\n            }\r\n            _interop.invoke(\"T42.ACS.Feedback\", feedbackInfo, \"best\");\r\n        };\r\n        var info = {\r\n            coreVersion: version,\r\n            version: internalConfig.version\r\n        };\r\n        glueInitTimer.stop();\r\n        var glue = {\r\n            feedback: feedbackFunc,\r\n            info: info,\r\n            logger: _logger,\r\n            interop: _interop,\r\n            agm: _interop,\r\n            connection: _connection,\r\n            metrics: _metrics,\r\n            contexts: _contexts,\r\n            bus: _bus,\r\n            version: internalConfig.version,\r\n            userConfig: userConfig,\r\n            done: function () {\r\n                _logger === null || _logger === void 0 ? void 0 : _logger.info(\"done called by user...\");\r\n                return _connection.logout();\r\n            }\r\n        };\r\n        glue.performance = {\r\n            get glueVer() {\r\n                return internalConfig.version;\r\n            },\r\n            get glueConfig() {\r\n                return JSON.stringify(userConfig);\r\n            },\r\n            get browser() {\r\n                return window.performance.timing.toJSON();\r\n            },\r\n            get memory() {\r\n                return window.performance.memory;\r\n            },\r\n            get initTimes() {\r\n                var result = Object.keys(glue)\r\n                    .filter(function (key) {\r\n                    var _a;\r\n                    if (key === \"initTimes\" || key === \"agm\") {\r\n                        return false;\r\n                    }\r\n                    return (_a = glue[key]) === null || _a === void 0 ? void 0 : _a.initTime;\r\n                })\r\n                    .map(function (key) {\r\n                    return {\r\n                        name: key,\r\n                        time: glue[key].initTime,\r\n                        startTime: glue[key].initStartTime,\r\n                        endTime: glue[key].initEndTime\r\n                    };\r\n                });\r\n                result.push({\r\n                    name: \"glue\",\r\n                    startTime: glueInitTimer.startTime,\r\n                    endTime: glueInitTimer.endTime,\r\n                    time: glueInitTimer.period\r\n                });\r\n                return result;\r\n            }\r\n        };\r\n        Object.keys(libs).forEach(function (key) {\r\n            var lib = libs[key];\r\n            glue[key] = lib;\r\n        });\r\n        glue.config = {};\r\n        Object.keys(internalConfig).forEach(function (k) {\r\n            glue.config[k] = internalConfig[k];\r\n        });\r\n        if (ext && ext.extOptions) {\r\n            Object.keys(ext.extOptions).forEach(function (k) {\r\n                glue.config[k] = ext === null || ext === void 0 ? void 0 : ext.extOptions[k];\r\n            });\r\n        }\r\n        if (ext === null || ext === void 0 ? void 0 : ext.enrichGlue) {\r\n            ext.enrichGlue(glue);\r\n        }\r\n        if (glue42gd && glue42gd.updatePerfData) {\r\n            glue42gd.updatePerfData(glue.performance);\r\n        }\r\n        return glue;\r\n    }\r\n    return preloadPromise\r\n        .then(setupLogger)\r\n        .then(setupConnection)\r\n        .then(function () { return Promise.all([setupMetrics(), setupInterop(), setupContexts(), setupBus()]); })\r\n        .then(function () { return _interop.readyPromise; })\r\n        .then(function () {\r\n        return setupExternalLibs(internalConfig.libs || []);\r\n    })\r\n        .then(waitForLibs)\r\n        .then(constructGlueObject)\r\n        .catch(function (err) {\r\n        return Promise.reject({\r\n            err: err,\r\n            libs: libs\r\n        });\r\n    });\r\n};\r\nif (typeof window !== \"undefined\") {\r\n    window.GlueCore = GlueCore;\r\n}\r\nGlueCore.version = version;\r\nGlueCore.default = GlueCore;\n\nexport default GlueCore;\n//# sourceMappingURL=core.es.js.map\n","import ActivityManager from \"../core/activityManager\";\n\n/**\n * Base class for activity entities with reference to the activity manager\n * @private\n */\nexport default class ActivityEntity {\n\n  public _manager: ActivityManager;\n  public _id: string;\n\n  constructor(id: string) {\n    this._id = id;\n  }\n\n  public get id(): string {\n    return this._id;\n  }\n\n  /**\n   * Updates the properties of the current object using the properties of another object\n   * These two should have the same id.\n   */\n  public _update(other: ActivityEntity) {\n    if (other._id !== this._id) {\n      throw Error(\"Can not update from entity with different id.\");\n    }\n    this._updateCore(other);\n  }\n\n  public _updateCore(other: ActivityEntity) {\n    return;\n  }\n\n  public _beforeDelete(other: ActivityEntity) {\n    return;\n  }\n}\n","// some small useful functions (so we don't reference underscore or lodash)\n\nexport function isNumber(arg: any) {\n  return typeof arg === \"number\";\n}\n\nexport function isString(arg: any) {\n  return typeof arg === \"string\";\n}\n\nexport function isObject(arg: any) {\n  return typeof arg === \"object\" && arg !== null;\n}\n\nexport function isArray(arg: any) {\n  // TODO optimize\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return toString.call(arg) === \"[object Array]\";\n}\nexport function isUndefined(arg: any) {\n  return typeof arg === \"undefined\";\n}\n\nexport function isUndefinedOrNull(arg: any) {\n  return !arg || typeof arg === \"undefined\";\n}\n\n/**\n *  Checks if an object is empty (has no properties)\n * @private\n */\nexport function isEmpty(arg: any) {\n  for (const prop in arg) {\n    if (arg.hasOwnProperty(prop)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function isFunction(arg: any) {\n  return !!(arg && arg.constructor && arg.call && arg.apply);\n}\n\nexport function some<T>(array: T[], predicate: (el: any, index: number) => boolean) {\n  for (let index = 0; index < array.length; index++) {\n    if (predicate(array[index], index)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function first<T>(array: T[], predicate: (el: any, index: number) => boolean) {\n  for (let index = 0; index < array.length; index++) {\n    if (predicate(array[index], index)) {\n      return array[index];\n    }\n  }\n  return undefined;\n}\n\nexport function ifNotUndefined<T>(what: T, doWithIt: (what: T) => void) {\n  if (typeof what !== \"undefined\") {\n    doWithIt(what);\n  }\n}\n\nexport function promisify(promise: Promise<any>, successCallback: () => void, errorCallback: () => void) {\n  \"use strict\";\n  if (typeof successCallback !== \"function\" && typeof errorCallback !== \"function\") {\n    return promise;\n  }\n\n  if (typeof successCallback !== \"function\") {\n    successCallback = () => { return; };\n  } else if (typeof errorCallback !== \"function\") {\n    errorCallback = () => { return; };\n  }\n\n  promise.then(successCallback, errorCallback);\n}\n","import * as contracts from \"../contracts/contracts\";\nimport Activity from \"./activity\";\nimport ActivityEntity from \"./activityEntity\";\nimport WindowType from \"./windowType\";\nimport {ifNotUndefined} from \"../helpers/util\";\nimport {WindowDefinition} from \"./windowDefinition\";\n\nimport { Glue42 } from \"../../../glue\";\ntype OverrideTypeDefinition = Glue42.Activities.OverrideTypeDefinition;\n\n/**\n * An activity type is a definition template for an activity, consisting of a collection of window types,\n * their layout and an initial activity context.\n *\n * @module activityType\n */\nexport default class ActivityType extends ActivityEntity {\n\n  public _name: string;\n  public _description: string;\n  public _ownerWindow: WindowType;\n  public _helperWindows: WindowType[];\n\n  constructor(name: string, ownerWindow: WindowType, helperWindows?: WindowType[], description?: string) {\n    super(name);\n    this._name = name;\n    this._description = description;\n    this._ownerWindow = ownerWindow;\n    this._helperWindows = helperWindows || [];\n  }\n\n  /**\n   * @var {string} name Name of the activity type\n   */\n  public get name(): string {\n    return this._name;\n  }\n\n  /**\n   * @var {string} description description for the activity type\n   */\n  public get description(): string {\n    return this._description;\n  }\n\n  /**\n   * A list of window types that should be created when initiating a new instance of that activity type\n   * @var {windowDefinition[]} helperWindows\n   */\n  public get helperWindows(): WindowType[] {\n    return this._helperWindows;\n  }\n\n  /**\n   * @var {windowDefinition} ownerWindow Returns the definition of the owner window for that activity type\n   */\n  public get ownerWindow(): WindowType {\n    return this._ownerWindow;\n  }\n\n  /**\n   * Initiates a new activity of this type\n   *\n   * @function initiate\n   * @param {object} context The initial context to be used for the new activity\n   * @param callback\n   * @param configuration\n   * @returns {Promise<activity>}\n   */\n  public initiate(context: object, callback?: contracts.Callback<Activity>, configuration?: WindowDefinition[] | OverrideTypeDefinition): Promise<Activity> {\n    return this._manager.initiate(this._name, context, callback, configuration);\n  }\n\n  public _updateCore(other: ActivityType) {\n    super._updateCore(other);\n    ifNotUndefined(other._description, (x) => this._description = x);\n    ifNotUndefined(other._ownerWindow, (x) => this._ownerWindow = x);\n    ifNotUndefined(other._helperWindows, (x) => this._helperWindows = x);\n  }\n}\n","import ActivityEntity from \"./activityEntity\";\nimport ActivityWindow from \"./activityWindow\";\nimport { WindowDefinition } from \"./windowDefinition\";\nimport Activity from \"./activity\";\nimport { Glue42 } from \"../../../glue\";\n\n/**\n * A window type is a definition of a window, typically configured in ACS.\n *\n * @module windowType\n */\nexport default class WindowType extends ActivityEntity {\n\n  public _name: string;\n  public _appByWindowTypeGetter: (name: string) => void;\n\n  constructor(name: string, appByWindowTypeGetter: (wt: string) => Glue42.AppManager.Application) {\n    super(name);\n    this._name = name;\n    this._appByWindowTypeGetter = appByWindowTypeGetter;\n  }\n\n  /**\n   * Name of the window type\n   * @var {string} name\n   */\n  public get name(): string {\n    return this._name;\n  }\n\n  /**\n   * Returns the ACS configuration related to this window type (as application object from AppManager API)\n   * @returns {any}\n   */\n  public get config(): any {\n    return this._appByWindowTypeGetter(this._name);\n  }\n\n  /**\n   * @var {activityWindow[]} windows All windows from that type\n   */\n  public get windows(): ActivityWindow[] {\n    return this._manager.getWindows({ type: this._name });\n  }\n\n  public create(activity: Activity, configuration: any): Promise<ActivityWindow> {\n    const definition: WindowDefinition = (Object as any).assign({ type: this.name, name: this.name, isIndependent: false }, configuration);\n    return this._manager.createWindow(activity, definition);\n  }\n}\n","import { ActivityStatus } from \"./activityStatus\";\n\nexport class EntityEvent<T> {\n    public entity: T;\n    public context: EntityEventContext;\n\n    constructor(entitiy: T, context: EntityEventContext) {\n        this.entity = entitiy;\n        this.context = context;\n    }\n}\n\nexport class EntityEventContext {\n    public type: string;\n\n    constructor(eventType: string) {\n        this.type = eventType;\n    }\n}\n\nexport class ActivityStatusChangeEventContext extends EntityEventContext {\n    public oldStatus: ActivityStatus;\n    public newStatus: ActivityStatus;\n\n    constructor(newStatus: ActivityStatus, oldStatus: ActivityStatus) {\n        super(EntityEventType.StatusChange);\n        this.newStatus = newStatus;\n        this.oldStatus = oldStatus;\n    }\n}\n\nexport class ActivityContextChangedEventContext extends EntityEventContext {\n    public context: object;\n    public updated: object;\n    public removed: string[];\n\n    constructor(context: string | object, updated: object, removed: string[]) {\n        super(EntityEventType.ActivityContextChange);\n        this.context = typeof context === \"string\" ? JSON.parse(context) : context;\n        this.updated = updated;\n        this.removed = removed;\n    }\n}\n\nexport class EntityEventType {\n    public static Added: string = \"added\";\n    public static Removed: string = \"removed\";\n    public static Updated: string = \"updated\";\n    public static Closed: string = \"closed\";\n    public static StatusChange: string = \"statusChange\";\n    public static ActivityContextChange: string = \"activityContextUpdate\";\n    public static ActivityWindowEvent: string = \"activityWindowEvent\";\n    // #deleteme TODO: these are not implemented in HC\n    public static ActivityWindowJoinedActivity: string = \"joined\";\n    public static ActivityWindowLeftActivity: string = \"left\";\n}\n\nexport class ActivityState {\n    public static Created: string = \"created\";\n    public static Started: string = \"started\";\n    public static Destroyed: string = \"destroyed\";\n}\n","import Activity from \"../entities/activity\";\nimport ActivityWindow from \"../entities/activityWindow\";\nimport * as util from \"../helpers/util\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { promisify } from \"../helpers/util\";\n\n// A helper class that provides lame activity AGM implementation\n// Can be initialized with or without activity - in case no activity (independent windows outside activity) only\n// subset of the methods work\nexport class ActivityAGM {\n    public static AGM: Glue42Core.AGM.API;\n\n    private _activity: Activity;\n\n    constructor(activity: Activity) {\n        this._activity = activity;\n    }\n\n    public register(definition: string | Glue42Core.AGM.MethodDefinition, handler: (args: object, caller: Glue42Core.AGM.Instance) => object) {\n        this._ensureHasAgm();\n        ActivityAGM.AGM.register(definition, handler);\n    }\n\n    public servers(): Glue42Core.AGM.Instance[] {\n        this._ensureHasAgm();\n\n        if (util.isUndefinedOrNull(this._activity)) {\n            // or return ActivityAGM.AGM.servers()\n            return [];\n        }\n\n        return this._activity.windows.map(\n            (w: ActivityWindow) => {\n                return w.instance;\n            });\n    }\n\n    public methods(): Glue42Core.AGM.MethodDefinition[] {\n        this._ensureHasAgm();\n\n        if (util.isUndefinedOrNull(this._activity)) {\n            // or return ActivityAGM.AGM.methods()\n            return [];\n        }\n\n        const windows = this._activity.windows;\n        const methodNames: string[] = [];\n        const methods: Glue42Core.AGM.MethodDefinition[] = [];\n\n        // get all windows and their methods, then assemble distinct methods\n        windows.forEach((window) => {\n            const windowMethods = this.methodsForWindow(window);\n            windowMethods.forEach((currentWindowMethod) => {\n                if (methodNames.indexOf(currentWindowMethod.name) === -1) {\n                    methodNames.push(currentWindowMethod.name);\n                    methods.push(currentWindowMethod);\n                }\n            });\n        });\n\n        return methods;\n    }\n\n    public methodsForWindow(window: ActivityWindow): Glue42Core.AGM.MethodDefinition[] {\n        this._ensureHasAgm();\n        // get instance and use agm to get methods for instance\n        if (!window.instance) {\n            return [];\n        }\n\n        return ActivityAGM.AGM.methodsForInstance(window.instance);\n    }\n\n    /** Possible invoke targets\n     *\n     * \"activity.all\" - [default]\n     * \"activity.best\"\n     * ActivityWindow\n     * [ActivityWindow] -\n     *\n     * classic AGM\n     * \"all\" - agm all\n     * \"best\" - agm best\n     * instance - agm\n     * [ instances ]\n     *\n     */\n    public invoke(\n        methodName: string,\n        arg: object,\n        target: string | Glue42Core.AGM.Instance | ActivityWindow | Glue42Core.AGM.Instance[] | ActivityWindow[],\n        options?: Glue42Core.AGM.InvokeOptions,\n        success?: () => void,\n        error?: () => void): Promise<object> {\n\n        this._ensureHasAgm();\n        const activityServers = this.servers();\n        let serversToInvokeAgainst: Glue42Core.AGM.Instance[] = [];\n\n        if (util.isUndefinedOrNull(target)) {\n            target = \"activity.all\";\n        }\n\n        if (util.isString(target)) {\n            if (target === \"activity.all\") {\n                serversToInvokeAgainst = activityServers;\n            } else if (target === \"activity.best\") {\n                const potentialTargets = activityServers.filter((server) => {\n                    const methods = ActivityAGM.AGM.methodsForInstance(server);\n                    return methods.filter((m) => {\n                        return m.name === methodName;\n                    }).length > 0;\n                });\n                if (potentialTargets.length > 0) {\n                    serversToInvokeAgainst = [potentialTargets[0]];\n                }\n            } else if (target === \"all\" || target === \"best\") {\n                return promisify(ActivityAGM.AGM.invoke(methodName, arg, target, options), success, error);\n            } else {\n                throw new Error(\"Invalid invoke target \" + target);\n            }\n        } else if (util.isArray(target)) {\n            // if the array is not empty\n            if ((target as any).length >= 0) {\n                const firstElem = (target as any)[0];\n                // check argument type\n                if (this._isInstance(firstElem)) {\n                    serversToInvokeAgainst = (target as Glue42Core.AGM.Instance[]).map((instance: Glue42Core.AGM.Instance) => instance);\n                } else if (this._isActivityWindow(firstElem)) {\n                    serversToInvokeAgainst = (target as ActivityWindow[]).map((win: ActivityWindow) => win.instance);\n                } else {\n                    throw new Error(\"Unknown target object\");\n                }\n            }\n        } else {\n            if (this._isInstance(target)) {\n                serversToInvokeAgainst = [target as Glue42Core.AGM.Instance];\n            } else if (this._isActivityWindow(target)) {\n                serversToInvokeAgainst = [(target as ActivityWindow).instance];\n            } else {\n                throw new Error(\"Unknown target object\");\n            }\n        }\n\n        throw new Error(\"Not implemented\");\n        // return promisify(ActivityAGM.AGM.invoke(methodName, arg, serversToInvokeAgainst, options), success, error);\n    }\n\n    public unregister(definition: string | Glue42Core.AGM.MethodDefinition) {\n        this._ensureHasAgm();\n        return ActivityAGM.AGM.unregister(definition);\n    }\n\n    public createStream(methodDefinition: string | Glue42Core.AGM.MethodDefinition,\n                        subscriptionAddedHandler: (request: Glue42Core.AGM.StreamSubscription) => void,\n                        subscriptionRemovedHandler: (request: Glue42Core.AGM.StreamSubscription) => void) {\n        this._ensureHasAgm();\n\n        ActivityAGM.AGM.createStream(methodDefinition, {\n            subscriptionAddedHandler,\n            subscriptionRemovedHandler,\n            subscriptionRequestHandler: undefined\n        });\n    }\n\n    public subscribe(methodDefinition: string | Glue42Core.AGM.MethodDefinition, parameters: object, target: string | Glue42Core.AGM.Instance | Glue42Core.AGM.Instance[]): Promise<Glue42Core.AGM.Subscription> {\n        this._ensureHasAgm();\n        // #deleteme TODO: check servers needed?\n        // const servers = this.servers();\n\n        return ActivityAGM.AGM.subscribe(methodDefinition, parameters);\n    }\n\n    public _ensureHasAgm() {\n        if (util.isUndefinedOrNull(ActivityAGM.AGM)) {\n            throw new Error(\"Agm should be configured to be used in activity\");\n        }\n    }\n\n    public _isInstance(obj: any) {\n        // lame check\n        return obj.application !== undefined;\n    }\n\n    public _isActivityWindow(obj: any) {\n        return obj.instance !== undefined;\n    }\n}\n","import { ActivityDescriptor } from \"./activityDescriptor\";\nimport ActivityManager from \"../core/activityManager\";\nimport Activity from \"./activity\";\n\nexport class AttachedActivityDescriptor implements ActivityDescriptor {\n  private _manager: ActivityManager;\n  private _state: ActivityDescriptor;\n  private _ownerActivityId: string;\n\n  constructor(\n    manager: ActivityManager,\n    ownerActivityId: string,\n    state: ActivityDescriptor) {\n    this._manager = manager;\n    this._ownerActivityId = ownerActivityId;\n    this._state = state;\n  }\n\n  public get ownerId() {\n    return this._state.ownerId;\n  }\n\n  public get windowIds() {\n    return this._state.windowIds;\n  }\n\n  public get frameColor() {\n    return this._state.frameColor;\n  }\n\n  public get context() {\n    return this._state.context;\n  }\n\n  public get tag() {\n    return this._state.tag;\n  }\n\n  public detach(descriptor?: ActivityDescriptor): Promise<Activity> {\n\n    descriptor = descriptor || {};\n\n    const merged: ActivityDescriptor = {};\n\n    Object.keys(this._state).forEach((prop) => {\n      merged[prop] = this._state[prop];\n    });\n\n    merged.context = descriptor.context || merged.context;\n    merged.frameColor = descriptor.frameColor || merged.frameColor;\n\n    return this._manager.detachActivities(this._ownerActivityId, merged);\n  }\n}\n","import * as util from \"../helpers/util\";\n\nconst nextTick = (cb: () => void) => {\n  setTimeout(cb, 0);\n};\n\n/**\n * Convert a Promise to node style callback\n * @private\n */\nexport function nodeify<T>(promise: Promise<T>, callback: any): Promise<T> {\n  if (!util.isFunction(callback)) {\n    return promise;\n  }\n\n  promise.then(\n    (resp) => {\n      nextTick( () => { // not sure if this is needed, promises should be already executed on the event pool\n        callback(null, resp);\n      });\n    },\n    (err) => {\n      nextTick(() => {\n        callback(err, null);\n      });\n    });\n}\n","import * as contracts from \"../contracts/contracts\";\nimport ActivityType from \"./activityType\";\nimport ActivityWindow from \"./activityWindow\";\nimport { ActivityStatus } from \"../contracts/activityStatus\";\nimport ActivityEntity from \"./activityEntity\";\nimport { WindowDefinition } from \"./windowDefinition\";\nimport { ActivityAGM } from \"../core/activityAGM\";\nimport { CloneOptions } from \"./cloneOptions\";\nimport { AttachedActivityDescriptor } from \"./attachedActivityDescriptor\";\nimport { nodeify } from \"../helpers/promiseExtensions\";\nimport { ifNotUndefined } from \"../helpers/util\";\n\n/**\n * Activity is an instance of an activity type just like an object is an instance of a class\n * in class-based languages (and just like ‘John’ is an instance of a 'Person’).\n *\n * Activity is often used as a synonym for activity instance.\n *\n * Each activity instance has a single owner window and can optionally have one or more helper windows.\n *\n * @module activity\n */\nexport default class Activity extends ActivityEntity {\n\n  public _id: string;\n  public _actType: string;\n  public _status: ActivityStatus;\n  public _context: object;\n  public _ownerId: string;\n  public _agm: ActivityAGM;\n  public _attached: any;\n\n  constructor(\n    id: string,\n    actType: string,\n    status: ActivityStatus,\n    context: object,\n    ownerId: string) {\n    super(id);\n    this._id = id;\n    this._actType = actType;\n    this._status = status;\n    this._context = context;\n    this._ownerId = ownerId;\n    this._agm = new ActivityAGM(this);\n  }\n\n  /**\n   * Activity type\n   * @var {module:activityType} type\n   */\n  public get type(): ActivityType {\n    if (this._manager) {\n      return this._manager.getActivityType(this._actType);\n    }\n    return undefined;\n  }\n\n  /**\n   * Get current activity context. To update use updateContext , to replace setContext\n   * @var {object} context\n   */\n  public get context(): object {\n    return this._context;\n  }\n\n  /**\n   * Get activity status\n   * @var {activityStatus} status\n   */\n  public get status(): ActivityStatus {\n    return this._status;\n  }\n\n  /**\n   * The owner window\n   * @var {module:activityWindow} owner\n   */\n  public get owner(): ActivityWindow {\n    if (!this._ownerId) {\n      return null;\n    }\n    return this._manager.getWindows({ id: this._ownerId })[0];\n  }\n\n  /**\n   * All windows participating in the activity\n   * @var {module:activityWindow[]} windows\n   */\n  public get windows(): ActivityWindow[] {\n    return this._manager.getWindows({ activityId: this._id });\n  }\n\n  /**\n   * @var {module:activityAGM} agm\n   */\n  public get agm(): ActivityAGM {\n    return this._agm;\n  }\n\n  /**\n   * Joins a specific window to the activity\n   *\n   * @private\n   * @function join\n   * @param window    The window to join\n   * @param callback  (Optional) Result callback\n   * @returns         Promise for ActivityWindow\n   */\n  public addWindow(window: ActivityWindow, callback?: contracts.Callback<ActivityWindow>): Promise<ActivityWindow> {\n    return this._manager.addWindowToActivity(this, window, callback);\n  }\n\n  /**\n   * Creates a new window and joins it to the activity\n   *\n   * @function createWindow\n   * @param {string|windowDefinition} windowType The type of the window to be created\n   * @param callback\n   * @returns {Promise<module:activityWindow>}\n   */\n  public createWindow(windowType: string | WindowDefinition, callback?: contracts.Callback<ActivityWindow>): Promise<ActivityWindow> {\n    return this._manager.createWindow(this, windowType, callback);\n  }\n\n  /**\n   * Creates a stacked set of windows and joins them to the\n   *\n   * @function createStackedWindows\n   * @param {string[] | windowDefinition[]} windowTypes The types of the windows to be created\n   * @param {number} timeout\n   * @param callback\n   * @returns {Promise<module:activityWindow[]>}\n   */\n  public createStackedWindows(windowTypes: Array<string | WindowDefinition>, timeout?: number, callback?: contracts.Callback<ActivityWindow[]>): Promise<ActivityWindow[]> {\n    return this._manager.createStackedWindows(this, windowTypes, timeout, callback);\n  }\n\n  /**\n   * Removes a window from the activity\n   *\n   * @private\n   * @param window\n   * @param callback\n   * @returns     Promise for ActivityWindow\n   */\n  public leave(window: ActivityWindow, callback?: contracts.Callback<ActivityWindow>): Promise<ActivityWindow> {\n    return this._manager.leaveWindowFromActivity(this, window, callback);\n  }\n\n  /**\n   * Get all windows participating in the activity from a given type\n   *\n   * @param {string} windowType\n   * @returns {module:activityWindow[]}\n   */\n  public getWindowsByType(windowType: string): ActivityWindow[] {\n    const filter = { activityId: this._id, type: windowType };\n    return this._manager.getWindows(filter);\n  }\n\n  /**\n   * Replaces the activity context with a new one.\n   *\n   * @function setContext\n   * @param {object} context   The new context\n   * @param callback\n   * @returns {Promise<Object>}\n   */\n  public setContext(context: object, callback?: contracts.Callback<Activity>): Promise<object> {\n    return this._manager.setActivityContext(this, context, callback);\n  }\n\n  /**\n   * Updates activity context using the properties from the context argument.\n   * If old context is {a:1, b:2, c:3} and invoking updateContext({b:3, c:null}) will result a context\n   * be {a:1, b:3}\n   *\n   * @function updateContext\n   * @param {object} context\n   * @param callback\n   * @return {Promise<object>}\n   */\n  public updateContext(context: object, callback?: contracts.Callback<Activity>): Promise<object> {\n    return this._manager.updateActivityContext(this, context, callback);\n  }\n\n  /**\n   * Subscribe for status change events\n   *\n   * @function onStatusChange\n   *\n   * @param {activityStatusChangeHandler} handler Handler function that will receive status notifications\n   */\n  public onStatusChange(handler: (activity: Activity, newStatus: ActivityStatus, oldStatus: ActivityStatus) => void): () => void {\n    return this._manager.subscribeActivityEvents((a, ns, os) => {\n      if (a.id === this.id) {\n        handler(a, ns, os);\n      }\n    });\n  }\n\n  /**\n   * Subscribe for window related events, like joined, removed from activity\n   *\n   * @function onWindowEvent\n   * @param {windowEventHandler} handler Handler function that will receive windows events\n   */\n  public onWindowEvent(handler: contracts.ActivityWindowEventHandler): () => void {\n    return this._manager.subscribeWindowEvents((a, w, e) => {\n      if (a.id === this.id) {\n        handler(a, w, e);\n      }\n    });\n  }\n\n  /**\n   * Subscribe for context updates\n   *\n   * @function onContextChanged\n   * @param {contextChangedHandler} handler Handler function that will receive context related events\n   */\n  public onContextChanged(handler: contracts.ContextUpdateHandler) {\n    this._manager.subscribeActivityContextChanged((act, context, updated, removed) => {\n      if (act.id === this.id) {\n        handler(context, updated, removed, act);\n      }\n    });\n\n    try {\n      // replay the context at the time of subscribing, swallow user exceptions\n      handler(this.context, this.context, [], this);\n    } catch (e) {\n      return;\n    }\n  }\n\n  /**\n   * Stops the activity\n   * @function stop\n   */\n  public stop() {\n    this._manager.stopActivity(this);\n  }\n\n  /**\n   * Clones the activity into a new one\n   * @function clone\n   * @param {CloneOptions} options\n   */\n  public clone(options: CloneOptions) {\n    return this._manager.clone(this, options);\n  }\n\n  public attach(activity: Activity | string, tag?: object): Promise<AttachedActivityDescriptor> {\n    let activityId;\n    if (typeof activity === \"string\") {\n      activityId = activity;\n    } else {\n      activityId = activity.id;\n    }\n    return this._manager.attachActivities(activityId, this.id, tag);\n  }\n\n  public onActivityAttached(callback: (descriptor: AttachedActivityDescriptor) => void) {\n    this._manager.subscribeActivitiesAttached((newActId: string, oldActId: string, descriptor: AttachedActivityDescriptor) => {\n      if (newActId !== this._id) {\n        return;\n      }\n\n      callback(descriptor);\n    });\n  }\n\n  public onDetached(callback: (newAct: Activity, state: any) => void) {\n    this._manager.subscribeActivitiesDetached((newAct: Activity, originalActivity: Activity, state: any) => {\n      if (originalActivity.id !== this._id) {\n        return;\n      }\n\n      callback(newAct, state);\n    });\n  }\n\n  public _updateCore(other: Activity) {\n    super._updateCore(other);\n    ifNotUndefined(other._actType, (x) => this._actType = x);\n    ifNotUndefined(other._context, (x) => this._context = x);\n    ifNotUndefined(other._ownerId, (x) => this._ownerId = x);\n    if (other._status && (!this._status || (this._status.state !== other._status.state))) {\n      this._status = other._status;\n    }\n  }\n\n  public _updateDescriptors(allStates: any) {\n    this._attached = allStates.map((s: any) => {\n      return new AttachedActivityDescriptor(this._manager, this._id, s);\n    });\n  }\n\n  public get attached(): AttachedActivityDescriptor[] {\n    return this._attached;\n  }\n\n  public setFrameColor(color: string, callback: () => void): Promise<Activity> {\n    const promise = new Promise<Activity>((resolve, reject) => {\n\n      let callbacksToWait = this.windows.length;\n      if (callbacksToWait === 0) {\n        resolve(this);\n      }\n\n      this.windows.forEach((w) => {\n        w.underlyingWindow.setFrameColor(color, () => {\n          callbacksToWait--;\n          if (callbacksToWait <= 0) {\n            resolve(this);\n          }\n        });\n      });\n\n      setTimeout(() => {\n\n        if (callbacksToWait > 0) {\n          reject(this.id + \" - timed out waiting for setFrameColor with\" + color);\n        }\n\n      }, 5000);\n\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  public getFrameColor(): string {\n\n    if (!this.windows || this.windows.length === 0) {\n      return \"\";\n    }\n\n    return this.windows[0].underlyingWindow.frameColor;\n  }\n}\n","/* tslint:disable */\n\nimport * as util from \"./util\";\nimport {Glue42Core} from \"@glue42/core\";\n\nexport class LogLevel {\n  public static Trace: string = \"trace\";\n  public static Debug: string = \"debug\";\n  public static Info: string = \"info\";\n  public static Warn: string = \"warn\";\n  public static Error: string = \"error\";\n}\n\nexport class Logger {\n\n  public static Level: string = LogLevel.Info;\n  public static GlueLogger: Glue42Core.Logger.API;\n\n  private _glueLogger: Glue42Core.Logger.API;\n\n  public static GetNamed(name: string): Logger {\n    return new Logger(name);\n  }\n\n  public static Get(owner: Object): Logger {\n    return new Logger(Logger.GetTypeName(owner));\n  }\n\n  public _name: string;\n\n  constructor(name: string) {\n    this._name = name;\n    // we have a glue logger let's create a new logger for it\n    if (!util.isUndefinedOrNull(Logger.GlueLogger)) {\n      this._glueLogger = Logger.GlueLogger.subLogger(name);\n    }\n  }\n\n  public trace(message: string) {\n    if (!util.isUndefinedOrNull(this._glueLogger)) {\n      this._glueLogger.trace(message);\n    } else {\n      if (Logger.Level === LogLevel.Trace) {\n        console.info(this._getMessage(message, LogLevel.Trace));\n      }\n    }\n  }\n\n  public debug(message: string) {\n    if (!util.isUndefinedOrNull(this._glueLogger)) {\n      this._glueLogger.debug(message);\n    } else {\n      if (Logger.Level === LogLevel.Debug ||\n        Logger.Level === LogLevel.Trace) {\n        console.info(this._getMessage(message, LogLevel.Debug));\n      }\n    }\n  }\n\n  public info(message: string) {\n    if (!util.isUndefinedOrNull(this._glueLogger)) {\n      this._glueLogger.info(message);\n    } else {\n      if (Logger.Level === LogLevel.Debug ||\n        Logger.Level === LogLevel.Trace ||\n        Logger.Level === LogLevel.Info) {\n        console.info(this._getMessage(message, LogLevel.Info));\n      }\n    }\n  }\n\n  public warn(message: string) {\n    if (!util.isUndefinedOrNull(this._glueLogger)) {\n      this._glueLogger.warn(message);\n    } else {\n      if (Logger.Level === LogLevel.Debug ||\n        Logger.Level === LogLevel.Trace ||\n        Logger.Level === LogLevel.Info ||\n        Logger.Level === LogLevel.Warn) {\n        console.info(this._getMessage(message, LogLevel.Info));\n      }\n    }\n  }\n\n  public error(message: string) {\n    if (!util.isUndefinedOrNull(this._glueLogger)) {\n      this._glueLogger.error(message);\n    } else {\n      console.error(this._getMessage(message, LogLevel.Error));\n      console.trace();\n    }\n  }\n\n  public _getMessage(message: string, level: string): string {\n    return \"[\" + level + \"] \" + this._name + \" - \" + message;\n  }\n\n  /**\n   * Returns the function name for a given object (same as constructor.name but cross-browser)\n   */\n  public static GetTypeName(object: object): string {\n    const funcNameRegex = /function (.{1,})\\(/;\n    const results = (funcNameRegex).exec(object.constructor.toString());\n    return (results && results.length > 1) ? results[1] : \"\";\n  }\n}\n","import * as contracts from \"../contracts/contracts\";\nimport { WindowBounds } from \"../contracts/windowBounds\";\n\nimport WindowType from \"./windowType\";\nimport ActivityEntity from \"./activityEntity\";\nimport Activity from \"./activity\";\n\nimport { Logger } from \"../helpers/logger\";\nimport * as util from \"../helpers/util\";\nimport { ifNotUndefined } from \"../helpers/util\";\nimport { EntityEventType } from \"../contracts/entityEvent\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../../glue\";\n\n/**\n * A window participating in an activity\n *\n * @module activityWindow\n */\nexport default class ActivityWindow extends ActivityEntity {\n\n    private _logger: Logger = Logger.Get(\"window\");\n\n    private _type: string;\n    private _activityId: string;\n    private _name: string;\n    private _instance: Glue42Core.AGM.Instance;\n    private _isIndependent: boolean;\n    private _windowGetter: () => Glue42.Windows.GDWindow;\n    private _hcWindowId: string;\n\n    constructor(id: string, name: string, type: string, activityId: string, instance: Glue42Core.AGM.Instance, isIndependent: boolean, windowGetter: any,\n                hcWindowId: string) {\n        super(id);\n        this._type = type;\n        this._activityId = activityId;\n        this._name = name;\n        this._instance = instance;\n        this._isIndependent = isIndependent;\n        this._windowGetter = windowGetter;\n        this._hcWindowId = hcWindowId;\n    }\n\n    /**\n     * Return window's title\n     * @function getBounds\n     * @return {Promise<WindowBounds>}\n     */\n    public getBounds(): Promise<WindowBounds> {\n        return this._manager.getWindowBounds(this.id);\n    }\n\n    /**\n     * @var {string} name The window name\n     */\n    public get name(): string {\n        return this._name;\n    }\n\n    /**\n     * @var {bool} isIndependent True if this is an independent window\n     */\n    public get isIndependent(): boolean {\n        return this._isIndependent;\n    }\n\n    /**\n     * @var {module:windowType} type The window type\n     */\n    public get type(): WindowType {\n        if (this._manager) {\n            return this._manager.getWindowType(this._type);\n        }\n        return undefined;\n    }\n\n    /**\n     * @var {module:activity} activity The activity that the window is part of\n     */\n    public get activity(): Activity {\n        if (util.isUndefined(this._activityId)) {\n            return undefined;\n        }\n        return this._manager.getActivityById(this._activityId);\n    }\n\n    /**\n     * @var {bool} isOwner True if the window is the owner of the activity.\n     */\n    public get isOwner(): boolean {\n        const act = this.activity;\n        if (util.isUndefined(act)) {\n            return false;\n        }\n\n        return act.owner.id === this.id;\n    }\n\n    /**\n     * Sets window's visibility\n     *\n     * @function setVisible\n     * @param {boolean} isVisible\n     * @returns {Promise<module:activityWindow>}\n     */\n    public setVisible(isVisible: boolean, callback?: contracts.Callback<ActivityWindow>): Promise<ActivityWindow> {\n        return this._manager.setWindowVisibility(this.id, isVisible);\n    }\n\n    /**\n     * Activate window\n     * @function activate\n     * @param {boolean} focus If true then activate window with focus otherwise activate window without focus\n     */\n    public activate(focus: boolean): Promise<ActivityWindow> {\n        return this._manager.activateWindow(this.id, focus);\n    }\n\n    /**\n     * Sets window's bounds\n     * @function setBounds\n     *\n     * @param {bounds} bounds The new bounds to be applied\n     * @returns  {Promise<module:activityWindow>}\n     */\n    public setBounds(bounds: WindowBounds, callback?: contracts.Callback<ActivityWindow>): Promise<ActivityWindow> {\n        return this._manager.setWindowBounds(this.id, bounds, callback);\n    }\n\n    /**\n     * Closes the window\n     *\n     * @function close\n     * @returns {Promise}\n     */\n    public close(): Promise<any> {\n        return this._manager.closeWindow(this.id);\n    }\n\n    /**\n     * @var {agmInstance} instance The agm instance of that window. You can use this to invoke AGM methods against that window\n     */\n    public get instance(): Glue42Core.AGM.Instance {\n        return this._instance;\n    }\n\n    /**\n     * Returns the window as object from Windows API (glue.windows).\n     *\n     * @var {window} underlyingWindow\n     */\n    public get underlyingWindow(): any {\n        const window = this._windowGetter();\n        if (!window) {\n            // we don't have the window object any more, let's return as much as we can\n            return {\n                id: this._hcWindowId\n            };\n        }\n        return window;\n    }\n\n    public onActivityJoined(callback: (activity: Activity) => void) {\n        this._subscribeForActivityWindowEvent(EntityEventType.ActivityWindowJoinedActivity, callback);\n    }\n\n    public onActivityRemoved(callback: (activity: Activity) => void) {\n        this._subscribeForActivityWindowEvent(EntityEventType.ActivityWindowLeftActivity, callback);\n    }\n\n    public _updateCore(other: ActivityWindow) {\n        ifNotUndefined(other._activityId, (x) => this._activityId = x);\n        ifNotUndefined(other._isIndependent, (x) => this._isIndependent = x);\n        ifNotUndefined(other._hcWindowId, (x) => this._hcWindowId = x);\n        ifNotUndefined(other._type, (x) => this._type = x);\n        ifNotUndefined(other._name, (x) => this._name = x);\n\n        if (!util.isUndefinedOrNull(other._instance)) {\n            this._instance = other._instance;\n        }\n    }\n\n    public _subscribeForActivityWindowEvent(eventName: string, callback: (activity: Activity) => void) {\n        this._manager.subscribeWindowEvents((activity, window, event) => {\n            // ignore events not related to this window\n            if (window.id !== this.id) {\n                return;\n            }\n\n            if (event === eventName) {\n                callback(activity);\n            }\n        });\n    }\n\n    public _beforeDelete(other: ActivityWindow) {\n        this._hcWindowId = other._hcWindowId;\n    }\n}\n","/**\n * @typedef {Object} activityStatus Defines activity instance status\n * @property {string} state Current state\n * @property {string} message Message\n * @property {Date} time Time of the last status update\n */\nexport class ActivityStatus {\n  public state: string;\n  public message: string;\n  public time: Date;\n\n  constructor(state: string, message: string, time: Date) {\n    this.state = state;\n    this.message = message;\n    this.time = time;\n  }\n\n  public getState(): string {\n    return this.state;\n  }\n\n  public getMessage(): string {\n    return this.message;\n  }\n\n  public getTime(): Date {\n    return this.time;\n  }\n}\n","import { AnnouncementInfo } from \"../contracts/announcementInfo\";\n\nimport { ActivityBridge } from \"./activityBridge\";\nimport ActivityType from \"../entities/activityType\";\nimport WindowType from \"../entities/windowType\";\nimport { EventHandlerCallback } from \"../contracts/contracts\";\nimport { WindowDefinition } from \"../entities/windowDefinition\";\nimport {\n    ActivityContextChangedEventContext,\n    ActivityStatusChangeEventContext,\n    EntityEvent,\n    EntityEventContext,\n    EntityEventType,\n} from \"../contracts/entityEvent\";\nimport { WindowFactory } from \"../contracts/windowFactory\";\nimport Activity from \"../entities/activity\";\nimport ActivityWindow from \"../entities/activityWindow\";\nimport { WindowBounds } from \"../contracts/windowBounds\";\nimport {\n    ActivityGwMessage,\n    ActivityTypeGwMessage,\n    ActivityTypeGwMessageEntity,\n    GwMessage,\n    PeerCreatedGwMessage,\n    PeerFactoryGwMessage,\n    PeerFactoryGwMessageEntity,\n    PeerRequestedGwMessage,\n} from \"./gw3BridgeMessages\";\nimport { ActivityDescriptor } from \"../entities/activityDescriptor\";\nimport { CloneOptions } from \"../entities/cloneOptions\";\nimport { Glue42 } from \"../../../glue\";\n\nimport { ActivityStatus } from \"../contracts/activityStatus\";\nimport { ActivityConfig } from \"../activityConfig\";\nimport { Glue42Core } from \"@glue42/core\";\n\nimport { Glue42 as glue42 } from \"../../../glue\";\ntype OverrideTypeDefinition = glue42.Activities.OverrideTypeDefinition;\n\nconst gwMessageSuccess = \"success\";\nconst gwMmessageError = \"error\";\n\nconst gwMessageAddActivityTypes = \"add-types\";\nconst gwMmessageActivityTypesAdded = \"types-added\";\nconst gwMessageRemoveActivityTypes = \"remove-types\";\nconst gwMessageActivityTypesRemoved = \"types-removed\";\n\nconst gwMessageActivityCreated = \"created\";\nconst gwMessageActivityDestroyed = \"destroyed\";\nconst gwMessageActivityInitiated = \"initiated\";\nconst gwMmessageJoinActivity = \"join-activity\";\nconst gwMessageJoinedActivity = \"joined\";\nconst gwMessageActivityJoined = \"activity-joined\";\nconst gwMessageLeaveActivity = \"leave-activity\";\nconst gwMessageActivityLeft = \"left\";\nconst gwNmessageMergeActivities = \"merge\";\nconst gwMessageSplitActivities = \"split\";\nconst gwMessageChildrenChanged = \"children-changed\";\nconst gwMessageOwnerChanged = \"owner-changed\";\n\nconst gwMessageAddPeerFactories = \"add-peer-factories\";\nconst gwMessagePeerFactoriesAdded = \"peer-factories-added\";\nconst gwMessageRemovePeerFactories = \"remove-peer-factories\";\nconst gwMessagePeerFactoriesRemoved = \"peer-factories-removed\";\n\nconst gwMessageCreateActivity = \"create\";\nconst gwMessageCreatePeer = \"create-peer\";\nconst gwMessagePeerRequested = \"peer-requested\";\nconst gwMessageReady = \"ready\";\nconst gwMessagePeerCreated = \"peer-created\";\n\nconst gwMessageDestroyActivity = \"destroy\";\nconst gwMessageDisposePeer = \"dispose-peer\";\n\ndeclare let window: any;\ndeclare let process: any;\n\nexport default class GW3Bridge implements ActivityBridge {\n\n    private static activityTypeGwMessageEntityToActivityType(\n        entity: ActivityTypeGwMessageEntity,\n        description: string): ActivityType {\n\n        const nameToWindowType =\n            (windowName: any) =>\n                new WindowType(\n                    windowName,\n                    undefined);\n\n        return new ActivityType(\n            entity.name,\n            entity.owner_type && nameToWindowType(entity.owner_type),\n            entity.helper_types && entity.helper_types.map(nameToWindowType),\n            description);\n    }\n\n    private static peerFactoryGwMessageEntityToWindowType(entity: PeerFactoryGwMessageEntity): WindowType {\n        return new WindowType(\n            entity.peer_type,\n      /* #deleteme TODO: review - appmanager configuration? */(_) => undefined);\n    }\n\n    private static activityGwMessageToActivity(msg: ActivityGwMessage, status: ActivityStatus): Activity {\n        const ownerId = msg.owner !== undefined ? msg.owner.peer_id : msg.owner_id;\n        return new Activity(\n            msg.activity_id,\n            msg.activity_type,\n            status,\n            msg.context_snapshot,\n            ownerId);\n    }\n\n    private static activityToActivityStatusChangeEvent(act: Activity) {\n        return new EntityEvent<Activity>(act, new ActivityStatusChangeEventContext(act.status, undefined));\n    }\n\n    private _connection: Glue42.Connection.API;\n    private _logger: any;\n    private _contexts: Glue42.Contexts.API;\n\n    private _gw3Session: Glue42Core.Connection.GW3DomainSession;\n\n    // callbacks\n\n    private _activityChangeCallbacks: Array<EventHandlerCallback<EntityEvent<Activity>>> = [];\n    private _activityTypeStatusChangeCallbacks: Array<EventHandlerCallback<EntityEvent<ActivityType>>> = [];\n    private _activityWindowChangeCallbacks: Array<EventHandlerCallback<EntityEvent<ActivityWindow>>> = [];\n    private _windowTypeStatusChangeCallbacks: Array<EventHandlerCallback<EntityEvent<WindowType>>> = [];\n\n    // state tracking\n    private _peerIdAndFactoryIdToPeerType: any = {};\n    private _peerFactoriesRegisteredByUs: { [index: string]: WindowFactory } = {};\n    private _gw3Subscriptions: any[] = [];\n    private _contextSubscriptions: any = {};\n    private _activityTypesInitiatedFromMe: any = {};\n\n    private _sessionJoinedPromise: Promise<GW3Bridge>;\n    private _sessionJoinedPromiseResolve: (bridge: GW3Bridge) => void;\n    private _activityJoinedPromise: Promise<object>;\n    private _activityJoinedPromiseResolve: (obj: object) => void;\n    private _config: ActivityConfig;\n\n    constructor(\n        connection: Glue42Core.Connection.API,\n        logger: Glue42.Logger.API,\n        contexts: Glue42.Contexts.API,\n        config: ActivityConfig) {\n        this._config = config;\n        this._connection = connection;\n        this._logger = logger;\n        this._contexts = contexts;\n\n        this._sessionJoinedPromise = new Promise<GW3Bridge>((resolve /*, reject */) => {\n            this._sessionJoinedPromiseResolve = resolve;\n        });\n\n        this._activityJoinedPromise = new Promise<object>((resolve /*, reject */) => {\n            this._activityJoinedPromiseResolve = resolve;\n        });\n\n        if (!this._config.activityId) {\n            this._activityJoinedPromiseResolve({});\n        }\n\n        this._gw3Session = connection.domain(\n            \"activity\",\n            [\"joined\", \"initiated\", \"peer-created\", \"token\"]);\n\n        if (typeof window !== \"undefined\") {\n            const glue42gd = (window as any).glue42gd;\n            // G4E-1343\n            if (glue42gd && typeof glue42gd.addRefreshHandler === \"function\") {\n                glue42gd.addRefreshHandler((success: any, error: any) => {\n                    this._gw3Session\n                        .send(\n                            {\n                                type: \"reload\"\n                            })\n                        .then(\n                            (msg: any) => {\n                                if (!msg.token) {\n                                    error(\"Expected gateway token for refreshing.\");\n                                    return;\n                                }\n                                try {\n                                    glue42gd.setGWToken(msg.token as string);\n                                } catch (e) {\n                                    error(e.message || e);\n                                    return;\n                                }\n                                success();\n                            },\n                            error);\n                });\n            }\n        }\n    }\n\n    public get bridgeType(): \"GW3\" {\n        return \"GW3\";\n    }\n\n    public init() {\n        // activity types\n        this.forwardActivityTypeMessagesToStatusEventHandlers();\n\n        // activities\n        this.subscribe<ActivityGwMessage>(\n            gwMessageActivityCreated,\n            this.handleActivityCreatedMessage);\n\n        this.subscribe<ActivityGwMessage>(\n            gwMessageActivityDestroyed,\n            this.handleActivityDestroyedMessage);\n\n        this.forwardActivityMessagesToStatusEventHandlers();\n\n        this.forwardActivityCreatedAndJoinedActivityToActivityWindowEventHandlers();\n\n        // window types / peer factories\n\n        // NB: this forward must happen before the handlePeerFactoriesRemoved subscription\n        // since the latter clears state which is used by peerFactoryIdAndOwnerIdToWindowType\n        this.forwardPeerFactoryMessagesToStatusEventHandlers();\n\n        this.forwardPeerFactoryMessagesToPeerFactoryRequests();\n\n        this.subscribe(\n            gwMessagePeerFactoriesAdded,\n            this.handlePeerFactoriesAdded);\n\n        this.subscribe(\n            gwMessagePeerFactoriesRemoved,\n            this.handlePeerFactoriesRemoved);\n\n        // activity windows\n\n        this.forwardActivityWindowMessagesToEventHandlers();\n        //\n\n        this.subscribe(\n            gwMessageDisposePeer,\n      /*(msg)*/() => {\n                if (this._config.disposeRequestHandling === \"dispose\") {\n                    this.dispose();\n                    return;\n                }\n                if (this._config.disposeRequestHandling === \"exit\") {\n                    if (typeof window !== \"undefined\" &&\n                        typeof (window as any).close === \"function\") {\n                        window.close();\n                        return;\n                    }\n                    if (typeof process !== \"undefined\" &&\n                        typeof (process as any).exit === \"function\") {\n                        process.exit();\n                        return;\n                    }\n                }\n            });\n\n        // start domain join handshake\n        this._gw3Session.onJoined(() => {\n\n            if (this._config.mode === \"trackMyOnly\" ||\n                this._config.mode === \"trackMyTypeAndInitiatedFromMe\") {\n                this._sessionJoinedPromiseResolve(this);\n            } else {\n                this._gw3Session\n                    .send(\n                        {\n                            type: \"subscribe\",\n                            activity_types:\n                                (this._config.mode === \"trackAll\" ? [] :\n                                    this._config.mode === \"trackTypes\" ? this._config.typesToTrack : [])\n                        })\n                    .then(() => {\n                        this._sessionJoinedPromiseResolve(this);\n                    });\n            }\n        });\n        this._gw3Session.join();\n    }\n\n    public dispose() {\n        this._gw3Subscriptions.forEach((sub) => sub && this._connection.off(sub));\n        this._gw3Subscriptions.length = 0;\n    }\n\n    // ActivityBridge interface\n\n    public ready(): Promise<object> {\n        return Promise.all([this._sessionJoinedPromise, this._activityJoinedPromise]);\n    }\n\n    public initReady(): Promise<ActivityBridge> {\n        return this._sessionJoinedPromise;\n    }\n\n    public onActivityTypeStatusChange(callback: EventHandlerCallback<EntityEvent<ActivityType>>) {\n        this._activityTypeStatusChangeCallbacks.push(callback);\n    }\n\n    public registerActivityType(\n        activityTypeName: string,\n        ownerWindow: WindowDefinition,\n        helperWindows?: WindowDefinition[],\n        config?: any,\n        description?: string): Promise<ActivityType> {\n\n        const entity: ActivityTypeGwMessageEntity = {};\n        entity.name = activityTypeName;\n        const toActivityPeerConfig = (windowDefinition: WindowDefinition) => ({ type: windowDefinition.type, name: windowDefinition.name, configuration: windowDefinition });\n\n        entity.owner_type = toActivityPeerConfig(ownerWindow);\n        entity.helper_types = helperWindows.map(toActivityPeerConfig);\n\n        return this._gw3Session\n            .send(\n                {\n                    type: gwMessageAddActivityTypes,\n                    types: [entity]\n                })\n            .then(() => {\n                const activityType = GW3Bridge.activityTypeGwMessageEntityToActivityType(entity, description);\n                this.invokeCallbacks(\n                    this._activityTypeStatusChangeCallbacks,\n                    new EntityEvent<ActivityType>(\n                        activityType,\n                        new EntityEventContext(EntityEventType.Added)),\n                    gwMessageAddActivityTypes);\n                return activityType;\n            });\n    }\n\n    public unregisterActivityType(activityTypeName: string): Promise<void> {\n        return this._gw3Session\n            .send(\n                {\n                    type: gwMessageRemoveActivityTypes,\n                    types: [activityTypeName]\n                })\n            .then(() => {\n                const activityType = new ActivityType(activityTypeName, undefined, undefined, undefined);\n                this.invokeCallbacks(\n                    this._activityTypeStatusChangeCallbacks,\n                    new EntityEvent<ActivityType>(\n                        activityType,\n                        new EntityEventContext(EntityEventType.Removed)),\n                    gwMessageAddActivityTypes);\n            });\n    }\n\n    public onWindowTypeStatusChange(callback: EventHandlerCallback<EntityEvent<WindowType>>): void {\n        this._windowTypeStatusChangeCallbacks.push(callback);\n    }\n\n    // NB: in GW3, peer factories have ids separate from the ids of the peers they create\n    // in this implementation we keep the two equal for simplicity\n    // NB: we assume only one peer will register a peer factory for a given type; otherwise the\n    // add/remove window types event logic will get messy\n    public registerWindowFactory(\n        windowType: string,\n        factory: WindowFactory,\n        parameters?: any): Promise<void> {\n        if (this._peerFactoriesRegisteredByUs[windowType]) {\n            return Promise.reject(new Error(`Factory for windowType ${windowType} already registered.`));\n        }\n\n        this._peerFactoriesRegisteredByUs[windowType] = factory;\n\n        // #deleteme TODO: review success/failure code paths\n        // #deleteme TODO: review - should we create the window type here?\n        const entity = {\n            id: windowType,\n            peer_type: windowType,\n            configuration: parameters\n        };\n        return this._gw3Session.send({\n            type: gwMessageAddPeerFactories,\n            factories: [entity]\n        })\n            .then(() => {\n                this.invokeCallbacks(\n                    this._windowTypeStatusChangeCallbacks,\n                    new EntityEvent(\n                        GW3Bridge.peerFactoryGwMessageEntityToWindowType(entity),\n                        new EntityEventContext(EntityEventType.Added)),\n                    gwMessageAddPeerFactories);\n            })\n            .catch(() => {\n                delete this._peerFactoriesRegisteredByUs[windowType];\n            });\n    }\n\n    public unregisterWindowFactory(windowType: string): Promise<void> {\n        const factory = this._peerFactoriesRegisteredByUs[windowType];\n        if (!factory) {\n            return Promise.reject(new Error(`Factory for windowType ${windowType} not registered.`));\n        }\n\n        delete this._peerFactoriesRegisteredByUs[windowType];\n\n        return this._gw3Session.send({\n            type: gwMessageRemovePeerFactories,\n            factory_ids: [windowType]\n        }).then(() => {\n            this.invokeCallbacks(\n                this._windowTypeStatusChangeCallbacks,\n                new EntityEvent(\n                    new WindowType(windowType, undefined),\n                    new EntityEventContext(EntityEventType.Removed)),\n                gwMessageAddPeerFactories);\n        });\n    }\n\n    public onActivityStatusChange(callback: EventHandlerCallback<EntityEvent<Activity>>) {\n        this._activityChangeCallbacks.push(callback);\n    }\n\n    public initiateActivity(activityType: string, context?: object, configuration?: WindowDefinition[] | OverrideTypeDefinition): Promise<string> {\n        const initiateMsg: any = {\n            type: gwMessageCreateActivity,\n            activity_type: activityType,\n            initial_context: context,\n        };\n\n        if (this.isOverrideTypeDefinition(configuration)) {\n            initiateMsg.types_override = {\n                owner_type: { type: configuration.owner.type, name: configuration.owner.name, configuration: configuration.owner },\n                helper_types: configuration.helpers && configuration.helpers.map((wd) => ({ type: wd.type, name: wd.name, configuration: wd }))\n            };\n        } else {\n            initiateMsg.configuration = configuration && configuration.map((wd) => ({ type: wd.type, name: wd.name, configuration: wd }));\n        }\n\n        return this.sendCreateAndMapResultingMessagesToPromise(\n            initiateMsg,\n            gwMessageActivityInitiated,\n            (msg, requestId) => msg.request_id === requestId,\n            gwMessageActivityCreated,\n            (msg, requestId, initMsg) => msg.activity_id === initMsg.activity_id,\n            gwMessageActivityDestroyed,\n            (msg, requestId, initMsg) => msg.activity_id === initMsg.activity_id,\n            (msg) => msg.activity_id).then((id) => {\n                if (this._config.mode === \"trackMyTypeAndInitiatedFromMe\") {\n                    if (!this._activityTypesInitiatedFromMe[activityType]) {\n                        this._activityTypesInitiatedFromMe[activityType] = true;\n\n                        return this._gw3Session\n                            .send(\n                                {\n                                    type: \"subscribe\",\n                                    activity_types: [activityType]\n                                })\n                            .then(() => {\n                                return id;\n                            });\n                    }\n                }\n                return id;\n            });\n    }\n\n    public stopActivity(activity: Activity): Promise<boolean> {\n        return this._gw3Session.send({\n            type: gwMessageDestroyActivity,\n            activity_id: activity.id,\n            reason_uri: \"com.tick42.glue.activity.constants.destroyReason.general\",\n            reason: \"Destroying activity\"\n        }).then((_) => true);\n    }\n\n    public updateActivityContext(activity: Activity, context: any, fullReplace: boolean, removedKeys?: string[]): Promise<void> {\n        if (fullReplace) {\n            // this will currently fail on GW3\n            return this._contexts.set(activity.id, context);\n        } else {\n            removedKeys = removedKeys || [];\n            for (const x of removedKeys) {\n                context[x] = null;\n            }\n            return this._contexts.update(activity.id, context);\n        }\n    }\n\n    public announceWindow(windowType?: string, activityWindowId?: string) {\n        // in the GW3 case we are only joined to an activity after we announce ourselves\n        // so all announcement calls should go in 'registerWindow', not here\n        // (registerWindow registers a window that's not part of an activity, at least yet)\n        throw new Error(\"Invalid operation 'announceWindow' for GW3 protocol\");\n    }\n\n    public registerWindow(type: string, name: string, independent: boolean): Promise<string> {\n\n        let shouldSendReady = typeof this._connection.gatewayToken !== \"undefined\";\n        const peerId = this._connection.peerId;\n\n        // if running in GD3 (glue42gd is there) we should send ready only if we have the activityInfo object in glue\n        if (typeof window !== \"undefined\") {\n            const glue42gd = window.glue42gd;\n            if (glue42gd) {\n                shouldSendReady = typeof glue42gd.activityInfo !== \"undefined\";\n            }\n        }\n\n        if (shouldSendReady) {\n            this._gw3Session.send({\n                type: gwMessageReady,\n            });\n        }\n\n        this.invokeCallbacks(\n            this._activityWindowChangeCallbacks,\n            new EntityEvent<ActivityWindow>(\n                new ActivityWindow(peerId, name, type, undefined, this.getAgmInstance(peerId), independent, this.generateWindowGetter(peerId), undefined),\n                new EntityEventContext(EntityEventType.Added)),\n            \"register window\");\n\n        return Promise.resolve(peerId);\n    }\n\n    public onActivityWindowChange(callback: EventHandlerCallback<EntityEvent<ActivityWindow>>) {\n        this._activityWindowChangeCallbacks.push(callback);\n    }\n\n    public createWindow(activityId: string, windowDefinition: WindowDefinition): Promise<string> {\n\n        // if the user hasn't provided a layout option but has some of left,top,width,height\n        // insert a layout\n        if (!windowDefinition.layout) {\n            if (windowDefinition.left || windowDefinition.width || windowDefinition.height || windowDefinition.top) {\n                windowDefinition.layout = {\n                    mode: \"pixels\",\n                    cellSize: 1,\n                };\n            }\n        }\n\n        return this.sendCreateAndMapResultingMessagesToPromise(\n            {\n                type: gwMessageCreatePeer,\n                peer_type: windowDefinition.type,\n                peer_name: windowDefinition.name || windowDefinition.type,\n                configuration: windowDefinition,\n                activity_id: activityId,\n            },\n            undefined,\n            undefined,\n            gwMessagePeerCreated,\n            (msg, requestId) => msg.request_id === requestId,\n            undefined,\n            undefined,\n            (msg) => msg.created_id)\n            .then((id) => {\n                if (!activityId) {\n                    return;\n                }\n                return this.joinActivity(activityId, id, windowDefinition.name)\n                    .then(() => {\n                        return id;\n                    });\n            });\n    }\n\n    public closeWindow(id: string): Promise<void> {\n        return this._gw3Session.send({\n            destroy_peer_id: id\n        }).then((_) => undefined);\n    }\n\n    public getAnnouncementInfo(): AnnouncementInfo {\n        let activityId = this._config.activityId || (this._config.announcementInfo && this._config.announcementInfo.activityId);\n        let activityWindowType = (this._config.announcementInfo && this._config.announcementInfo.activityWindowType);\n        let activityWindowIndependent = (this._config.announcementInfo && this._config.announcementInfo.activityWindowIndependent);\n        let activityWindowName = (this._config.announcementInfo && this._config.announcementInfo.activityWindowName);\n\n        if (typeof window !== \"undefined\" &&\n            typeof window.location !== \"undefined\" &&\n            window.location.search &&\n            typeof URLSearchParams === \"function\") {\n            const searchParams = new URLSearchParams(location.search.slice(1));\n            activityWindowType = activityWindowType || searchParams.get(\"t42PeerType\");\n            activityWindowType = activityWindowType || searchParams.get(\"t42ActivityWindowType\");\n            if (typeof activityWindowIndependent === \"undefined\") {\n                activityWindowIndependent = searchParams.get(\"t42ActivityWindowIndependent\");\n            }\n            activityWindowName = activityWindowName || searchParams.get(\"t42ActivityWindowName\");\n            activityId = activityId || searchParams.get(\"t42ActivityId\");\n        }\n\n        activityWindowType = activityWindowType || \"unknown\";\n        activityWindowIndependent = activityWindowIndependent || false;\n        activityWindowName = activityWindowName || this._connection.peerId;\n\n        return {\n            activityWindowId: undefined, // not member of activity from the get go\n            activityId,\n            activityWindowType,\n            activityWindowIndependent,\n            activityWindowName,\n        };\n    }\n\n    public joinActivity(activityId: string, windowId: string, name?: string): Promise<void> {\n        const maybeName = (name && { name }) || {};\n        return this._gw3Session.send({\n            type: gwMmessageJoinActivity,\n            target_id: windowId,\n            activity_id: activityId,\n            ...maybeName\n        }).then(() => {\n            this.invokeCallbacks(\n                this._activityWindowChangeCallbacks,\n                new EntityEvent<ActivityWindow>(\n                    new ActivityWindow(windowId, undefined, undefined, activityId, this.getAgmInstance(windowId), undefined, this.generateWindowGetter(windowId), undefined),\n                    new EntityEventContext(EntityEventType.ActivityWindowJoinedActivity)),\n                \"activity joined - ActivityWindow\");\n\n            this.invokeCallbacks(\n                this._activityChangeCallbacks,\n                new EntityEvent<Activity>(\n                    new Activity(activityId, undefined, new ActivityStatus(\"created\", undefined, undefined), undefined, undefined),\n                    new EntityEventContext(EntityEventType.Updated)),\n                \"activity joined - Activity\");\n        });\n    }\n\n    public leaveActivity(activityId: string, windowId: string): Promise<void> {\n        return this._gw3Session.send({\n            type: gwMessageLeaveActivity,\n            target_id: windowId,\n            activity_id: activityId\n        }).then(() => {\n            this.invokeCallbacks(\n                this._activityWindowChangeCallbacks,\n                new EntityEvent<ActivityWindow>(\n                    new ActivityWindow(windowId, undefined, undefined, null, this.getAgmInstance(windowId), undefined, this.generateWindowGetter(windowId), undefined),\n                    new EntityEventContext(EntityEventType.ActivityWindowLeftActivity)),\n                \"activity left - ActivityWindow\");\n\n            this.invokeCallbacks(\n                this._activityChangeCallbacks,\n                new EntityEvent<Activity>(\n                    new Activity(activityId, undefined, new ActivityStatus(\"created\", undefined, undefined), undefined, undefined),\n                    new EntityEventContext(EntityEventType.Updated)),\n                \"activity left - Activity\");\n        });\n    }\n\n    // purposefully returning empty arrays\n    public getActivityTypes(): Promise<ActivityType[]> {\n        return Promise.resolve([]);\n    }\n\n    public getWindowTypes(): Promise<WindowType[]> {\n        return Promise.resolve([]);\n    }\n\n    public getActivities(): Promise<Activity[]> {\n        return Promise.resolve([]);\n    }\n\n    public getActivityWindows(): Promise<ActivityWindow[]> {\n        return Promise.resolve([]);\n    }\n\n    // N/A\n\n    // ignore for now\n\n    // POSTPONED\n    public createStackedWindows(id: string, windowDefinitions: WindowDefinition[], timeout: number): Promise<string[]> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public getWindowBounds(id: string): Promise<WindowBounds> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public setWindowBounds(id: string, bounds: WindowBounds): Promise<void> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public activateWindow(id: string, focus: boolean): Promise<void> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public setWindowVisibility(id: string, visible: boolean): Promise<void> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public cloneActivity(id: string, cloneOptions: CloneOptions): Promise<string> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public attachActivities(from: string, to: string, tag: object): Promise<any> {\n        return this._gw3Session.send({\n            type: gwNmessageMergeActivities,\n            into: to,\n            merge: from\n        });\n    }\n\n    // POSTPONED\n    public detachActivities(activityId: string, newActivityInfo: ActivityDescriptor): Promise<string> {\n        return this._gw3Session.send({\n            type: gwMessageSplitActivities,\n            from: activityId,\n            // split: from\n        }).then(() => \"\");\n    }\n\n    // POSTPONED\n    public onActivitiesAttached(callback: (info: any) => void) {\n        // POSTPONED\n    }\n\n    // POSTPONED\n    public onActivitiesDetached(callback: (info: any) => void) {\n        // POSTPONED\n    }\n\n    public onActivityAttachedDescriptorsRefreshed(callback: (info: any) => void): void {\n        // POSTPONED\n    }\n\n    // POSTPONED\n    public getAttachedDescriptors(): Promise<any[]> {\n        return Promise.resolve([]);\n    }\n\n    // helpers\n\n    // Protocol handling\n\n    private getRandomRequestId() {\n        return this._connection.peerId + \":\" + Math.floor(Math.random() * 1e9) + \"\";\n    }\n\n    private forwardAddedAndRemovedMessagesToEventHandler<TMessage, TEntity>(\n        addedMessageType: string,\n        removedMessageType: string,\n        mapper: (msg: TMessage, isAdded: boolean) => TEntity[],\n        handlers: Array<EventHandlerCallback<EntityEvent<TEntity>>>) {\n\n        const getGetEntityEvent = (isAdded: boolean) => (entity: any) => new EntityEvent<TEntity>(\n            entity,\n            new EntityEventContext(\n                isAdded ?\n                    EntityEventType.Added :\n                    EntityEventType.Removed));\n\n        let sub1;\n        let sub2;\n\n        sub1 = addedMessageType && this.forwardMessageToEventHandler<TMessage, TEntity>(\n            addedMessageType,\n            (msg) => mapper(msg, true),\n            getGetEntityEvent(true),\n            handlers);\n\n        sub2 = removedMessageType && this.forwardMessageToEventHandler<TMessage, TEntity>(\n            removedMessageType,\n            (msg) => mapper(msg, false),\n            getGetEntityEvent(false),\n            handlers);\n\n        return [sub1, sub2].filter((x) => x);\n    }\n\n    private forwardMessageToEventHandler<TMessage, TEntity>(\n        messageType: string,\n        mapper: (msg: TMessage) => TEntity[],\n        getEntityEvent: (entity: TEntity, msg: TMessage) => EntityEvent<TEntity>,\n        handler: Array<EventHandlerCallback<EntityEvent<TEntity>>>) {\n        return this.subscribe(\n            messageType,\n            (msg: TMessage) => {\n                mapper(msg)\n                    .forEach((ent: any) =>\n                        handler.forEach((h) => h(getEntityEvent(ent, msg))));\n            });\n    }\n\n    private sendCreateAndMapResultingMessagesToPromise<TCreatedMessage extends GwMessage, TPromiseType>(\n        msg: any,\n        initiatedMessageType: string,\n        initiatedMessageFilter: (msg: any, requestId: string) => boolean,\n        createdMessageType: string,\n        createdMessageFilter: (msg: any, requestId: string, initMsg: any) => boolean,\n        cancelledMessageType: string,\n        cancelledMessageFilter: (msg: any, requestId: string, initMsg: any) => boolean,\n        createdMessageToPromiseResolution: (TCreatedMessage: any) => TPromiseType): Promise<TPromiseType> {\n\n        const reqId = this.getRandomRequestId();\n\n        let resolveCreatedPromise: (arg: any) => void;\n        let rejectCreatedPromise: (arg: any) => void;\n        const createdPromise = new Promise<TPromiseType>((resolve, reject) => {\n            resolveCreatedPromise = resolve;\n            rejectCreatedPromise = reject;\n        });\n\n        let initiatedMessageAck: any = null;\n\n        let initiatedSubscription: any;\n        let createdSubscription: any;\n        let cancelledSubscription: any;\n        let errorSubscription: any;\n\n        const dropSubscriptions = () => {\n            this.dropSubscription(initiatedSubscription);\n            this.dropSubscription(createdSubscription);\n            this.dropSubscription(cancelledSubscription);\n            this.dropSubscription(errorSubscription);\n        };\n\n        initiatedSubscription = initiatedMessageType &&\n            this.subscribe(\n                initiatedMessageType,\n                (msg4: any) => {\n                    if (!initiatedMessageFilter(msg4, reqId)) {\n                        return;\n                    }\n                    initiatedMessageAck = msg4;\n                    this.dropSubscription(initiatedSubscription);\n                });\n        createdSubscription =\n            this.subscribe(\n                createdMessageType,\n                (msg1: TCreatedMessage) => {\n                    if (!createdMessageFilter(msg1, reqId, initiatedMessageAck)) {\n                        return;\n                    }\n                    resolveCreatedPromise(createdMessageToPromiseResolution(msg1));\n                });\n        cancelledSubscription = cancelledMessageType &&\n            this.subscribe(\n                cancelledMessageType,\n                (msg2: any) => {\n                    if (!cancelledMessageFilter(msg2, reqId, initiatedMessageAck)) {\n                        return;\n                    }\n                    rejectCreatedPromise(msg2);\n                });\n        errorSubscription = cancelledMessageType &&\n            this.subscribe(\n                gwMmessageError,\n                (msg3: any) => {\n                    if (msg3.request_id !== reqId) {\n                        return;\n                    }\n                    rejectCreatedPromise(msg3);\n                });\n\n        msg.request_id = reqId;\n\n        const toReturn = this._gw3Session\n            .send(msg)\n            .then(() => {\n                return createdPromise;\n            });\n        toReturn.then(dropSubscriptions, dropSubscriptions);\n        return toReturn;\n    }\n\n    // Entity Mapping\n\n    private peerFactoryIdAndOwnerIdToWindowType(factoryId: string, ownerId: string) {\n        const peerType = this._peerIdAndFactoryIdToPeerType[ownerId + \":\" + factoryId];\n        if (!peerType) {\n            return null;\n        } else {\n            return new WindowType(peerType, undefined);\n        }\n    }\n\n    private subscribe<TMessage>(messageType: string, handler: (msg: TMessage) => void) {\n        const sub = this._connection.on(\n            messageType,\n            (msg: TMessage) => handler.bind(this)(msg));\n\n        this._gw3Subscriptions.push(sub);\n\n        return sub;\n    }\n\n    private dropSubscription(subscription: any) {\n        if (subscription) {\n            this._connection.off(subscription);\n            delete this._gw3Subscriptions[this._gw3Subscriptions.indexOf(subscription)];\n        }\n    }\n\n    private invokeCallbacks<TEvent>(\n        callbacks: Array<EventHandlerCallback<EntityEvent<TEvent>>>,\n        event: EntityEvent<TEvent>,\n        description?: string) {\n        callbacks.forEach((cb) => {\n            try {\n                cb(event);\n            } catch (err) {\n                this._logger.error(`Error in ${description || event.context.type} callback: ` + JSON.stringify(err));\n            }\n        });\n    }\n\n    private handleActivityCreatedMessage(msg: ActivityGwMessage) {\n        if (!msg.context_id) {\n            this._logger.error(\"Activity created with unknown context_id: \" + msg.activity_id);\n        } else {\n            if (!this._contextSubscriptions[msg.activity_id]) {\n                this.subscribeToContext(msg);\n            }\n        }\n    }\n\n    private async subscribeToContext(msg: ActivityGwMessage): Promise<void> {\n        const activityId = msg.activity_id;\n        this._contextSubscriptions[activityId] =\n            await this._contexts.subscribe(activityId,\n                (data: any, updated: any, removed: string[]) => {\n                    const event = new EntityEvent<Activity>(\n                        new Activity(activityId, undefined, undefined, data, undefined),\n                        new ActivityContextChangedEventContext(data, updated, removed));\n\n                    this.invokeCallbacks(\n                        this._activityChangeCallbacks,\n                        event,\n                        \"context updated\");\n                });\n    }\n\n    private handleActivityDestroyedMessage(msg: ActivityGwMessage) {\n        const unsubscribeContext = this._contextSubscriptions[msg.activity_id];\n        if (typeof unsubscribeContext === \"function\") {\n            unsubscribeContext();\n        }\n        delete this._contextSubscriptions[msg.activity_id];\n    }\n\n    private handlePeerFactoriesAdded(msg: PeerFactoryGwMessage) {\n        msg.factories.forEach((entity: PeerFactoryGwMessageEntity) => {\n            this._peerIdAndFactoryIdToPeerType[msg.owner_id + \":\" + entity.id] = entity.peer_type;\n        });\n    }\n\n    private handlePeerFactoriesRemoved(msg: PeerFactoryGwMessage) {\n        msg.factory_ids.forEach((factoryId: string) => {\n            delete this._peerIdAndFactoryIdToPeerType[msg.owner_id + \":\" + factoryId];\n        });\n    }\n\n    private forwardActivityTypeMessagesToStatusEventHandlers() {\n        this.forwardAddedAndRemovedMessagesToEventHandler<ActivityTypeGwMessage, ActivityType>(\n            gwMmessageActivityTypesAdded,\n            gwMessageActivityTypesRemoved,\n            (msg: ActivityTypeGwMessage, isAdded) => isAdded\n                ? msg.types.map((t) => GW3Bridge.activityTypeGwMessageEntityToActivityType(t, undefined))\n                : msg.types.map((t) => new ActivityType(t.name, undefined, undefined, undefined)),\n            this._activityTypeStatusChangeCallbacks);\n\n    }\n\n    private forwardActivityCreatedAndJoinedActivityToActivityWindowEventHandlers() {\n        // if we're created as part of this activity, the JOINED ACTIVITY is\n\n        // the first time we'll hear about it; so let's record the participants\n        for (const activityCreatedMessage of [gwMessageActivityCreated, gwMessageJoinedActivity, gwMessageOwnerChanged]) {\n            this.forwardMessageToEventHandler<ActivityGwMessage, ActivityWindow>(\n                activityCreatedMessage,\n                (msg) =>\n                    ([msg.owner || { ...msg, type: msg.peer_type, name: msg.peer_name, peer_id: msg.owner_id }])\n                        .concat(msg.participants || [])\n                        .map((info: any) => new ActivityWindow(info.peer_id, info.name, info.type, msg.activity_id, this.getAgmInstance(info.peer_id), undefined, this.generateWindowGetter(info.peer_id), undefined)),\n                (ent, msg) => new EntityEvent<ActivityWindow>(ent, new EntityEventContext(EntityEventType.ActivityWindowJoinedActivity)),\n                this._activityWindowChangeCallbacks);\n        }\n    }\n\n    private forwardActivityMessagesToStatusEventHandlers() {\n\n        // see dot-net-activity\\Activity\\ActivityState.cs\n\n        for (const createdMessage of [gwMessageActivityCreated, gwMessageJoinedActivity]) {\n            this.forwardMessageToEventHandler<ActivityGwMessage, Activity>(\n                createdMessage,\n                (msg) => [GW3Bridge.activityGwMessageToActivity(msg, new ActivityStatus(\"started\", \"\", new Date()))],\n                (ent, msg) => GW3Bridge.activityToActivityStatusChangeEvent(ent),\n                this._activityChangeCallbacks);\n        }\n\n        this.forwardMessageToEventHandler<ActivityGwMessage, Activity>(\n            gwMessageActivityDestroyed,\n            (msg) => [GW3Bridge.activityGwMessageToActivity(msg, new ActivityStatus(\"destroyed\", msg.reason, new Date()))],\n            (ent, msg) => GW3Bridge.activityToActivityStatusChangeEvent(ent),\n            this._activityChangeCallbacks);\n\n        this.forwardMessageToEventHandler<ActivityGwMessage, Activity>(\n            gwMessageActivityInitiated,\n            (msg) => [GW3Bridge.activityGwMessageToActivity(msg, new ActivityStatus(\"created\", \"\", new Date()))],\n            (ent, msg) => GW3Bridge.activityToActivityStatusChangeEvent(ent),\n            this._activityChangeCallbacks);\n\n        this.forwardMessageToEventHandler<ActivityGwMessage, Activity>(\n            gwMessageOwnerChanged,\n            (msg) => [GW3Bridge.activityGwMessageToActivity(msg, new ActivityStatus(\"created\", \"\", new Date()))],\n            (ent, msg) => GW3Bridge.activityToActivityStatusChangeEvent(ent),\n            this._activityChangeCallbacks);\n    }\n\n    private forwardPeerFactoryMessagesToStatusEventHandlers() {\n        this.forwardAddedAndRemovedMessagesToEventHandler<PeerFactoryGwMessage, WindowType>(\n            gwMessagePeerFactoriesAdded,\n            gwMessagePeerFactoriesRemoved,\n            (msg: PeerFactoryGwMessage, isAdded: boolean) => isAdded\n                ? msg.factories.map(GW3Bridge.peerFactoryGwMessageEntityToWindowType)\n                : msg.factory_ids.map((id) => this.peerFactoryIdAndOwnerIdToWindowType(id, msg.owner_id)).filter((x) => x != null),\n            this._windowTypeStatusChangeCallbacks);\n    }\n\n    private forwardPeerFactoryMessagesToPeerFactoryRequests() {\n        this.subscribe(\n            gwMessagePeerRequested,\n            (msg: PeerRequestedGwMessage) => {\n                const factory = this._peerFactoriesRegisteredByUs[msg.peer_factory];\n                if (!factory) {\n                    this._gw3Session.send(\n                        {\n                            type: gwMmessageError,\n                            request_id: msg.request_id,\n                            reason: `Unknown peer factory ${msg.peer_factory}`\n                        });\n                    return;\n                }\n\n                try {\n                    const configuration = msg.configuration || {};\n                    // NB: peer factories (or whoever they're delegating to) need to support whatever activity\n                    // environment (GW3, HC) we're targeting when they're creating peers\n                    // the manager is env agnostic, the bridge will augment the configuration with whatever's required\n\n                    // NB: also, since peers are requested in two ways (single peer with just its configuration,\n                    // or peer created as part of new activity, where the factory receives the aggregate config of\n                    // all peers, combined from ADD ACTIVITY TYPE and CREATE ACTIVITY), the peer factories need to\n                    // be able to handle both configuration structures intelligently.\n                    configuration.gateway_token = configuration.gateway_token || msg.gateway_token;\n                    configuration.peer_factory = configuration.peer_factory || msg.peer_factory;\n                    const promise = factory({\n                        activityId: msg.activity && msg.activity.id,\n                        activityType: msg.activity && msg.activity.type,\n                        type: msg.configuration && msg.configuration.type,\n                        gwToken: configuration.gateway_token,\n                        configuration\n                    });\n                    if (promise && promise.then && promise.catch) {\n                        promise.catch((err) => this._gw3Session.send(\n                            {\n                                type: gwMmessageError,\n                                request_id: msg.request_id,\n                                reason: err && (err.message || JSON.stringify(err))\n                            }));\n                    }\n                } catch (err) {\n                    this._gw3Session.send(\n                        {\n                            type: gwMmessageError,\n                            request_id: msg.request_id,\n                            reason: err && (err.message || JSON.stringify(err))\n                        });\n                }\n            });\n    }\n\n    private forwardActivityWindowMessagesToEventHandlers() {\n        for (const joinedMessage of [gwMessageActivityJoined, gwMessageJoinedActivity]) {\n            this.subscribe(joinedMessage,\n                (msg: any) => {\n                    const joinedId = (joinedMessage === gwMessageActivityJoined) ? msg.joined_id : msg.peer_id;\n                    const joinedType = (joinedMessage === gwMessageActivityJoined) ? msg.joined_type : msg.peer_type;\n                    const joinedName = (joinedMessage === gwMessageActivityJoined) ? msg.joined_name : msg.peer_name;\n\n                    const entity = new ActivityWindow(\n                        joinedId,\n                        joinedName,\n                        joinedType /* for ACTIVITY JOINED */,\n                        msg.activity_id,\n                        this.getAgmInstance(joinedId),\n                        undefined,\n                        this.generateWindowGetter(joinedId),\n                        undefined);\n\n                    // TODO review - what if it's our activity, do we\n                    // even need to subscribe\n                    if (!this._contextSubscriptions[msg.activity_id]) {\n                        this.subscribeToContext(msg).then(() => {\n                            if (joinedMessage === gwMessageJoinedActivity) {\n                                this._activityJoinedPromiseResolve({});\n                            }\n                        });\n                    } else if (joinedMessage === gwMessageJoinedActivity) {\n                        this._activityJoinedPromiseResolve({});\n                    }\n\n                    // TODO review: we might have the context data here already\n                    // why not update it here instead of waiting for subscribeToContext\n                    this.invokeCallbacks(\n                        this._activityWindowChangeCallbacks,\n                        new EntityEvent<ActivityWindow>(\n                            entity,\n                            new EntityEventContext(EntityEventType.ActivityWindowJoinedActivity)),\n                        joinedMessage);\n\n                });\n        }\n\n        this.subscribe(\n            gwMessageActivityLeft,\n            (msg: any) => {\n                const entity = new ActivityWindow(\n                    msg.left_id,\n                    undefined,\n                    undefined,\n                    null,\n                    this.getAgmInstance(msg.left_id),\n                    undefined,\n                    this.generateWindowGetter(msg.left_id),\n                    undefined);\n\n                this.invokeCallbacks(\n                    this._activityWindowChangeCallbacks,\n                    new EntityEvent<ActivityWindow>(\n                        entity,\n                        new EntityEventContext(EntityEventType.ActivityWindowLeftActivity)),\n                    gwMessageActivityLeft);\n            });\n\n        this.forwardAddedAndRemovedMessagesToEventHandler<PeerCreatedGwMessage, ActivityWindow>(\n            gwMessagePeerCreated,\n            undefined,\n            (msg) => [\n                new ActivityWindow(\n                    msg.created_id,\n                    undefined /* #deleteme TODO: review - we should know the name if any */,\n                    undefined /* #deleteme TODO: review - we should know the type */,\n                    undefined,\n                    undefined,\n                    undefined,\n                    this.generateWindowGetter(msg.created_id),\n                    undefined)],\n            this._activityWindowChangeCallbacks);\n    }\n\n    private getAgmInstance(id: string): Glue42.AGM.Instance {\n        return this._config.agm.servers().find((s) => s.peerId === id || s.windowId === id);\n    }\n\n    private generateWindowGetter(peerId: string): () => Glue42.Windows.GDWindow {\n        return () => {\n            const server = this.getAgmInstance(peerId);\n            if (!server) {\n                return;\n            }\n            const windowId = server.windowId;\n            return this._config.windows.list().filter((w) => w.id === windowId)[0];\n        };\n    }\n\n    private isOverrideTypeDefinition(value: OverrideTypeDefinition | WindowDefinition[]): value is OverrideTypeDefinition {\n        if (typeof value === \"undefined\") {\n            return false;\n        }\n        if ((value as OverrideTypeDefinition).owner) {\n            return true;\n        }\n        return false;\n    }\n}\n","import { EntityEventType } from \"./../contracts/entityEvent\";\nimport Activity from \"./../entities/activity\";\nimport ActivityWindow from \"./../entities/activityWindow\";\n\nimport ActivityManager from \"./../core/activityManager\";\nimport { Logger } from \"./../helpers/logger\";\nimport * as util from \"./../helpers/util\";\n\nimport { WindowDefinition } from \"./../entities/windowDefinition\";\nimport { CloneOptions } from \"../entities/cloneOptions\";\nimport { Callback } from \"../contracts/contracts\";\nimport { AttachedActivityDescriptor } from \"../entities/attachedActivityDescriptor\";\nimport { Glue42 } from \"../../../glue\";\n\nexport interface My {\n\n  activity: Activity;\n\n  window: ActivityWindow;\n\n  context: object;\n\n  updateContext(context: object, callback?: any): Promise<object>;\n\n  setContext(context: object, callback?: any): Promise<object>;\n\n  onActivityJoined(callback: (activity: Activity) => void): void;\n\n  onActivityLeft(callback: (activity: Activity) => void): void;\n\n  onContextChanged(callback: (context: object, delta: object, removed: string[], activity: Activity) => void): void;\n\n  clone(options: CloneOptions, callback: Callback<Activity>): Promise<Activity>;\n\n  attach(activity: Activity | string, tag?: object): Promise<AttachedActivityDescriptor>;\n\n  setFrameColor(color: string, callback: () => void): Promise<Activity>;\n\n  getFrameColor(): string;\n\n  onFrameColorChanged(callback: () => void): void;\n}\n\n/**\n * A lightweight, single activity oriented subset of the API which should be used by most activity applications.\n * Provides access to the activity of your application (my.activity) and shortcuts to the most commonly used methods\n * (e.g. my.createWindow is a shortcut for my.activity.createWindow)\n *\n * @module my\n */\nexport default class ActivityMy implements My {\n\n  public _myAttached: Array<(state: AttachedActivityDescriptor) => void> = [];\n  public _myDetached: Array<(state: AttachedActivityDescriptor) => void> = [];\n  public _myAttachedTo: Array<(activity: Activity, state: AttachedActivityDescriptor) => void> = [];\n  public _myDetachedFrom: Array<(detached: Activity, existing: Activity, state: AttachedActivityDescriptor) => void> = [];\n  public _myActivityFrameColorChanged: Array<(frameColor: string) => void> = [];\n  public _myActivityJoinedCallbacks: Array<(activity: Activity, event: any) => void> = [];\n  public _myActivityRemovedCallbacks: Array<(activity: Activity, event: any) => void> = [];\n  public _myContextUpdateCallbacks: Array<(context: object, delta: object, removed: string[], activity: Activity) => void> = [];\n  public _w: ActivityWindow;\n  public _m: ActivityManager;\n  public _logger: Logger = Logger.Get(this);\n\n  constructor(manager: ActivityManager, windows: any) {\n    this._m = manager;\n    manager.ready()\n      .then((am) => {\n        // Subscribe for events for driving \"my\" logic\n        am.subscribeActivityContextChanged(this._subscribeMyContextChanged.bind(this));\n        am.subscribeWindowEvents(this._subscribeMyWindowEvent.bind(this));\n        am.subscribeActivitiesAttached(this._subscribeActivitiesAttached.bind(this));\n        am.subscribeActivitiesDetached(this._subscribeActivitiesDetached.bind(this));\n        if (windows) {\n          windows.onWindowFrameColorChanged(this._subscribeWindowFrameColorChanged.bind(this));\n        }\n      });\n  }\n\n  /**\n   * The current activity window; can be undefined (if the window is not part of any activity)\n   *\n   * @var {Window} window\n   */\n  public get window(): ActivityWindow {\n    if (util.isUndefinedOrNull(this._w)) {\n      const announcedWindows = this._m.announcedWindows;\n      if (announcedWindows.length > 0) {\n        this._w = announcedWindows[0];\n      }\n    }\n    return this._w;\n  }\n\n  /**\n   * The current activity that the application participates in.\n   * Can be undefined (if currently not part of any activity)\n   *\n   * @var {module:activity} activity\n   */\n  public get activity(): Activity {\n    const myWin = this.window;\n    if (util.isUndefinedOrNull(myWin)) {\n      return undefined;\n    }\n    return myWin.activity;\n  }\n\n  /**\n   * Creates a new window and joins it to the activity\n   *\n   * @function createWindow\n   * @param {string| windowDefinition} windowType The type of the window to be created\n   * @returns {Promise<module:activityWindow>}\n   */\n  public createWindow(windowType: string | WindowDefinition): Promise<ActivityWindow> {\n    return this._m.createWindow(this.activity, windowType);\n  }\n\n  /**\n   * Creates a stacked set of windows and joins them to the\n   *\n   * @function createStackedWindows\n   * @param {string[] | windowDefinition[]} windowTypes The types of the windows to be created\n   * @param {number} timeout\n   * @returns {Promise<module:activityWindow[]>}\n   */\n  public createStackedWindows(windowTypes: Array<string | WindowDefinition>, timeout?: number): Promise<ActivityWindow[]> {\n    return this._m.createStackedWindows(this.activity, windowTypes, timeout);\n  }\n\n  /**\n   * The current activity context. To update use my.updateContext, to replace my.setContext\n   *\n   * @var {object} context\n   */\n  public get context(): object {\n    const activity = this.activity;\n    if (util.isUndefined(activity)) {\n      return {};\n    }\n\n    return activity.context;\n  }\n\n  /**\n   * Updates activity context using the properties from the context argument.\n   * If old context is {a:1, b:2, c:3} and invoking updateContext({b:3, c:null}) will result a context\n   * be {a:1, b:3}\n   *\n   * @function updateContext\n   * @param {object} context\n   * @return {Promise<object>}\n   */\n  public updateContext(context: object, callback?: any): Promise<object> {\n    const activity = this.activity;\n    if (util.isUndefined(activity)) {\n      return new Promise<object>((resolve, reject) => {\n        reject(\"Not in activity\");\n      });\n    }\n\n    return activity.updateContext(context, callback);\n  }\n\n  /**\n   * Replaces the activity context with a new one.\n   *\n   * @function setContext\n   * @param {object} context   The new context\n   * @returns {Promise<Object>}\n   */\n  public setContext(context: object, callback?: any): Promise<object> {\n    const activity = this.activity;\n    if (util.isUndefined(activity)) {\n      return new Promise((resolve, reject) => {\n        reject(\"Not in activity\");\n      });\n    }\n\n    return activity.setContext(context, callback);\n  }\n\n  public onActivityJoined(callback: (activity: Activity) => void) {\n    this._myActivityJoinedCallbacks.push(callback);\n\n    // replay joined event\n    const myWin = this.window;\n    if (!util.isUndefinedOrNull(myWin) && !util.isUndefinedOrNull(myWin.activity)) {\n      callback(myWin.activity);\n    }\n  }\n\n  public onActivityLeft(callback: (activity: Activity) => void) {\n    this._myActivityRemovedCallbacks.push(callback);\n  }\n\n  /**\n   * Subscribe for context updates\n   *\n   * @function onContextChanged\n   * @param {contextChangedHandler} callback Handler function that will receive context related events\n   */\n  public onContextChanged(callback: (context: object, delta: object, removed: string[], activity: Activity) => void) {\n    this._myContextUpdateCallbacks.push(callback);\n\n    // publish initial event\n    const myWin = this.window;\n    if (util.isUndefinedOrNull(myWin)) {\n      return;\n    }\n\n    const activity = myWin.activity;\n    if (util.isUndefinedOrNull(activity)) {\n      return;\n    }\n\n    // NB: either the callback is added before the activity is recorded in the API, or\n    // the activity is recorded before the callback\n    // in the former case, when the activity is seen, the callback will be invoked in _notifyMyContextChanged\n    // in the latter, the callback will be invoked here\n    // in both cases, the callback will be invoked at least once as soon as an activity is recorded\n\n    // see \"long analysis for callback behavior in GW3: several cases\" for full explanation\n\n    callback(activity.context, activity.context, [], activity);\n  }\n\n  public clone(options: CloneOptions, callback: Callback<Activity>): Promise<Activity> {\n    const act = this.activity;\n    return this._m.clone(act, options, callback);\n  }\n\n  public attach(activity: Activity | string, tag?: object): Promise<AttachedActivityDescriptor> {\n    let activityId: string;\n    if (typeof activity === \"string\") {\n      activityId = activity;\n    } else {\n      activityId = activity.id;\n    }\n    return this._m.attachActivities(activityId, this.activity.id, tag);\n  }\n\n  public onActivityAttached(callback: (state: AttachedActivityDescriptor) => void) {\n    this._myAttached.push(callback);\n  }\n\n  public onActivityDetached(callback: (state: AttachedActivityDescriptor) => void) {\n    this._myDetached.push(callback);\n  }\n\n  public onAttachedToActivity(callback: (activity: Activity, state: AttachedActivityDescriptor) => void) {\n    this._myAttachedTo.push(callback);\n  }\n\n  public onDetachedFromActivity(callback: (detached: Activity, existing: Activity, state: AttachedActivityDescriptor) => void)  {\n    this._myDetachedFrom.push(callback);\n  }\n\n  public get attached() {\n    if (!this.activity) {\n      return [];\n    }\n\n    return this.activity.attached;\n  }\n\n  public setFrameColor(color: string, callback: () => void): Promise<Activity> {\n\n    if (this.activity) {\n      return this.activity.setFrameColor(color, callback);\n    } else {\n      return Promise.resolve(null);\n    }\n  }\n\n  public getFrameColor(): string {\n\n    if (this.activity) {\n      return this.activity.getFrameColor();\n    }\n\n    return \"\";\n  }\n\n  public onFrameColorChanged(callback: () => void) {\n    this._myActivityFrameColorChanged.push(callback);\n  }\n\n  private _subscribeMyContextChanged(activity: Activity, context: object, delta: object, removed: string[]) {\n    const myWin = this.window;\n    if (util.isUndefinedOrNull(myWin)) {\n      return;\n    }\n\n    const myActivity = myWin.activity;\n    if (util.isUndefinedOrNull(myActivity)) {\n      return;\n    }\n\n    // ignore events not related to my activity\n    if (activity.id !== myActivity.id) {\n      return;\n    }\n\n    this._notifyMyContextChanged(activity, context, delta, removed);\n  }\n\n  private _subscribeMyWindowEvent(activity: Activity, window: ActivityWindow, event: any) {\n\n    if (util.isUndefinedOrNull(this.window)) {\n      return;\n    }\n\n    // ignore events not related to my window\n    if (this.window.id !== window.id) {\n      return;\n    }\n\n    if (event === EntityEventType.ActivityWindowJoinedActivity) {\n      this._notifyMyWindowEvent(activity, this._myActivityJoinedCallbacks);\n\n      // NB: tick42-contexts doesn't raise automatically an update event on join if the snapshot matches\n      // the currently recorded data\n      // revisited: however, it is pushing an update on subscribe() (which is performed by js-activity)\n      // long analysis for callback behavior in GW3: several cases\n      // 1 client calls onContextChanged before joined-activity arrives\n      // then callback is pushed but onContextChanged callback call is skipped\n      //    1-1 js-activity handles joined-activity first; it calls js-context subscribe\n      //    1-1-1 js-context has not seen the activity so far so it doesn't invoke an update\n      //    however, js-context then handles joined-activity and raises an update\n      //    1-1-2 js-context has seen the activity, so it raises an update\n      //    js-context then handles joined-activity and doesn't raise a second update unless the received snapshot is\n      //    different from the last seen context value (can this even happen?)\n      //    1-2 js-context handles joined-activity first\n      //    since js-activity is not subscribed, whether it raises an update or not, it's not propagated\n      //    js-activity then handles joined-activity, performs a subscribe and js-context raises an update\n      // 2 joined-activity arrives, whatever updates are raised by js-activity's subscribe() or js-context's\n      // message handler are not propagated since the callback is not pushed, client then calls onContextChanged,\n      // and the callback is called inside that\n      // also, the callback cannot be invoked first in 1 then 2 or first 2 then 1\n      // => in all cases, a callback is called exactly once as soon as (it's subscribed && the activity is joined)\n      // (in 1-1-2 it *might* be possible to be called twice, first with a slightly out of date context,\n      // then with the joined-activity snapshot, see \"different from the last seen context value\", but it's unlikely,\n      // and not a real issue anyway)\n      // in the HC case, however, case 1 doesn't work since js-context doesn't raise updates on subscribe() nor\n      // joining the activity (#deleteme TODO LATER MINOR: verify), so we need to raise it ourselves\n\n      // 2017-09-08: final revisit (@vnikolov)\n      // since SBGW_D-163 allows automatic subscription to contexts of pre-existing activities, 1-1-2 no longer works\n      // (we might have already seen the latest state before joined-activity so no update will be raised)\n      // for this reason I'm invoking notifyMyContextChanged unconditionally - so we might have multiple\n      // invocations; if this turns into a problem we might add a guard inside notifyMyContextChanged that\n      // checks we're not raising it twice with the same context value\n      //\n      // we might also get a duplicate raise if the sender of an update is also subscribed to the context\n      // if (this._m.usingHc) {\n      this._notifyMyContextChanged(activity, activity.context, null, null);\n      // }\n\n      // #deleteme TODO LATER MAJOR: what about the cases when we're not watching foreign activity contexts?\n    } else if (event === EntityEventType.ActivityWindowLeftActivity) {\n      this._notifyMyWindowEvent(activity, this._myActivityRemovedCallbacks);\n      // #deleteme TODO LATER MINOR: should we send null update here?\n    }\n  }\n\n  private _notifyMyWindowEvent(activity: Activity, callbackStore: Array<(activity: Activity, event: any) => void>) {\n    callbackStore.forEach((element) => {\n      try {\n        element(activity, event);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _notifyMyContextChanged(activity: Activity, context: object, delta?: object, removed?: string[]) {\n    delta = delta || {};\n    removed = removed || [];\n\n    this._myContextUpdateCallbacks.forEach( (element) => {\n      try {\n        element(context, delta, removed, activity);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _notifyAttached(state: AttachedActivityDescriptor) {\n\n    this._myAttached.forEach((cb) => {\n      try {\n        cb(state);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _notifyDetached(state: AttachedActivityDescriptor) {\n\n    this._myDetached.forEach((cb) => {\n      try {\n        cb(state);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _notifyAttachedTo(state: AttachedActivityDescriptor) {\n\n    this._myAttachedTo.forEach((cb) => {\n      try {\n        cb(this.activity, state);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _notifyDetachedFrom(detached: Activity, existing: Activity, state: AttachedActivityDescriptor) {\n\n    this._myDetachedFrom.forEach((cb) => {\n      try {\n        cb(detached, existing, state);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _subscribeActivitiesAttached(newAct: Activity, state: AttachedActivityDescriptor) {\n    const myWin = this.window;\n    if (util.isUndefinedOrNull(myWin)) {\n      return;\n    }\n\n    const myActivity = myWin.activity;\n    if (util.isUndefinedOrNull(myActivity)) {\n      return;\n    }\n\n    // ignore events not related to my activity\n    if (newAct.id !== myActivity.id) {\n      return;\n    }\n\n    if (state.windowIds.indexOf(myWin.id) >= 0) {\n      this._notifyAttachedTo(state);\n      return;\n    }\n\n    this._notifyAttached(state);\n  }\n\n  private _subscribeActivitiesDetached(newAct: Activity, oldAct: Activity, state: any) {\n    const myWin = this.window;\n    if (util.isUndefinedOrNull(myWin)) {\n      return;\n    }\n\n    const myActivity = myWin.activity;\n    if (util.isUndefinedOrNull(myActivity)) {\n      return;\n    }\n\n    // ignore events not related to my activity\n    if (oldAct.id === myActivity.id) {\n      this._notifyDetached(state);\n    }\n\n    if (newAct.id === myActivity.id) {\n      this._notifyDetachedFrom(newAct, oldAct, state);\n    }\n  }\n\n  private _subscribeWindowFrameColorChanged(window: Glue42.Windows.GDWindow) {\n    const act = this.activity;\n    if (!act) {\n      return;\n    }\n\n    if (!act.owner) {\n      return;\n    }\n\n    if (act.owner.underlyingWindow.id === window.id) {\n      this._myActivityFrameColorChanged.forEach((callback) => {\n        callback(window.frameColor);\n      });\n    }\n  }\n}\n","import {Logger} from \"./logger\";\nimport * as util from \"../helpers/util\";\n/**\n * Class that can be used as a marker for successful completion of a set of events\n * @private\n * @module readyMarker\n */\nexport class ReadyMarker {\n  private _callbacks: Array<(err: any) => void>;\n  private _signals: number;\n  private _error: any;\n  private _logger: Logger;\n  private _name: string;\n\n  /**\n   * Creates new marker\n   * @param name Name of the marker, useful in logging\n   * @param signalsToWait Number of signals(events) that needs to be signaled (completed) before the marker is set as completed\n   */\n  constructor(name: string, signalsToWait: number) {\n    this._logger = Logger.Get(\"ReadyMarker [\" + name + \"]\");\n    this._logger.debug(\"Initializing ready marker for '\" + name + \"' with \" + signalsToWait + \" signals to wait\");\n    if (signalsToWait <= 0) {\n      throw new Error(\"Invalid signal number. Should be > 0\");\n    }\n    this._signals = signalsToWait;\n    this._callbacks = [];\n    this._name = name;\n  }\n\n  /**\n   * Adds a new callback that will be notified when the events are completed (success) or some error happened\n   */\n  public setCallback(callback: (err: any) => void) {\n    if (this.isSet()) {\n      callback(undefined);\n      return;\n    } else if (this.isError()) {\n      callback(this._error);\n      return;\n    }\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Signals for a completion of an event. If this is the last event success callbacks will be called\n   */\n  public signal(message?: string) {\n    this._logger.debug(\"Signaled - \" + message + \" - signals left \" + (this._signals - 1));\n    this._signals--;\n    if (this._signals < 0) {\n      throw new Error(\"Error in ready marker '\" + this._name + \" - signals are \" + this._signals);\n    }\n\n    if (this.isSet()) {\n      this._callbacks.forEach((callback) => {\n        callback(undefined);\n      });\n    }\n  }\n\n  /**\n   * Signals for an error in some of the events. This will notify all callbacks that the marker has failed\n   */\n  public error(error: string) {\n    this._error = error;\n    this._callbacks.forEach((errorCallback) => {\n      errorCallback(error);\n    });\n  }\n\n  /**\n   * Checks if the marker is set (completed)\n   */\n  public isSet() {\n    if (this.isError()) {\n      return false;\n    }\n    return this._signals === 0;\n  }\n\n  /**\n   * Checks if the marker has failed (some of the events has failed)\n   */\n  public isError() {\n    return !util.isUndefined(this._error);\n  }\n\n  /**\n   * Returns the last reported error (undefined if no error)\n   */\n  public getError() {\n    return this._error;\n  }\n}\n","import ActivityEntity from \"../entities/activityEntity\";\nimport {\n  ActivityStatusChangeEventContext,\n  EntityEvent,\n  EntityEventContext,\n  EntityEventType\n} from \"../contracts/entityEvent\";\nimport Activity from \"../entities/activity\";\nimport ActivityWindow from \"../entities/activityWindow\";\nimport { ActivityState } from \"..//contracts/entityEvent\";\n\ndeclare const htmlContainer: any;\n\n/**\n * Collection of ActivityEntities that provides change notifications\n * @module entityCollection\n * @private\n */\nexport class EntityObservableCollection<T extends ActivityEntity> {\n\n  private _items: { [key: string]: T } = {};\n  private _listeners: Array<(item: T, action: EntityEventContext) => void> = [];\n  private _processNew: (entity: T) => void;\n\n  constructor(processNew: (entity: T) => void) {\n    this._processNew = processNew;\n  }\n\n  /**\n   * Adds one item to the collection\n   */\n  public addOne(item: T) {\n    this.add([item]);\n  }\n\n  /**\n   * Adds an array of items to the collection\n   */\n  public add(items: T[]) {\n    items.forEach((element) => {\n      this.process(new EntityEvent<T>(element, new EntityEventContext(EntityEventType.Added)));\n    });\n  }\n\n  /**\n   * Process existing EntityEvent\n   */\n  public process(event: EntityEvent<T>): T {\n\n    const context = event.context;\n    const type = context.type;\n    const entity = event.entity;\n\n    // here we're populating some data which particular implementations (e.g.\n    // GW3) can't provide\n\n    // TODO: extract these cases into external filters\n\n    // activity status change without old status?\n    // grab it from the existing entity\n    if (type === EntityEventType.StatusChange &&\n      !(context as ActivityStatusChangeEventContext).oldStatus) {\n      const act = this._items[entity.id] as any as Activity;\n      if (act) {\n        (context as ActivityStatusChangeEventContext).oldStatus = act.status;\n      }\n    }\n\n    // the GW3 bridge notifies us of possible status changes (it's mostly stateless so\n    // it can't/doesn't distinguish between JOINED ACTIVITY for an activity we already\n    // know about vs a brand new activity. for this reason, we just coalesce status\n    // updates which indicate the same state.\n    if (type === EntityEventType.StatusChange &&\n      (context as ActivityStatusChangeEventContext).oldStatus &&\n      (context as ActivityStatusChangeEventContext).newStatus &&\n      (context as ActivityStatusChangeEventContext).oldStatus.state ===\n      (context as ActivityStatusChangeEventContext).newStatus.state) {\n      context.type = EntityEventType.Updated;\n    }\n\n    // GW3: coalesce multiple joined/left events\n\n    if (typeof htmlContainer === \"undefined\") {\n      if (type === EntityEventType.ActivityWindowJoinedActivity &&\n        this._items[entity.id] &&\n        (this._items[entity.id] as any as ActivityWindow).activity) {\n        context.type = EntityEventType.Updated;\n      }\n      if (type === EntityEventType.ActivityWindowLeftActivity &&\n        this._items[entity.id] &&\n        !(this._items[entity.id] as any as ActivityWindow).activity) {\n        context.type = EntityEventType.Updated;\n      }\n    }\n\n    // update internal collections (adding the entity or updating existing entity). From that\n    // point start using the internalEntity\n    // NB: undefined properties are coalesced, null properties represent removals\n    const internalEntity = this._updateInternalCollections(entity, type, context);\n    this._notifyListeners(internalEntity, context);\n    return internalEntity;\n  }\n\n  /**\n   * Gets all items from the collection.\n   */\n  public get(): T[] {\n    const result = [];\n    for (const key in this._items) {\n      if (this._items.hasOwnProperty(key)) {\n        const element = this._items[key];\n        result.push(element);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Gets item by name/id\n   * @param name  Name/id of the item to get\n   * @returns     Item if found; undefined if not\n   */\n  public getByName(name: string) {\n    // this does not work for some reason\n    // return this._items[name];\n    for (const key in this._items) {\n      if (key === name) {\n        return this._items[key];\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Gets a item if in the collection or waits for it to appear\n   * @param name\n   * @returns {Promise<T>}\n   */\n  public getOrWait(name: string): Promise<T> {\n    return new Promise<T>((resolve) => {\n      const entityAddedHandler = (entity: T) => {\n        if (entity.id !== name) {\n          return;\n        }\n        resolve(entity);\n        this.unsubscribe(entityAddedHandler);\n      };\n      this.subscribe(entityAddedHandler);\n\n      // try to get right away - if not here wait for it to appear\n      const window = this.getByName(name);\n      if (window) {\n        this.unsubscribe(entityAddedHandler);\n        resolve(window);\n        return;\n      }\n    });\n  }\n\n  /**\n   * Subscribes a listener for changes\n   * @param handler Callback for changes\n   */\n  public subscribe(handler: (act: T, action: EntityEventContext) => void): () => void {\n    this._listeners.push(handler);\n    // replay existing items for new subscribers\n    Object.keys(this._items).forEach((key) => {\n      const element = this._items[key];\n      handler(element, new EntityEventContext(EntityEventType.Added.toString()));\n    });\n\n    return () => {\n      this.unsubscribe(handler);\n    };\n  }\n\n  /**\n   *  Unsubscribes a listener\n   */\n  public unsubscribe(handler: (act: T, action: EntityEventContext) => void) {\n    const index = this._listeners.indexOf(handler);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Notify all listeners for some event\n   */\n  private _notifyListeners(entity: T, context: EntityEventContext) {\n    this._listeners.forEach((listener) => {\n      try {\n        listener(entity, context);\n      } catch (e) {\n        return;\n      }\n    });\n  }\n\n  /**\n   * Update internal collections (usually after some kind of modification event has arrived)\n   */\n  private _updateInternalCollections(entity: T, type: EntityEventType, context: any) {\n    const entityAsAny = (entity as any);\n\n    // #deleteme TODO: refactor - currently we apply some rules for each type\n    const isActivityDestroy =\n      (type === EntityEventType.StatusChange &&\n        entityAsAny.status &&\n        entityAsAny.status.state === ActivityState.Destroyed) ||\n      (type === EntityEventType.StatusChange &&\n        context &&\n        context.newStatus &&\n        context.newStatus.state === ActivityState.Destroyed);\n\n    // #deleteme TODO: verify this stuff\n    // windows have two states - removed from activity and closed (TODO: this only works in GD 2.1 and later)\n    const isWindowClose = type === EntityEventType.Closed;\n    const isTypeRemove = type === EntityEventType.Removed && typeof entityAsAny.isIndependent === \"undefined\";\n\n    if (isTypeRemove || isWindowClose || isActivityDestroy) {\n\n      const oldEntity = this._items[entity.id];\n      delete this._items[entity.id];\n      // on remove return the input entity\n      this._processNew(entity);\n      if (oldEntity) {\n        entity._beforeDelete(oldEntity);\n      }\n      return entity;\n    } else {\n      const key = entity.id;\n      // if new object add, otherwise clone object properties\n      if (!this._items.hasOwnProperty(key)) {\n        this._processNew(entity);\n        this._items[entity.id] = entity;\n      } else {\n        this._items[entity.id]._update(entity);\n      }\n    }\n\n    return this._items[entity.id];\n  }\n}\n","﻿/* tslint:disable */\nimport { ActivityContextUpdateHandler, Callback } from \"../contracts/contracts\";\nimport { ActivityStatus } from \"../contracts/activityStatus\";\nimport {\n  ActivityContextChangedEventContext,\n  ActivityStatusChangeEventContext,\n  EntityEvent,\n  EntityEventContext,\n  EntityEventType\n} from \"../contracts/entityEvent\";\n\nimport ActivityType from \"../entities/activityType\";\nimport WindowType from \"../entities/windowType\";\nimport Activity from \"../entities/activity\";\nimport ActivityEntity from \"../entities/activityEntity\";\nimport ActivityWindow from \"../entities/activityWindow\";\nimport WindowSource from \"../entities/windowSource\";\n\nimport { nodeify } from \"../helpers/promiseExtensions\";\nimport { ReadyMarker } from \"../helpers/readyMarker\";\nimport { EntityObservableCollection } from \"../helpers/entityObservableCollection\";\nimport { Logger } from \"../helpers/logger\";\nimport * as util from \"../helpers/util\";\n\nimport { ActivityBridge } from \"../bridges/activityBridge\";\nimport { WindowDefinition } from \"../entities/windowDefinition\";\nimport { WindowBounds } from \"../contracts/windowBounds\";\nimport { CloneOptions } from \"../entities/cloneOptions\";\nimport { AttachedActivityDescriptor } from \"../entities/attachedActivityDescriptor\";\nimport { ActivityDescriptor } from \"../entities/activityDescriptor\";\nimport { ActivityState } from \"../contracts/entityEvent\";\nimport { WindowFactory } from \"../contracts/windowFactory\";\nimport { Glue42 } from \"../../../glue\";\n/* tslint:enable */\n\ntype OverrideTypeDefinition = Glue42.Activities.OverrideTypeDefinition;\n\ndeclare const htmlContainer: any;\n\nexport default class ActivityManager {\n  private _bridge: ActivityBridge;\n  private _readyMarker: ReadyMarker;\n  private _dataReadyMarker: ReadyMarker;\n  private _descriptorsMarker: ReadyMarker;\n\n  private _activityTypes: EntityObservableCollection<ActivityType>;\n  private _windowTypes: EntityObservableCollection<WindowType>;\n  private _activities: EntityObservableCollection<Activity>;\n  private _windows: EntityObservableCollection<ActivityWindow>;\n  private _logger: Logger = Logger.Get(\"activityManager\");\n  private _announcedWindows: ActivityWindow[] = [];\n  private _attachedCallbacks: Array<(newAct: any, descriptor: any) => void> = [];\n  private _detachedCallbacks: Array<(newAct: any, oldAct: Activity, descriptor: any) => void> = [];\n  private _frameColorChangesCallbacks: Array<(act: Activity, frameColor: string) => void> = [];\n  private _windowHandlers: any[][] = [];\n\n  public get usingHc(): boolean {\n    return this._bridge.bridgeType === \"HC\";\n  }\n\n  public get announcedWindows(): ActivityWindow[] {\n    return this._announcedWindows;\n  }\n\n  public set announcedWindows(v: ActivityWindow[]) {\n    throw new Error(\"not allowed\");\n  }\n\n  constructor(bridge: ActivityBridge, autoAnnounce: boolean, windows: any) {\n    this._bridge = bridge;\n    this._activityTypes = new EntityObservableCollection<ActivityType>((e) => this._grabEntity(e));\n    this._windowTypes = new EntityObservableCollection<WindowType>((e) => this._grabEntity(e));\n    this._activities = new EntityObservableCollection<Activity>((e) => this._grabEntity(e));\n    this._windows = new EntityObservableCollection<ActivityWindow>((e) => this._grabEntity(e));\n\n    // signals to wait for - get AT, get WT, get Activities and get Windows\n    this._dataReadyMarker = new ReadyMarker(\"Activity Manager Data\", [\"GetActivityTypes\", \"GetWindowTypes\", \"GetActivities\", \"GetWindows\"].length);\n    this._descriptorsMarker = new ReadyMarker(\"Attached Activities Descriptors\", [\"GetDescriptors\"].length);\n\n    // waiting for activity data first\n\n    // NB: in the GW3 case, we don't have the ability to request data at will\n    // but need wait for delta messages\n    // So GW3Bridge returns empty arrays from the get() calls\n    // We're relying on the fact that the GW3 bridge will wait\n    // until resolving its .ready()\n\n    if (autoAnnounce) {\n      // if auto announce replace the ready marker, so:\n      // 1) wait for data\n      // 2) get descriptors\n      // 3) announce the current window\n\n      this._readyMarker = new ReadyMarker(\"Activity Manager Announce\", [\"Announcement\"].length);\n      this._dataReadyMarker.setCallback((dataErr: any) => {\n        if (dataErr) {\n          this._readyMarker.error(dataErr);\n        }\n\n        this._descriptorsMarker.setCallback((err: any) => {\n\n          if (err) {\n            this._readyMarker.error(err);\n          }\n\n          this._logger.debug(\"Auto announcing window\");\n          // signal no matter if it failed or not\n          this.announceWindow()\n            .then((w) => {\n              // NB: this creates glue.activities.my.window\n              this._announcedWindows.push(w);\n              this._readyMarker.signal(\"Successfully announced window with id '\" + w.id + \"'\");\n            })\n            .catch((errCatch) => {\n              this._logger.debug(\"Will not announce window - \" + errCatch);\n              this._readyMarker.signal();\n            });\n        });\n\n        this.refreshDescriptors();\n      });\n    } else {\n      // TODO: not sure if this still works\n      this._readyMarker = this._dataReadyMarker;\n    }\n\n    this._bridge.onActivitiesAttached((e) => {\n      this._handleActivitiesAttached(e);\n    });\n    this._bridge.onActivitiesDetached((e) => {\n      this._handleActivitiesDetached(e);\n    });\n    this._bridge.onActivityAttachedDescriptorsRefreshed((e) => {\n      this._handleActivityDescriptorsRefreshed(e);\n    });\n    if (windows) {\n      windows.onWindowFrameColorChanged(this._handleWindowFrameColorChanged.bind(this));\n    }\n\n    // initialize the bridge\n    this._bridge.init();\n\n    // NB: there is no race condition here.\n    // Since browser/Node JS is a single-threaded environment, assuming no events on _bridge\n    // fire inside .init(), this subscribe will catch anything that comes between it and the init() call\n    this._subscribeForData();\n\n    // NB: in GW3 case, the initial state messages after a JOIN come in before the JOIN's SUCCESS\n    // message (see https://confluence.tick42.com:8443/display/TD/Global+Gateway+Domain#GlobalGatewayDomain-JOIN)\n    // so the .initReady().then() callback will only get invoked after we've received the initial domain\n    // state. We need to be ready to handle events before that, hence the _subscribeForData() above.\n    // what's more, our own JOINED ACTIVITY will come only after we've sent our READY, hence waiting\n    // for bridge.ready() in the manager's ready()\n\n    // wait for it to become ready and then start getting/subscribing for data\n    this._bridge\n      .initReady()\n      .then((aw) => {\n        this._getInitialData();\n      })\n      .catch((error) => {\n        // tslint:disable-next-line\n        console.log(error);\n      });\n  }\n\n  public ready(callback?: (err: string, manager: ActivityManager) => void): Promise<ActivityManager> {\n    const promise = new Promise<ActivityManager>((resolve, reject) => {\n      this._readyMarker.setCallback(\n        (err) => {\n          if (!err) {\n            resolve(this);\n          } else {\n            reject(this._readyMarker.getError());\n          }\n        });\n    });\n\n    return nodeify(Promise.all([this._bridge.ready(), promise]).then(() => this), callback);\n  }\n\n  /**\n   * @returns All known activity types\n   */\n  public getActivityTypes(): ActivityType[] {\n    return this._activityTypes.get();\n  }\n\n  /**\n   * Gets ActivityType by name\n   * @param name  Name to search for\n   * @returns     If found the @type ActivityType; otherwise undefined\n   */\n  public getActivityType(name: string): ActivityType {\n    return this._activityTypes.getByName(name);\n  }\n\n  /**\n   * Registers a new activity type\n   * @param activityTypeName      The name of the activity type to be created\n   * @param ownerWindowType       The type of the owner window or a WindowDefinition for the owner window\n   * @param helperWindowTypes     Types of helper windows (or WindowDefinitions for helper windows) for that activity type\n   * @param config                (HC only, deprecated) Layout config\n   * @param description           (HC only, deprecated) Description for the new activity type\n   * @param callback              (Optional) Callback for results - if not specified the method will return a promise\n   */\n  public registerActivityType(\n    activityTypeName: string,\n    ownerWindowType: string | WindowDefinition,\n    helperWindowTypes?: string[] | WindowDefinition[],\n    config?: any,\n    description?: string,\n    callback?: Callback<ActivityType>): Promise<ActivityType> {\n    const promise = new Promise<ActivityType>((resolve, reject) => {\n\n      // activityTypeName checks\n      if (util.isUndefinedOrNull(activityTypeName)) {\n        reject(\"activityTypeName argument can not be undefined\");\n        return;\n      }\n      if (!util.isString(activityTypeName)) {\n        reject(\"activityTypeName should be string\");\n        return;\n      }\n      // check if type is already defined\n      const actType = this.getActivityType(activityTypeName);\n      if (!util.isUndefinedOrNull(actType)) {\n        reject(\"Activity type '\" + activityTypeName + \"' already exists\");\n        return;\n      }\n\n      // ownerWindowType checks\n      let ownerDefinition: WindowDefinition;\n      if (util.isUndefined(ownerWindowType)) {\n        reject(\"Owner window type can not be undefined\");\n        return;\n      }\n      if (util.isString(ownerWindowType)) {\n        ownerDefinition = { type: (ownerWindowType as string), name: \"\", isIndependent: false, arguments: {} };\n      } else {\n        ownerDefinition = (ownerWindowType as WindowDefinition);\n      }\n\n      // helperWindowTypes checks\n      const helperDefinitions: WindowDefinition[] = [];\n      if (!util.isUndefined(helperWindowTypes) && util.isArray(helperWindowTypes)) {\n        // tslint:disable-next-line\n        for (const index in helperWindowTypes) {\n          const item = helperWindowTypes[index];\n          if (util.isString(item)) {\n            const definition = {\n              type: (item as string),\n              name: \"\",\n              isIndependent: false,\n              arguments: {},\n              relativeTo: \"\",\n              relativeDirection: \"\",\n              windowStyleAttributes: {}\n            };\n            helperDefinitions.push(definition);\n          } else {\n            helperDefinitions.push(item as WindowDefinition);\n          }\n        }\n      }\n\n      // redirect to bridge\n      this._bridge\n        .registerActivityType(activityTypeName,\n          ownerDefinition,\n          helperDefinitions,\n          config,\n          description)\n        .then((activityType) => {\n          // add to from collections\n          this._grabEntity(activityType);\n          resolve(activityType);\n        })\n        .catch((error) => {\n          reject(error);\n        });\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Unregister existing activity type\n   * @param type The name of the activity type to be removed\n   */\n  public unregisterActivityType(type: string, callback?: Callback<any>) {\n    const promise = new Promise<ActivityType>((resolve, reject) => {\n      // check if type is defined\n      const actType = this.getActivityType(type);\n      if (util.isUndefined(actType)) {\n        reject(\"Activity type '\" + type + \"' does not exists\");\n        return;\n      }\n      this._bridge.unregisterActivityType(type).then(() => resolve(actType), reject);\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Initiates a new activity from the given type.\n   * @param activityType  The ActivityType to initiate\n   * @param context       The initial context of the activity\n   * @param callback      Callback for result\n   * @param configuration Optional configuration passed to window/peer factories for the new activity's participants\n   * @returns             Promise for activity\n   */\n  public initiate(activityType: string, context?: object, callback?: Callback<Activity>, configuration?: WindowDefinition[] | OverrideTypeDefinition): Promise<Activity> {\n    const promise = new Promise<Activity>((resolve, reject) => {\n      // check if type is defined\n      const actType = this.getActivityType(activityType);\n      if (util.isUndefined(actType)) {\n        reject(\"Activity type '\" + activityType + \"' does not exists\");\n        return;\n      }\n\n      this._bridge\n        .initiateActivity(activityType, context, configuration)\n        .then((actId) => {\n\n          this._activities\n            .getOrWait(actId)\n            .then((act: Activity) => {\n              resolve(act);\n            })\n            .catch((err) => reject(err));\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n    return nodeify(promise, callback);\n  }\n\n  public subscribeActivityTypeEvents(handler: (act: ActivityType, action: string) => void) {\n    this._activityTypes.subscribe((at, context) => {\n      handler(at, context.type);\n    });\n  }\n\n  /**\n   * @returns All known WindowTypes\n   */\n  public getWindowTypes(): WindowType[] {\n    return this._windowTypes.get();\n  }\n\n  /**\n   * Gets WindowType by name\n   * @param name  The name of the type @type WindowType\n   * @returns     WindowType if found; undefined otherwise\n   */\n  public getWindowType(name: string): WindowType {\n    return this._windowTypes.getByName(name);\n  }\n\n  /**\n   * Registers a factory for a given WindowType. The factory will be called once window of that type is requested\n   * @param windowType   Window type that will be constructed from the factory. Can be a string (name of the window type)\n   * or object that has name, description properties\n   * @param factoryMethod      The factory that will construct Windows of that type\n   * @param description\n   * @param callback\n   * @param configuration\n   * @returns {}\n   */\n  public registerWindowFactory(\n    windowType: any,\n    factoryMethod: WindowFactory,\n    callback?: any): Promise<any> {\n    const promise = new Promise<any>((resolve, reject) => {\n      if (util.isUndefinedOrNull(windowType)) {\n        reject(\"no windowType specified\");\n        return;\n      }\n\n      if (util.isObject(windowType)) {\n        windowType = windowType.getName();\n      } else if (!util.isString(windowType)) {\n        reject(\"windowType should be string or object that has getName method\");\n        return;\n      }\n\n      this._bridge\n        .registerWindowFactory(windowType, factoryMethod)\n        .then((v) => {\n          resolve(v);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Unregisters all factories for a given WindowType.\n   * @param windowType   Window type that is constructed from the factory.\n   * @param callback\n   * @returns {}\n   */\n  public unregisterWindowFactory(windowType: string, callback?: any): Promise<any> {\n    const promise = new Promise<any>((resolve, reject) => {\n      if (util.isUndefinedOrNull(windowType)) {\n        reject(\"no windowType specified\");\n        return;\n      }\n\n      if (!util.isString(windowType)) {\n        reject(\"windowType should be a string\");\n        return;\n      }\n\n      this._bridge\n        .unregisterWindowFactory(windowType)\n        .then((v) => {\n          resolve(v);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * @returns All started activities\n   * @param activityType Can be a string or @type ActivityType. If string a new activityType will be created using the string for name.\n   * @returns Array of Activity objects\n   */\n  public getActivities(activityType?: string | ActivityType | string[] | ActivityType[]): Activity[] {\n    let act = this._activities.get();\n    act = act.filter((a) => a._ownerId);\n    if (!activityType) {\n      return act;\n    }\n    let types: any = activityType;\n    if (util.isString(activityType)) {\n      types = [activityType];\n    } else if (activityType instanceof ActivityType) {\n      types = [activityType.name];\n    } else if (activityType instanceof Array) {\n      // TODO check if string array or array of ActivityTypes\n    } else {\n      throw new Error(\"Invalid input argument 'activityType' = \" + activityType);\n    }\n\n    return act.filter((at: Activity) => {\n      const type = at.type;\n      return util.some(types, (t: ActivityType) => {\n        return type.id === t.id;\n      });\n    });\n  }\n\n  /**\n   * Returns Activity by ID\n   */\n  public getActivityById(id: string): Activity {\n    return this._activities.getByName(id);\n  }\n\n  /**\n   * Initialises activity for the current window - by doing this the window is announced as activity aware to the other participants\n   * @param windowType            Type of window\n   * @param activityWindowId      The id of the window that was created\n   * @returns {}                  Promise for an activity window (joined to an activity, if the activity creation fails the promise will be rejected)\n   */\n  public announceWindow(activityWindowId?: string, windowType?: string): Promise<ActivityWindow> {\n    const promise = new Promise<ActivityWindow>((resolve, reject) => {\n\n      // get the announcement info from the bridge (e.g. the context in HC) - this will be used if no arguments passed\n      const announcementInfo = this._bridge.getAnnouncementInfo();\n      if (util.isUndefined(activityWindowId)) {\n        activityWindowId = announcementInfo.activityWindowId;\n      }\n      if (util.isUndefined(windowType)) {\n        windowType = announcementInfo.activityWindowType;\n      }\n      if (util.isUndefinedOrNull(windowType)) {\n        throw new Error(\"Can not announce - unknown windowType\");\n      }\n\n      const activityId = announcementInfo && announcementInfo.activityId;\n\n      // We cover two cases here:\n      // * no activityWindowId supplied (neither in arguments or announcement info) - in that case we register new window by type. Most of the time this is the case when an independent window is created outside activity\n      // * activityWindowId supplied - window created as part of activity creation\n\n      // NB: in GW3, windows are created standalone, and receive 'JOINED' after they send a 'READY'\n      // so we always go in 'if' case, not 'else'\n      if (util.isUndefinedOrNull(activityWindowId)) {\n        this._logger.debug(\"Registering window with type:'\" + windowType + \"', name:'\" + announcementInfo.activityWindowName + \"', ind.:'\" + announcementInfo.activityWindowIndependent + \"'\");\n        // register new window created outside activity\n        this._bridge.registerWindow(windowType, announcementInfo.activityWindowName, announcementInfo.activityWindowIndependent)\n          .then(this._windows.getOrWait.bind(this._windows))\n          .then((w: any) => {\n            if (activityId) {\n              return this._activities.getOrWait(activityId).then((_: any) => w);\n            } else {\n              return w;\n            }\n          })\n          .then((w: any) => {\n            resolve(w);\n          })\n          .catch((err) => {\n            this._logger.error(err);\n          });\n\n      } else {\n        // announce new window created in an activity creation process\n        this._logger.debug(\"Announcing window with id '\" + activityWindowId + \"' and type '\" + windowType + \"'\");\n\n        // check if the window is already created -\n        const currentWindow = this._windows.getByName(activityWindowId);\n        if (!util.isUndefinedOrNull(currentWindow)) {\n          this._logger.debug(\"Window with id '\" + activityWindowId + \"' already announced - reusing the window\");\n          resolve(currentWindow);\n          return;\n        }\n\n        // window events handler\n        const windowEventHandler = (a: Activity, w: ActivityWindow, e: any) => {\n          if (activityWindowId === w.id) {\n            if (e === EntityEventType.ActivityWindowJoinedActivity) {\n              const activity = w.activity;\n              if (util.isUndefined(activity)) {\n                reject(\"UNDEFINED ACTIVITY\");\n              }\n              this._logger.trace(\"Got joined event for id '\" + activityWindowId + \"'\");\n              resolve(w);\n              this.unsubscribeWindowEvents(windowEventHandler);\n            }\n          }\n        };\n\n        this.subscribeWindowEvents(windowEventHandler);\n        this._logger.trace(\"Waiting for joined event for id '\" + activityWindowId + \"'\");\n        this._bridge.announceWindow(windowType, activityWindowId);\n      }\n    });\n    return promise;\n  }\n\n  /**\n   * Allows you to subscribe for windows events, e.g. window type registered\n   * @param handler   The handler to receive notifications\n   * @returns {}\n   */\n  public subscribeWindowTypeEvents(handler: (act: WindowType, event: string) => void) {\n    this._windowTypes.subscribe((wt, context) => {\n      handler(wt, context.type);\n    });\n  }\n\n  /**\n   * Subscribe for activity status events\n   * @param handler Handler function that will receive status notifications\n   * @returns {}\n   */\n  public subscribeActivityEvents(handler: (activity: Activity, newStatus: ActivityStatus, oldStatus: ActivityStatus) => void): () => void {\n    return this._activities.subscribe((act, context) => {\n      if (context.type === EntityEventType.StatusChange) {\n        const p = (context as ActivityStatusChangeEventContext);\n        handler(act, p.newStatus, p.oldStatus);\n      }\n\n      // implicitly leave the activity on destroy\n      if (context.type === EntityEventType.Removed ||\n        (context.type === EntityEventType.StatusChange &&\n          (context as ActivityStatusChangeEventContext).newStatus.getState() === ActivityState.Destroyed)) {\n        for (const window of this._windows.get()) {\n          if (window.activity && window.activity.id === act.id) {\n            this._windows.process(new EntityEvent<ActivityWindow>(window, new EntityEventContext(EntityEventType.ActivityWindowLeftActivity)));\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * Allows you to subscribe for windows events, e.g. window joining to activity\n   * @param handler   The handler to receive notifications\n   * @returns {}\n   */\n  public subscribeWindowEvents(handler: (activity: Activity, window: ActivityWindow, event: any) => void): () => void {\n    const wrappingHandler = (window: ActivityWindow, context: any) => {\n      let eventType = context.type;\n      if (eventType === EntityEventType.Added) {\n        // rename added to opened (because added is misleading - semantically it's the opposite of remove);\n        eventType = \"opened\";\n      }\n      handler(window.activity, window, eventType);\n    };\n    this._windowHandlers.push([handler, wrappingHandler]);\n    return this._windows.subscribe(wrappingHandler);\n  }\n\n  public unsubscribeWindowEvents(handler: (activity: Activity, window: ActivityWindow, event: any) => void) {\n    const found = this._windowHandlers.find((pair) => pair[0] === handler);\n    if (found) {\n      this._windowHandlers.splice(this._windowHandlers.indexOf(found), 1);\n      this._windows.unsubscribe(found[1]);\n    }\n  }\n\n  /**\n   * Creates a new window from a given type and joins it to an activity\n   *\n   * @param activity      Activity to join the window to\n   * @param windowType    The window type to join (string or window definition)\n   * @param callback      (Optional) Result callback\n   * @returns             Promise for ActivityWindow\n   */\n  public createWindow(activity: Activity, windowTypeOrConfiguration: string | WindowDefinition | any, callback?: Callback<ActivityWindow>): Promise<ActivityWindow> {\n    const promise = new Promise<ActivityWindow>((resolve, reject) => {\n      if (util.isUndefinedOrNull(windowTypeOrConfiguration)) {\n        reject(\"windowType is undefined\");\n      }\n\n      let windowDefinition: WindowDefinition;\n      if (util.isString(windowTypeOrConfiguration)) {\n        windowDefinition = { type: (windowTypeOrConfiguration as string), name: \"\", isIndependent: false, arguments: {} };\n      } else if (windowTypeOrConfiguration instanceof WindowType) {\n        windowDefinition = {\n          type: (windowTypeOrConfiguration as any).type || windowTypeOrConfiguration.id,\n          name: windowTypeOrConfiguration.name || (windowTypeOrConfiguration as any).type || windowTypeOrConfiguration.id,\n          isIndependent: false\n        };\n      } else {\n        windowDefinition = (windowTypeOrConfiguration as WindowDefinition);\n      }\n\n      let relativeToWindow: string | WindowSource;\n      if (!util.isUndefinedOrNull(windowDefinition.relativeTo)) {\n        relativeToWindow = windowDefinition.relativeTo;\n        if (typeof relativeToWindow === \"string\") {\n          const windows = this.getWindows({ type: relativeToWindow as string });\n          if (!util.isUndefinedOrNull(windows) && windows.length > 0) {\n            windowDefinition.relativeTo = windows[0].id;\n          }\n        } else if (!util.isUndefinedOrNull(relativeToWindow.type)) {\n          const windows = this.getWindows({ type: relativeToWindow.type });\n          if (!util.isUndefinedOrNull(windows) && windows.length > 0) {\n            windowDefinition.relativeTo = windows[0].id;\n          }\n        } else if (!util.isUndefinedOrNull(relativeToWindow.windowId)) {\n          windowDefinition.relativeTo = relativeToWindow.windowId;\n        }\n      }\n\n      this._bridge.createWindow(activity && activity.id, windowDefinition)\n        .then((wid) => {\n\n          this._logger.debug(\"Window created, waiting for window entity with id \" + wid);\n          const handler = (window: ActivityWindow, context: EntityEventContext) => {\n            // wait until the window has activity property (this means it was joined)\n            if (window.id === wid && (!activity || window.activity)) {\n              this._logger.debug(\"Got entity window with id \" + wid);\n              resolve(window);\n              this._windows.unsubscribe(handler);\n            }\n          };\n\n          // if we can not get the window right away, wait for event\n          this._windows.subscribe(handler);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Creates relative windows from a given types and joins them to an activity\n   *\n   * @param activity               Activity to join relative windows to\n   * @param relativeWindowTypes    Relative window types to join (string or window definitions array)\n   * @param callback               (Optional) Result callback\n   * @returns                      Promise for ActivityWindow\n   */\n  public createStackedWindows(activity: Activity, relativeWindowTypes: Array<string | WindowDefinition>, timeout?: number, callback?: Callback<ActivityWindow[]>): Promise<ActivityWindow[]> {\n    const promise = new Promise<ActivityWindow[]>((resolve, reject) => {\n      if (util.isUndefinedOrNull(activity)) {\n        reject(\"activity is undefined\");\n      }\n      if (util.isUndefinedOrNull(relativeWindowTypes)) {\n        reject(\"relativeWindowTypes is undefined\");\n      }\n\n      if (!Array.isArray(relativeWindowTypes)) {\n        reject(\"relativeWindowTypes has to be array\");\n      }\n      if (util.isUndefinedOrNull(timeout)) {\n        timeout = 20000; // default timeout: 20 seconds\n      }\n\n      const relativeWindows: WindowDefinition[] = [];\n      relativeWindowTypes.forEach((element) => {\n        let windowDefinition: WindowDefinition;\n        if (util.isString(element)) {\n          windowDefinition = { type: (element as string), name: \"\", isIndependent: false, arguments: {} };\n        } else {\n          windowDefinition = (element as WindowDefinition);\n        }\n\n        let relativeToWindow: WindowSource;\n        if (!util.isUndefinedOrNull(windowDefinition.relativeTo)) {\n          // this can not be string, converted in the prev. layer\n          relativeToWindow = windowDefinition.relativeTo as WindowSource;\n          if (!util.isUndefinedOrNull(relativeToWindow.type)) {\n            windowDefinition.relativeTo = relativeToWindow.type;\n          } else if (!util.isUndefinedOrNull(relativeToWindow.windowId)) {\n            const windows = this.getWindows({ id: relativeToWindow.windowId });\n            if (!util.isUndefinedOrNull(windows) && windows.length > 0) {\n              windowDefinition.relativeTo = windows[0].type.name;\n              windowDefinition.useExisting = true;\n            }\n          }\n        }\n\n        relativeWindows.push(windowDefinition);\n      });\n\n      this._bridge.createStackedWindows(activity.id, relativeWindows, timeout)\n        .then((wid) => {\n          const activityWindows: ActivityWindow[] = [];\n          const alreadyCreated: string[] = [];\n          const handler = function(window: ActivityWindow, context: EntityEventContext) {\n            // wait until the window has activity property (this means it was joined)\n            if (wid.indexOf(window.id) >= 0 && alreadyCreated.indexOf(window.id) < 0 && window.activity) {\n              this._logger.debug(\"Got entity window with id \" + wid);\n              activityWindows.push(window);\n              alreadyCreated.push(window.id);\n\n              if (activityWindows.length === wid.length) {\n                resolve(activityWindows);\n                this._windows.unsubscribe(handler);\n              }\n            }\n          }.bind(this);\n\n          // if we can not get the window right away, wait for event\n          this._windows.subscribe(handler);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Joins a new window from a given type to the activity\n   *\n   * @param activity      Activity to join the window to\n   * @param window        The window to join\n   * @param callback      (Optional) Result callback\n   * @returns             Promise for ActivityWindow\n   */\n  public addWindowToActivity(activity: Activity, window: ActivityWindow, callback?: Callback<ActivityWindow>): Promise<ActivityWindow> {\n    const toReturn = this._bridge.joinActivity(activity.id, window.id)\n      .then(() => window);\n    nodeify(toReturn, callback);\n    return toReturn;\n  }\n\n  /**\n   * Removes a window from the activity\n   *\n   * @param activity  Activity to remove the window from\n   * @param           The window to remove\n   * @param           (Optional) Result callback\n   * @returns         Promise for ActivityWindow\n   */\n  public leaveWindowFromActivity(activity: Activity, window: ActivityWindow, callback?: Callback<ActivityWindow>): Promise<ActivityWindow> {\n    const toReturn = this._bridge.leaveActivity(activity.id, window.id)\n      .then(() => window);\n    nodeify(toReturn, callback);\n    return toReturn;\n  }\n\n  /**\n   * Replaces the activity context\n   * @param activity  Activity\n   * @param context   The new context\n   * @param callback  (Optional) Result callback\n   * @returns         Promise for Activity\n   */\n  public setActivityContext(activity: Activity, context: object, callback?: Callback<Activity>): Promise<Activity> {\n    const promise = new Promise<Activity>((resolve, reject) => {\n      if (util.isUndefinedOrNull(activity)) {\n        reject(\"activity can not be null\");\n      }\n\n      // TODO: duplication with updateActivityContext\n\n      // DONE: verify is the change visible here when 'updateActivityContext' resolves?\n      this._bridge\n        .updateActivityContext(activity, context, true)\n        .then((_) => {\n          resolve(activity);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Updates activity context using the properties from  context argument.\n   * If old context is {a:1, b:2, c:3} and invoking updateContext({b:3, c:null}) will result a context\n   * be {a:1, b:3}\n   *\n   * @param activity\n   * @param context\n   * @param callback\n   */\n  public updateActivityContext(activity: Activity, context: any, callback?: Callback<Activity>): Promise<Activity> {\n    const promise = new Promise<Activity>((resolve, reject) => {\n      if (util.isUndefinedOrNull(activity)) {\n        reject(\"activity can not be null\");\n      }\n\n      const removedKeys = [];\n      for (const key in context) {\n        if (context.hasOwnProperty(key) && context[key] === null) {\n          removedKeys.push(key);\n        }\n      }\n      for (const removedKey of removedKeys) {\n        delete context[removedKey];\n      }\n\n      this._bridge\n        .updateActivityContext(activity, context, false, removedKeys)\n        .then((_) => {\n          // DONE: verify is the change already visible here when 'updateActivityContext' resolves?\n          resolve(activity);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Subscribe for activity context update events\n   *\n   * @param activity  Activity\n   * @param handler   Handler function that will receive context related events\n   * @returns {}\n   */\n  public subscribeActivityContextChanged(handler: ActivityContextUpdateHandler) {\n    this._activities.subscribe((act, context) => {\n      if (context.type === EntityEventType.ActivityContextChange) {\n        const updateContext = context as ActivityContextChangedEventContext;\n        handler(act, updateContext.context, updateContext.updated, updateContext.removed);\n      }\n    });\n  }\n\n  /**\n   * Stops an activity\n   * @returns {}\n   */\n  public stopActivity(activity: Activity, callback?: Callback<boolean>): Promise<boolean> {\n    const promise = this._bridge.stopActivity(activity);\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Returns activity windows based on some filter. If no filter supplied all activity windows are returned.\n   * @param filter  Filter that\n   * @returns Array of ActivityWindows that match the filter object\n   */\n  public getWindows(filter: { id?: string, type?: string, name?: string, activityId?: string }): ActivityWindow[] {\n    if (util.isUndefined(filter)) {\n      return this._windows.get();\n    }\n\n    if (!util.isUndefined(filter.id)) {\n      return [this._windows.getByName(filter.id)];\n    }\n\n    const allWindows = this._windows.get();\n\n    return allWindows.filter((w) => {\n\n      if (!util.isUndefined(filter.type) && w.type.id !== filter.type) {\n        return false;\n      }\n\n      if (!util.isUndefined(filter.name) && w.name !== filter.name) {\n        return false;\n      }\n\n      if (!util.isUndefined(filter.activityId)) {\n        if (util.isUndefinedOrNull(w.activity)) {\n          return false;\n        }\n\n        if (w.activity.id !== filter.activityId) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n\n  public getWindowBounds(id: string): Promise<WindowBounds> {\n    return this._bridge.getWindowBounds(id);\n  }\n\n  public setWindowBounds(id: string, bounds: WindowBounds, callback?: Callback<ActivityWindow>): Promise<any> {\n    const promise = new Promise<any>((resolve, reject) => {\n      this._bridge.setWindowBounds(id, bounds)\n        .then(() => resolve())\n        .catch((err) => reject(err));\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  public closeWindow(id: string): Promise<any> {\n    return this._bridge.closeWindow(id);\n  }\n\n  public activateWindow(id: string, focus: boolean): Promise<any> {\n    return this._bridge.activateWindow(id, focus);\n  }\n\n  public setWindowVisibility(id: string, visible: boolean): Promise<any> {\n    return this._bridge.setWindowVisibility(id, visible);\n  }\n\n  public clone(activity: Activity, cloneOptions: CloneOptions, callback?: Callback<Activity>) {\n    const promise = new Promise<any>((resolve, reject) => {\n      if (!activity) {\n        reject(\"activity can not be null\");\n      }\n\n      this._bridge.cloneActivity(activity.id, cloneOptions)\n        .then((activityId) => {\n          this._activities\n            .getOrWait(activityId)\n            .then((act: Activity) => {\n              resolve(act);\n            })\n            .catch((err) => reject(err));\n        })\n        .catch((err) => reject(err));\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  public attachActivities(from: string, to: string, tag?: object, callback?: Callback<AttachedActivityDescriptor>): Promise<AttachedActivityDescriptor> {\n\n    tag = tag || {};\n\n    const promise = new Promise<AttachedActivityDescriptor>((resolve, reject) => {\n\n      const fromActivity = this._activities.getByName(from);\n      if (!fromActivity) {\n        reject(\"can not find activity with id \" + from);\n        return;\n      }\n\n      const toActivity = this._activities.getByName(to);\n      if (!toActivity) {\n        reject(\"can not find activity with id \" + to);\n        return;\n      }\n\n      return this._bridge.attachActivities(from, to, tag)\n        .then((data: any) => {\n          const newActId = data.to;\n          const state = data.descriptor;\n          const allStates = data.descriptors;\n\n          this._activities.getOrWait(newActId).then((act) => {\n            act._updateDescriptors(allStates);\n            const stateWrapped = act.attached.filter((u) => u.ownerId === state.ownerId)[0];\n\n            resolve(stateWrapped);\n          });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  public detachActivities(\n    activityId: string,\n    descriptor: ActivityDescriptor,\n    callback?: Callback<Activity>): Promise<Activity> {\n    const promise = new Promise<Activity>((resolve, reject) => {\n      return this._bridge.detachActivities(activityId, descriptor)\n        .then(/*(params)*/() => {\n          // #deleteme TODO: deal with this\n          const oldActId: string = undefined; // params.oldActivityId;\n          const newActId: string = undefined; // params.newActivityId;\n          const descriptors: any = undefined; // params.descriptors;\n\n          this._activities\n            .getOrWait(oldActId)\n            .then((oldAct: Activity) => {\n              oldAct._updateDescriptors(descriptors);\n\n              this._activities\n                .getOrWait(newActId)\n                .then((newAct: Activity) => {\n                  resolve(newAct);\n                });\n            })\n            .catch((err) => reject(err));\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  public subscribeActivitiesAttached(callback: any) {\n    this._attachedCallbacks.push(callback);\n  }\n\n  public subscribeActivitiesDetached(callback: any) {\n    this._detachedCallbacks.push(callback);\n  }\n\n  public subscribeActivityFrameColorChanged(callback: () => void) {\n    this._frameColorChangesCallbacks.push(callback);\n  }\n\n  /** Assigns a manager to a given ActivityEntity */\n  private _grabEntity(entity: ActivityEntity) {\n    entity._manager = this;\n  }\n\n  private _getInitialData() {\n    this._logger.debug(\"Request initial data...\");\n\n    // NB: there's no possibility for duplicate entities from events that have come\n    // in between _bridge.init() and _bridge.ready()'s resolve, since the ObservableCollections\n    // coalesce items by id.\n\n    this._bridge.getActivityTypes()\n      .then((at) => {\n        this._activityTypes.add(at);\n        this._dataReadyMarker.signal(\"Got act types\");\n      })\n      .catch((error) => {\n        this._logger.error(error);\n        this._dataReadyMarker.error(\"Can not initialize ActivityManager - error getting activity types -\" + error);\n      });\n\n    this._bridge.getWindowTypes()\n      .then((wt) => {\n        this._windowTypes.add(wt);\n        this._dataReadyMarker.signal(\"Got window types\");\n      })\n      .catch((error) => {\n        this._logger.error(error);\n        this._dataReadyMarker.error(\"Can not initialize ActivityManager - error getting window types  \" + error);\n      });\n\n    this._bridge.getActivities()\n      .then((ac) => {\n        this._activities.add(ac);\n        this._dataReadyMarker.signal(\"Got activities\");\n      })\n      .catch((error) => {\n        this._logger.error(error);\n        this._dataReadyMarker.error(\"Can not initialize ActivityManager - error getting activity instances -\" + error);\n      });\n\n    this._bridge.getActivityWindows()\n      .then((aw) => {\n        this._windows.add(aw);\n        this._dataReadyMarker.signal(\"Got windows\");\n      })\n      .catch((error) => {\n        this._logger.error(error);\n        this._dataReadyMarker.error(\"Can not initialize ActivityManager - error getting activity windows -\" + error);\n      });\n  }\n\n  private _subscribeForData() {\n    this._logger.debug(\"Subscribe for data...\");\n\n    // NB: there's no possibility for duplicate entities from events that have come\n    // in between _bridge.init() and _bridge.ready()'s resolve, since the ObservableCollections\n    // coalesce items by id.\n\n    this._bridge.onActivityTypeStatusChange((event) => {\n      this._activityTypes.process(event);\n    });\n\n    this._bridge.onWindowTypeStatusChange((event) => {\n      this._windowTypes.process(event);\n    });\n\n    this._bridge.onActivityWindowChange((event) => {\n      this._windows.process(event);\n    });\n\n    this._bridge.onActivityStatusChange((event: EntityEvent<Activity>) => {\n        this._activities.process(event);\n      });\n  }\n\n  private _handleActivitiesAttached(data: any) {\n\n    const newActId = data.to;\n    const descriptor = data.descriptor;\n    const descriptors = data.descriptors;\n\n    this._activities.getOrWait(newActId).then((act) => {\n      act._updateDescriptors(descriptors);\n      const descriptorAsObjectFromAPI = act.attached.filter((u) => u.ownerId === descriptor.ownerId)[0];\n\n      this._attachedCallbacks.forEach((callback) => {\n        try {\n          callback(act, descriptorAsObjectFromAPI);\n        } catch (err) {\n          return;\n        }\n      });\n\n    });\n  }\n\n  private _handleActivitiesDetached(data: any) {\n    const oldActId = data.oldActivityId;\n    const newActId = data.newActivityId;\n    const descriptors = data.descriptors;\n    const descriptor = data.descriptor;\n\n    this._activities.getOrWait(oldActId).then((oldAct) => {\n\n      oldAct._updateDescriptors(descriptors);\n\n      this._activities.getOrWait(newActId).then((newAct) => {\n\n        this._detachedCallbacks.forEach((callback) => {\n          try {\n            callback(newAct, oldAct, descriptor);\n          } catch (err) {\n            return;\n          }\n        });\n      });\n    });\n  }\n\n  private _handleActivityDescriptorsRefreshed(data: any) {\n    const id = data.id;\n    const descriptors = data.descriptors;\n\n    const act = this._activities.getByName(id);\n    if (act) {\n      act._updateDescriptors(descriptors);\n    }\n  }\n\n  private refreshDescriptors() {\n    this._bridge.getAttachedDescriptors()\n      .then((map: any) => {\n\n        // populate descriptors\n        if (map) {\n          Object.keys(map).forEach((key: string) => {\n            const actId = key;\n            const descriptors = map[key];\n\n            const act = this._activities.getByName(actId);\n            if (act) {\n              act._updateDescriptors(descriptors);\n            }\n          });\n        }\n\n        this._descriptorsMarker.signal(\"Successfully got descriptors\");\n      })\n      .catch((err) => {\n        this._descriptorsMarker.error(\"failed to get descriptors - \" + err);\n      });\n  }\n\n  private _handleWindowFrameColorChanged(win: Glue42.Windows.GDWindow) {\n    if (!win.activityId) {\n      return;\n    }\n\n    const act = this._activities.getByName(win.activityId);\n    if (!act) {\n      return;\n    }\n\n    // notify for the owner only\n    if (!act.owner) {\n      return;\n    }\n\n    if (act.owner.underlyingWindow.id !== win.id) {\n      return;\n    }\n\n    this._frameColorChangesCallbacks.forEach((callback) => {\n      try {\n        callback(act, win.frameColor);\n      } catch (e) {\n        return;\n      }\n    });\n  }\n}\n","import ActivityType from \"./../entities/activityType\";\nimport WindowType from \"./../entities/windowType\";\nimport * as util from \"./../helpers/util\";\nimport ActivityManager from \"./../core/activityManager\";\nimport My from \"./activityMyAPI\";\nimport { WindowDefinition } from \"./../entities/windowDefinition\";\nimport { Callback } from \"./../contracts/contracts\";\nimport Activity from \"./../entities/activity\";\nimport ActivityWindow from \"./../entities/activityWindow\";\nimport { ActivityStatus } from \"./../contracts/activityStatus\";\nimport { WindowFactory } from \"../contracts/windowFactory\";\nimport { Glue42 } from \"../../../glue\";\n\nexport interface ManagementAPI {\n  activityTypes: Glue42.Activities.ActivityTypesAPI;\n  windowTypes: Glue42.Activities.WindowTypesAPI;\n  windows: Glue42.Activities.WindowingAPI;\n  instances: Glue42.Activities.InstancesAPI;\n\n  onAttached(callback: () => void): void;\n  onDetached(callback: () => void): void;\n  onActivityFrameColorChanged(callback: () => void): void;\n}\n\nexport class ActivityManagementAPI implements ManagementAPI {\n\n  public _m: ActivityManager;\n\n  public _my: My;\n\n  public activityTypes: Glue42.Activities.ActivityTypesAPI;\n\n  public windowTypes: Glue42.Activities.WindowTypesAPI;\n\n  public windows: Glue42.Activities.WindowingAPI;\n\n  public instances: Glue42.Activities.InstancesAPI;\n\n  constructor(manager: ActivityManager, my: My) {\n    this._m = manager;\n    this._my = my;\n\n    this.activityTypes = {\n      get: this._getActivityTypesWrapper.bind(this),\n      register: this._m.registerActivityType.bind(this._m),\n      unregister: this._m.unregisterActivityType.bind(this._m),\n      subscribe: this._m.subscribeActivityTypeEvents.bind(this._m),\n      unsubscribe: undefined,\n      initiate: this._m.initiate.bind(this._m)\n    };\n\n    this.windowTypes = {\n      get: this._getWindowTypesWrapper.bind(this),\n      registerFactory: this._m.registerWindowFactory.bind(this._m),\n      unregisterFactory: this._m.unregisterWindowFactory.bind(this._m),\n      subscribe: this._m.subscribeWindowTypeEvents.bind(this._m),\n      unsubscribe: undefined\n    };\n\n    this.windows = {\n      get: this._m.getWindows.bind(this._m),\n      subscribe: this._m.subscribeWindowEvents.bind(this._m),\n      announce: this._m.announceWindow.bind(this._m),\n      unsubscribe: undefined,\n      create: this._m.createWindow.bind(this._m)\n    };\n\n    this.instances = {\n      get: this._m.getActivities.bind(this._m),\n      subscribe: this._m.subscribeActivityEvents.bind(this._m),\n      unsubscribe: undefined\n    };\n  }\n\n  public onAttached(callback: () => void) {\n    this._m.subscribeActivitiesAttached(callback);\n  }\n\n  public onDetached(callback: () => void) {\n    this._m.subscribeActivitiesDetached(callback);\n  }\n\n  public onActivityFrameColorChanged(callback: () => void) {\n    this._m.subscribeActivityFrameColorChanged(callback);\n  }\n\n  private _getActivityTypesWrapper(name?: string): ActivityType[] | ActivityType {\n    if (util.isUndefined(name)) {\n      return this._m.getActivityTypes();\n    }\n    return this._m.getActivityType(name);\n  }\n\n  private _getWindowTypesWrapper(name?: string): WindowType[] | WindowType {\n    if (util.isUndefined(name)) {\n      return this._m.getWindowTypes();\n    }\n    return this._m.getWindowType(name);\n  }\n}\n","import ActivityManager from \"./../core/activityManager\";\nimport My from \"./activityMyAPI\";\nimport { nodeify } from \"./../helpers/promiseExtensions\";\nimport { ActivityManagementAPI, ManagementAPI } from \"./activityManagementAPI\";\nimport { ActivityAGM } from \"../core/activityAGM\";\n\nexport interface API {\n\n  aware: boolean;\n\n  inActivity: boolean;\n\n  my: My;\n\n  agm: ActivityAGM;\n\n  all: ManagementAPI;\n\n  ready(callback?: (api: API) => void): Promise<API>;\n\n  getAvailableFrameColors(): string[];\n}\n\n/**\n * The entry points of activities API - accessible from glue.activities\n *\n * @module activities\n */\nexport class ActivityAPI implements API {\n\n  public _mgr: ActivityManager;\n  public _my: My;\n\n /**\n  * Extended API that provides access to all running activities and windows and available activity and window types\n  *\n  * @var {module:all} all\n  */\n public all: ManagementAPI;\n\n  constructor(manager: ActivityManager, my: My) {\n    this._mgr = manager;\n    this._my = my;\n    this.all = new ActivityManagementAPI(manager, my);\n  }\n\n  /**\n   * The entry point for your activity code.\n   *\n   * @function ready\n   * @returns {Promise<module:activities>} A promise for activity API\n   */\n  public ready(callback?: any): Promise<API> {\n    const promise = new Promise<any>((resolve, reject) => {\n      this._mgr.ready()\n        .then(() => {\n          resolve(this);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * A lightweight, single activity oriented subset of the API which should be used by most activity applications\n   *\n   * @var {module:my} my\n   */\n  public get my(): My {\n    return this._my;\n  }\n\n  /**\n   * True if the current window is activity aware - meaning that the window has been created as\n   * an activity participant - either a helper or an independent window.\n   * Check this after the API is ready.\n   *\n   * @var {bool} aware\n   */\n  public get aware(): boolean {\n    return this._my.window !== undefined;\n  }\n\n  /**\n   * Returns true if the current window is activity aware and is currently participating in activity\n   *\n   * @var {bool} inActivity\n   */\n  public get inActivity(): boolean {\n    return this.aware && this._my.activity !== undefined;\n  }\n\n  /**\n   * Defines an Activity-specific version of the AGM API which:\n   * * restricts method registrations to activity-only windows\n   * * restricts method discovery and invocation to activity-only methods, unless you explicitly specify otherwise\n   * Other than that, the API is pretty much the same.\n   *\n   * @var  {module:activityAGM} agm\n   *\n   */\n  public get agm(): ActivityAGM {\n    if (!this.aware) {\n      // no agm if not activity aware\n      return undefined;\n    }\n    if (!this.inActivity) {\n      // if we're not in activity no\n      return new ActivityAGM(null);\n    }\n\n    return this._my.activity.agm;\n  }\n\n  /**\n   * Returns a list of frame colors that can be used as activity frame colors\n   *\n   * @returns {string[]}\n   */\n  public getAvailableFrameColors(): string[] {\n    // TODO - not available in GD3\n    return [];\n  }\n}\n","import GW3Bridge from \"./bridges/gw3Bridge\";\n\nimport My from \"./API/activityMyAPI\";\nimport ActivityManager from \"./core/activityManager\";\n\nimport { ActivityBridge } from \"./bridges/activityBridge\";\n\nimport { ActivityConfig } from \"./activityConfig\";\nimport { ActivityAPI } from \"./API/activityAPI\";\nimport { ActivityAGM } from \"./core/activityAGM\";\nimport { Logger } from \"./helpers/logger\";\nimport * as util from \"./helpers/util\";\n\nimport { Glue42Core } from \"@glue42/core\";\n\nimport { nodeify } from \"./helpers/promiseExtensions\";\n\n/**\n * Activity context update handler - used when we want to subscribe for context changes in a specific activity\n *\n * @callback contextChangedHandler\n * @param {Object} context The full context of the activity after the update\n * @param {Object} delta The delta (contains the added/removed keys at top level)\n * @param {string[]} removed  Array of keys that were removed from context\n * @param {module:activity} activity The activity instance that owns the context\n *\n */\n\n/**\n * @callback windowEventHandler Handler for ActivityWindow events - e.g window joined to activity, window removed from\n * activity\n * @param {module:activity} activity\n * @param {module:activityWindow} window\n * @param {string} event 'joined' or 'removed'\n */\n\n/**\n * @callback activityStatusChangeHandler Handler for activity status changed events\n * @param {module:activity} activity\n * @param {activityStatus} newStatus\n * @param {activityStatus} oldStatus\n *\n */\n\n/**\n * @typedef {Object} windowDefinition\n * @property {string} type\n * @property {string} name\n * @property {Object} arguments\n */\n\n/**\n * @typedef {Object} bounds\n * @param {number} top\n * @param {number} left\n * @param {number} width\n * @param {number} height\n *\n */\n\n/**\n * @typedef {Object} agmInstance\n * @param {string} application\n * @param {string} pid\n * @param {string} machine\n * @param {string} user\n * @param {string} environment\n * @param {string} region\n */\n\n// Factory function for activity API\nexport class ActivityModule {\n    public static checkIsUsingGW3Implementation(connection: Glue42Core.Connection.API) {\n        return connection.protocolVersion === 3;\n    }\n\n    private _api: ActivityAPI;\n    private _isUsingGW3Implementation: boolean;\n    private _isUsingHCImplementation: boolean;\n    private _readyPromise: Promise<ActivityModule>;\n\n    get api(): ActivityAPI {\n        return this._api;\n    }\n\n    set api(value: ActivityAPI) {\n        this._api = value;\n    }\n\n    constructor(config: ActivityConfig) {\n        if (!config) {\n            throw new Error(\"config can not be null\");\n        }\n\n        // set log level\n        if (!util.isUndefined(config.logLevel)) {\n            Logger.Level = config.logLevel;\n        }\n\n        if (!util.isUndefinedOrNull(config.logger)) {\n            Logger.GlueLogger = config.logger;\n        }\n\n        // choose the correct bridge\n        let bridge: ActivityBridge;\n        this._isUsingHCImplementation = config.gdMajorVersion === 2;\n        this._isUsingGW3Implementation = ActivityModule.checkIsUsingGW3Implementation(config.connection);\n\n        if (this._isUsingHCImplementation) {\n            throw new Error(\"GD2 not supported\");\n        } else if (this._isUsingGW3Implementation) {\n            bridge = new GW3Bridge(config.connection as Glue42Core.Connection.API, config.logger, config.contexts, config);\n        } else {\n            throw new Error(\"Unable to instantiate activity bridge implementation\");\n        }\n\n        if (!bridge) {\n            throw new Error(\"A bridge to native activity is needed to create activity lib.\");\n        }\n\n        ActivityAGM.AGM = config.agm;\n        const activityManager = new ActivityManager(bridge, !config.disableAutoAnnounce, config.windows);\n        const my = new My(activityManager, config.windows);\n        this._api = new ActivityAPI(activityManager, my);\n        this._readyPromise = activityManager.ready().then((_) => this);\n    }\n\n    public get isUsingHCImplementation(): boolean {\n        return this._isUsingHCImplementation;\n    }\n\n    public get isUsingGW3Implementation(): boolean {\n        return this._isUsingGW3Implementation;\n    }\n\n    public ready(callback?: (err: string, module: ActivityModule) => void): Promise<void> {\n        return nodeify(this._readyPromise, callback) as any as Promise<void>;\n    }\n}\n","\"use strict\";\r\nfunction createRegistry(options) {\r\n    if (options && options.errorHandling\r\n        && typeof options.errorHandling !== \"function\"\r\n        && options.errorHandling !== \"log\"\r\n        && options.errorHandling !== \"silent\"\r\n        && options.errorHandling !== \"throw\") {\r\n        throw new Error(\"Invalid options passed to createRegistry. Prop errorHandling should be [\\\"log\\\" | \\\"silent\\\" | \\\"throw\\\" | (err) => void], but \" + typeof options.errorHandling + \" was passed\");\r\n    }\r\n    var _userErrorHandler = options && typeof options.errorHandling === \"function\" && options.errorHandling;\r\n    var callbacks = {};\r\n    function add(key, callback) {\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey) {\r\n            callbacksForKey = [];\r\n            callbacks[key] = callbacksForKey;\r\n        }\r\n        callbacksForKey.push(callback);\r\n        return function () {\r\n            var allForKey = callbacks[key];\r\n            if (!allForKey) {\r\n                return;\r\n            }\r\n            allForKey = allForKey.reduce(function (acc, element, index) {\r\n                if (!(element === callback && acc.length === index)) {\r\n                    acc.push(element);\r\n                }\r\n                return acc;\r\n            }, []);\r\n            callbacks[key] = allForKey;\r\n        };\r\n    }\r\n    function execute(key) {\r\n        var argumentsArr = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            argumentsArr[_i - 1] = arguments[_i];\r\n        }\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey || callbacksForKey.length === 0) {\r\n            return [];\r\n        }\r\n        var results = [];\r\n        callbacksForKey.forEach(function (callback) {\r\n            try {\r\n                var result = callback.apply(undefined, argumentsArr);\r\n                results.push(result);\r\n            }\r\n            catch (err) {\r\n                results.push(undefined);\r\n                _handleError(err, key);\r\n            }\r\n        });\r\n        return results;\r\n    }\r\n    function _handleError(exceptionArtifact, key) {\r\n        var errParam = exceptionArtifact instanceof Error ? exceptionArtifact : new Error(exceptionArtifact);\r\n        if (_userErrorHandler) {\r\n            _userErrorHandler(errParam);\r\n            return;\r\n        }\r\n        var msg = \"[ERROR] callback-registry: User callback for key \\\"\" + key + \"\\\" failed: \" + errParam.stack;\r\n        if (options) {\r\n            switch (options.errorHandling) {\r\n                case \"log\":\r\n                    return console.error(msg);\r\n                case \"silent\":\r\n                    return;\r\n                case \"throw\":\r\n                    throw new Error(msg);\r\n            }\r\n        }\r\n        console.error(msg);\r\n    }\r\n    function clear() {\r\n        callbacks = {};\r\n    }\r\n    function clearKey(key) {\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey) {\r\n            return;\r\n        }\r\n        delete callbacks[key];\r\n    }\r\n    return {\r\n        add: add,\r\n        execute: execute,\r\n        clear: clear,\r\n        clearKey: clearKey\r\n    };\r\n}\r\n;\r\ncreateRegistry.default = createRegistry;\r\nmodule.exports = createRegistry;\r\n//# sourceMappingURL=index.js.map","export function objectValues(source: {[key: string]: any}): any[] {\n    if (!source) {\n        return [];\n    }\n    return Object.keys(source).map((key) => source[key]);\n}\n\nexport function objectClone(obj: {[key: string]: any}): any {\n    let result;\n    try {\n        result = JSON.parse(JSON.stringify(obj || {}));\n    } catch (error) {\n        result = {};\n    }\n\n    return result;\n}\n","import * as AgmNames from \"./const/agm-names\";\nimport { default as CallbackRegistryFactory, CallbackRegistry } from \"callback-registry\";\nimport { Glue42 } from \"../../glue\";\nimport { ContextParam, InstanceProps, AppProps } from \"./types\";\nimport AppManagerImpl from \"./app-manager\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { objectClone } from \"./helper\";\n\nexport default class ApplicationImpl implements Glue42.AppManager.Application {\n\n    private _registry: CallbackRegistry = CallbackRegistryFactory();\n\n    // Additional properties of the Application\n    private _props: AppProps;\n\n    constructor(private _appManager: AppManagerImpl, private _name: string, private _agm: Glue42Core.AGM.API) {\n\n        // TODO: Replace string events with constants. The string declaration of the registry event name should only ever appear once. Ever. Period.\n\n        // subscribe for events from app-manager\n        _appManager.onInstanceStarted((instance) => {\n            if (instance.application && instance.application.name !== this._name) {\n                return;\n            }\n\n            this._registry.execute(\"instanceStarted\", instance);\n        });\n\n        _appManager.onInstanceStopped((instance) => {\n            if (instance.application && instance.application.name !== this._name) {\n                return;\n            }\n\n            this._registry.execute(\"instanceStopped\", instance);\n        });\n\n        _appManager.onAppRemoved((app) => {\n            if (app.name !== this._name) {\n                return;\n            }\n\n            this._registry.execute(\"appRemoved\", app);\n        });\n\n        _appManager.onAppChanged((app) => {\n            if (app.name !== this._name) {\n                return;\n            }\n\n            this._registry.execute(\"appChanged\", app);\n        });\n\n        _appManager.onAppAvailable((app) => {\n            if (app.name !== this._name) {\n                return;\n            }\n\n            this._registry.execute(\"appAvailable\", app);\n        });\n\n        _appManager.onAppUnavailable((app) => {\n            if (app.name !== this._name) {\n                return;\n            }\n\n            this._registry.execute(\"appUnavailable\", app);\n        });\n    }\n\n    get name(): string { return this._name; }\n    get title(): string { return this._props.Title; }\n    get version(): string { return this._props.Version; }\n    get autoStart(): boolean { return this._props.AutoStart; }\n    get isShell(): boolean { return this._props.IsShell; }\n    get caption(): string { return this._props.Caption; }\n    get hidden(): boolean { return this._props.IsHidden; }\n    get container(): string { return this._props.ApplicationName; }\n    get activityType(): string { return this._props.ActivityType; }\n    get activityWindowType(): string { return this._props.ActivityWindowType; }\n    get windowSettings(): { [key: string]: any } {\n        if (!this._props.Arguments) {\n            return {};\n        }\n        return objectClone(this._props.Arguments);\n    }\n    get allowMultiple(): boolean { return this._props.AllowMultiple; }\n    get available(): boolean { return this._props.IsReady || false; }\n    get icon(): string { return this._props.Icon; }\n    get iconURL(): string { return this._props.IconUrl; }\n    get sortOrder(): number { return this._props.SortOrder; }\n    get userProperties(): { [key: string]: any } {\n        if (!this._props.UserProperties) {\n            return {};\n        }\n        return objectClone(this._props.UserProperties);\n    }\n    get isActivity(): boolean {\n        return this._props.ActivityType !== undefined && this._props.ActivityType !== \"\";\n    }\n\n    get configuration(): Glue42.AppManager.LegacyAppConfigProperties {\n        return {\n            autoStart: this._props.AutoStart,\n            caption: this._props.Caption,\n            hidden: this._props.IsHidden,\n            container: this._props.ApplicationName,\n            activityType: this._props.ActivityType,\n            allowMultiple: this._props.AllowMultiple\n        };\n    }\n\n    get instances() {\n        return this._appManager.instances().filter((instance: Glue42.AppManager.Instance) => instance.application.name === this._name);\n    }\n\n    get type() {\n        return this._props.Type;\n    }\n\n    get mode() {\n        if (!this._props) {\n            // no info about the app\n            return \"unknown\";\n        }\n\n        // GD3 - we always have Mode from the stream object\n        if (this._props.Mode && typeof this._props.Mode === \"string\") {\n            return this._props.Mode.toLowerCase() as Glue42.Windows.WindowMode;\n        }\n\n        // GD2\n        // return unknown for activity applications\n        if (this.isActivity) {\n            return \"unknown\";\n        }\n\n        // check definition -> hc.args.mode\n        if (this._props.Arguments && this._props.Arguments.mode && typeof this._props.Arguments.mode === \"string\") {\n            return this._props.Arguments.mode.toLowerCase() as Glue42.Windows.WindowMode;\n        }\n\n        // if no hc.args.mode, check hc.WindowStyleAttributes\n        let styleAttributes = this._props.WindowStyleAttributes;\n        if (styleAttributes) {\n            // WindowStyleAttributes is not a valid JSON, we will need to find mode in the string\n            styleAttributes = styleAttributes.split(\" \").join(\"\");\n            const searchFor = \"mode:\\\"\";\n            const modeIndex = styleAttributes.indexOf(searchFor);\n            if (modeIndex !== -1) {\n                const startModeIndex = modeIndex + searchFor.length;\n                const stopModeIndex = styleAttributes.indexOf(\"\\\"\", startModeIndex);\n                const style = styleAttributes.substr(startModeIndex, stopModeIndex - startModeIndex);\n                if (style && typeof style === \"string\") {\n                    return style.toLowerCase() as Glue42.Windows.WindowMode;\n                }\n            }\n        }\n\n        // default mode for GD2\n        return \"flat\";\n    }\n\n    public updateFromProps(props: AppProps) {\n        if (!this._props) {\n            this._props = { Name: props.Name };\n        }\n\n        Object.keys(props).forEach((key) => {\n            (this._props as any)[key] = (props as any)[key];\n        });\n    }\n\n    public start(context?: ContextParam, options?: Glue42.AppManager.ApplicationStartOptions): Promise<Glue42.AppManager.Instance> {\n        const name = this._name;\n        const startTimeout: number = 10000;\n        return new Promise<Glue42.AppManager.Instance>((resolve, reject) => {\n            options = options || {};\n            context = context || {};\n            const waitForAGMInstance = true;\n\n            const waitForApplicationInstance = (id: string) => {\n                // fetch from the current list in app-manager\n                const check = (): Glue42.AppManager.Instance => {\n                    const filtered = this._appManager.instances().filter((i: Glue42.AppManager.Instance) => i.id === id);\n                    let result: Glue42.AppManager.Instance;\n                    // GD2 check - in case of activities we have 2 instances with the same id\n                    if (filtered.length === 2) {\n                        result = filtered[0].isActivityInstance ? filtered[0] : filtered[1];\n                    } else {\n                        result = filtered[0];\n                    }\n                    if (result && waitForAGMInstance) {\n                        if (result.agm) {\n                            return result;\n                        } else {\n                            // if no agm, return undefined so we keep waiting\n                            return undefined;\n                        }\n                    }\n\n                    return result;\n                };\n\n                let unsub: () => void;\n                // reject after some timeout\n                const timeout = setTimeout(() => {\n                    if (unsub) {\n                        unsub();\n                    }\n                    reject(\"timeout\");\n                }, startTimeout);\n\n                const waitFunc = (i: Glue42.AppManager.Instance) => {\n                    if (i.id !== id) {\n                        return;\n                    }\n                    if (unsub) {\n                        unsub();\n                        unsub = undefined;\n                    }\n                    clearTimeout(timeout);\n                    // schedule - we need this because there might be more than one\n                    // instance with the same id (activity case) - so this handler\n                    // will kick for the very first\n                    setTimeout(() => {\n                        resolve(check());\n                    }, 1);\n                };\n\n                if (waitForAGMInstance) {\n                    unsub = this._appManager.onInstanceAgmServerReady(waitFunc);\n                } else {\n                    // if not there subscribe for instance events\n                    unsub = this._appManager.onInstanceStarted(waitFunc);\n                }\n\n                // try to find it in the current list\n                const instances: Glue42.AppManager.Instance = check();\n                if (instances) {\n                    if (unsub) {\n                        unsub();\n                        unsub = undefined;\n                    }\n                    clearTimeout(timeout);\n                    resolve(instances);\n                }\n            };\n\n            this._agm.invoke(AgmNames.StartApplicationMethodName,\n                {\n                    Name: name,\n                    Context: context,\n                    Options: options\n                },\n                \"best\",\n                {\n                    methodResponseTimeoutMs: startTimeout\n                },\n                (result) => {\n                    const acsResult: InstanceProps = result.returned && result.returned.Instance_0\n                        ? result.returned.Instance_0\n                        : result.returned;\n\n                    if (acsResult && acsResult.Id) {\n                        if (this._appManager.mode === \"startOnly\") {\n                            // we're in startOnly mode, no stream, so we will simulate the instance\n                            // based on the data received from GD\n                            const instance = this._appManager.handleInstanceStarted(acsResult);\n                            resolve(instance);\n                        } else {\n                            // we received instance from ACS, let's wait until it appears on the stream\n                            waitForApplicationInstance(acsResult.Id);\n                        }\n                    } else {\n                        // we haven't received instance from ACS - this might happen if the app does not\n                        // support tracking instances (e.g. we start internet explorer with some url)\n                        resolve(undefined);\n                    }\n                },\n                (err: any) => {\n                    reject(err);\n                });\n        });\n    }\n\n    public onInstanceStarted(callback: (instance: Glue42.AppManager.Instance) => any): void {\n        this._registry.add(\"instanceStarted\", callback);\n    }\n\n    public onInstanceStopped(callback: (instance: Glue42.AppManager.Instance) => any): void {\n        this._registry.add(\"instanceStopped\", callback);\n    }\n\n    public onAvailable(callback: (app: Glue42.AppManager.Application) => any): void {\n        this._registry.add(\"appAvailable\", callback);\n    }\n\n    public onUnavailable(callback: (app: Glue42.AppManager.Application) => any): void {\n        this._registry.add(\"appUnavailable\", callback);\n    }\n\n    public onChanged(callback: (app: Glue42.AppManager.Application) => any): void {\n        this._registry.add(\"appChanged\", callback);\n    }\n\n    public onRemoved(callback: (app: Glue42.AppManager.Application) => any): void {\n        this._registry.add(\"appRemoved\", callback);\n    }\n}\n","export const ShutdownMethodName = \"T42.ACS.Shutdown\";\nexport const RestartMethodName = \"T42.ACS.Restart\";\n\nexport const FeedackMethodName = \"T42.ACS.Feedback\";\n\nexport const GetConfigurationRegionMethodName = \"T42.ACS.GetConfigurationRegion\";\nexport const SetConfigurationRegionMethodName = \"T42.ACS.SetConfigurationRegion\";\n\nexport const GetUserMethodName = \"T42.ACS.GetUser\";\nexport const GetBranchesMethodName = \"T42.ACS.GetBranches\";\nexport const GetCurrentBranchMethodName = \"T42.ACS.GetCurrentBranch\";\nexport const SetCurrentBranchMethodName = \"T42.ACS.SetCurrentBranch\";\n\nexport const GetFunctionalEntitlementMethodName = \"T42.ACS.GetFunctionalEntitlement\";\nexport const CanIMethodName = \"T42.ACS.CanI\";\n\nexport const StartApplicationMethodName = \"T42.ACS.StartApplication\";\nexport const StopApplicationMethodName = \"T42.ACS.StopApplication\";\nexport const ActivateApplicationMethodName = \"T42.ACS.ActivateApplication\";\nexport const RunApplicationMethodName = \"T42.ACS.RunApplication\";\n\nexport const OnEventMethodName = \"T42.ACS.OnEvent\";\n\nexport const GetApplicationsMethodName = \"T42.ACS.GetApplications\";\n","import * as AgmNames from \"./const/agm-names\";\nimport { default as CallbackRegistryFactory, CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport { ContextParam, InstanceProps, WindowContext, AgmInstanceProps } from \"./types\";\nimport AppManagerImpl from \"./app-manager\";\nimport { Glue42 } from \"../../glue\";\nimport { Glue42Core } from \"@glue42/core\";\n\nexport default class InstanceImpl implements Glue42.AppManager.Instance {\n\n    public onAgmReady = this._addToRegistry(\"agmReady\");\n\n    public onStopped = this._addToRegistry(\"stopped\");\n\n    private _registry: CallbackRegistry = CallbackRegistryFactory();\n\n    private _startUpContext: WindowContext;\n    private _title: string;\n    private _isActivityInstance: boolean;\n    private _activityId: string;\n    private _inActivity: boolean;\n    private _agmInstance: Partial<Glue42Core.AGM.Instance>;\n    private _unsubscribeInstanceAgmServerReady: UnsubscribeFunction;\n    private _unsubscribeInstanceStopped: UnsubscribeFunction;\n\n    constructor(private _id: string,\n                private _appName: string,\n                private _appManager: AppManagerImpl,\n                private _agm: Glue42Core.AGM.API,\n                private _activities: Glue42.Activities.API,\n                private _windows: Glue42.Windows.API,\n                startFailed?: boolean\n    ) {\n        if (startFailed) {\n            return;\n        }\n\n        this._unsubscribeInstanceStopped = this._appManager.onInstanceStopped((instance: Glue42.AppManager.Instance) => {\n            if (instance.id !== this._id) {\n                return;\n            }\n\n            this._registry.execute(\"stopped\", instance);\n        });\n\n        this._unsubscribeInstanceAgmServerReady = this._appManager.onInstanceAgmServerReady((instance) => {\n            if (instance.id !== this._id) {\n                return;\n            }\n\n            this._registry.execute(\"agmReady\", instance);\n        });\n    }\n\n    get id(): string { return this._id; }\n\n    get application(): Glue42.AppManager.Application { return this._appManager.application(this._appName); }\n\n    get activity(): Glue42.Activities.Activity {\n        if (!this._activities) {\n            throw new Error(\"This method requires glue.activities library to be enabled.\");\n        }\n        return this._activities.all.instances.get()\n            .filter((activityInstance: Glue42.Activities.Activity) => activityInstance.id === this._activityId)[0];\n    }\n\n    get activityInstances(): Glue42.AppManager.Instance[] {\n        return this._appManager.instances()\n            .filter((i) => i.context && (i.context.activityId === this._activityId));\n    }\n\n    get activityOwnerInstance(): Glue42.AppManager.Instance {\n        return this._appManager.instances()\n            .filter((instance) => {\n                if (instance.window && instance.window.context) {\n                    const instWinCntx = instance.window.context as WindowContext;\n                    if (instWinCntx._t42 && instWinCntx._t42.activityIsOwner) {\n                        return true;\n                    }\n                }\n                return false;\n            })[0];\n    }\n\n    get window(): Glue42.Windows.GDWindow {\n        if (!this._windows) {\n            throw new Error(\"This method requires glue.windows library to be enabled.\");\n        }\n\n        let win = this._windows.list().filter((w) => w.id === this._id)[0];\n        if (!win && this.activity && this.activityOwnerInstance) {\n            // This is covering GD3 activity instance\n            win = this.activityOwnerInstance.window;\n        }\n\n        return win;\n    }\n\n    get context(): WindowContext {\n        return this._startUpContext ?? this.window?.context ?? {};\n    }\n\n    get title(): string { return this._title; }\n\n    get isActivityInstance(): boolean { return this._isActivityInstance; }\n\n    get activityId(): string { return this._activityId; }\n\n    get inActivity(): boolean { return this._inActivity; }\n\n    get isSingleWindowApp(): boolean { return !this._inActivity; }\n\n    get agm(): Partial<Glue42Core.AGM.Instance> {\n        return this._agmInstance;\n    }\n\n    public updateFromProps(props: InstanceProps): void {\n        this._startUpContext = props.Context;\n        this._title = props.Title;\n        this._isActivityInstance = false;\n        if (props.ActivityId && props.ActivityId !== \"\") {\n            this._activityId = props.ActivityId;\n            this._isActivityInstance = true;\n        }\n        if (!this._activityId && this._startUpContext && this._startUpContext.activityId) {\n            this._activityId = this._startUpContext.activityId;\n        }\n        this._inActivity = Boolean(this._activityId);\n\n        this.updateAgmInstanceFromProps(props);\n    }\n\n    public updateAgmInstanceFromProps(props: InstanceProps) {\n        if (!props.AgmServers) {\n            return;\n        }\n\n        if (props.GD3) {\n            const agmInstances: Glue42Core.AGM.Instance[] = props.AgmServers as Glue42Core.AGM.Instance[];\n            if (agmInstances) {\n                this._agmInstance = agmInstances[0];\n            }\n        } else {\n            const gdAgmServers: { [key: string]: AgmInstanceProps } = props.AgmServers as { [key: string]: AgmInstanceProps };\n            const propsAgmServer = Object.keys(gdAgmServers)[0];\n            if (!propsAgmServer) {\n                return;\n            }\n            const propsAgm = gdAgmServers[propsAgmServer];\n            this._agmInstance = {\n                machine: propsAgm.machineName,\n                user: propsAgm.userName,\n                environment: propsAgm.environment,\n                application: propsAgm.applicationName,\n            };\n        }\n    }\n\n    public stop(): Promise<void> {\n        return new Promise((resolve, reject) => {\n            const unsubscribe = this._appManager.onInstanceStopped((instance) => {\n                if (instance.id === this._id) {\n                    unsubscribe();\n                    resolve();\n                }\n            });\n\n            this._agm.invoke(\n                AgmNames.StopApplicationMethodName,\n                {\n                    Name: this._appName,\n                    Id: this._id\n                })\n                .then(() => {\n                    if (this._appManager.mode === \"startOnly\") {\n                        this._appManager.handleInstanceStopped({\n                            Name: this._appName,\n                            Id: this.id,\n                            Context: undefined,\n                            Title: undefined,\n                            ActivityId: undefined,\n                            AgmServers: undefined\n                        });\n                        // in startOnly mode, resolve stop as soon as we receive\n                        resolve();\n                    }\n                })\n                .catch((err: any) => reject(err));\n        });\n    }\n\n    public activate(): Promise<Glue42Core.AGM.InvocationResult<any>> {\n        return this._agm.invoke(AgmNames.ActivateApplicationMethodName, { Name: this._appName, Id: this._id });\n    }\n\n    public done() {\n\n        // remove all handlers\n        this._registry.clear();\n        // remove subscriptions\n        this._unsubscribeInstanceAgmServerReady();\n        this._unsubscribeInstanceStopped();\n    }\n\n    private _addToRegistry(key: string) {\n        return (callback: (instance: Glue42.AppManager.Instance) => any) => {\n            this._registry.add(key, callback);\n        };\n    }\n}\n","import ApplicationImpl from \"./application\";\nimport { Glue42 } from \"../../glue\";\nimport { AppProps, InstanceProps } from \"./types\";\nimport { default as CallbackRegistryFactory, CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport InstanceImpl from \"./instance\";\nimport { Glue42Core } from \"@glue42/core\";\n\nexport default class AppManagerImpl implements Glue42.AppManager.AppManager {\n\n    private _apps: { [key: string]: ApplicationImpl } = {};\n    private _instances: InstanceImpl[] = [];\n    private _registry: CallbackRegistry = CallbackRegistryFactory();\n\n    constructor(\n        public mode: Glue42.AppManager.Mode,\n        private _agm: Glue42Core.AGM.API,\n        private _activities: Glue42.Activities.API,\n        private _windows: Glue42.Windows.API,\n        private _logger: Glue42Core.Logger.API,\n        private _gdMajorVersion: number\n    ) {\n        //\n    }\n\n    public application = (name: string) => {\n        return this._apps[name];\n    }\n\n    public applications = () => {\n        return Object.keys(this._apps).map((k: string) => this._apps[k]);\n    }\n\n    public instances = () => {\n        return this._instances;\n    }\n\n    public getMyInstance = () => {\n        if (this._gdMajorVersion >= 3) {\n            // GD3 check\n            const instanceId = window.glue42gd.appInstanceId;\n            return this._instances.filter((i) => i.id === instanceId)[0];\n        }\n\n        return undefined;\n    }\n\n    public handleAppAdded = (props: AppProps) => {\n        const id = this._getAppId(props);\n        this._logger.trace(`adding app ${id}`);\n        this._apps[id] = new ApplicationImpl(this, id, this._agm);\n        const app = this._updateAppFromProps(props);\n\n        this._registry.execute(\"appAdded\", app);\n    }\n\n    public handleAppUpdated = (props: AppProps) => {\n        // TODO: check side effects, is this._apps updated?\n\n        const app = this._updateAppFromProps(props);\n\n        this._registry.execute(\"appChanged\", app);\n    }\n\n    public handleAppRemoved = (props: AppProps) => {\n        const id = this._getAppId(props);\n        this._logger.trace(`removing app ${id}`);\n        const app = this.application(id);\n\n        // remove all instances related to the app\n        this._instances = this._instances.filter((i) => i.application.name !== app.name);\n\n        delete this._apps[id];\n\n        this._registry.execute(\"appRemoved\", app);\n    }\n\n    public handleAppReady = (props: AppProps) => {\n        const id = this._getAppId(props);\n        const app = this._getAppOrThrow(id);\n        app.updateFromProps(props);\n\n        if (app.available) {\n            this._registry.execute(\"appAvailable\", app);\n        } else {\n            this._registry.execute(\"appUnavailable\", app);\n        }\n    }\n\n    public handleInstanceStarted = (props: InstanceProps): InstanceImpl => {\n        this._logger.trace(`started app ${props.Name} ${props.Id}`);\n        const id = this._getInstanceId(props);\n        const appName = this._getInstanceAppName(props);\n\n        const instance = new InstanceImpl(id, appName, this, this._agm, this._activities, this._windows);\n\n        this._updateInstanceFromProps(instance, props);\n\n        this._instances.push(instance);\n\n        this._registry.execute(\"instanceStarted\", instance);\n        return instance;\n    }\n\n    public handleInstanceStopped = (props: InstanceProps) => {\n        this._logger.trace(`failed to start app ${props.Name} ${props.Id}`);\n\n        const id = this._getInstanceId(props);\n        const appName = this._getInstanceAppName(props);\n        const instance = this._getInstanceOrThrow(id, appName);\n\n        this._instances = this._instances.filter((i) => !this._matchInstance(i, id, appName));\n\n        this._registry.execute(\"instanceStopped\", instance);\n        instance.done();\n    }\n\n    public handleInstanceAgmServerReady = (props: InstanceProps) => {\n\n        const id = this._getInstanceId(props);\n        const appName = this._getInstanceAppName(props);\n        const instance = this._getInstanceOrThrow(id, appName);\n\n        instance.updateAgmInstanceFromProps(props);\n\n        this._registry.execute(\"instanceAgmServerReady\", instance);\n    }\n\n    public handleInstanceStartFailed = (props: InstanceProps) => {\n\n        const id = this._getInstanceId(props);\n        const appName = this._getInstanceAppName(props);\n        const startFailed = true;\n        const instance = new InstanceImpl(id, appName, undefined, undefined, undefined, undefined, startFailed);\n\n        this._updateInstanceFromProps(instance, props);\n\n        this._registry.execute(\"instanceStartFailed\", instance);\n    }\n\n    public handleInstanceUpdated = (props: InstanceProps) => {\n\n        const id = this._getInstanceId(props);\n        const app = this._getInstanceAppName(props);\n        const instance = this._getInstanceOrThrow(id, app);\n\n        this._updateInstanceFromProps(instance, props);\n    }\n\n    /** Event subscription methods */\n    public onInstanceStarted = (callback: (item: Glue42.AppManager.Instance) => any): UnsubscribeFunction => {\n        this._replay(this._instances, callback);\n        return this._registry.add(\"instanceStarted\", callback);\n    }\n\n    public onInstanceStartFailed = (callback: (item: Glue42.AppManager.Instance) => any): UnsubscribeFunction => {\n        return this._registry.add(\"instanceStartFailed\", callback);\n    }\n\n    public onInstanceStopped = (callback: (item: Glue42.AppManager.Instance) => any): UnsubscribeFunction => {\n        return this._registry.add(\"instanceStopped\", callback);\n    }\n\n    public onInstanceUpdated = (callback: (item: Glue42.AppManager.Instance) => any): UnsubscribeFunction => {\n        return this._registry.add(\"instanceChanged\", callback);\n    }\n\n    public onInstanceAgmServerReady = (callback: (item: Glue42.AppManager.Instance) => any): UnsubscribeFunction => {\n        return this._registry.add(\"instanceAgmServerReady\", callback);\n    }\n\n    public onAppAdded = (callback: (item: Glue42.AppManager.Application) => any): UnsubscribeFunction => {\n        this._replay(this._apps, callback);\n        return this._registry.add(\"appAdded\", callback);\n    }\n\n    public onAppRemoved = (callback: (item: Glue42.AppManager.Application) => any): UnsubscribeFunction => {\n        return this._registry.add(\"appRemoved\", callback);\n    }\n\n    public onAppAvailable = (callback: (item: Glue42.AppManager.Application) => any): UnsubscribeFunction => {\n        return this._registry.add(\"appAvailable\", callback);\n    }\n\n    public onAppUnavailable = (callback: (item: Glue42.AppManager.Application) => any): UnsubscribeFunction => {\n        return this._registry.add(\"appUnavailable\", callback);\n    }\n\n    public onAppChanged = (callback: (item: Glue42.AppManager.Application) => any): UnsubscribeFunction => {\n        return this._registry.add(\"appChanged\", callback);\n    }\n\n    private _getAppOrThrow(id: string) {\n        const result = this.application(id);\n        if (!result) {\n            throw Error(`app with id ${id} not found`);\n        }\n        return result;\n    }\n\n    private _getAppId(props: AppProps) {\n        return props.Name;\n    }\n\n    private _matchInstance(instance: Glue42.AppManager.Instance, id: string, appName: string) {\n        return instance.id === id && instance.application.name === appName;\n    }\n\n    private _getInstanceByIdAndName(id: string, appName: string) {\n        return this._instances.filter((i) => this._matchInstance(i, id, appName))[0];\n    }\n\n    private _getInstanceOrThrow(id: string, appName: string) {\n        const result = this._getInstanceByIdAndName(id, appName);\n        if (!result) {\n            throw Error(`instance with id ${id} not found`);\n        }\n        return result;\n    }\n\n    private _getInstanceId(props: InstanceProps) {\n        return props.Id;\n    }\n\n    private _getInstanceAppName(props: InstanceProps) {\n        return props.Name;\n    }\n\n    private _updateAppFromProps(props: AppProps) {\n        const id = this._getAppId(props);\n        this._logger.trace(`updating app with  + ${id}, ${props}`);\n        const app = this._getAppOrThrow(id);\n\n        app.updateFromProps(props);\n\n        return app;\n    }\n\n    private _updateInstanceFromProps(instance: InstanceImpl, props: InstanceProps) {\n        this._logger.trace(\"updating instance with \" + this._getInstanceId(props) + \" for app \" + this._getInstanceAppName(props));\n        instance.updateFromProps(props);\n    }\n\n    private _replay(itemsToReplay: { [key: string]: any } | any[], callback: (item: any) => any) {\n        if (itemsToReplay) {\n            // if not array transform to array using Object.values\n            if (Array.isArray(itemsToReplay)) {\n                itemsToReplay.forEach((item) => callback(item));\n            } else {\n                const itemsToReplayArr = Object.keys(itemsToReplay).map((key) => itemsToReplay[key]);\n                itemsToReplayArr.forEach((item) => callback(item));\n            }\n        }\n    }\n\n}\n","import * as AgmNames from \"./const/agm-names\";\nimport { default as CallbackRegistryFactory, CallbackRegistry } from \"callback-registry\";\nimport { Glue42 } from \"../../glue\";\nimport { Glue42Core } from \"@glue42/core\";\n\nfunction promisify(promise: Promise<any>, successCallback: (arg?: any) => void, errorCallback: (err?: any) => void) {\n    const isFunction = (arg: any) => {\n        return !!(arg && arg.constructor && arg.call && arg.apply);\n    };\n\n    if (!isFunction(successCallback) && !isFunction(errorCallback)) {\n        return promise;\n    }\n\n    if (!isFunction(successCallback)) {\n        successCallback = () => {\n            // EMPTY\n        };\n    } else if (!isFunction(errorCallback)) {\n        errorCallback = () => {\n            // EMPTY\n        };\n    }\n\n    promise.then(successCallback, errorCallback);\n}\n\nexport default class EntitlementsImpl implements Glue42.AppManager.Entitlements {\n\n    private _registry: CallbackRegistry = CallbackRegistryFactory();\n\n    constructor(\n        private _agm: Glue42Core.AGM.API\n    ) {\n        //\n    }\n\n    public handleBranchModified = (branch: Glue42.AppManager.Branch) => {\n        this._registry.execute(\"branchChanged\", branch);\n    }\n\n    public handleBranchesModified = (branches: Glue42.AppManager.Branch[]) => {\n        this._registry.execute(\"branchesChanged\", branches);\n    }\n\n    public getRegion = (success?: (region: string) => any, error?: (err: any) => any): void | Promise<string> => {\n        return promisify(\n            this._agmInvoke(\n                AgmNames.GetConfigurationRegionMethodName,\n                (e: Glue42Core.AGM.InvocationResult<{ Region: string }>) => e.returned.Region\n            ),\n            success,\n            error\n        );\n    }\n\n    public getBranches = (success?: (branches: Glue42.AppManager.Branch[]) => any, error?: (err: any) => any): void | Promise<Glue42.AppManager.Branch[]> => {\n        const promise = this._agmInvoke(\n            AgmNames.GetBranchesMethodName,\n            (e) => {\n                const obj = e.returned.Branches as { [key: string]: Glue42.AppManager.Branch };\n                return Object.keys(obj).map((key) => obj[key]);\n            }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public getCurrentBranch = (success?: (branch: Glue42.AppManager.Branch) => any, error?: (err: any) => any): void | Promise<Glue42.AppManager.Branch> => {\n        const promise = this._agmInvoke(\n            AgmNames.GetCurrentBranchMethodName,\n            (e) => e.returned.Branch,\n            undefined\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public setRegion = (region: string, success?: (resMsg: string) => any, error?: (err: any) => any): void | Promise<string> => {\n        const promise = this._agmInvoke(\n            AgmNames.SetConfigurationRegionMethodName,\n            (e) => e.returned.ResultMessage,\n            { Region: region }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public setCurrentBranch = (branch: string, success?: (resMsg: string) => any, error?: (err: any) => any): void | Promise<string> => {\n        const promise = this._agmInvoke(\n            AgmNames.SetCurrentBranchMethodName,\n            (e) => e.returned.ResultMessage,\n            { Branch: branch }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public currentUser = (success?: (user: Glue42.AppManager.UserInfo) => any, error?: (err: any) => any): void | Promise<Glue42.AppManager.UserInfo> => {\n        const promise = this._agmInvoke(AgmNames.GetUserMethodName);\n        return promisify(promise, success, error);\n    }\n\n    public getFunctionalEntitlement = (funct: string, success?: (entitlement: string) => any, error?: (err: any) => any): void | Promise<string> => {\n        const promise = this._agmInvoke(\n            AgmNames.GetFunctionalEntitlementMethodName,\n            (e) => e.returned.Entitlement,\n            { Function: funct }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public getFunctionalEntitlementBranch = (funct: string, branch: string, success?: (entitlement: string) => any, error?: (err: any) => any): void | Promise<string> => {\n        const promise = this._agmInvoke(\n            AgmNames.GetFunctionalEntitlementMethodName,\n            (e) => e.returned.Entitlement,\n            { Function: funct, Branch: branch }\n        );\n        return promisify(promise, success, error);\n    }\n\n    public canI = (func: string, success?: (allowed: boolean) => any, error?: (err: any) => any): void | Promise<boolean> => {\n        const promise = this._agmInvoke(\n            AgmNames.CanIMethodName,\n            (e) => e.returned.Result,\n            { Function: func }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public canIBranch = (func: string, branch: string, success?: (allowed: boolean) => any, error?: (err: any) => any): void | Promise<boolean> => {\n        const promise = this._agmInvoke(\n            AgmNames.CanIMethodName,\n            (e) => e.returned.Result,\n            { Function: func, Branch: branch }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public onBranchesChanged = (callback: (branches: Glue42.AppManager.Branch[]) => any): void => {\n        this._registry.add(\"branchesChanged\", callback);\n    }\n\n    public onBranchChanged = (callback: (branch: Glue42.AppManager.Branch) => any): void => {\n        this._registry.add(\"branchChanged\", callback);\n    }\n\n    public exit = (options: Glue42.AppManager.ExitOpts): Promise<any> => {\n        return this._agmInvoke(\n            AgmNames.ShutdownMethodName,\n            null,\n            options\n        );\n    }\n\n    public restart = (options: Glue42.AppManager.ExitOpts): Promise<any> => {\n        return this._agmInvoke(\n            AgmNames.RestartMethodName,\n            null,\n            options\n        );\n    }\n\n    private _agmInvoke = (\n        method: string,\n        transformFunction?: (res: Glue42Core.AGM.InvocationResult<any>) => any,\n        args?: object\n    ): Promise<any> => {\n        args = args || {};\n        return new Promise((resolve, reject) => {\n            const errHandler: Glue42Core.AGM.InvokeErrorHandler = (error) => reject(error);\n            this._agm.invoke(method, args)\n                .then((result) => {\n                    if (!transformFunction) {\n                        transformFunction = (d: Glue42Core.AGM.InvocationResult<any>) => d.returned;\n                    }\n                    resolve(transformFunction(result));\n                })\n                .catch(errHandler);\n        });\n    }\n}\n","import AppManagerImpl from \"./app-manager\";\nimport EntitlementsImpl from \"./entitlements\";\nimport snapshot from \"./snapshot\";\nimport subscriptionFactory from \"./data-subscription\";\nimport { Glue42 } from \"../../glue\";\n\nexport default (config: Glue42.AppManager.Config): Glue42.AppManager.API => {\n\n    if (!config) {\n        throw Error(\"config not set\");\n    }\n\n    if (!config.agm) {\n        throw Error(\"config.agm is missing\");\n    }\n\n    const START_ONLY: Glue42.AppManager.Mode = \"startOnly\";\n    const SKIP_ICONS: Glue42.AppManager.Mode = \"skipIcons\";\n    const FULL: Glue42.AppManager.Mode = \"full\";\n\n    const mode: Glue42.AppManager.Mode = config.mode || START_ONLY;\n    if (mode !== START_ONLY && mode !== SKIP_ICONS && mode !== FULL) {\n        throw new Error(`Invalid mode for appManager lib - ${mode} is not supported`);\n    }\n\n    const activities = config.activities;\n    const agm = config.agm;\n    const logger = config.logger;\n    const windows = config.windows;\n    const appManager = new AppManagerImpl(mode, agm, activities, windows, logger.subLogger(\"applications\"), config.gdMajorVersion);\n    const entitlements = new EntitlementsImpl(agm);\n\n    let readyPromise: Promise<undefined | {}>;\n    if (mode === START_ONLY) {\n        readyPromise = snapshot(agm, appManager);\n    } else {\n        const subscription = subscriptionFactory(agm, appManager, entitlements, mode === SKIP_ICONS);\n        readyPromise = subscription.start();\n    }\n\n    const api: Glue42.AppManager.API = {\n        ready: () => readyPromise,\n\n        applications: appManager.applications,\n        application: appManager.application,\n\n        onAppAdded: appManager.onAppAdded,\n        onAppRemoved: appManager.onAppRemoved,\n        onAppChanged: appManager.onAppChanged,\n        onAppAvailable: appManager.onAppAvailable,\n        onAppUnavailable: appManager.onAppUnavailable,\n\n        instances: appManager.instances,\n        get myInstance() {\n            return appManager.getMyInstance();\n        },\n\n        onInstanceStarted: appManager.onInstanceStarted,\n        onInstanceStopped: appManager.onInstanceStopped,\n        onInstanceUpdated: appManager.onInstanceUpdated,\n        onInstanceStartFailed: appManager.onInstanceStartFailed,\n\n        getRegion: entitlements.getRegion,\n        getBranches: entitlements.getBranches,\n        getCurrentBranch: entitlements.getCurrentBranch,\n        getFunctionalEntitlement: entitlements.getFunctionalEntitlement,\n        getFunctionalEntitlementBranch: entitlements.getFunctionalEntitlementBranch,\n\n        setCurrentBranch: entitlements.setCurrentBranch,\n        setRegion: entitlements.setRegion,\n\n        currentUser: entitlements.currentUser,\n\n        canI: entitlements.canI,\n        canIBranch: entitlements.canIBranch,\n\n        onBranchesChanged: entitlements.onBranchesChanged,\n\n        exit: entitlements.exit,\n        restart: entitlements.restart\n    };\n\n    return api;\n};\n","import * as AgmNames from \"./const/agm-names\";\nimport { objectValues } from \"./helper\";\nimport { Glue42Core } from \"@glue42/core\";\nimport AppManagerImpl from \"./app-manager\";\n\n/** Retrieves application snapshot from ACS */\nexport default function snapshot(agm: Glue42Core.AGM.API, appManager: AppManagerImpl): Promise<undefined> {\n    return new Promise((resolve, reject) => {\n        agm.invoke(AgmNames.GetApplicationsMethodName, { skipIcon: true })\n            .then((response) => {\n                const data = response.returned;\n                if (!data) {\n                    resolve();\n                }\n\n                const applications = data.applications;\n                if (!applications) {\n                    resolve();\n                }\n\n                objectValues(applications).map((item) => appManager.handleAppAdded(item));\n\n                resolve();\n            })\n            .catch((err) => reject(`Error getting application snapshot: ${err.message}`));\n    });\n}\n","import * as AgmNames from \"./const/agm-names\";\nimport * as EventNames from \"./const/event-names\";\nimport { objectValues } from \"./helper\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../glue\";\nimport { AppProps, InstanceProps } from \"./types\";\nimport AppManagerImpl from \"./app-manager\";\nimport EntitlementsImpl from \"./entitlements\";\n\n/** Subscribe for the AGM stream published by ACS and distributes events to applications and instances components */\nexport default function createDataSubscription(agm: Glue42Core.AGM.API, applications: AppManagerImpl, entitlements: EntitlementsImpl, skipIcons: boolean) {\n\n    let subscription: Glue42Core.AGM.Subscription;\n    const start = () => {\n        let resolveFunc: (value?: {} | Promise<{}>) => void;\n        let rejectFunc: (error?: any) => void;\n\n        const resultPromise = new Promise((resolve, reject) => {\n            resolveFunc = resolve;\n            rejectFunc = reject;\n        });\n\n        agm.subscribe(AgmNames.OnEventMethodName, { arguments: { skipIcon: skipIcons }, waitTimeoutMs: 10000 })\n            .then((s: any) => {\n                subscription = s;\n                subscription.onData((streamData: Glue42Core.AGM.StreamData) => {\n                    const events: any = streamData.data;\n\n                    objectValues(events[EventNames.OnApplicationAddedEvent])\n                        .map((item: AppProps) => applications.handleAppAdded(item));\n\n                    objectValues(events[EventNames.OnApplicationChangedEvent])\n                        .map((item: AppProps) => applications.handleAppUpdated(item));\n\n                    objectValues(events[EventNames.OnApplicationRemovedEvent])\n                        .map((item: AppProps) => applications.handleAppRemoved(item));\n\n                    objectValues(events[EventNames.OnApplicationReadyEvent])\n                        .map((item: AppProps) => applications.handleAppReady(item));\n\n                    objectValues(events[EventNames.OnApplicationStartedEvent])\n                        .map((item: InstanceProps) => applications.handleInstanceStarted(item));\n\n                    objectValues(events[EventNames.OnApplicationStartFailedEvent])\n                        .map((item: InstanceProps) => applications.handleInstanceStartFailed(item));\n\n                    objectValues(events[EventNames.OnApplicationStoppedEvent])\n                        .map((item: InstanceProps) => applications.handleInstanceStopped(item));\n\n                    objectValues(events[EventNames.OnApplicationUpdatedEvent])\n                        .map((item: InstanceProps) => applications.handleInstanceUpdated(item));\n\n                    objectValues(events[EventNames.OnApplicationAgmServerReadyEvent])\n                        .map((item: InstanceProps) => applications.handleInstanceAgmServerReady(item));\n\n                    objectValues(events[EventNames.OnBranchChangedEvent])\n                        .map((item: Glue42.AppManager.Branch) => entitlements.handleBranchModified(item));\n\n                    objectValues(events[EventNames.OnBranchesModifiedEvent])\n                        .map((item: Glue42.AppManager.Branch[]) => entitlements.handleBranchesModified(item));\n\n                    resolveFunc();\n                });\n\n                subscription.onFailed((err: any) => rejectFunc(err));\n\n            })\n            .catch((err: any) => rejectFunc(`Error subscribing for ${AgmNames.OnEventMethodName} stream. Err: ${err}`));\n\n        return resultPromise;\n    };\n\n    const stop = () => {\n        if (subscription) {\n            subscription.close();\n        }\n    };\n\n    return {\n        start,\n        stop\n    };\n}\n","import { CallbackRegistry, UnsubscribeFunction, default as CallbackFactory } from \"callback-registry\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { PendingWindowState, WindowEvents, WindowWrapper } from \"./types\";\n\nexport class WindowStore {\n    private readonly waitForTimeoutInMilliseconds: number = 60000;\n    private _windows: { [key: string]: WindowWrapper } = {};\n    private _pendingWindows: { [key: string]: WindowWrapper } = {};\n    private _pendingWindowsStates: { [key: string]: PendingWindowState } = {};\n    private _registry: CallbackRegistry;\n    private _logger: Glue42Core.Logger.API;\n\n    constructor() {\n        this._registry = CallbackFactory();\n    }\n\n    public init(logger: Glue42Core.Logger.API) {\n        this._logger = logger;\n    }\n\n    // Returns a window which either in Ready OR NOT 'ready' state (when the window is NOT marked with readyToShow)\n    public get(id: string): WindowWrapper {\n        return this._windows[id] || this._pendingWindows[id];\n    }\n\n    // Returns a window which is in 'ready' state (when the window is marked with readyToShow)\n    public getIfReady(id: string): WindowWrapper {\n        return this._windows[id];\n    }\n\n    public get list(): { [key: string]: WindowWrapper } {\n        return this._windows;\n    }\n\n    public add(window: WindowWrapper) {\n        const isExist = this._pendingWindows[window.API.id] ? true : false;\n        if (isExist) {\n            this._logger.error(`trying to add window with id ${window.API.id} from windowStore, which already exists`);\n            return;\n        }\n        const remote = window.API.windowType === \"remote\";\n        this._pendingWindows[window.API.id] = window;\n        this._pendingWindowsStates[window.API.id] = {\n            ready: false,\n            urlChanged: remote, // remote windows don't have url events\n        };\n\n        this._registry.execute(\"on-added\", window);\n    }\n\n    public remove(window: WindowWrapper) {\n        delete this._windows[window.API.id];\n        delete this._pendingWindows[window.API.id];\n        delete this._pendingWindowsStates[window.API.id];\n        this._registry.execute(\"on-removed\", window);\n    }\n\n    public setReadyState(windowId: string) {\n        const targetWindowState = this._pendingWindowsStates[windowId];\n\n        if (typeof targetWindowState === \"undefined\") {\n            return;\n        }\n\n        targetWindowState.ready = true;\n\n        if (targetWindowState.urlChanged) {\n            this.markReadyToShow(windowId);\n        }\n    }\n\n    public setUrlChangedState(windowId: string) {\n        const targetWindowState = this._pendingWindowsStates[windowId];\n\n        if (typeof targetWindowState === \"undefined\") {\n            return;\n        }\n\n        targetWindowState.urlChanged = true;\n\n        if (targetWindowState.ready) {\n            this.markReadyToShow(windowId);\n        }\n    }\n\n    public waitFor(id: string): Promise<WindowWrapper> {\n        return new Promise((resolve, reject) => {\n\n            let un: UnsubscribeFunction;\n\n            const timeout = setTimeout(() => {\n                un();\n                reject(\"waitFor timed out.\");\n            }, this.waitForTimeoutInMilliseconds);\n\n            const win = this._windows[id];\n            if (win) {\n                clearTimeout(timeout);\n                resolve(win);\n            } else {\n                un = this.onReadyWindow((w: WindowWrapper) => {\n                    if (w.API.id !== id) {\n                        return;\n                    }\n                    clearTimeout(timeout);\n                    un();\n                    resolve(w);\n                });\n            }\n        });\n    }\n\n    public onReadyWindow(callback: (win: WindowWrapper) => void): UnsubscribeFunction {\n        return this._registry.add(\"on-ready\", callback);\n    }\n\n    public onAdded(callback: (win: WindowWrapper) => void): UnsubscribeFunction {\n        return this._registry.add(\"on-added\", callback);\n    }\n\n    public onRemoved(callback: (win: WindowWrapper) => void): UnsubscribeFunction {\n        return this._registry.add(\"on-removed\", callback);\n    }\n\n    // newly created windows now need to hear both \"ready\" and \"urlChanged\" events in otder to be markedReadyToShow\n    public markReadyToShow(windowId: string) {\n        if (this._pendingWindows[windowId]) {\n            this._windows[windowId] = this._pendingWindows[windowId];\n            delete this._pendingWindows[windowId];\n            delete this._pendingWindowsStates[windowId];\n        }\n\n        this._registry.execute(\"on-ready\", this._windows[windowId]);\n    }\n}\n\nexport default new WindowStore();\n","import { Glue42 } from \"../glue\";\nimport { Glue42Core } from \"@glue42/core\";\n\nexport default class Utils {\n    public static getGDMajorVersion() {\n        if (typeof window === \"undefined\") {\n            return -1;\n        }\n        if (!window.glueDesktop) {\n            return -1;\n        }\n        if (!window.glueDesktop.version) {\n            return -1;\n        }\n        const ver = Number(window.glueDesktop.version.substr(0, 1));\n        return isNaN(ver) ? -1 : ver;\n    }\n\n    public static callbackifyPromise<T>(\n        action: () => Promise<T>,\n        successCallback?: (args?: T) => void,\n        errorCallback?: (errorMessage: string) => void): Promise<T> {\n\n        const fail = (error: any) => {\n            let msg = error;\n            if (error instanceof Error) {\n                msg = error.message;\n            }\n            if (typeof errorCallback === \"function\") {\n                errorCallback(msg);\n                return;\n            }\n\n            return Promise.reject(msg);\n        };\n\n        try {\n            return action()\n                .then((result) => {\n                    if (typeof successCallback === \"function\") {\n                        successCallback(result);\n                    }\n                    return result;\n                })\n                .catch((error) => {\n                    return fail(error);\n                });\n        } catch (err) {\n            return fail(err);\n        }\n    }\n\n    public static getMonitor(bounds: Glue42.Windows.Bounds, displays?: Glue42.Screen[]): Glue42.Screen {\n        const monitorsSortedByOverlap = displays.map((m) => {\n            const { left, top, workingAreaWidth: width, workingAreaHeight: height } = m;\n            const overlap = this.calculateTotalOverlap({ left, top, width, height }, bounds);\n            return {\n                monitor: m,\n                totalOverlap: overlap\n            };\n        }).sort((a, b) => b.totalOverlap - a.totalOverlap);\n\n        return monitorsSortedByOverlap[0].monitor;\n    }\n\n    public static getDisplayCenterOfScreen(a: Partial<Glue42.Windows.Bounds>, display?: Glue42.Screen) {\n        const left = Math.floor(Math.max(display.left, (display.left + (display.workingAreaWidth - a.width) / 2)));\n        const top = Math.floor(Math.max(display.top, (display.top + (display.workingAreaHeight - a.height) / 2)));\n        return {\n            top,\n            left\n        };\n    }\n\n    private static calculateTotalOverlap(r1: Glue42.Windows.Bounds, r2: Glue42.Windows.Bounds) {\n        const r1x = r1.left;\n        const r1y = r1.top;\n        const r1xMax = r1x + r1.width;\n        const r1yMax = r1y + r1.height;\n\n        const r2x = r2.left;\n        const r2y = r2.top;\n        const r2xMax = r2x + r2.width;\n        const r2yMax = r2y + r2.height;\n\n        const xOverlap = Math.max(0, Math.min(r1xMax, r2xMax) - Math.max(r1x, r2x));\n        const yOverlap = Math.max(0, Math.min(r1yMax, r2yMax) - Math.max(r1y, r2y));\n\n        return xOverlap * yOverlap;\n    }\n}\n","import CallbackFactory, { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../glue\";\nimport {\n    Executor,\n    FrameButton,\n    Neighbours,\n    WindowConstructorOptions,\n    WindowEvents,\n    WindowWrapper,\n    FlashOptions,\n} from \"./types\";\nimport * as util from \"../activity/helpers/util\";\nimport utils from \"../utils\";\n\nimport { default as windowStore } from \"./store\";\nimport GDWindow = Glue42.Windows.GDWindow;\n\nexport default (id: string, options: WindowConstructorOptions, executor: Executor, logger: Glue42Core.Logger.API, appManagerGetter: () => Glue42.AppManager.API, agm: Glue42.AGM.API): WindowWrapper => {\n    const _registry: CallbackRegistry = CallbackFactory();\n    const _logger = logger.subLogger(`window ${id}`);\n\n    const _name: string = options.name;\n    const _mode: Glue42.Windows.WindowMode = options.mode;\n    let _url: string = options.url;\n    let _title: string = options.title;\n    let _context: any = options.context || {};\n    const _bounds: Glue42.Windows.Bounds = options.bounds;\n    let _frameColor: string = options.frameColor;\n    let _focus: boolean = options.focus;\n    let _neighbours: Neighbours = options.neighbours || {};\n    let _groupId: string = options.groupId;\n    let _isGroupHeaderVisible: boolean = options.isGroupHeaderVisible;\n    let _isTabHeaderVisible: boolean = options.isTabHeaderVisible;\n    let _isTabSelected: boolean = options.isTabSelected;\n    let _settings: Glue42.Windows.WindowSettings = options.settings;\n\n    // is Window visible\n    let _isVisible: boolean = options.isVisible;\n\n    // Window state Collapsed | Expanded\n    let isCollapsed: boolean = options.isCollapsed;\n\n    // Window state normal | maximized | minimized\n    let _windowState: Glue42.Windows.WindowState = options.state;\n\n    // tabGroupId only for window with 'Tab' mode\n    let _tabGroupId: string = options.tabGroupId;\n\n    // window is locked or unlocked;\n    let _isLocked: boolean = options.isLocked;\n\n    let _group: Glue42.Windows.Group;\n    let resultWindow: Glue42.Windows.GDWindow;\n\n    // Holding all frame buttons\n    let _frameButtons: Glue42.Windows.ButtonInfo[] = [];\n\n    // Holding the current zoom factor\n    let _zoomFactor = options.zoomFactor;\n\n    //#region \"AGM methods\"\n\n    function close(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            executor.close(resultWindow)\n                .then(() => {\n                    if (typeof success === \"function\") {\n                        success(resultWindow);\n                    }\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function navigate(newUrl: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            executor.navigate(resultWindow, newUrl)\n                .then(() => {\n                    if (newUrl === _url) {\n                        if (typeof success === \"function\") {\n                            success(resultWindow);\n                        }\n                        return resolve(resultWindow);\n                    }\n                    const un = onUrlChanged((url: string, win: Glue42.Windows.GDWindow) => {\n                        if (win.id === id && url === win.url) {\n                            if (typeof success === \"function\") {\n                                success(resultWindow);\n                            }\n                            un();\n                            resolve(resultWindow);\n                        }\n                    });\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function setStyle(style: Glue42.Windows.WindowStyle, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        if (!style || Object.keys(style).length === 0 || Object.keys(style).every((key) => !key)) {\n            const errMessage = `Invalid style arguments: ${JSON.stringify(style)}`;\n            error(errMessage);\n            return Promise.reject(new Error(errMessage));\n        }\n\n        if (style && style.focus !== undefined) {\n            if (typeof style.focus !== \"boolean\") {\n                const errMessage = `Focus must be boolean. Currently only focus true is supported ! ${JSON.stringify(style)}`;\n                error(errMessage);\n                return Promise.reject(new Error(errMessage));\n            } else if (style.focus === false) {\n                // tslint:disable-next-line:no-console\n                console.warn(\"Focus false is not supported ! \");\n            }\n        }\n\n        if (style && style.hidden !== undefined && typeof style.hidden !== \"boolean\") {\n            const errMessage = `Hidden must be boolean ! provided: ${JSON.stringify(style)}`;\n            error(errMessage);\n            return Promise.reject(new Error(errMessage));\n        }\n\n        return utils.callbackifyPromise(\n            () => executor.setStyle(resultWindow, style),\n            success,\n            error\n        );\n    }\n\n    function resetButtons(buttons: Glue42.Windows.WindowButtons, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(\n            () => executor.resetButtons(resultWindow, buttons),\n            success,\n            error\n        );\n    }\n\n    function setOnTop(onTop: boolean, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        if (this.onTop === onTop) {\n            const errMessage = `OnTop setting is already set to '${onTop}'`;\n            error(errMessage);\n            return Promise.reject(new Error(errMessage));\n        }\n\n        return utils.callbackifyPromise(\n            () => executor.setOnTop(resultWindow, onTop),\n            success,\n            error\n        );\n    }\n\n    function setSizeConstraints(constraints: Glue42.Windows.SizeConstraints, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        if (!constraints || Object.keys(constraints).every((value) => value === undefined)) {\n            const errMessage = `Invalid Constraints: ${JSON.stringify(constraints)}`;\n            error(errMessage);\n            return Promise.reject(new Error(errMessage));\n        }\n\n        return utils.callbackifyPromise(\n            () => executor.setSizeConstraints(resultWindow, constraints),\n            success,\n            error\n        );\n    }\n\n    function setTitle(newTitle: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise<Glue42.Windows.GDWindow>((resolve, reject) => {\n            executor.setTitle(resultWindow, newTitle)\n                .then(() => {\n                    if (typeof success === \"function\") {\n                        success(resultWindow);\n                    }\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n\n        // OPTION 2\n        // const promise = executor.setTitle(resultWindow, newTitle)\n        // return promisify\n    }\n\n    function moveResize(dimensions: Partial<Glue42.Windows.Bounds>, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve: (window: Glue42.Windows.GDWindow) => void, reject: (error: string) => void) => {\n\n            const resolveImmediately = areBoundsEqual(dimensions, _bounds);\n            let isDone = false;\n            const done = () => {\n                if (isDone) {\n                    return;\n                }\n                isDone = true;\n                if (typeof success === \"function\") {\n                    success(resultWindow);\n                }\n                resolve(resultWindow);\n\n                if (unsubscribeBoundsChanged) {\n                    unsubscribeBoundsChanged();\n                    unsubscribeBoundsChanged = undefined;\n                }\n                if (resolveTimeout) {\n                    clearTimeout(resolveTimeout);\n                    resolveTimeout = undefined;\n                }\n            };\n            let resolveTimeout: any;\n            let unsubscribeBoundsChanged: () => void;\n            if (!resolveImmediately) {\n                unsubscribeBoundsChanged = onBoundsChanged((win: Glue42.Windows.GDWindow) => {\n                    if (win.id !== resultWindow.id) {\n                        return;\n                    }\n\n                    if (!areBoundsEqual(dimensions, win.bounds)) {\n                        return;\n                    }\n\n                    done();\n                });\n            }\n\n            // always execute moveResize (we might have old bounds and prevent calls that are actually valid)\n            executor.moveResize(resultWindow, dimensions)\n                .then(() => {\n                    // if we're trying to resize with the bounds we already have\n                    if (resolveImmediately) {\n                        done();\n                        return;\n                    }\n\n                    // if no bounds change in the next 1s resolve\n                    resolveTimeout = setTimeout(() => {\n                        done();\n                    }, 1000);\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function addFrameButton(buttonInfo: Glue42.Windows.ButtonInfo, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            if (typeof buttonInfo === \"undefined\") {\n                if (typeof error === \"function\") {\n                    error(\"No button info\");\n                    return;\n                }\n                reject(\"No button info\");\n                return;\n            }\n\n            if (buttonInfo.buttonId === undefined) {\n                if (typeof error === \"function\") {\n                    error(\"No buttonId\");\n                    return;\n                }\n                reject(\"No buttonId\");\n                return;\n            }\n\n            if (buttonInfo.imageBase64 === undefined) {\n                if (typeof error === \"function\") {\n                    error(\"No imageBase64\");\n                    return;\n                }\n                reject(\"No imageBase64\");\n                return;\n            }\n            executor.addFrameButton(resultWindow, buttonInfo)\n                .then(() => {\n                    if (typeof success === \"function\") {\n                        success(resultWindow);\n                    }\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function removeFrameButton(buttonId: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            if (buttonId === undefined || buttonId === \"\") {\n                if (typeof error === \"function\") {\n                    error(\"No buttonId\");\n                    return;\n                }\n                reject(\"No buttonId\");\n                return;\n            }\n\n            executor.removeFrameButton(resultWindow, buttonId)\n                .then(() => {\n                    if (typeof success === \"function\") {\n                        success(resultWindow);\n                    }\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n\n        });\n    }\n\n    function activate(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            executor.activate(resultWindow)\n                .then(() => {\n                    if (typeof success === \"function\") {\n                        success(resultWindow);\n                    }\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function focus(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            executor.focus(resultWindow)\n                .then(() => {\n                    if (typeof success === \"function\") {\n                        success(resultWindow);\n                    }\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function maximizeRestore(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            const currEvent = _windowState === \"normal\" ? onMaximized : onNormal;\n            executor.maximizeRestore(resultWindow)\n                .then(() => {\n                    const un = currEvent(() => {\n                        if (typeof success === \"function\") {\n                            success(resultWindow);\n                        }\n                        if (un) {\n                            un();\n                        }\n                        resolve(resultWindow);\n                    });\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function maximize(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            executor.maximize(resultWindow)\n                .then(() => {\n                    if (_windowState === \"maximized\") {\n                        if (typeof success === \"function\") {\n                            success(resultWindow);\n                        }\n                        return resolve(resultWindow);\n                    }\n\n                    const un = onMaximized((win: Glue42.Windows.GDWindow) => {\n                        if (win.id === id && win.state === \"maximized\") {\n                            if (typeof success === \"function\") {\n                                success(resultWindow);\n                            }\n                            un();\n                            resolve(resultWindow);\n                        }\n                    });\n\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function restore(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            executor.restore(resultWindow)\n                .then(() => {\n                    if (_windowState === \"normal\") {\n                        if (typeof success === \"function\") {\n                            success(resultWindow);\n                        }\n                        return resolve(resultWindow);\n                    }\n\n                    const un = onNormal((win: Glue42.Windows.GDWindow) => {\n                        if (id === win.id && win.state === \"normal\") {\n                            if (typeof success === \"function\") {\n                                success(resultWindow);\n                            }\n                            un();\n                            resolve(resultWindow);\n                        }\n                    });\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function minimize(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            executor.minimize(resultWindow)\n                .then(() => {\n                    if (_windowState === \"minimized\") {\n                        if (typeof success === \"function\") {\n                            success(resultWindow);\n                        }\n                        return resolve(resultWindow);\n                    }\n\n                    const un = onMinimized((win: Glue42.Windows.GDWindow) => {\n                        if (id === win.id && win.state === \"minimized\") {\n                            if (typeof success === \"function\") {\n                                success(resultWindow);\n                            }\n                            un();\n                            return resolve(resultWindow);\n                        }\n                    });\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function collapse(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            if (isCollapsed) {\n                if (typeof success === \"function\") {\n                    success(resultWindow);\n                }\n                return resolve(resultWindow);\n            }\n            executor.collapse(resultWindow)\n                .then(() => {\n                    if (isCollapsed) {\n                        if (typeof success === \"function\") {\n                            success(resultWindow);\n                        }\n                        return resolve(resultWindow);\n                    }\n\n                    const un = onCollapsed((win: Glue42.Windows.GDWindow) => {\n                        if (win.id === id) {\n                            if (typeof success === \"function\") {\n                                success(resultWindow);\n                            }\n                            un();\n                            resolve(resultWindow);\n                        }\n                    });\n\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function expand(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            if (!isCollapsed) {\n                if (typeof success === \"function\") {\n                    success(resultWindow);\n                }\n                return resolve(resultWindow);\n            }\n            executor.expand(resultWindow)\n                .then(() => {\n                    if (!isCollapsed) {\n                        if (typeof success === \"function\") {\n                            success(resultWindow);\n                        }\n                        return resolve(resultWindow);\n                    }\n\n                    const un = onExpanded((win: Glue42.Windows.GDWindow) => {\n                        if (win.id === id) {\n                            if (typeof success === \"function\") {\n                                success(resultWindow);\n                            }\n                            un();\n                            resolve(resultWindow);\n                        }\n                    });\n\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function toggleCollapse(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            const currEvent = isCollapsed ? onExpanded : onCollapsed;\n            executor.toggleCollapse(resultWindow)\n                .then(() => {\n                    currEvent((win: Glue42.Windows.GDWindow) => {\n                        if (win.id === id) {\n                            if (typeof success === \"function\") {\n                                success(resultWindow);\n                            }\n                            resolve(resultWindow);\n                        }\n                    });\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function snap(target: string | Glue42.Windows.GDWindow, direction: Glue42.Windows.RelativeDirection, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        let targetWindowGroup;\n        if (!target) {\n            return Promise.reject(`Please specify a target window! calledWith: ${target}`);\n        }\n\n        if (typeof target === \"string\") {\n            const targetWindow = windowStore.get(target);\n            if (!targetWindow) {\n                return Promise.reject(new Error(`Invalid target parameter or no such window. Invoked with:  ${target}`));\n            }\n            targetWindowGroup = targetWindow.API.group;\n        } else {\n            targetWindowGroup = target.group;\n        }\n\n        return Promise.all([\n            waitForMyWindowToJoinTargetGroup(targetWindowGroup),\n            executor.snap(resultWindow, target, direction)\n        ])\n            .then(() => {\n                if (typeof success === \"function\") {\n                    success(resultWindow);\n                }\n                return resultWindow;\n            })\n            .catch((e) => {\n                if (typeof error === \"function\") {\n                    error(e);\n                }\n                return e;\n            });\n    }\n\n    function waitForMyWindowToJoinTargetGroup(targetGroup: Glue42.Windows.Group): Promise<void> {\n        return new Promise((resolve, reject) => {\n            const unsub = targetGroup.onWindowAdded((_, window) => {\n                if (resultWindow.id === window.id) {\n                    unsub();\n                    resolve();\n                }\n            });\n\n            // setTimeout(() => {\n            //     resolve();\n            // }, 1500);\n        });\n    }\n\n    function attachTab(tab: Glue42.Windows.GDWindow | string, index: number, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            let sourceWindowId: string;\n            const targetWindowId: string = resultWindow.id;\n            const errorMessage: string = \"Invalid tab parameter - should be an object with property id or a string. Invoked for source window id:\" + resultWindow.id;\n\n            if (!tab) {\n                reject(errorMessage);\n                return;\n            }\n\n            if (typeof tab === \"string\") {\n                sourceWindowId = tab;\n            } else if (typeof tab.id !== \"undefined\") {\n                sourceWindowId = tab.id;\n            } else {\n                reject(errorMessage);\n                return;\n            }\n\n            const argsForSend: any = {\n                sourceWindowId,\n                targetWindowId,\n            };\n\n            if (index) {\n                argsForSend.index = index;\n            }\n\n            const sourceWin = windowStore.get(argsForSend.sourceWindowId).API;\n            const un = sourceWin.onAttached((win: Glue42.Windows.GDWindow) => {\n                if (win.id === sourceWin.id) {\n                    if (typeof success === \"function\") {\n                        success(resultWindow);\n                    }\n                    un();\n                    resolve(resultWindow);\n                }\n            });\n\n            executor.attachTab(resultWindow, argsForSend)\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    un();\n                    reject(e);\n                });\n        });\n    }\n\n    function detachTab(opt: Glue42.Windows.DetachOptions, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            const argsForSend: any = { windowId: resultWindow.id };\n            const _options: Glue42.Windows.DetachOptions = opt || {};\n\n            if (typeof _options.relativeTo !== \"undefined\") {\n                if (typeof _options.relativeTo === \"string\") {\n                    argsForSend.relativeTo = _options.relativeTo;\n                } else if (typeof _options.relativeTo.id !== \"undefined\") {\n                    argsForSend.relativeTo = _options.relativeTo.id;\n                }\n\n                if (typeof _options.relativeDirection !== \"undefined\") {\n                    argsForSend.relativeDirection = _options.relativeDirection;\n                }\n\n                if (typeof _options.width !== \"undefined\") {\n                    argsForSend.width = _options.width;\n                }\n\n                if (typeof _options.height !== \"undefined\") {\n                    argsForSend.height = _options.height;\n                }\n            }\n\n            if (typeof _options.bounds !== \"undefined\") {\n                argsForSend.bounds = _options.bounds;\n            }\n\n            if (typeof _options.hideTabHeader !== \"undefined\") {\n                argsForSend.hideTabHeader = _options.hideTabHeader;\n            }\n\n            let visibilityChangeHeard = false;\n            let detachedHeard = false;\n\n            const unVisibility = _registry.add(\"frame-attached\", ((win: Glue42.Windows.GDWindow) => {\n                const isVisibilityCorrect = _options.hideTabHeader === undefined || _options.hideTabHeader !== win.isTabHeaderVisible;\n                if (id === win.id && isVisibilityCorrect) {\n                    visibilityChangeHeard = true;\n                    unVisibility();\n                    if (detachedHeard) {\n                        if (typeof success === \"function\") {\n                            success(resultWindow);\n                        }\n                        resolve(resultWindow);\n                        if (typeof unDetached === \"function\") {\n                            unDetached();\n                        }\n                    }\n                }\n            }));\n\n            const unDetached = onDetached((win: Glue42.Windows.GDWindow) => {\n                if (id === win.id) {\n                    detachedHeard = true;\n                    unDetached();\n                    if (visibilityChangeHeard) {\n                        if (typeof success === \"function\") {\n                            success(resultWindow);\n                        }\n                        resolve(resultWindow);\n                        if (typeof unVisibility === \"function\") {\n                            unVisibility();\n                        }\n                    }\n                }\n            });\n\n            executor.detachTab(resultWindow, argsForSend)\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    unDetached();\n                    unVisibility();\n                    reject(e);\n                });\n        });\n\n    }\n\n    function setVisible(toBeVisible?: boolean, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            executor.setVisible(resultWindow, toBeVisible)\n                .then(() => {\n                    let isVisibilityCorrect = toBeVisible === undefined ? _isVisible === true : _isVisible === toBeVisible;\n                    if (isVisibilityCorrect) {\n                        if (typeof success === \"function\") {\n                            success(resultWindow);\n                        }\n                        return resolve(resultWindow);\n                    }\n\n                    const un = onVisibilityChanged((win: Glue42.Windows.GDWindow) => {\n                        isVisibilityCorrect = toBeVisible === undefined ? win.isVisible === true : win.isVisible === toBeVisible;\n                        if (win.id === id && isVisibilityCorrect) {\n                            if (typeof success === \"function\") {\n                                success(resultWindow);\n                            }\n                            un();\n                            resolve(resultWindow);\n                        }\n                    });\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function showLoader(loader?: Glue42.Windows.Loader): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            executor.showLoader(resultWindow, loader)\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    function hideLoader(): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            executor.hideLoader(resultWindow)\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n\n    }\n\n    function updateContext(context: any, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            executor.updateContext(resultWindow, context)\n                .then(() => {\n                    if (typeof success === \"function\") {\n                        success(resultWindow);\n                    }\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function lock(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        if (resultWindow.isLocked) {\n            if (typeof success === \"function\") {\n                success(resultWindow);\n            }\n            return Promise.resolve(resultWindow);\n        }\n\n        return new Promise((resolve, reject) => {\n            executor.lock(resultWindow)\n                .then(() => waitForLockingChanged())\n                .then(() => {\n                    if (typeof success === \"function\") {\n                        success(resultWindow);\n                    }\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function unlock(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        if (!resultWindow.isLocked) {\n            if (typeof success === \"function\") {\n                success(resultWindow);\n            }\n            return Promise.resolve(resultWindow);\n        }\n\n        return new Promise((resolve, reject) => {\n            executor.unlock(resultWindow)\n                .then(() => waitForLockingChanged())\n                .then(() => {\n                    if (typeof success === \"function\") {\n                        success(resultWindow);\n                    }\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function waitForLockingChanged() {\n        return new Promise((resolve) => {\n            const un = onLockingChanged((window: GDWindow) => {\n                if (window.id === resultWindow.id) {\n                    un();\n                    resolve();\n                }\n            });\n        });\n    }\n\n    function getIcon(success?: (icon: string) => void, error?: Glue42Core.AGM.InvokeErrorHandler): Promise<string> {\n        return new Promise((resolve, reject) => {\n            // agm.invoke(\"T42.Wnd.GetIcon\", { windowId: resultWindow.id }, \"best\", {}, successHandler, error);\n            executor.getIcon(resultWindow)\n                .then((icon: string) => {\n                    if (typeof success === \"function\") {\n                        success(icon);\n                    }\n                    resolve(icon);\n                })\n                .catch((e) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function setIcon(base64Image: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            executor.setIcon(resultWindow, base64Image)\n                .then(() => {\n                    if (typeof success === \"function\") {\n                        success(resultWindow);\n                    }\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function setFrameColor(frameColor: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            executor.setFrameColor(resultWindow, frameColor)\n                .then(() => {\n                    if (typeof success === \"function\") {\n                        success(resultWindow);\n                    }\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function setTabHeaderVisible(toBeTabHeaderVisible: boolean, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            executor.setTabHeaderVisible(resultWindow, toBeTabHeaderVisible)\n                .then(() => {\n                    if (_isTabHeaderVisible === toBeTabHeaderVisible) {\n                        if (typeof success === \"function\") {\n                            success(resultWindow);\n                        }\n\n                        return resolve(resultWindow);\n                    }\n                    const un = onTabHeaderVisibilityChanged((win: Glue42.Windows.GDWindow) => {\n                        if (win.id === id && win.isTabHeaderVisible === toBeTabHeaderVisible) {\n                            if (typeof success === \"function\") {\n                                success(resultWindow);\n                            }\n                            un();\n                            resolve(resultWindow);\n                        }\n                    });\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    async function setTabTooltip(tooltip: string): Promise<Glue42.Windows.GDWindow> {\n        if (!tooltip) {\n            throw new Error(`${tooltip} is null or undefined`);\n        }\n        return executor.setTabTooltip(resultWindow, tooltip);\n    }\n\n    function showPopup(config: Glue42.Windows.PopupOptions): Promise<Glue42.Windows.GDWindow> {\n        return executor.showPopup(resultWindow, config);\n    }\n\n    function createFlydown(config: Glue42.Windows.FlydownOptions): Promise<Glue42.Windows.Flydown> {\n        return executor.createFlydown(resultWindow.id, config);\n    }\n\n    function setModalState(isModal: boolean): Promise<void> {\n        return executor.setModalState(resultWindow.id, isModal || false);\n    }\n\n    function zoomIn(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise<Glue42.Windows.GDWindow>(() => {\n            return executor.zoomIn(resultWindow);\n        }, success, error);\n\n    }\n\n    function zoomOut(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise<Glue42.Windows.GDWindow>(() => {\n            return executor.zoomOut(resultWindow);\n        }, success, error);\n\n    }\n\n    function setZoomFactor(zoomFactor: number, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise<Glue42.Windows.GDWindow>(() => {\n            if (isNaN(zoomFactor)) {\n                throw new Error(`zoomFactor is not a number`);\n            }\n            return executor.setZoomFactor(resultWindow, zoomFactor);\n        }, success, error);\n    }\n\n    function showDevTools() {\n        return executor.showDevTools(resultWindow);\n    }\n\n    function capture(captureOptions: Glue42.Windows.CaptureOptions): Promise<string> {\n        return executor.capture(resultWindow, captureOptions);\n    }\n\n    function flash(suppliedOptions?: boolean): Promise<Glue42.Windows.GDWindow> {\n        const flashOptions: FlashOptions = {\n            shouldFlash: true\n        };\n\n        if (typeof suppliedOptions === \"boolean\") {\n            flashOptions.shouldFlash = suppliedOptions;\n        }\n\n        return executor.flash(resultWindow, flashOptions);\n    }\n\n    //#endregion \"AGM methods\"\n\n    //#region \"Events\"\n\n    function onTitleChanged(callback: (title: string, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        callback(resultWindow.title, resultWindow);\n        return _registry.add(\"onTitleChanged\", callback);\n    }\n\n    function onClose(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"onClose\", callback);\n    }\n\n    function onUrlChanged(callback: (url: string, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"onUrlChanged\", callback);\n    }\n\n    function onFrameButtonAdded(callback: (btnInfo: Glue42.Windows.ButtonInfo, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"onFrameButtonAdded\", callback);\n    }\n\n    function onFrameButtonRemoved(callback: (btnInfo: Glue42.Windows.ButtonInfo, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"onFrameButtonRemoved\", callback);\n    }\n\n    function onFrameButtonClicked(callback: (btnInfo: Glue42.Windows.ButtonInfo, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"onFrameButtonClicked\", callback);\n    }\n\n    function onCollapsed(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (isCollapsed) {\n            callback(resultWindow);\n        }\n        return _registry.add(\"collapsed\", callback);\n    }\n\n    function onExpanded(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (!isCollapsed) {\n            callback(resultWindow);\n        }\n        return _registry.add(\"expanded\", callback);\n    }\n\n    function onMaximized(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (_windowState === \"maximized\") {\n            callback(resultWindow);\n        }\n        return _registry.add(\"maximized\", callback);\n    }\n\n    function onMinimized(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (_windowState === \"minimized\") {\n            callback(resultWindow);\n        }\n        return _registry.add(\"minimized\", callback);\n    }\n\n    function onNormal(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (_windowState === \"normal\") {\n            callback(resultWindow);\n        }\n        return _registry.add(\"normal\", callback);\n    }\n\n    function onAttached(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"attached\", callback);\n    }\n\n    function onDetached(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"detached\", callback);\n    }\n\n    function onVisibilityChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"visibility-changed\", callback);\n    }\n\n    function onContextUpdated(callback: (context: any, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"context-updated\", callback);\n    }\n\n    function onLockingChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"lock-changed\", callback);\n    }\n\n    function onBoundsChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"bounds-changed\", callback);\n    }\n\n    function onFocusChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"focus-changed\", callback);\n    }\n\n    function onFrameColorChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"frame-color-changed\", callback);\n    }\n\n    function onTabHeaderVisibilityChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"tab-header-visibility-changed\", callback);\n    }\n\n    function onWindowAttached(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"window-attached\", callback);\n    }\n\n    function onWindowDetached(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"window-detached\", callback);\n    }\n\n    function onGroupChanged(callback: (window: Glue42.Windows.GDWindow, newGroup: Glue42.Windows.Group, oldGroup: Glue42.Windows.Group) => void): UnsubscribeFunction {\n        return _registry.add(\"group-changed\", callback);\n    }\n\n    function onTabSelectionChanged(callback: (selectedWindow: Glue42.Windows.GDWindow, previousWindow: Glue42.Windows.GDWindow, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"tab-selection-changed\", callback);\n    }\n\n    function onClosing(callback: () => Promise<void>): UnsubscribeFunction {\n        if (!util.isFunction(callback)) {\n            throw new Error(\"callback should be a function\");\n        }\n\n        type GDHandler = (success: () => void, error: () => void) => void;\n        const callbackWrap: GDHandler = (success: () => void, error: () => void) => {\n            const promise = callback();\n            if (promise && promise.then) {\n                promise.then(success).catch(error);\n            } else {\n                success();\n            }\n        };\n        return executor.onClosing(callbackWrap, id);\n    }\n\n    function onRefreshing(callback: (prevent: () => void) => Promise<void>): UnsubscribeFunction {\n        if (!util.isFunction(callback)) {\n            throw new Error(\"callback should be a function\");\n        }\n\n        type GDRefreshHandler = (success: () => void, error: () => void, prevent: () => void) => void;\n        const callbackWrap: GDRefreshHandler = (success: () => void, error: () => void, prevent: () => void) => {\n            const promise = callback(prevent);\n            if (promise && promise.then) {\n                promise.then(success).catch(error);\n            } else {\n                success();\n            }\n        };\n        return executor.onRefreshing(callbackWrap, id);\n    }\n\n    function onZoomFactorChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (!util.isFunction(callback)) {\n            throw new Error(\"callback should be a function\");\n        }\n        return _registry.add(\"zoom-factor-changed\", callback);\n    }\n\n    //#endregion \"Events\"\n\n    //#region \"Stream function\"\n\n    function handleTitleChanged(newTitle: string): void {\n        _title = newTitle;\n        _registry.execute(\"onTitleChanged\", newTitle, resultWindow);\n    }\n\n    function handleUrlChanged(newUrl: string): void {\n        _url = newUrl;\n        _registry.execute(\"onUrlChanged\", newUrl, resultWindow);\n    }\n\n    function handleVisibilityChanged(isVisible: boolean) {\n        if (isVisible === _isVisible) {\n            return;\n        }\n        _isVisible = isVisible;\n        _registry.execute(\"visibility-changed\", resultWindow);\n    }\n\n    function handleWindowSettingsChanged(settings: Glue42.Windows.WindowSettings): void {\n        _settings = settings;\n        _registry.execute(\"settings-changed\", resultWindow);\n    }\n\n    function handleContextUpdated(context: any): void {\n        _context = context;\n        _registry.execute(\"context-updated\", _context, resultWindow);\n    }\n\n    function handleWindowClose(): void {\n        if (resultWindow.id === undefined) {\n            return;\n        }\n        resultWindow.id = undefined;\n        _registry.execute(\"onClose\", resultWindow);\n    }\n\n    function handleFrameButtonAdded(frameButton: FrameButton): void {\n        const buttonObj: Glue42.Windows.ButtonInfo = [\"buttonId\", \"imageBase64\", \"order\", \"tooltip\"].reduce((memo: any, k) => {\n            memo[k] = frameButton[k];\n            return memo;\n        }, {}) as Glue42.Windows.ButtonInfo;\n\n        const frameButtonsIds = _frameButtons.map((btn) => {\n            return btn.buttonId;\n        });\n\n        if (frameButtonsIds.indexOf(frameButton.buttonId) === -1) {\n            _frameButtons.push(buttonObj);\n        }\n\n        _registry.execute(\"onFrameButtonAdded\", buttonObj, resultWindow);\n    }\n\n    function handleFrameButtonRemoved(frameButtonId: string): void {\n        let button: Glue42.Windows.ButtonInfo;\n        _frameButtons = _frameButtons.reduce((memo, btn) => {\n            if (btn.buttonId === frameButtonId) {\n                button = btn;\n            } else {\n                memo.push(btn);\n            }\n            return memo;\n        }, []);\n\n        if (button !== undefined) {\n            _registry.execute(\"onFrameButtonRemoved\", button, resultWindow);\n        }\n    }\n\n    function handleFrameButtonClicked(frameButton: FrameButton): void {\n        const button = _frameButtons.filter((btn) => {\n            return btn.buttonId === frameButton.buttonId;\n        });\n\n        if (button.length > 0) {\n            _registry.execute(\"onFrameButtonClicked\", button[0], resultWindow);\n        }\n    }\n\n    function handleWindowChangeState(state: string): void {\n        if (state === \"collapsed\") {\n            isCollapsed = true;\n        } else if (state === \"expanded\") {\n            isCollapsed = false;\n        } else {\n            _windowState = state as Glue42.Windows.WindowState;\n        }\n\n        _registry.execute(state, resultWindow);\n    }\n\n    function handleFrameIsLockedChanged(isLocked: boolean): void {\n        _isLocked = isLocked;\n        _registry.execute(\"lock-changed\", resultWindow);\n    }\n\n    function handleBoundsChanged(bounds: Glue42.Windows.Bounds): void {\n        if (_bounds.top === bounds.top && _bounds.left === bounds.left && _bounds.width === bounds.width && _bounds.height === bounds.height) {\n            return;\n        }\n        _bounds.top = bounds.top;\n        _bounds.left = bounds.left;\n        _bounds.width = bounds.width;\n        _bounds.height = bounds.height;\n\n        _registry.execute(\"bounds-changed\", resultWindow);\n    }\n\n    function handleFocusChanged(isFocused: boolean): void {\n        _focus = isFocused;\n        _registry.execute(\"focus-changed\", resultWindow);\n    }\n\n    function handleFrameColorChanged(frameColor: string): void {\n        _frameColor = frameColor;\n        _registry.execute(\"frame-color-changed\", resultWindow);\n    }\n\n    function handleFrameAttached(tabGroupId: string, isTabHeaderVisible: boolean): void {\n        _tabGroupId = tabGroupId;\n        _isTabHeaderVisible = isTabHeaderVisible;\n        _registry.execute(\"frame-attached\", resultWindow);\n    }\n\n    function handleCompositionChanged(neighbours: Neighbours, groupId: string): void {\n        _neighbours = neighbours || {};\n        _groupId = groupId;\n    }\n\n    function handleGroupHeaderVisibilityChanged(isGroupHeaderVisible: boolean): void {\n        _isGroupHeaderVisible = isGroupHeaderVisible;\n    }\n\n    function handleTabHeaderVisibilityChanged(isTabHeaderVisible: boolean): void {\n        if (_isTabHeaderVisible !== isTabHeaderVisible) {\n            _isTabHeaderVisible = isTabHeaderVisible;\n            _registry.execute(\"tab-header-visibility-changed\", resultWindow);\n        }\n    }\n\n    function handleFrameSelectionChanged(newWindow: string, prevWindow: string): void {\n        let selectedWindow: Glue42.Windows.GDWindow;\n        if (typeof newWindow !== \"undefined\" && newWindow === id) {\n            _isTabSelected = true;\n            selectedWindow = resultWindow;\n        } else {\n            _isTabSelected = false;\n            selectedWindow = windowStore.get(newWindow) ? windowStore.get(newWindow).API : undefined;\n        }\n        const previousWindow = windowStore.get(prevWindow) ? windowStore.get(prevWindow).API : undefined;\n\n        if (_isTabSelected && previousWindow) {\n            const un = previousWindow.onTabSelectionChanged((newWin: Glue42.Windows.GDWindow, prevWin: Glue42.Windows.GDWindow) => {\n                if ((prevWin && prevWin.id) === previousWindow.id) {\n                    un();\n                    _registry.execute(\"tab-selection-changed\", selectedWindow, previousWindow, resultWindow);\n                }\n            });\n        } else {\n            _registry.execute(\"tab-selection-changed\", selectedWindow, previousWindow, resultWindow);\n        }\n    }\n\n    function handleAttached(newTabGroupId: string, tabHeaderVisible: boolean): void {\n        _tabGroupId = newTabGroupId;\n        _isTabHeaderVisible = tabHeaderVisible;\n        _registry.execute(\"attached\", resultWindow);\n    }\n\n    function handleWindowAttached(win: Glue42.Windows.GDWindow): void {\n        _registry.execute(\"window-attached\", win);\n    }\n\n    function handleDetached(tabGroupId: string): void {\n        _tabGroupId = tabGroupId;\n        // this tabGroupId is always the same as the current one\n        // the tabGroupId is actually changed in the frame-attached event\n        const un = _registry.add(\"frame-attached\", (win: Glue42.Windows.GDWindow) => {\n            if (win.id === id) {\n                un();\n                _registry.execute(\"detached\", resultWindow);\n            }\n        });\n    }\n\n    function handleWindowDetached(win: Glue42.Windows.GDWindow): void {\n        _registry.execute(\"window-detached\", win);\n    }\n\n    function handleZoomFactorChanged(zoomFactor: number): void {\n        _zoomFactor = zoomFactor;\n        _registry.execute(\"zoom-factor-changed\", resultWindow);\n    }\n\n    //#endregion \"Stream function\"\n\n    //#region \"Group Events\"\n    function handleGroupChanged(newGroup: Glue42.Windows.Group, oldGroup: Glue42.Windows.Group) {\n        logger.trace(`handle group changed to win: ${id} with group id: ${newGroup.id}`);\n        _group = newGroup;\n        _groupId = newGroup.id;\n        _registry.execute(\"group-changed\", resultWindow, newGroup, oldGroup);\n    }\n\n    // This is used to set the relation from window to corespondent group API, it could be undefined, if the window is removed from group\n    function handleGroupAssociation(group: Glue42.Windows.Group) {\n        if (group) {\n            _logger.trace(`setting group to win: ${id} with group id: ${group.id}`);\n        }\n        _group = group;\n    }\n\n    //#region \"Internal function\"\n\n    function getAllTabs(): Glue42.Windows.GDWindow[] {\n        const allWindows = windowStore.list;\n        if (_mode.toLowerCase() !== \"tab\") {\n            return [];\n        }\n        return Object.keys(allWindows).reduce((memo, win) => {\n            const window: WindowWrapper = allWindows[win];\n            if (window\n                && window.API.tabGroupId\n                && typeof window.API.tabGroupId !== \"undefined\"\n                && typeof resultWindow.tabGroupId !== \"undefined\"\n                && window.API.tabGroupId === resultWindow.tabGroupId) {\n                memo.push(window.API);\n            }\n            return memo;\n        }, []);\n    }\n\n    function mapWindowIdsToWindowObjects(windowIdArr: string[]): Glue42.Windows.GDWindow[] {\n        return windowIdArr.reduce((memo, winId) => {\n            const window = windowStore.get(winId);\n            if (window) {\n                memo.push(window.API);\n            }\n            return memo;\n        }, []);\n    }\n\n    function getNeighboursByDirection(direction: string): Glue42.Windows.GDWindow[] {\n        const windowIds = _neighbours[direction];\n        if (typeof windowIds !== \"undefined\") {\n            return mapWindowIdsToWindowObjects(windowIds);\n        }\n    }\n\n    function getApplicationName(): string {\n        if (_context._APPLICATION_NAME) {\n            return _context._APPLICATION_NAME;\n        }\n        if (_context && _context._t42 && _context._t42.application) {\n            return _context._t42.application;\n        }\n        const info = getWindowInfo();\n        if (!info) {\n            return undefined;\n        }\n\n        return info.applicationName;\n    }\n\n    function getWindowInfo() {\n        if (typeof window.glue42gd !== \"undefined\" && window.glue42gd.getWindowInfo) {\n            const info = window.glue42gd.getWindowInfo(id);\n            if (!info) {\n                return undefined;\n            } else {\n                return info;\n            }\n        }\n    }\n\n    function areBoundsEqual(requested: Partial<Glue42.Windows.Bounds>, current: Glue42.Windows.Bounds) {\n        let height = requested.height;\n        let width = requested.width;\n        if (requested.height < _settings.minHeight) {\n            height = _settings.minHeight;\n        }\n        if (requested.height > _settings.maxHeight) {\n            height = _settings.maxHeight;\n        }\n        if (requested.width < _settings.minWidth) {\n            width = _settings.minWidth;\n        }\n        if (requested.width > _settings.maxWidth) {\n            width = _settings.maxWidth;\n        }\n\n        const areHeightsEqual = height ? current.height === height : true;\n        const areWidthsEqual = width ? current.width === width : true;\n        const areLeftsEqual = requested.left ? current.left === requested.left : true;\n        const areTopsEqual = requested.top ? current.top === requested.top : true;\n\n        return areHeightsEqual && areWidthsEqual && areLeftsEqual && areTopsEqual;\n    }\n\n    //#endregion \"Internal function\"\n\n    //#region \"API\"\n\n    resultWindow = {\n        get name() {\n            return _name;\n        },\n        get application() {\n            const appManager = appManagerGetter();\n            return appManager ? appManager.application(getApplicationName()) : undefined;\n        },\n        get hostInstance() {\n            return executor.hostInstance;\n        },\n        get agmInstance() {\n            if (window.glue42gd) {\n                return agm.servers().find((s) => s.windowId === this.id);\n            }\n            const appName = getApplicationName();\n            return appName ? { application: appName } : undefined;\n        },\n        get url() {\n            return _url;\n        },\n        id,\n        get title() {\n            return _title;\n        },\n        get windowStyleAttributes() {\n            return _settings;\n        },\n        get settings() {\n            return _settings;\n        },\n        get tabGroupId() {\n            return _mode.toLowerCase() === \"tab\" ? _tabGroupId : undefined;\n        },\n        get frameButtons() {\n            return _frameButtons;\n        },\n        get mode() {\n            return _mode;\n        },\n        get state() {\n            return _windowState;\n        },\n        get isCollapsed() {\n            return isCollapsed;\n        },\n        get isVisible() {\n            return _isVisible;\n        },\n        get isLocked() {\n            return _isLocked;\n        },\n        get context() {\n            return _context;\n        },\n        get bounds() {\n            return _bounds;\n        },\n        get minHeight() {\n            return _settings.minHeight;\n        },\n        get maxHeight() {\n            return _settings.maxHeight;\n        },\n        get minWidth() {\n            return _settings.minWidth;\n        },\n        get maxWidth() {\n            return _settings.maxWidth;\n        },\n        get isFocused() {\n            return _focus;\n        },\n        get frameColor() {\n            return _frameColor;\n        },\n        get opened() {\n            return resultWindow.id !== undefined;\n        },\n        get group() {\n            return _group;\n        },\n\n        get groupId() {\n            return _groupId;\n        },\n\n        get topNeighbours() {\n            return getNeighboursByDirection(\"top\");\n        },\n\n        get leftNeighbours() {\n            return getNeighboursByDirection(\"left\");\n        },\n\n        get rightNeighbours() {\n            return getNeighboursByDirection(\"right\");\n        },\n\n        get bottomNeighbours() {\n            return getNeighboursByDirection(\"bottom\");\n        },\n\n        get isGroupHeaderVisible() {\n            return _isGroupHeaderVisible;\n        },\n\n        get activityId() {\n            if (_context._t42) {\n                return _context._t42.activityId;\n            }\n            const info = getWindowInfo();\n            if (!info) {\n                return undefined;\n            }\n            return info.activityId;\n        },\n\n        get activityWindowId() {\n            if (_context._t42) {\n                return _context._t42.activityWindowId;\n            }\n            const info = getWindowInfo();\n            if (!info) {\n                return undefined;\n            }\n            return info.activityWindowId;\n        },\n\n        get windowType() {\n            return options.windowType || \"electron\";\n        },\n\n        get zoomFactor() {\n            return _zoomFactor;\n        },\n        get screen() {\n            return utils.getMonitor(resultWindow.bounds, (window.glue42gd as any).monitors);\n        },\n        maximize,\n        restore,\n        minimize,\n        maximizeRestore,\n        collapse,\n        expand,\n        toggleCollapse,\n        focus,\n        activate,\n        moveResize,\n        setTitle,\n        setStyle,\n        setOnTop,\n        resetButtons,\n        setSizeConstraints,\n        navigate,\n        addFrameButton,\n        removeFrameButton,\n        setVisible,\n        show: () => setVisible(true),\n        hide: () => setVisible(false),\n        center: (screen) => moveResize(utils.getDisplayCenterOfScreen(resultWindow.bounds, screen || resultWindow.screen)),\n        close,\n        snap,\n        showLoader,\n        hideLoader,\n        updateContext,\n        lock,\n        unlock,\n        getIcon,\n        setIcon,\n        setFrameColor,\n        setTabTooltip,\n        attachTab,\n        detachTab,\n        setTabHeaderVisible,\n        showPopup,\n        createFlydown,\n        setModalState,\n        setZoomFactor,\n        zoomIn,\n        zoomOut,\n        showDevTools,\n        capture,\n        flash,\n\n        onClose,\n        onUrlChanged,\n        onTitleChanged,\n        onFrameButtonAdded,\n        onFrameButtonRemoved,\n        onFrameButtonClicked,\n        onCollapsed,\n        onExpanded,\n        onMinimized,\n        onMaximized,\n        onNormal,\n        onAttached,\n        onDetached,\n        onVisibilityChanged,\n        onContextUpdated,\n        onLockingChanged,\n        onBoundsChanged,\n        onFrameColorChanged,\n        onFocusChanged,\n        onGroupChanged,\n        onWindowAttached,\n        onWindowDetached,\n        onTabSelectionChanged,\n        onTabHeaderVisibilityChanged,\n        onClosing,\n        onRefreshing,\n        onZoomFactorChanged,\n\n        get tabs() {\n            return getAllTabs();\n        },\n\n        get isTabHeaderVisible() {\n            return _isTabHeaderVisible;\n        },\n\n        get isTabSelected() {\n            return _isTabSelected;\n        },\n\n        // @glue42/web compatibility layer\n        getURL() {\n            return Promise.resolve(_url);\n        },\n\n        getTitle() {\n            return Promise.resolve(_title);\n        },\n\n        getBounds(): Promise<Glue42.Windows.Bounds> {\n            return Promise.resolve(_bounds);\n        },\n\n        getContext(): Promise<any> {\n            return Promise.resolve(_context);\n        },\n\n        setContext(context: any): Promise<GDWindow> {\n            return updateContext(context);\n\n        },\n\n        resizeTo(width?: number, height?: number): Promise<GDWindow> {\n            return moveResize({ width, height });\n\n        },\n\n        moveTo(top?: number, left?: number): Promise<GDWindow> {\n            return moveResize({ top, left });\n        },\n\n        async getParentWindow() {\n\n            const myParentId = (_settings as any).parentInstanceId;\n            if (!myParentId) {\n                return undefined;\n            }\n            return windowStore.list[myParentId]?.API;\n        },\n\n        async getChildWindows() {\n\n            return Object.keys(windowStore.list)\n                .map((key) => windowStore.list[key].API)\n                .filter((w) => {\n                    const parentId = (w.settings as any).parentInstanceId;\n                    return parentId === id\n                    ;\n                });\n        }\n    };\n\n    //#endregion \"API\"\n\n    //#endregion \"Group Events\"\n\n    const events: WindowEvents = {\n        handleWindowClose,\n        handleWindowChangeState,\n        handleTitleChanged,\n        handleVisibilityChanged,\n        handleUrlChanged,\n        handleWindowSettingsChanged,\n        handleContextUpdated,\n        handleFrameIsLockedChanged,\n        handleBoundsChanged,\n        handleFocusChanged,\n        handleFrameButtonAdded,\n        handleFrameButtonRemoved,\n        handleFrameButtonClicked,\n        handleFrameColorChanged,\n        handleFrameAttached,\n        handleFrameSelectionChanged,\n        handleCompositionChanged,\n        handleGroupHeaderVisibilityChanged,\n        handleTabHeaderVisibilityChanged,\n        handleGroupChanged,\n        handleGroupAssociation,\n        handleAttached,\n        handleDetached,\n        handleWindowAttached,\n        handleWindowDetached,\n        handleZoomFactorChanged\n    };\n\n    return {\n        API: resultWindow,\n        Events: events,\n    };\n};\n","import { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../../../glue\";\nimport { Executor, FlashOptions } from \"../../types\";\nimport { ShowFlydownData, ReformatedFlydownOptions, ReformatedFlydownZone, ReformatedPopupOptions } from \"./types\";\nimport { CallbackRegistry, default as CallbackFactory } from \"callback-registry\";\n\nexport class GDExecutor implements Executor {\n    private agm: Glue42Core.AGM.API;\n    private agmTarget: {};\n    private _registry: CallbackRegistry = CallbackFactory();\n\n    public get hostInstance() {\n        return this.agmTarget;\n    }\n\n    public init(\n        agm: Glue42Core.AGM.API,\n        instance: Glue42Core.AGM.Instance | string\n    ) {\n        this.agm = agm;\n        this.agmTarget = instance;\n    }\n\n    public close(\n        resultWindow: Glue42.Windows.GDWindow\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"close\", { windowId: resultWindow.id })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public navigate(\n        resultWindow: Glue42.Windows.GDWindow,\n        newUrl: string\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"navigate\", {\n                windowId: resultWindow.id,\n                options: {\n                    url: newUrl\n                }\n            })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    // Calls the public methods of the window. No Call to GD is made\n    public async setStyle(\n        resultWindow: Glue42.Windows.GDWindow,\n        style: Glue42.Windows.WindowSettings\n    ): Promise<Glue42.Windows.GDWindow> {\n        const stylePromises: Array<Promise<any>> = [];\n        const wait = (promise: Promise<any>) => stylePromises.push(promise);\n\n        if (style.focus !== undefined && !resultWindow.isFocused) {\n            wait(resultWindow.focus());\n        }\n\n        // Todo: only if !isRestoring (hopefully setVisible does this check)\n        if (style.hidden !== undefined) {\n            const toBeVisible = !style.hidden;\n            wait(resultWindow.setVisible(toBeVisible));\n        }\n\n        if (style.onTop !== undefined) {\n            wait(resultWindow.setOnTop(style.onTop));\n        }\n\n        if (style.tabTooltip !== undefined || (style as any).tabToolTip !== undefined) {\n            const toolTip = style.tabTooltip ?? (style as any).tabToolTip;\n            wait(resultWindow.setTabTooltip(toolTip));\n        }\n\n        const {\n            maxWidth, maxHeight, minWidth, minHeight,\n            allowClose, allowCollapse, allowLockUnlock, allowMaximize, allowMinimize\n        } = style;\n\n        wait(resultWindow.setSizeConstraints({ maxWidth, maxHeight, minWidth, minHeight }));\n        wait(resultWindow.resetButtons({ allowClose, allowCollapse, allowLockUnlock, allowMaximize, allowMinimize }));\n\n        await Promise.all(stylePromises);\n\n        return resultWindow;\n    }\n\n    public setSizeConstraints(\n        resultWindow: Glue42.Windows.GDWindow,\n        constraints: Glue42.Windows.SizeConstraints\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"setSizeConstraints\", {\n                windowId: resultWindow.id,\n                options: constraints\n            }).then(() => {\n                resolve(resultWindow);\n            }).catch(reject);\n        });\n    }\n\n    public async setTabTooltip(w: Glue42.Windows.GDWindow, tabToolTip: string): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"setTabTooltip\", { windowId: w.id, options: { tabToolTip } });\n        return w;\n    }\n\n    public resetButtons(\n        resultWindow: Glue42.Windows.GDWindow,\n        buttonsConfig: Glue42.Windows.WindowButtons\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"resetButtons\", {\n                windowId: resultWindow.id,\n                options: buttonsConfig\n            }).then(() => {\n                resolve(resultWindow);\n            }).catch(reject);\n        });\n    }\n\n    public setOnTop(\n        resultWindow: Glue42.Windows.GDWindow,\n        onTop: boolean\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"setOnTop\", {\n                windowId: resultWindow.id,\n                options: { onTop }\n            }).then(() => {\n                resolve(resultWindow);\n            }).catch(reject);\n        });\n    }\n    public setTitle(\n        resultWindow: Glue42.Windows.GDWindow,\n        newTitle: string\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            const options = {\n                windowId: resultWindow.id,\n                options: {\n                    title: newTitle\n                }\n            };\n\n            this.execute(\"setTitle\", options)\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n\n            Promise.resolve();\n        });\n    }\n\n    public moveResize(\n        resultWindow: Glue42.Windows.GDWindow,\n        dimensions: Partial<Glue42.Windows.Bounds>\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"moveResize\", {\n                windowId: resultWindow.id,\n                options: {\n                    bounds: dimensions\n                }\n            })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public addFrameButton(\n        resultWindow: Glue42.Windows.GDWindow,\n        buttonInfo: Glue42.Windows.ButtonInfo\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"addButton\", {\n                windowId: resultWindow.id,\n                options: buttonInfo\n            })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public removeFrameButton(\n        resultWindow: Glue42.Windows.GDWindow,\n        buttonId: string\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"removeButton\", {\n                windowId: resultWindow.id,\n                options: buttonId\n            })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public activate(\n        resultWindow: Glue42.Windows.GDWindow\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"activate\", { windowId: resultWindow.id })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public focus(\n        resultWindow: Glue42.Windows.GDWindow\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"focus\", { windowId: resultWindow.id })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public maximizeRestore(\n        resultWindow: Glue42.Windows.GDWindow\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            function successHandler(w: Glue42.Windows.GDWindow) {\n                resolve(w);\n            }\n\n            function errorHandler(e: string) {\n                reject(e);\n            }\n\n            this.execute(\"maximizeRestore\", { windowId: resultWindow.id })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public maximize(\n        resultWindow: Glue42.Windows.GDWindow\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"maximize\", { windowId: resultWindow.id })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public restore(\n        resultWindow: Glue42.Windows.GDWindow\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"restore\", { windowId: resultWindow.id })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public minimize(\n        resultWindow: Glue42.Windows.GDWindow\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"minimize\", { windowId: resultWindow.id })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public collapse(\n        resultWindow: Glue42.Windows.GDWindow\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"collapse\", { windowId: resultWindow.id })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public expand(\n        resultWindow: Glue42.Windows.GDWindow\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"expand\", { windowId: resultWindow.id })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public toggleCollapse(\n        resultWindow: Glue42.Windows.GDWindow\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"toggleCollapse\", { windowId: resultWindow.id })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public snap(\n        resultWindow: Glue42.Windows.GDWindow,\n        target: string | Glue42.Windows.GDWindow,\n        direction: Glue42.Windows.RelativeDirection\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            const sourceWindowId = resultWindow.id;\n            let targetWindowId;\n            const errorMessage =\n                \"Invalid target parameter - should be an object with property id or a string. Invoked for source window id:\" +\n                resultWindow.id;\n            if (!target) {\n                reject(errorMessage);\n                return;\n            }\n            if (typeof target === \"string\") {\n                targetWindowId = target;\n            } else if (typeof target.id !== \"undefined\") {\n                targetWindowId = target.id;\n            } else {\n                reject(errorMessage);\n                return;\n            }\n            const args: any = {\n                targetWindowId\n            };\n\n            if (direction) {\n                args.snappingEdge = direction;\n            }\n            this.execute(\"snap\", {\n                windowId: resultWindow.id,\n                options: args\n            })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public attachTab(\n        resultWindow: Glue42.Windows.GDWindow,\n        options: any\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"attachTab\", {\n                windowId: resultWindow.id,\n                options\n            })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public detachTab(\n        resultWindow: Glue42.Windows.GDWindow,\n        options: Glue42.Windows.DetachOptions\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            function successHandler(w: Glue42.Windows.GDWindow) {\n                resolve(w);\n            }\n\n            function errorHandler(e: string) {\n                reject(e);\n            }\n\n            this.execute(\"detachTab\", {\n                windowId: resultWindow.id,\n                options\n            })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public setVisible(\n        resultWindow: Glue42.Windows.GDWindow,\n        toBeVisible: boolean = true\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            let command: string;\n            if (toBeVisible) {\n                command = \"show\";\n            } else {\n                command = \"hide\";\n            }\n\n            this.execute(command, { windowId: resultWindow.id })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public showLoader(\n        resultWindow: Glue42.Windows.GDWindow,\n        loader?: Glue42.Windows.Loader\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"showLoadingAnimation\", { windowId: resultWindow.id, options: loader })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public hideLoader(\n        resultWindow: Glue42.Windows.GDWindow\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"hideLoadingAnimation\", { windowId: resultWindow.id })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public updateContext(\n        resultWindow: Glue42.Windows.GDWindow,\n        context: any\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"updateContext\", {\n                windowId: resultWindow.id,\n                context,\n                replace:\n                    Object.keys(resultWindow.context).length > 0 ? false : true\n            })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public lock(\n        resultWindow: Glue42.Windows.GDWindow\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"lockUnlock\", {\n                windowId: resultWindow.id,\n                options: {\n                    lock: true\n                }\n            })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public unlock(\n        resultWindow: Glue42.Windows.GDWindow\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"lockUnlock\", {\n                windowId: resultWindow.id,\n                options: {\n                    lock: false\n                }\n            })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public getIcon(resultWindow: Glue42.Windows.GDWindow): Promise<string> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"getIcon\", {\n                windowId: resultWindow.id,\n                options: {}\n            })\n                .then((result) => {\n                    resolve((result as any).icon);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public setIcon(\n        resultWindow: Glue42.Windows.GDWindow,\n        base64Image: string\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"setIcon\", {\n                windowId: resultWindow.id,\n                options: {\n                    dataURL: base64Image\n                }\n            })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public setFrameColor(\n        resultWindow: Glue42.Windows.GDWindow,\n        frameColor: string\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            function successHandler(w: Glue42.Windows.GDWindow) {\n                resolve(w);\n            }\n\n            function errorHandler(e: string) {\n                reject(e);\n            }\n\n            this.execute(\"setFrameColor\", {\n                windowId: resultWindow.id,\n                options: {\n                    frameColor\n                }\n            })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public setTabHeaderVisible(\n        resultWindow: Glue42.Windows.GDWindow,\n        toBeTabHeaderVisible: boolean\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            function successHandler(w: Glue42.Windows.GDWindow) {\n                resolve(w);\n            }\n\n            function errorHandler(e: string) {\n                reject(e);\n            }\n\n            this.execute(\"setTabHeaderVisible\", {\n                windowId: resultWindow.id,\n                options: {\n                    toShow: toBeTabHeaderVisible\n                }\n            })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public async showPopup(targetWindow: Glue42.Windows.GDWindow, options: Glue42.Windows.PopupOptions): Promise<Glue42.Windows.GDWindow> {\n        if (!options) {\n            return Promise.reject(\"The options object is not valid!\");\n        }\n\n        const optionsCopy = { ...options };\n\n        if (!optionsCopy.targetLocation) {\n            optionsCopy.targetLocation = \"bottom\" as Glue42.Windows.PopupTargetLocation;\n        }\n\n        const reformatedOptions: ReformatedPopupOptions & { targetId: string } = {\n            ...optionsCopy,\n            popupBounds: optionsCopy.size,\n            targetId: targetWindow.id,\n            popupId: optionsCopy.windowId\n        };\n\n        await this.execute(\"showPopupWindow\", {\n            windowId: targetWindow.id,\n            options: reformatedOptions\n        });\n\n        return targetWindow;\n    }\n\n    public async createFlydown(windowId: string, options: Glue42.Windows.FlydownOptions) {\n        if (!options) {\n            return Promise.reject(\"The options object is not valid!\");\n        }\n\n        const optionsCopy = { ...options };\n\n        if (!optionsCopy.horizontalOffset) {\n            optionsCopy.horizontalOffset = 0;\n        }\n\n        if (!optionsCopy.verticalOffset) {\n            optionsCopy.verticalOffset = 0;\n        }\n\n        const fullOptions: Glue42.Windows.FlydownOptions & { targetId: string, flydownBounds: Glue42.Windows.FlydownOptions[\"size\"] } = this.reformatFlydownOptions(windowId, optionsCopy);\n\n        return this.execute(\"setFlydownArea\", { windowId, options: fullOptions }).then(() => {\n            const zoneIds = fullOptions.zones.map((z) => z.id);\n\n            fullOptions.zones.forEach((z) => {\n                let callback: (...args: any[]) => any = typeof (z.flydownSize) === \"function\" ?\n                    z.flydownSize : () => z.flydownSize;\n\n                if (options.size instanceof Function && z.flydownSize) {\n                    callback = async (data: Glue42.Windows.ShowFlydownData, cancel: () => void) => {\n                        let result;\n                        // The options callback must be always invoked\n                        // If the property in the zone is null it will be automatically\n                        // assigned to the same callback from the code above reformatFlydownOptions\n                        if (options.size instanceof Function) {\n                            result = await options.size(data, cancel);\n                        }\n\n                        // If both are callbacks the zone has higher priority\n                        // If they are the same only one should be invoked\n                        if (z.flydownSize instanceof Function && z.flydownSize !== options.size) {\n                            return await z.flydownSize(data, cancel) || result;\n                        }\n\n                        // The options callback overwrites the bounds object specified in the zone\n                        return result || z.flydownSize;\n                    };\n                }\n                this._registry.clearKey(`${fullOptions.targetId}_${z.id}`);\n                this._registry.add(`${fullOptions.targetId}_${z.id}`, callback);\n            });\n\n            return {\n                destroy: () => this.clearFlydownArea(fullOptions.targetId, zoneIds),\n                options: optionsCopy\n            };\n        });\n    }\n\n    public async setModalState(windowId: string, isModal: boolean): Promise<void> {\n        return this.execute(\"setModalState\", { windowId, options: { isModal } });\n    }\n\n    public async handleFlydownBoundsRequested(targetId: string, data: ShowFlydownData) {\n        const cancelCallback = () => data.cancel = true;\n\n        const callbackData: Glue42.Windows.ShowFlydownData = {\n            zoneId: data.flydownId,\n            flydownWindowBounds: data.flydownWindowBounds,\n            flydownWindowId: data.flydownWindowId,\n        };\n\n        const responses = await Promise.all(this._registry.execute(`${targetId}_${data.flydownId}`, callbackData, cancelCallback));\n\n        if (responses.length === 1) {\n            const defaultResponse = { height: 0, width: 0, top: 0, left: 0 };\n            const response = typeof (responses[0]) === \"object\" && !Array.isArray(responses[0]) ? responses[0] : defaultResponse;\n            const responseOptions: ShowFlydownData = { ...data, flydownWindowBounds: response };\n\n            return responseOptions;\n        }\n    }\n\n    public async zoomIn(window: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"zoomIn\", {\n            windowId: window.id,\n        });\n        return window;\n    }\n\n    public async zoomOut(window: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"zoomOut\", {\n            windowId: window.id,\n        });\n        return window;\n    }\n\n    public async setZoomFactor(window: Glue42.Windows.GDWindow, zoomFactor: number): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"setZoomFactor\", {\n            windowId: window.id,\n            options: {\n                zoomFactor\n            }\n        });\n        return window;\n    }\n\n    public async showDevTools(window: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"showDevTools\", {\n            windowId: window.id,\n        });\n\n        return window;\n    }\n\n    public async capture(window: Glue42.Windows.GDWindow, options: Glue42.Windows.CaptureOptions): Promise<string> {\n        const base64screenshot = (await this.execute(\n            \"captureScreenshot\",\n            { windowId: window.id, options: { ...options } }\n        )).data;\n\n        return base64screenshot;\n    }\n\n    public async captureGroup(windowIds: string[], options: Glue42.Windows.CaptureOptions): Promise<string> {\n        const base64screenshot: string = (await this.execute(\n            \"captureGroupScreenshot\",\n            { windowId: windowIds[0], options: { groupWindowIds: windowIds, ...options } }\n        )).data;\n\n        return base64screenshot;\n    }\n\n    public async flash(resultWindow: Glue42.Windows.GDWindow, options: FlashOptions): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\n            \"flash\",\n            { windowId: resultWindow.id, options: { ...options } }\n        );\n\n        return resultWindow;\n    }\n\n    public execute(\n        command: string,\n        options: any\n    ): Promise<any> {\n        return new Promise((resolve, reject) => {\n            const args: any = { ...options, command };\n            this.agm\n                .invoke(\"T42.Wnd.Execute\", args, this.agmTarget)\n                .then((i: Glue42Core.AGM.InvocationResult<any>) => {\n                    if (i.returned && i.returned.errorMsg) {\n                        reject(i);\n                    } else {\n                        resolve(i.returned);\n                    }\n                })\n                .catch((i: Glue42Core.AGM.InvocationResult<any>) => {\n                    reject(i);\n                });\n        });\n    }\n\n    /** Groups */\n    public setGroupHeaderVisible(\n        windowId: string,\n        toShow: boolean\n    ): Promise<Glue42Core.AGM.InvocationResult<any>> {\n        return this.execute(\"setGroupHeaderVisibility\", {\n            windowId,\n            options: {\n                toShow\n            }\n        });\n    }\n\n    public getGroupTitle(windowId: string): Promise<string> {\n        return this.execute(\"getGroupTitle\", {\n            windowId,\n            options: {}\n        }).then((r) => r.title);\n    }\n\n    public setGroupTitle(windowId: string, title: string) {\n        return this.execute(\"setGroupTitle\", {\n            windowId,\n            options: {\n                title\n            }\n        });\n    }\n\n    public onClosing(callback: (success: () => void, error: () => void) => void, id: string): () => void {\n        const glue42gd = typeof window !== \"undefined\" && (window as any).glue42gd;\n        if (glue42gd) {\n            return glue42gd.addCloseHandler(callback, id);\n        }\n    }\n\n    public onRefreshing(callback: (success: () => void, error: () => void, prevent: () => void) => void, id: string): () => void {\n        const glue42gd = typeof window !== \"undefined\" && (window as any).glue42gd;\n        if (glue42gd) {\n            return glue42gd.addRefreshHandler(callback, id);\n        }\n    }\n\n    private reformatFlydownOptions(windowId: string, options: Glue42.Windows.FlydownOptions) {\n        const assignGeneralIfUnassigned = (zone: Glue42.Windows.FlydownZone, prop: keyof Glue42.Windows.FlydownZone & keyof Glue42.Windows.FlydownOptions) => {\n            if (options[prop] && (zone[prop] === undefined || zone[prop] === null)) {\n                const valueFromOptions = options[prop];\n                (zone[prop] as any) = valueFromOptions;\n            }\n        };\n\n        const zones: ReformatedFlydownOptions[\"zones\"] = options.zones.map((z) => {\n            assignGeneralIfUnassigned(z, \"windowId\");\n            assignGeneralIfUnassigned(z, \"targetLocation\");\n\n            if (options.size && (z.flydownSize === undefined || z.flydownSize === null)) {\n                z.flydownSize = options.size;\n            }\n\n            (z as ReformatedFlydownZone).flydownBounds = z.flydownSize as any;\n            (z as ReformatedFlydownZone).flydownId = z.windowId;\n\n            if (!z.targetLocation) {\n                z.targetLocation = \"bottom\" as Glue42.Windows.PopupTargetLocation.Bottom;\n            }\n\n            return z;\n        });\n\n        return {\n            ...options,\n            zones,\n            targetId: windowId,\n            flydownBounds: options.size,\n            flydownActiveArea: options.activeArea\n        };\n    }\n\n    private clearFlydownArea(windowId: string, areaIds: string[]) {\n        return this.execute(\"clearFlydownWindowArea\", {\n            windowId,\n            options: {}\n        }).then(() => {\n            areaIds.forEach((id) => {\n                this._registry.clearKey(`${windowId}_${id}`);\n            });\n        });\n    }\n}\n\nexport default new GDExecutor();\n","import { default as windowStore } from \"../store\";\nimport { WindowWrapper } from \"../types\";\n\nexport function getWindowsByTabGroupId(windowId: string, tabGroupId: string) {\n    const windows = windowStore.list;\n    return Object.keys(windows).reduce((memo: { [key: string]: WindowWrapper }, id) => {\n        const win = windows[id];\n        if (win.API.tabGroupId === tabGroupId && win.API.id !== windowId) {\n            memo[id] = win;\n        }\n        return memo;\n    }, {});\n}\n","import { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../../../glue\";\nimport { default as windowStore } from \"../../store\";\nimport { Environment, Executor, WindowConstructorOptions, WindowEvents, WindowWrapper } from \"../../types\";\nimport windowFactory from \"../../window\";\nimport { default as executor } from \"./executor\";\nimport { CallbackRegistry, UnsubscribeFunction, default as CallbackFactory } from \"callback-registry\";\nimport {\n    FullInfoEvent,\n    StreamEvent,\n    WindowInfo,\n    GroupHeaderVisibilityChanged,\n    UrlChanged,\n    TitleChanged,\n    BoundsChanged,\n    FocusChanged,\n    CompositionChanged,\n    ExtendedStreamEvent,\n    ShowFlydownData,\n    EventWithResponseData,\n    ResponseTypes\n} from \"./types\";\nimport { getWindowsByTabGroupId } from \"../helpers\";\n\nexport default class GDEnvironment implements Environment {\n\n    private _registry: CallbackRegistry = CallbackFactory();\n    private _agm: Glue42Core.AGM.API;\n    private _logger: Glue42Core.Logger.API;\n    private _waitTimeout: number = 10000;\n    private _agmInstance: Glue42Core.AGM.Instance | \"best\" | \"all\";\n    private _windowId: string;\n    private _appManagerGetter: () => Glue42.AppManager.API;\n\n    constructor(agm: Glue42Core.AGM.API, logger: Glue42Core.Logger.API, appManagerGetter: () => Glue42.AppManager.API, instance?: Glue42Core.AGM.Instance, wndId?: string) {\n        this._agm = agm;\n        this._logger = logger.subLogger(\"gd-env\");\n        this._agmInstance = this.normalizeInstance(instance);\n        this._windowId = wndId;\n        this._appManagerGetter = appManagerGetter;\n    }\n\n    public init(): Promise<GDEnvironment> {\n        return new Promise((resolve, reject) => {\n            // if we don't have an Instance, thats means that we are running outside from any Tick42 Containers\n            // so our target is best\n            if (typeof this._agmInstance === \"undefined\") {\n                this._agmInstance = \"best\";\n            }\n\n            this._agm.registerAsync(\"T42.Wnd.OnEventWithResponse\", (args, caller, success, err) => {\n                this.respondToEvent(args as any).then(success).catch(err);\n            });\n\n            const streamPromise = new Promise<void>((streamResolve, streamReject) => {\n                this._agm.subscribe(\"T42.Wnd.OnEvent\", {\n                    waitTimeoutMs: this._waitTimeout,\n                    target: this._agmInstance,\n                    onData: (streamData: any) => {\n                        this.updateWindow(streamData.data, resolve);\n                    },\n                    onConnected: (instance) => {\n                        this._agmInstance = this.normalizeInstance(instance);\n                        // Init the executor\n                        executor.init(this._agm, this._agmInstance);\n                    }\n                }).catch((err: any) => {\n                    reject(\"Can not subscribe for stream T42.Wnd.OnEvent. Err: \" + err);\n                });\n            });\n        });\n\n    }\n\n    public get executor(): Executor {\n        return executor;\n    }\n\n    public open(name: string, url: string, options: any, success: (id: string) => void, error: (error: object | string) => void): void {\n        options = options || {};\n        const copyOptions = { ...options };\n\n        // relativeTo fix\n        if (name === undefined) {\n            error({ message: \"The name is undefined\" });\n            return;\n        }\n\n        if (copyOptions.relativeTo !== undefined && typeof copyOptions.relativeTo !== \"string\") {\n            copyOptions.relativeTo = copyOptions.relativeTo.id || \"\";\n        }\n\n        copyOptions.name = name;\n        copyOptions.url = url;\n\n        // This is for compatibility between gd2 and gd3\n        copyOptions.windowState = options.windowState || options.state;\n        // Otherwise glue desktop throws an error for extra properties\n        delete copyOptions.state;\n\n        this._agm.invoke<{ id: string }>(\"T42.Wnd.Create\", copyOptions, this._agmInstance)\n            .then((message) => {\n                if (message.returned !== undefined) {\n                    const id: string = message.returned.id;\n                    success(id);\n                } else {\n                    error({ message: \"failed to execute T42.Wnd.Create - unknown reason\" });\n                }\n            })\n            .catch(error);\n    }\n\n    public createFlydown(windowId: string, options: Glue42.Windows.FlydownOptions): Promise<Glue42.Windows.Flydown> {\n        return this.executor.createFlydown(windowId, options);\n    }\n\n    public async showPopup(windowId: string, options: Glue42.Windows.PopupOptions): Promise<void> {\n        const window = windowStore.get(windowId);\n        await this.executor.showPopup(window.API, options);\n    }\n\n    public tabAttached(callback: (tabWindow: Glue42.Windows.GDWindow, newTabGroupId: string, tabHeaderVisible: boolean) => void): UnsubscribeFunction {\n        return this._registry.add(\"tab-attached\", callback);\n    }\n\n    public tabDetached(callback: (window: Glue42.Windows.GDWindow, tabGroupId: string, oldTabGroupId: string) => void): UnsubscribeFunction {\n        return this._registry.add(\"tab-detached\", callback);\n    }\n\n    public onWindowFrameColorChanged(callback: (window: Glue42.Windows.GDWindow) => void) {\n        return this._registry.add(\"frame-color-changed\", callback);\n    }\n\n    public onEvent(callback: (windowInfo: any) => void): UnsubscribeFunction {\n        return this._registry.add(\"window-event\", callback);\n    }\n\n    public my(): string {\n        return this._windowId;\n    }\n\n    public execute<T>(command: string, windowId: string, options: {}): Promise<Glue42Core.AGM.InvocationResult<T>> {\n        return this._agm.invoke<T>(\"T42.Wnd.Execute\", {\n            command,\n            options,\n            windowId,\n        });\n    }\n\n    /** Groups */\n    public setGroupHeaderVisible(windowId: string, toShow: boolean): Promise<Glue42Core.AGM.InvocationResult<Glue42.Windows.Group>> {\n        return this._agm.invoke<Glue42.Windows.Group>(\"T42.Wnd.SetGroupHeaderVisible\", {\n            windowId,\n            toShow,\n        }, this._agmInstance);\n    }\n\n    public onCompositionChanged(callback: (windowInfo: any) => void): UnsubscribeFunction {\n        return this._registry.add(\"composition-changed\", callback);\n    }\n\n    public onGroupHeaderVisibilityChanged(callback: (stream: any) => void): UnsubscribeFunction {\n        return this._registry.add(\"group-header-changed\", callback);\n    }\n\n    public onWindowGotFocus(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return this._registry.add(\"got-focus\", callback);\n    }\n\n    public onWindowLostFocus(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return this._registry.add(\"lost-focus\", callback);\n    }\n\n    // TODO revise it\n    private normalizeInstance(instance: Glue42Core.AGM.Instance) {\n        if (!instance) {\n            return undefined;\n        }\n        return {\n            application: instance.application,\n            machine: instance.machine,\n            user: instance.user,\n        };\n    }\n    private respondToEvent(args: EventWithResponseData): Promise<ResponseTypes> {\n        if (args.type === \"ShowFlydownBoundsRequested\") {\n            return this.executor.handleFlydownBoundsRequested(args.data.windowId, args.data);\n        }\n\n        return Promise.reject(`There isn't a handler for ${args.type}`);\n    }\n\n    private updateWindow(windowInfo: StreamEvent, readyResolve: (env: GDEnvironment) => void) {\n        const extendedStreamEvent = this.getExtendedStreamEvent(windowInfo);\n\n        // this is the snapshot of all windows\n        if (windowInfo.type === \"Snapshot\") {\n            const windowInfoFullInfoEvent = (windowInfo as FullInfoEvent);\n            windowInfoFullInfoEvent.windows.forEach((w) => {\n                const win = this.createWindow(w.id, w);\n                windowStore.markReadyToShow(win.API.id);\n                this._registry.execute(\"window-event\", extendedStreamEvent);\n            });\n            readyResolve(this);\n            return;\n        }\n        // if new window handle it separately\n        if (windowInfo.type === \"Created\") {\n            const windowInfoCreatedEvent = (windowInfo as StreamEvent);\n            const win = this.createWindow(windowInfoCreatedEvent.windowId, windowInfoCreatedEvent.data || {});\n            windowStore.setReadyState(win.API.id);\n            this._registry.execute(\"window-event\", extendedStreamEvent);\n            return;\n        }\n\n        // otherwise check if the window is in our internal collections and update its state\n        const windowObjectAndEvents: WindowWrapper = windowStore.get((windowInfo as StreamEvent).windowId);\n        if (!windowObjectAndEvents) {\n            this._logger.error(`received update for unknown window. Stream:', ${JSON.stringify(windowInfo, null, 4)}`);\n            return;\n        }\n\n        const theWindow: Glue42.Windows.GDWindow = windowObjectAndEvents.API;\n        const theWindowEvents: WindowEvents = windowObjectAndEvents.Events;\n\n        // handle bounds changed\n        if (windowInfo.type === \"BoundsChanged\") {\n            const windowInfoBoundsChangedEvent = (windowInfo as BoundsChanged);\n            theWindowEvents.handleBoundsChanged(windowInfoBoundsChangedEvent.data);\n        }\n\n        // handle url changed\n        if (windowInfo.type === \"UrlChanged\") {\n            const windowInfoUrlChangedEvent = (windowInfo as UrlChanged);\n            windowStore.setUrlChangedState(windowInfoUrlChangedEvent.windowId);\n            theWindowEvents.handleUrlChanged(windowInfoUrlChangedEvent.data);\n        }\n\n        // handle title changed\n        if (windowInfo.type === \"TitleChanged\") {\n            const windowInfoTitleChanged = (windowInfo as TitleChanged);\n            theWindowEvents.handleTitleChanged(windowInfoTitleChanged.data);\n        }\n\n        // handle visibility changed\n        if (windowInfo.type === \"VisibilityChanged\") {\n            theWindowEvents.handleVisibilityChanged(windowInfo.data);\n        }\n\n        // handle context changed\n        if (windowInfo.type === \"ContextChanged\") {\n            theWindowEvents.handleContextUpdated(windowInfo.data);\n        }\n\n        // handle window state changed\n        if (windowInfo.type === \"StateChanged\") {\n            theWindowEvents.handleWindowChangeState(windowInfo.data);\n        }\n\n        // handle frame color changed\n        if (windowInfo.type === \"FrameColorChanged\") {\n            theWindowEvents.handleFrameColorChanged(windowInfo.data);\n            this._registry.execute(\"frame-color-changed\", theWindow);\n        }\n\n        // handle composition changed - groups API\n        if (windowInfo.type === \"CompositionChanged\") {\n            const windowInfoCompositionChanged = windowInfo as CompositionChanged;\n            theWindowEvents.handleCompositionChanged(windowInfoCompositionChanged.data.neighbors, windowInfoCompositionChanged.data.groupId);\n            this._registry.execute(\"composition-changed\", windowInfoCompositionChanged.data);\n        }\n\n        if (windowInfo.type === \"GroupHeaderVisibilityChanged\") {\n            const info = windowInfo as GroupHeaderVisibilityChanged;\n            theWindowEvents.handleGroupHeaderVisibilityChanged(info.data.groupHeaderVisible);\n            this._registry.execute(\"group-header-changed\", info.data);\n        }\n\n        // handle focus changed\n        if (windowInfo.type === \"FocusChanged\") {\n            const windowInfoFocusChanged = (windowInfo as FocusChanged);\n            this.focusChanged(theWindowEvents, theWindow, windowInfoFocusChanged.data);\n        }\n\n        if (windowInfo.type === \"WindowFrameChanged\") {\n            theWindowEvents.handleFrameAttached(windowInfo.data.frameId, windowInfo.data.isTabHeaderVisible);\n            this._registry.execute(\"frame-changed\");\n        }\n\n        if (windowInfo.type === \"WindowFrameAdded\") {\n            theWindowEvents.handleAttached(windowInfo.data.frameId, windowInfo.data.isTabHeaderVisible);\n            const winsToBeNotified: { [key: string]: WindowWrapper } = getWindowsByTabGroupId(theWindow.id, windowInfo.data.frameId);\n            // Getting all windows, except current, with same tabGroupId\n            Object.keys(winsToBeNotified).forEach((id: string) => {\n                const win = winsToBeNotified[id];\n                // Executing event windowAttached to all windows\n                win.Events.handleWindowAttached(theWindow);\n            });\n            this._registry.execute(\"tab-attached\", theWindow, windowInfo.data.frameId, windowInfo.data.isTabHeaderVisible);\n        }\n\n        if (windowInfo.type === \"WindowFrameRemoved\") {\n            // In the event, tabGroupId is empty, will be update on the next event FrameAttached\n            const oldTabGroupId = theWindow.tabGroupId;\n            theWindowEvents.handleDetached(windowInfo.data.frameId);\n            const winsToBeNotified: { [key: string]: WindowWrapper } = getWindowsByTabGroupId(theWindow.id, oldTabGroupId);\n\n            Object.keys(winsToBeNotified).forEach((id: string) => {\n                const win = winsToBeNotified[id];\n                win.Events.handleWindowDetached(theWindow);\n            });\n\n            const un = this._registry.add(\"frame-changed\", () => {\n                un();\n                this._registry.execute(\"tab-detached\", theWindow, windowInfo.data.frameId, theWindow.tabGroupId);\n            });\n\n        }\n\n        if (windowInfo.type === \"TabHeaderVisibilityChanged\") {\n            theWindowEvents.handleTabHeaderVisibilityChanged(windowInfo.data.isTabHeaderVisible);\n        }\n\n        if (windowInfo.type === \"FrameSelectionChanged\") {\n            theWindowEvents.handleFrameSelectionChanged(windowInfo.data.newWindowId, windowInfo.data.prevWindowId);\n        }\n\n        if (windowInfo.type === \"ButtonClicked\") {\n            theWindowEvents.handleFrameButtonClicked(windowInfo.data);\n        }\n\n        if (windowInfo.type === \"ButtonAdded\") {\n            theWindowEvents.handleFrameButtonAdded(windowInfo.data);\n        }\n\n        if (windowInfo.type === \"ButtonRemoved\") {\n            theWindowEvents.handleFrameButtonRemoved(windowInfo.data);\n        }\n        if (windowInfo.type === \"WindowZoomFactorChanged\") {\n            theWindowEvents.handleZoomFactorChanged(windowInfo.data);\n        }\n\n        // Clear the window on close event\n        if (windowInfo.type === \"Closed\") {\n            windowStore.remove(windowObjectAndEvents);\n            theWindowEvents.handleWindowClose();\n        }\n\n        if (windowInfo.type === \"FrameIsLockedChanged\") {\n            theWindowEvents.handleFrameIsLockedChanged(windowInfo.data);\n        }\n\n        // expose to external listeners\n        this._registry.execute(\"window-event\", extendedStreamEvent);\n    }\n\n    private createWindow(windowId: string, options: WindowInfo): WindowWrapper {\n        const windowObjAndEvents: WindowWrapper = windowFactory(windowId, this.mapToWindowConstructorOptions(options), executor, this._logger, this._appManagerGetter, this._agm);\n        windowStore.add(windowObjAndEvents);\n        return windowObjAndEvents;\n    }\n\n    private focusChanged(theWindowEvents: WindowEvents, theWindow: Glue42.Windows.GDWindow, focus: boolean) {\n        theWindowEvents.handleFocusChanged(focus);\n        if (focus) {\n            this._registry.execute(\"got-focus\", theWindow);\n        } else {\n            this._registry.execute(\"lost-focus\", theWindow);\n        }\n    }\n\n    private mapToWindowConstructorOptions(args: WindowInfo): WindowConstructorOptions {\n        // TODO\n        return {\n            name: args.name,\n            context: args.context,\n            bounds: args.bounds,\n            url: args.url,\n            title: args.title,\n            isVisible: args.isVisible,\n            focus: args.isFocused,\n            state: args.state,\n            frameColor: args.frameColor,\n            groupId: args.groupId,\n            neighbours: args.neighbors,\n            isFocused: args.isFocused,\n            isGroupHeaderVisible: args.groupHeaderVisible,\n            isCollapsed: args.isCollapsed,\n            tabGroupId: args.frameId,\n            mode: args.mode,\n            isTabHeaderVisible: args.isTabHeaderVisible,\n            isTabSelected: args.isActiveTab,\n            settings: args.settings,\n            windowType: args.windowType,\n            zoomFactor: args.zoomFactor,\n            // focus: args.focus,\n            isLocked: args.isLocked,\n            // settings: windowStyleAttributes,\n        };\n    }\n\n    private getExtendedStreamEvent(streamEvent: StreamEvent): StreamEvent | ExtendedStreamEvent {\n        try {\n            const result: ExtendedStreamEvent = {\n                state: streamEvent.type,\n                windowName: windowStore.get(streamEvent.windowId).API.name,\n                ...streamEvent\n            };\n\n            if (result.state === \"WindowFrameAdded\") {\n                result.state = \"TabAttached\";\n            }\n\n            if (result.state === \"StateChanged\") {\n                result.state = result.data.charAt(0).toUpperCase() + result.data.slice(1);\n            }\n\n            if (result.state === \"ButtonAdded\") {\n                result.state = \"FrameButtonAdded\";\n            }\n\n            if (result.state === \"ButtonRemoved\") {\n                result.state = \"FrameButtonRemoved\";\n            }\n\n            return result;\n        } catch (error) {\n            return streamEvent;\n        }\n    }\n}\n","import callbackRegistry, { CallbackRegistry } from \"callback-registry\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../glue\";\nimport { default as windowStore } from \"./store\";\nimport { Executor, GroupWrapper, WindowWrapper } from \"./types\";\n\nexport default (id: string, executor: Executor): GroupWrapper => {\n\n    const _registry: CallbackRegistry = callbackRegistry();\n\n    const _windowsId: string[] = [];\n\n    //#region \"API functions\"\n\n    function addWindow(winId: string): void {\n        if (_windowsId.indexOf(winId) === -1) {\n            _windowsId.push(winId);\n            const window: WindowWrapper = windowStore.get(winId);\n            window.Events.handleGroupAssociation(groupObject);\n            _registry.execute(\"window-added\", groupObject, window.API);\n        }\n    }\n\n    function removeWindow(winId: string): void {\n        const index: number = _windowsId.indexOf(winId);\n        if (index !== -1) {\n            _windowsId.splice(index, 1);\n            const window: Glue42.Windows.GDWindow = _mapToWindowObject(winId);\n            _registry.execute(\"window-removed\", groupObject, window);\n        }\n    }\n\n    function find(window: string | Glue42.Windows.GDWindow, success?: (window: Glue42.Windows.GDWindow) => void): Glue42.Windows.GDWindow {\n        let winId: string;\n        if (typeof window === \"string\") {\n            winId = window;\n        } else {\n            winId = window.id;\n        }\n        const index: number = _windowsId.indexOf(winId);\n        if (index !== -1) {\n            const mappedWindow: Glue42.Windows.GDWindow = _mapToWindowObject(_windowsId[index]);\n            if (typeof success === \"function\") {\n                success(mappedWindow);\n            }\n            return mappedWindow;\n        }\n    }\n\n    function windows(success?: (windows: Glue42.Windows.GDWindow[]) => void): Glue42.Windows.GDWindow[] {\n        const mappedWindows: Glue42.Windows.GDWindow[] = _mapToWindowObjects();\n        if (typeof success === \"function\") {\n            success(mappedWindows);\n        }\n        return mappedWindows;\n    }\n\n    function showHeader(success?: (group: Glue42.Windows.Group) => void, error?: Glue42Core.AGM.InvokeErrorHandler): Promise<Glue42.Windows.Group> {\n        return new Promise((resolve, reject) => {\n            Promise.all([\n                executor.setGroupHeaderVisible(_windowsId[0], true),\n                waitForHeaderVisibilityChanged()\n            ])\n                .then(() => {\n                    if (typeof success === \"function\") {\n                        success(groupObject);\n                    }\n                    resolve(groupObject);\n                })\n                .catch((e: any) => {\n                    reject(e);\n                });\n        });\n    }\n\n    function hideHeader(success?: (group: Glue42.Windows.Group) => void, error?: () => void): Promise<Glue42.Windows.Group> {\n        return new Promise((resolve, reject) => {\n            Promise.all([\n                executor.setGroupHeaderVisible(_windowsId[0], false),\n                waitForHeaderVisibilityChanged()\n            ])\n                .then(() => {\n                    if (typeof success === \"function\") {\n                        success(groupObject);\n                    }\n                    resolve(groupObject);\n                })\n                .catch((e: any) => {\n                    return;\n                });\n        });\n    }\n\n    function getTitle(): Promise<string> {\n        return executor.getGroupTitle(_windowsId[0]);\n    }\n\n    function setTitle(title: string): Promise<void> {\n        return executor.setGroupTitle(_windowsId[0], title);\n    }\n\n    function capture(captureOptions: Glue42.Windows.CaptureOptions): Promise<string> {\n        return executor.captureGroup(_windowsId, captureOptions);\n    }\n\n    function waitForHeaderVisibilityChanged(): Promise<void> {\n        return new Promise((resolve, reject) => {\n            const unsub = onHeaderVisibilityChanged((group) => {\n                unsub();\n                resolve();\n            });\n\n            // setTimeout(() => {\n            //     resolve();\n            // }, 1500);\n        });\n    }\n\n    function execute(command: string, options?: object, success?: (group: Glue42.Windows.Group) => void, error?: (err?: any) => void): Promise<Glue42.Windows.Group> {\n        return new Promise((resolve, reject) => {\n            executor.execute<Glue42.Windows.Group>(command, options)\n                .then((w) => {\n                    if (typeof success === \"function\") {\n                        success(groupObject);\n                    }\n                    resolve(groupObject);\n                })\n                .catch((e: any) => {\n                    reject(e);\n                });\n        });\n    }\n\n    //#endregion \"API functions\"\n\n    //#region \"Stream function\"\n\n    function handleGroupHeaderVisibilityChanged(windowInfo: any): void {\n        _registry.execute(\"header-visibility-changed\", groupObject);\n    }\n\n    //#endregion \"Stream function\"\n\n    //#region \"Internal function\"\n\n    function _mapToWindowObjects(): Glue42.Windows.GDWindow[] {\n        const winObjects: Glue42.Windows.GDWindow[] = [];\n\n        _windowsId.forEach((winId) => {\n            const windowObject = _mapToWindowObject(winId);\n            if (typeof windowObject !== \"undefined\") {\n                winObjects.push(windowObject);\n            }\n        });\n\n        return winObjects;\n    }\n\n    function _mapToWindowObject(windowId: string): Glue42.Windows.GDWindow {\n        return windowStore.get(windowId) ? windowStore.get(windowId).API : undefined;\n    }\n\n    function _getGroupHeaderVisibility(): boolean {\n        // if one of the windows has a flag hideGroupHeader the group header should be off.\n        const windowWithHiddenHeader = _mapToWindowObjects().find((w) => !w.isGroupHeaderVisible);\n        const _isGroupHeaderVisible = windowWithHiddenHeader === undefined;\n\n        return _isGroupHeaderVisible;\n    }\n\n    //#endregion \"Internal function\"\n\n    //#region \"Events\"\n\n    function onHeaderVisibilityChanged(callback?: (group: Glue42.Windows.Group) => void): () => void {\n        return _registry.add(\"header-visibility-changed\", callback);\n    }\n\n    function onWindowAdded(callback?: (group: Glue42.Windows.Group, window: Glue42.Windows.GDWindow) => void): () => void {\n        return _registry.add(\"window-added\", callback);\n    }\n\n    function onWindowRemoved(callback?: (group: Glue42.Windows.Group, window: Glue42.Windows.GDWindow) => void): () => void {\n        return _registry.add(\"window-removed\", callback);\n    }\n\n    //#endregion \"Events\"\n\n    //#region \"API\"\n\n    const groupObject: Glue42.Windows.Group = {\n        id,\n        get windows() {\n            return windows();\n        },\n        find,\n        get isHeaderVisible() {\n            return _getGroupHeaderVisibility();\n        },\n        showHeader,\n        hideHeader,\n        getTitle,\n        setTitle,\n        capture,\n        maximize: (success, error) => {\n            return execute(\"maximize\", { groupId: id }, success, error);\n        },\n        restore: (success, error) => {\n            return execute(\"restore\", { groupId: id }, success, error);\n        },\n\n        onHeaderVisibilityChanged,\n        onWindowAdded,\n        onWindowRemoved,\n    };\n\n    const internal = {\n        addWindow,\n        removeWindow,\n        handleGroupHeaderVisibilityChanged,\n    };\n\n    return {\n        groupAPI: groupObject,\n        groupInternal: internal,\n    };\n\n    //#endregion \"API\"\n};\n","import { Glue42Core } from \"@glue42/core\";\nimport callbackRegistry, { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport { Glue42 } from \"../../glue\";\nimport groupFactory from \"./group\";\nimport { default as windowStore } from \"./store\";\nimport {\n    Environment,\n    GroupInternal,\n    GroupsInternal,\n    GroupsWrapper,\n    GroupWrapper,\n    WindowsLibrary,\n    WindowWrapper\n} from \"./types\";\n\nexport default (environment: Environment, logger: Glue42Core.Logger.API): GroupsWrapper => {\n    const _logger = logger.subLogger(\"groups\");\n    const _registry: CallbackRegistry = callbackRegistry();\n    const _groups: { [key: string]: GroupWrapper } = {};\n    let heardForWindowsCounter: number = -1;\n\n    // Getting already existing windows and create Group API for each window\n    const windows = windowStore.list;\n    Object.keys(windows).forEach((k) => {\n        addNewWindow(windows[k]);\n    });\n\n    environment.onCompositionChanged((windowInfo: any) => {\n        handleCompositionChanged(windowInfo);\n    });\n\n    environment.onGroupHeaderVisibilityChanged((windowInfo) => {\n        const windowId = windowInfo.windowId;\n        const group: Glue42.Windows.Group = findGroupByWindow(windowId);\n        if (typeof group !== \"undefined\") {\n            const groupEvents: GroupWrapper = _groups[group.id];\n\n            if (heardForWindowsCounter === -1) {\n                heardForWindowsCounter = group.windows.length;\n            }\n\n            heardForWindowsCounter--;\n            if (heardForWindowsCounter === 0) {\n                heardForWindowsCounter = -1;\n                groupEvents.groupInternal.handleGroupHeaderVisibilityChanged(windowInfo);\n            }\n        }\n    });\n\n    windowStore.onAdded((win) => {\n        addNewWindow(win);\n    });\n    windowStore.onRemoved((win) => {\n        removeWindow(win);\n    });\n\n    // Methods\n\n    function my(): Glue42.Windows.Group {\n        return findGroupByWindow(environment.my());\n    }\n\n    function list(success?: (groups: Glue42.Windows.Group[]) => void): Glue42.Windows.Group[] {\n        const result: Glue42.Windows.Group[] = Object.keys(_groups).map((groupId) => {\n            if (_groups[groupId]) {\n                return _groups[groupId].groupAPI;\n            }\n\n        });\n\n        if (typeof success === \"function\") {\n            success(result);\n        }\n        return result;\n    }\n\n    function findGroupByWindow(winId: string | Glue42.Windows.GDWindow, success?: (group: Glue42.Windows.Group) => void): Glue42.Windows.Group {\n        let windowId: string;\n        if (typeof winId === \"undefined\") {\n            logger.debug(\"trying to find a group by a window, but winId is undefined\");\n            return;\n        }\n        if (typeof winId === \"string\") {\n            windowId = winId;\n        } else {\n            windowId = winId.id;\n        }\n        let groupFound: Glue42.Windows.Group;\n        Object.keys(_groups).forEach((groupId: string) => {\n            const group: Glue42.Windows.Group = _groups[groupId].groupAPI;\n            if (group.find(windowId) !== undefined) {\n                groupFound = group;\n                return;\n            }\n        });\n\n        if (typeof success === \"function\") {\n            success(groupFound);\n        }\n\n        return groupFound;\n    }\n\n    // Events\n\n    function onWindowMoved(callback?: (windowId: string, oldGroup: Glue42.Windows.Group, newGroupId: string) => void): UnsubscribeFunction {\n        return _registry.add(\"window-moved\", callback);\n    }\n\n    // Private\n\n    function createOrGetGroup(groupId: string): GroupWrapper {\n        if (!_groups.hasOwnProperty(groupId)) {\n            const createdGroup: GroupWrapper = groupFactory(groupId, environment.executor);\n            _groups[groupId] = createdGroup;\n            return createdGroup;\n        } else {\n            return _groups[groupId];\n        }\n    }\n\n    function deleteGroup(groupId: string): void {\n        if (_groups.hasOwnProperty(groupId) && typeof _groups[groupId] !== \"undefined\") {\n            if (_groups[groupId].groupAPI.windows.length === 0) {\n                delete _groups[groupId];\n            }\n        }\n    }\n\n    function addNewWindow(win: WindowWrapper) {\n        _logger.trace(`Adding new window ${win.API.id} to win.API.groupId ${win.API.groupId}`);\n        const group = addWindow(win);\n        if (group) {\n            _logger.trace(`handleGroupAssociation ${win.API.id} to group.groupAPI.id ${group.groupAPI.id}`);\n            win.Events.handleGroupAssociation(group.groupAPI);\n        }\n    }\n\n    function addWindow(win: WindowWrapper, groupId?: string): GroupWrapper {\n        const windowGroupId: string = groupId || win.API.groupId;\n        const windowId: string = win.API.id;\n        if (typeof windowGroupId === \"undefined\" || typeof windowId === \"undefined\") {\n            _logger.debug(`trying to add a window without group - winId: ${windowId}`);\n            return;\n        }\n\n        const group = createOrGetGroup(windowGroupId);\n        group.groupInternal.addWindow(windowId);\n        return group;\n    }\n\n    function removeWindow(win: WindowWrapper, groupId?: string) {\n        const windowId: string = win.API.id;\n        const windowGroupId: string = groupId || win.API.groupId;\n        if (typeof windowGroupId !== \"undefined\") {\n            const group = _groups[windowGroupId];\n            group.groupInternal.removeWindow(windowId);\n            win.Events.handleGroupAssociation(undefined);\n            deleteGroup(windowGroupId);\n        }\n    }\n\n    function handleCompositionChanged(windowInfo: any): void {\n        const newGroupId: string = windowInfo.groupId;\n        const windowId: string = windowInfo.windowId;\n        const oldGroup: Glue42.Windows.Group = findGroupByWindow(windowId);\n        const oldGroupId = oldGroup ? oldGroup.id : undefined;\n        _logger.trace(`handleCompositionChanged newGroupId: ${newGroupId} windowId: ${windowId} oldGroup: ${oldGroupId}`);\n        if (oldGroupId === newGroupId) {\n            _logger.trace(`handleCompositionChanged newGroupId: ${newGroupId} windowId: ${windowId} oldGroup: ${oldGroupId} are the same - returning...`);\n            return;\n        }\n\n        const win = windowStore.get(windowId) || windowStore.get(windowId);\n        const newGroup = addWindow(win, newGroupId);\n        if (oldGroup) {\n            removeWindow(win, oldGroupId);\n            _registry.execute(\"window-moved\", windowId, oldGroup, newGroupId);\n        }\n        win.Events.handleGroupChanged(newGroup.groupAPI, oldGroup);\n    }\n\n    //#region \"API\"\n\n    const groups = {\n        get my() {\n            return my();\n        },\n        list,\n        findGroupByWindow,\n    };\n\n    //#endregion \"API\n\n    const events: GroupsInternal = { onWindowMoved };\n\n    return {\n        groupsAPI: groups,\n        groupsEvents: events,\n    };\n};\n","import { Glue42Core } from \"@glue42/core\";\nimport { CallbackRegistry, UnsubscribeFunction, default as CallbackFactory } from \"callback-registry\";\nimport { Glue42 } from \"../../glue\";\nimport { Environment, GroupsWrapper, WindowWrapper } from \"./types\";\n\nimport { default as envDetector } from \"./environment/detector\";\nimport groupsFactory from \"./groups\";\nimport { default as windowStore } from \"./store\";\n\nexport default (agm: Glue42Core.AGM.API, logger: Glue42Core.Logger.API, appManagerGetter: () => Glue42.AppManager.API, gdMajorVersion: number): Glue42.Windows.API => {\n    const _registry: CallbackRegistry = CallbackFactory();\n    const _logger = logger;\n    let groups: GroupsWrapper;\n    let environment: Environment;\n\n    windowStore.init(_logger);\n\n    const isReady = new Promise((resolve, reject) => {\n        envDetector(agm, _logger, appManagerGetter, gdMajorVersion)\n            .then((env) => {\n                environment = env;\n                groups = groupsFactory(env, _logger);\n                resolve();\n            })\n            .catch((e) => {\n                const err = `Environment detector fails with: ${e}`;\n                _logger.error(err);\n                reject(err);\n            });\n    });\n\n    function ready() {\n        return isReady;\n    }\n\n    function my(): Glue42.Windows.GDWindow {\n        const myWindow = windowStore.getIfReady(environment.my());\n        return myWindow ? myWindow.API : undefined;\n    }\n\n    function open(name: string, url: string, options?: Glue42.Windows.WindowSettings, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: object) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n\n            const errorHandler = (errorResponse: object) => {\n                if (typeof error === \"function\") {\n                    error(errorResponse);\n                }\n                reject(errorResponse);\n            };\n\n            const successHandler = (id: string) => {\n                windowStore.waitFor(id)\n                    .then((win) => {\n                        if (typeof success === \"function\") {\n                            success(win.API);\n                        }\n                        resolve(win.API);\n\n                        if (win.API.windowType === \"electron\") {\n                            // on normal windows urlCHanged has to be detected first in orer for the window to be ready\n                            // that causes the user callbacks to miss urlChanged since they are not registered yet\n                            // here we 'replay' the urlChanged event\n                            win.Events.handleUrlChanged(win.API.url);\n                        }\n                    })\n                    .catch(errorHandler);\n            };\n\n            environment.open(name, url, options, successHandler, errorHandler);\n        });\n    }\n\n    function find(name: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Glue42.Windows.GDWindow {\n        const windows: { [key: string]: WindowWrapper } = windowStore.list;\n\n        const windowsForListing: Glue42.Windows.GDWindow[] = Object.keys(windows).reduce((memo, winId) => {\n            const window: WindowWrapper = windows[winId];\n            if (window && window.API.name === name) {\n                memo.push(window.API);\n            }\n            return memo;\n        }, []);\n\n        if (typeof success !== \"function\") {\n            return windowsForListing[0];\n        }\n\n        if (windowsForListing.length > 0) {\n            success(windowsForListing[0]);\n        } else {\n            if (typeof error === \"function\") {\n                error(\"There is no window with name:\" + name);\n            }\n        }\n    }\n\n    function findById(id: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Glue42.Windows.GDWindow {\n        const windows: { [key: string]: WindowWrapper } = windowStore.list;\n        const windowsForListing: Glue42.Windows.GDWindow[] = Object.keys(windows).reduce((memo, winId) => {\n            const window: WindowWrapper = windows[winId];\n            if (typeof window !== \"undefined\" && window.API.id === id) {\n                memo.push(window.API);\n            }\n            return memo;\n        }, []);\n\n        if (typeof success !== \"function\") {\n            return windowsForListing[0];\n        }\n\n        if (windowsForListing.length > 0) {\n            success(windowsForListing[0]);\n        } else {\n            if (typeof error === \"function\") {\n                error(\"There is no window with such id:\" + id);\n            }\n        }\n    }\n\n    function list(success?: (window: Glue42.Windows.GDWindow[]) => void): Glue42.Windows.GDWindow[] {\n        const windows: { [key: string]: WindowWrapper } = windowStore.list;\n\n        const windowsForListing: Glue42.Windows.GDWindow[] = Object.keys(windows)\n            .map((k) => {\n                return windows[k].API;\n            });\n\n        if (typeof success !== \"function\") {\n            return windowsForListing;\n        }\n\n        success(windowsForListing);\n    }\n\n    function windowAdded(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"window-added\", callback);\n    }\n\n    function windowRemoved(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"window-removed\", callback);\n    }\n\n    function tabAttached(callback: (tabWindow: Glue42.Windows.GDWindow, newTabGroupId: string, tabHeaderVisible: boolean) => void): Promise<void> {\n        return isReady.then(() => {\n            environment.tabAttached(callback);\n        });\n    }\n\n    function tabDetached(callback: (window: Glue42.Windows.GDWindow, tabGroupId: string, oldTabGroupId: string) => void): Promise<void> {\n        return isReady.then(() => {\n            environment.tabDetached(callback);\n        });\n    }\n\n    function onWindowFrameColorChanged(callback: (window: Glue42.Windows.GDWindow) => void): Promise<UnsubscribeFunction> {\n        return isReady.then(() => {\n            return environment.onWindowFrameColorChanged(callback);\n        });\n    }\n\n    function onWindowGotFocus(callback: (window: Glue42.Windows.GDWindow) => void) {\n        let unsubscribe: UnsubscribeFunction;\n        isReady.then(() => {\n            unsubscribe = environment.onWindowGotFocus(callback);\n        });\n\n        return () => {\n            if (unsubscribe) {\n                unsubscribe();\n            }\n        };\n    }\n\n    function onWindowLostFocus(callback: (window: Glue42.Windows.GDWindow) => void) {\n        let unsubscribe: UnsubscribeFunction;\n\n        isReady.then(() => {\n            unsubscribe = environment.onWindowLostFocus(callback);\n        });\n\n        return () => {\n            if (unsubscribe) {\n                unsubscribe();\n            }\n        };\n    }\n\n    function onEvent(callback: (stream: any) => void): UnsubscribeFunction {\n        let unsubFunc: UnsubscribeFunction;\n        let unsubscribed = false;\n        isReady.then(() => {\n            if (unsubscribed) {\n                return;\n            }\n            unsubFunc = environment.onEvent(callback);\n        });\n\n        return () => {\n            unsubscribed = true;\n            if (unsubFunc) {\n                unsubFunc();\n            }\n\n        };\n    }\n\n    function createFlydown(targetId: string, config: Glue42.Windows.FlydownOptions): Promise<Glue42.Windows.Flydown> {\n        return environment.createFlydown(targetId, config);\n    }\n\n    function showPopup(targetId: string, config: Glue42.Windows.PopupOptions): Promise<void> {\n        return environment.showPopup(targetId, config);\n    }\n\n    function handleWindowAdded(w: WindowWrapper) {\n        _registry.execute(\"window-added\", w.API);\n    }\n\n    function handleWindowRemoved(w: WindowWrapper) {\n        _registry.execute(\"window-removed\", w.API);\n    }\n\n    windowStore.onReadyWindow(handleWindowAdded);\n    windowStore.onRemoved(handleWindowRemoved);\n\n    // The API itself\n    return {\n        my,\n        open,\n        find,\n        findById,\n        list,\n        ready,\n        onWindowAdded: windowAdded,\n        windowAdded,\n        onWindowRemoved: windowRemoved,\n        windowRemoved,\n        onTabAttached: tabAttached,\n        onTabDetached: tabDetached,\n        onWindowFrameColorChanged,\n\n        get groups() {\n            return groups.groupsAPI;\n        },\n        onWindowGotFocus,\n        onWindowLostFocus,\n        onEvent,\n        createFlydown,\n        showPopup\n    };\n};\n","import { Glue42Core } from \"@glue42/core\";\nimport { Environment } from \"./../types\";\nimport { default as GD } from \"./gd/gd\";\nimport { Glue42 } from \"../../../glue\";\n\nexport default (agm: Glue42Core.AGM.API, logger: Glue42Core.Logger.API, appManagerGetter: () => Glue42.AppManager.API, gdMajorVersion: number): Promise<Environment> => {\n    const _logger = logger;\n    return new Promise((resolve, reject) => {\n        if (gdMajorVersion === 2) {\n            // We are running in HC\n            _logger.trace(\"running in HC\");\n            throw new Error(\"GD2 not supported\");\n        } else if (gdMajorVersion >= 3) {\n            // We are running in GD 3\n            // TODO expose instance in glu42gd\n            _logger.trace(\"running in GD 3\");\n            const gd = new GD(agm, _logger, appManagerGetter, undefined, window.glue42gd.windowId);\n            gd.init()\n                .then(resolve)\n                .catch(reject);\n        } else {\n            // We are running in Browser or Node, we should check which stream is available\n            // But we need to pass the container as dependency\n            const gdPromise = new GD(agm, _logger, appManagerGetter).init();\n            const wait = (ms: number) => new Promise((res, rej) => setTimeout(() => { rej(\"timeout waiting for streams\"); }, ms));\n            Promise.race([gdPromise, wait(10000)])\n                .then(resolve)\n                .catch(reject);\n        }\n    });\n};\n","import { Glue42 } from \"../../glue\";\n\n// provides a unified way to access layouts array\nexport class LayoutStore {\n    private layouts: Glue42.Layouts.Layout[] = [];\n\n    public removeWhere(condition: (l: Glue42.Layouts.Layout) => boolean) {\n        this.layouts = this.layouts.filter(condition);\n    }\n\n    public add(item: Glue42.Layouts.Layout) {\n        this.layouts.push(item);\n    }\n\n    public get all(): Glue42.Layouts.Layout[] {\n        return this.layouts;\n    }\n\n    public where(condition: (l: Glue42.Layouts.Layout) => boolean): Glue42.Layouts.Layout[] {\n        return this.layouts.filter(condition);\n    }\n\n    public first(condition: (l: Glue42.Layouts.Layout) => boolean): Glue42.Layouts.Layout {\n        return this.where(condition)[0];\n    }\n}\n\nexport default new LayoutStore();\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nmodule.exports = {\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nfunction randomByte() {\n    if (!crypto || !crypto.getRandomValues) {\n        return Math.floor(Math.random() * 256) & 0x30;\n    }\n    var dest = new Uint8Array(1);\n    crypto.getRandomValues(dest);\n    return dest[0] & 0x30;\n}\n\nmodule.exports = randomByte;\n","'use strict';\n\nvar randomByte = require('./random/random-byte');\n\nfunction encode(lookup, number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + lookup( ( (number >> (4 * loopCounter)) & 0x0f ) | randomByte() );\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = encode;\n","'use strict';\nvar alphabet = require('./alphabet');\n\n/**\n * Decode the id to get the version and worker\n * Mainly for debugging and testing.\n * @param id - the shortid-generated id.\n */\nfunction decode(id) {\n    var characters = alphabet.shuffled();\n    return {\n        version: characters.indexOf(id.substr(0, 1)) & 0x0f,\n        worker: characters.indexOf(id.substr(1, 1)) & 0x0f\n    };\n}\n\nmodule.exports = decode;\n","'use strict';\n\nvar encode = require('./encode');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1459707606518;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 6;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + encode(alphabet.lookup, version);\n    str = str + encode(alphabet.lookup, clusterWorkerId);\n    if (counter > 0) {\n        str = str + encode(alphabet.lookup, counter);\n    }\n    str = str + encode(alphabet.lookup, seconds);\n\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var characters = alphabet.characters();\n    var len = id.length;\n    for(var i = 0; i < len;i++) {\n        if (characters.indexOf(id[i]) === -1) {\n            return false;\n        }\n    }\n    return true;\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar encode = require('./encode');\nvar decode = require('./decode');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.decode = decode;\nmodule.exports.isValid = isValid;\n","'use strict';\nmodule.exports = require('./lib/index');\n","import { Glue42 } from \"../../glue\";\nimport { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport { Glue42Core } from \"@glue42/core\";\n\nconst SaveContextMethodName = \"T42.HC.GetSaveContext\";\ndeclare var htmlContainer: any;\n\n/**\n * Logic for apps that want to provide custom context on save\n */\nexport default class ContextProvider {\n\n    private registeredRequestsMethods = false;\n\n    constructor(private agm: Glue42Core.AGM.API, private activitiesGetter: () => Glue42.Activities.API, private callbacks: CallbackRegistry) {\n    }\n\n    public onSaveRequested(callback: (context?: object) => Glue42.Layouts.SaveRequestResponse) {\n        if (!this.registeredRequestsMethods) {\n            this.registerRequestMethods();\n            this.registeredRequestsMethods = true;\n        }\n        return this.callbacks.add(\"saveRequested\", callback);\n    }\n\n    private isActivityOwner() {\n        // fallback for GD2 - remove once the bellow code is tested\n        if (typeof htmlContainer !== \"undefined\") {\n            const context = htmlContainer.getContext();\n            return context && context._t42 && context._t42.activityIsOwner;\n        }\n\n        // check if we're the activity owners\n        const activities = this.activitiesGetter();\n        if (!activities) {\n            return false;\n        }\n\n        if (!activities.inActivity) {\n            return false;\n        }\n\n        const myWindow = activities.my.window;\n        const myActivity = activities.my.activity;\n\n        if (!myActivity && !myWindow) {\n            return false;\n        }\n\n        // TODO - fix activities typings\n        return (myActivity.owner as any).id === (myWindow as any).id;\n    }\n\n    private registerRequestMethods() {\n        this.agm.register(SaveContextMethodName, (args) => {\n            const requestResult: Glue42.Layouts.SaveRequestResponse = this.callbacks.execute(\"saveRequested\", args)[0] as Glue42.Layouts.SaveRequestResponse;\n            if (!requestResult) {\n                return {};\n            }\n\n            requestResult.activityContext = requestResult.activityContext || {};\n            requestResult.windowContext = requestResult.windowContext || {};\n\n            // always include the window context\n            const result: Glue42.Layouts.SaveRequestResponse = { windowContext: requestResult.windowContext, activityContext: undefined };\n\n            // if we're the activity owner put the context too\n            if (this.isActivityOwner()) {\n                result.activityContext = requestResult.activityContext;\n            }\n\n            return result;\n        });\n    }\n}\n","// A simple transformation that makes object to start with lowercase\n// Note that this is not full implementation as it supports only:\n// undefined, null, arrays, number, string, bool. Anything out of this\n// list is considered Object\nexport default function transformACSLayout(something: { [key: string]: any }): { [key: string]: any } {\n    if (!something) {\n        return something;\n    }\n\n    if (Array.isArray(something)) {\n        return something.map((item) => {\n            return transformACSLayout(item);\n        });\n    }\n\n    if (typeof something === \"string\" || typeof something === \"number\" || typeof something === \"boolean\") {\n        return something;\n    }\n\n    const initial: { [key: string]: any } = {};\n    return Object.keys(something).reduce((accumulator, current) => {\n        const value = something[current];\n        const convertedValue = transformACSLayout(value);\n\n        let key = current;\n        if (current[0].toLowerCase() !== current[0]) {\n            key = current[0].toLowerCase() + current.substr(1);\n        }\n\n        accumulator[key] = convertedValue;\n        return accumulator;\n    }, initial);\n}\n","import { Glue42 } from \"../../glue\";\n\nexport default class LayoutImpl implements Glue42.Layouts.Layout {\n    /** Name of the layout */\n    public name: string;\n\n    /** Type of the layout */\n    public type: Glue42.Layouts.LayoutType;\n\n    /** Array of components describing the applications that are saved in the layout */\n    public components: Glue42.Layouts.LayoutComponent[];\n\n    /** Context passed when the layout was saved */\n    public context: any;\n\n    /** Metadata passed when the layout was saved */\n    public metadata: any;\n\n    constructor(data: any) {\n        this.name = data.name;\n        this.type = data.type;\n        this.components = data.components;\n        this.context = data.context;\n        this.metadata = data.metadata;\n    }\n}\n","import { Glue42 } from \"../../glue\";\nimport callbackRegistry, { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport { LayoutsStream, HibernationResumeMessage, UpdateLayoutComponentContextMessage } from \"./types\";\nimport store from \"./store\";\nimport generate from \"shortid\";\nimport { ACSSaveLayoutMessage, ACSRestoreMessage, ACSRestoreMessageContext, ACSRestoreMessageInstanceInfo, ACSMessage, ACSRenameMessage, ACSRemoveLayoutMessage, ACSImportMessage, ExportResultMessage } from \"./types\";\nimport { Glue42Core } from \"@glue42/core\";\nimport ContextProvider from \"./contextProvider\";\nimport transformACSLayout from \"./transform\";\nimport LayoutImpl from \"./layout\";\n\nexport default class LayoutsAPIImpl implements Glue42.Layouts.API {\n    private appManager: Glue42.AppManager.API;\n    private provider: ContextProvider;\n\n    constructor(private config: Glue42.Layouts.Configuration, private stream: LayoutsStream, private callbacks: CallbackRegistry) {\n        this.appManager = config.appManager;\n        this.onEvent = stream.onEvent;\n        this.provider = new ContextProvider(config.agm, config.activityGetter, callbacks);\n        stream.subscribe();\n    }\n\n    public async setDefaultGlobal(name: string): Promise<void> {\n        await this.config.agm.invoke(\"T42.ACS.SelectDefaultLayout\", { name });\n        return;\n    }\n\n    public async clearDefaultGlobal(): Promise<void> {\n        await this.config.agm.invoke(\"T42.ACS.DeselectDefaultLayout\");\n        return;\n    }\n\n    public async getDefaultGlobal(): Promise<Glue42.Layouts.Layout | undefined> {\n        const result = await this.config.agm.invoke(\"T42.ACS.GetDefaultLayout\");\n        const layout = result.returned;\n        if (!layout) {\n            return undefined;\n        }\n        if (this.isSlimMode()) {\n            return layout;\n        }\n        return this.list().find((l) => l.name === layout.name && l.type === \"Global\");\n    }\n\n    public ready(): Promise<void> {\n        if (this.config.mode === \"fullWaitSnapshot\") {\n            return this.stream.gotSnapshot;\n        }\n        return this.stream.ready;\n    }\n\n    public save(layout: Glue42.Layouts.NewLayoutOptions): Promise<Glue42.Layouts.Layout> {\n        return new Promise<Glue42.Layouts.Layout>((resolve, reject) => {\n\n            this.verifyNotSlimMode();\n\n            if (!layout.name) {\n                throw Error(\"layout.name argument is required\");\n            }\n\n            if (!layout.type) {\n                layout.type = \"Global\";\n            }\n\n            if (layout.activityId) {\n                layout.type = \"Activity\";\n            }\n\n            if (typeof layout.ignoreHidden === \"undefined\") {\n                layout.ignoreHidden = true; // default to true\n            }\n\n            const layoutObject: ACSSaveLayoutMessage = {\n                name: layout.name,\n                actIds: [],\n                appIds: [],\n                type: layout.type,\n                context: layout.context,\n                metadata: layout.metadata || {},\n                options: { ignoreLayoutRestrictions: false },\n            };\n\n            if (layout.type === \"Activity\") {\n                let actId = layout.activityId;\n                if (!actId) {\n                    if (!this.appManager.myInstance.inActivity) {\n                        throw new Error(\"Current application is not in activity. Can not save activity layout for it\");\n                    }\n                    actId = this.appManager.myInstance.activityId;\n                }\n\n                layoutObject.actIds.push(actId);\n                layoutObject.options = { ignoreLayoutRestrictions: true };\n            } else if (layout.type === \"Global\") {\n                if (this.config.gdMajorVersion === 2) {\n                    let instances: any[] = this.appManager.instances();\n\n                    if (layout.ignoreHidden) {\n                        instances = instances.filter((i) => this.isVisibleWindow(i));\n                    }\n\n                    if (layout.ignoreMyInstance && this.appManager.myInstance) {\n                        instances = instances.filter((i) => i.id !== this.appManager.myInstance.id);\n                    }\n\n                    instances.reduce((prev, current) => {\n                        if (!current.id) {\n                            return prev;\n                        }\n\n                        if (current.inActivity) {\n                            const actId = current.activityId;\n\n                            if (prev.actIds.indexOf(actId) === -1) {\n                                prev.actIds.push(actId);\n                            }\n                        } else {\n                            prev.appIds.push(current.id);\n                        }\n\n                        return prev;\n                    }, layoutObject);\n                } else {\n                    layoutObject.autoCollectApps = true;\n                }\n            } else {\n                throw new Error(\"layout type \" + layout.type + \" not supported\");\n            }\n\n            this.invokeMethodAndTrack(\"T42.ACS.SaveLayout\", layoutObject, resolve, reject);\n        });\n    }\n\n    public restore(options: Glue42.Layouts.RestoreOptions): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            this.verifyNotSlimMode();\n\n            if (typeof options === \"undefined\") {\n                throw Error(\"options argument is required\");\n            }\n\n            if (!options.name) {\n                throw Error(\"options.name argument is required\");\n            }\n\n            if (!options.type) {\n                options.type = \"Global\";\n            }\n\n            if (options.activityIdToJoin) {\n                options.type = \"Activity\";\n            }\n\n            if (typeof options.restoreActivityOwner === \"undefined\") {\n                options.restoreActivityOwner = false;\n            }\n\n            if (typeof options.ignoreActivityWindowTypes === \"undefined\") {\n                options.ignoreActivityWindowTypes = [];\n            }\n\n            if (typeof options.setActivityContext === \"undefined\") {\n                options.setActivityContext = true;\n            }\n\n            // if no closeOwnRunning we set closeRunningInstance to true; if\n            if (typeof options.closeRunningInstance === \"undefined\") {\n                if (options.type === \"Global\") {\n                    options.closeRunningInstance = true;\n                } else if (options.type === \"Activity\") {\n                    // we don't close anything in case of activity layout type\n                    options.closeRunningInstance = false;\n                }\n            }\n\n            if (typeof options.reuseWindows === \"undefined\") {\n                options.reuseWindows = true;\n            }\n\n            options.context = options.context || {};\n\n            const t42: ACSRestoreMessageContext = {\n                restoreOptions: {\n                    activityToJoin: options.activityIdToJoin,\n                    setActivityContext: options.setActivityContext,\n                    ignoreActivityWindowTypes: options.ignoreActivityWindowTypes,\n                    restoreActivityOwner: options.restoreActivityOwner,\n                    closeOldWindows: options.closeRunningInstance,\n                    reuseExistingWindows: options.reuseWindows\n                }\n            };\n\n            const arg: ACSRestoreMessage = {\n                type: options.type,\n                name: options.name,\n                context: options.context,\n                toClose: [],\n                splash: options.splash\n            };\n\n            // getting instance for closing is necessary only for GD2\n            // G4E-2418 - A global layout including swimlane app can not be restored, when the activities configuration is set to false\n            if (this.config.gdMajorVersion === 2) {\n                if (options.closeRunningInstance) {\n                    arg.toClose = this.getInstancesToClose(options);\n                }\n            }\n\n            if (options.timeout) {\n                arg.timeout = options.timeout;\n            }\n\n            arg.context._t42 = t42;\n\n            this.invokeMethodAndTrack(\"T42.ACS.RestoreLayout\", arg, resolve, reject, true);\n        });\n    }\n\n    public remove(type: string, name: string): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            this.verifyNotSlimMode();\n\n            if (!name) {\n                throw Error(\"name argument is required\");\n            }\n\n            if (!type) {\n                throw Error(\"type argument is required\");\n            }\n\n            const msg: ACSRemoveLayoutMessage = {\n                type,\n                name,\n            };\n\n            this.invokeMethodAndTrack(\"T42.ACS.RemoveLayout\", msg, resolve, reject);\n        });\n    }\n\n    public list(): Glue42.Layouts.Layout[] {\n        this.verifyNotSlimMode();\n        return store.all;\n    }\n\n    public import(layouts: Glue42.Layouts.Layout[], mode?: Glue42.Layouts.ImportMode): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            this.verifyNotSlimMode();\n\n            const msg: ACSImportMessage = {\n                mode: mode || \"replace\",\n                layouts\n            };\n\n            this.invokeMethodAndTrack(\"T42.ACS.ImportLayouts\", msg, resolve, reject);\n        });\n    }\n\n    public export(): Promise<Glue42.Layouts.Layout[]> {\n        return new Promise<Glue42.Layouts.Layout[]>((resolve, reject) => {\n            const handleResult = (result: ExportResultMessage) => {\n                const layouts: Glue42.Layouts.Layout[] = this.getObjectValues(result.Layouts).map((t) => new LayoutImpl(transformACSLayout(t)));\n                resolve(layouts);\n            };\n\n            this.invokeMethodAndTrack(\"T42.ACS.ExportLayouts\", {}, handleResult, reject, true);\n        });\n    }\n\n    public rename(layout: Glue42.Layouts.Layout, newName: string): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            this.verifyNotSlimMode();\n\n            if (!layout) {\n                throw Error(\"layout argument is required\");\n            }\n\n            if (!layout.name) {\n                throw Error(\"name argument is required\");\n            }\n\n            if (!layout.type) {\n                throw Error(\"type argument is required\");\n            }\n\n            const msg: ACSRenameMessage = { type: layout.type, oldName: layout.name, newName };\n\n            this.invokeMethodAndTrack(\"T42.ACS.RenameLayout\", msg, resolve, reject);\n        });\n    }\n\n    public updateMetadata(layout: Glue42.Layouts.Layout): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (!layout) {\n                throw Error(\"layout argument is required\");\n            }\n\n            if (!layout.name) {\n                throw Error(\"name argument is required\");\n            }\n\n            if (!layout.type) {\n                throw Error(\"type argument is required\");\n            }\n\n            if (!layout.metadata) {\n                throw Error(\"metadata argument is required\");\n            }\n\n            const layoutObject: any = {\n                name: layout.name,\n                type: layout.type,\n                metadata: layout.metadata\n            };\n\n            this.invokeMethodAndTrack(\"T42.ACS.UpdateMetadata\", layoutObject, resolve, reject, true);\n        });\n    }\n\n    public hibernate(name: string, options?: Glue42.Layouts.HibernationOptions): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (!name) {\n                return reject(\"name cannot be empty\");\n            }\n            options = options || {};\n            const request: HibernationResumeMessage = {\n                name,\n                type: \"Global\",\n                context: options.context || {},\n                metadata: options.metadata || {},\n            };\n            this.invokeMethodAndTrack(\"T42.ACS.HibernateLayout\", request, resolve, reject, true);\n        });\n    }\n\n    public resume(name: string, context?: any, options?: Glue42.Layouts.ResumeOptions): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (!name) {\n                return reject(\"name cannot be empty\");\n            }\n            const request: HibernationResumeMessage = {\n                name,\n                type: \"Global\",\n                context,\n                ...options\n            };\n            this.invokeMethodAndTrack(\"T42.ACS.ResumeLayout\", request, resolve, reject, true);\n        });\n    }\n\n    public async getCurrentLayout(): Promise<Glue42.Layouts.Layout | undefined> {\n        const result = await this.config.agm.invoke(\"T42.ACS.GetCurrentLayout\", {}, \"best\", { methodResponseTimeoutMs: 120 * 1000 });\n        let layout = result.returned.layout;\n        if (!layout) {\n            return undefined;\n        }\n        if (!this.isSlimMode()) {\n            // we have internal if we track layouts (so not slim mode), if not return the object we received from GD\n            layout = this.list().find((l) => l.name === layout.name && l.type === layout.type);\n        }\n        return layout;\n    }\n\n    public onAdded(callback: (layout: Glue42.Layouts.Layout) => void): () => void {\n        const result = this.callbacks.add(\"added\", callback);\n\n        if (store.all.length > 0) {\n            store.all.forEach((layout) => {\n                try {\n                    callback(layout);\n                } catch (err) { /** */ }\n            });\n        }\n\n        return result;\n    }\n\n    public onRemoved(callback: (layout: Glue42.Layouts.Layout) => void): () => void {\n        return this.callbacks.add(\"removed\", callback);\n    }\n\n    public onChanged(callback: (layout: Glue42.Layouts.Layout) => void): () => void {\n        return this.callbacks.add(\"changed\", callback);\n    }\n\n    public onRestored(callback: (layout: Glue42.Layouts.Layout) => void): () => void {\n        return this.callbacks.add(\"restored\", callback);\n    }\n\n    public onRenamed(callback: (layout: Glue42.Layouts.Layout) => void): () => void {\n        return this.callbacks.add(\"renamed\", callback);\n    }\n\n    public onEvent(callback: (event: any) => void): () => void {\n        return this.stream.onEvent(callback);\n    }\n\n    public onSaveRequested(callback: (context?: object) => Glue42.Layouts.SaveRequestResponse): UnsubscribeFunction {\n        return this.provider.onSaveRequested(callback);\n    }\n\n    public updateAppContextInCurrent(context: object): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (context && typeof context !== \"object\") {\n                reject(\"context must be an object\");\n            }\n            context = context ?? {};\n            const request: UpdateLayoutComponentContextMessage = {\n                context\n            };\n            this.invokeMethodAndTrack(\"T42.ACS.UpdateLayoutComponentContext\", request, resolve, reject, false);\n        });\n    }\n\n    private isSlimMode() {\n        return this.config.mode === \"slim\";\n    }\n\n    private verifyNotSlimMode() {\n        if (this.isSlimMode()) {\n            throw Error(\"Operation not allowed in slim mode. Run in full mode.\");\n        }\n    }\n\n    private isVisibleWindow(instance: Glue42.AppManager.Instance) {\n        // GD3\n        // allow exes to participate in layouts (TODO - check if the app is layouts aware (has the layouts methods) - if not treat it as not visible window)\n        if (instance.application.type === \"exe\" || instance.application.type === \"node\") {\n            return true;\n        }\n        // allow activities to participate in layouts\n        if (instance.application.type === \"activity\") {\n            return true;\n        }\n\n        if (!instance || !instance.window) {\n            return false;\n        }\n\n        return instance.window.isVisible;\n    }\n\n    private invokeMethodAndTrack(methodName: string, args: ACSMessage, resolve: (result: any) => void, reject: (err: any) => void, skipStreamEvent?: boolean) {\n        let streamEventReceived = skipStreamEvent;\n        let agmResult: any;\n\n        const token = generate();\n        args.token = token;\n\n        const handleResult = () => {\n            if (streamEventReceived && agmResult) {\n                resolve(agmResult);\n            }\n        };\n\n        if (!skipStreamEvent) {\n            this.stream.waitFor(token)\n                .then(() => {\n                    streamEventReceived = true;\n                    handleResult();\n                })\n                .catch((err: any) => {\n                    reject(err);\n                });\n        }\n\n        const responseHandler = (result: Glue42Core.AGM.InvocationResult<any>) => {\n            if (!result.returned) {\n                reject(\"No result from method \" + methodName);\n            }\n\n            if (result.returned.status && (result.returned.status !== \"Success\" && result.returned.status !== \"PartialSuccess\")) {\n                reject(result.returned);\n            }\n\n            agmResult = result.returned;\n            handleResult();\n        };\n\n        this.config.agm.invoke(methodName, args, \"best\", { methodResponseTimeoutMs: 120 * 1000 })\n            .then(responseHandler)\n            .catch((err: any) => reject(err));\n    }\n\n    private getInstancesToClose(options: Glue42.Layouts.RestoreOptions) {\n        const instances: ACSRestoreMessageInstanceInfo[] = [];\n        const shellApp = this.appManager.applications().filter((a: any) => a.isShell)[0];\n        const shellApplicationName = shellApp ? shellApp.name : \"AppManager\";\n\n        this.appManager.instances().forEach((i: any) => {\n\n            // ignore my instance\n            if (this.appManager.myInstance && i.id === this.appManager.myInstance.id) {\n                return;\n            }\n\n            // ignore shell app\n            if (i.application.name === shellApplicationName) {\n                return;\n            }\n\n            // ignore hidden windows\n            if (!this.isVisibleWindow(i)) {\n                return;\n            }\n\n            // if activity layout stop only the instances\n            // running in the same activity\n            if (options.type === \"Activity\") {\n                if (i.activityId !== options.activityIdToJoin) {\n                    return;\n                }\n            }\n            instances.push({ application: i.application.name, instance: i.id });\n        });\n\n        return instances;\n    }\n\n    private getObjectValues(obj: any) {\n        if (!obj) {\n            return [];\n        }\n\n        return Object.keys(obj).map((k) => obj[k]);\n    }\n}\n","import { LayoutsStream } from \"../types\";\nimport store, { LayoutStore } from \"../store\";\nimport { ACSStreamData, ACSLayout } from \"./messages\";\nimport LayoutImpl from \"../layout\";\nimport { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport transformACSLayout from \"../transform\";\n\nimport { Glue42Core } from \"@glue42/core\";\n\n/**\n * ACS event stream related to layouts\n */\nexport default class ACSStream implements LayoutsStream {\n\n    public ready: Promise<void>;\n    public gotSnapshot: Promise<void>;\n\n    private resolveReady: () => void;\n    private rejectReady: (err: any) => void;\n\n    private resolveGotSnapshot: () => void;\n    private rejectGotSnapshot: (err: any) => void;\n\n    constructor(private agm: Glue42Core.AGM.API, private callbacks: CallbackRegistry) {\n\n        this.ready = new Promise<void>((resolve, reject) => {\n            this.resolveReady = resolve;\n            this.rejectReady = reject;\n        });\n\n        this.gotSnapshot = new Promise<void>((resolve, reject) => {\n            this.resolveGotSnapshot = resolve;\n            this.rejectGotSnapshot = reject;\n        });\n    }\n\n    public subscribe(noRetry?: boolean) {\n        const transform = (obj: object) => {\n            return this.getObjectValues(obj).map((t) => transformACSLayout(t));\n        };\n\n        // if we don't have OnLayoutEvent stream  we're running pre 2.1 GD version or outside GD,\n        if (!this.checkForLayoutEventMethod()) {\n            // if no retry resolve right away\n            if (noRetry) {\n                this.resolveReady();\n            }\n\n            // if we should retry, schedule  one more time\n            setTimeout(() => {\n                this.subscribe(true);\n            }, 500);\n        } else {\n            this.agm.subscribe(\"T42.ACS.OnLayoutEvent\", { waitTimeoutMs: 10000 })\n                .then((subs) => {\n                    subs.onData((args) => {\n                        const data = args.data as ACSStreamData;\n                        if (data.IsSnapshot) {\n                            this.resolveGotSnapshot();\n                        }\n\n                        this.addLayouts(transform(data.OnLayoutAdded));\n                        this.removeLayouts(transform(data.OnLayoutRemoved));\n                        this.changeLayouts(transform(data.OnLayoutChanged));\n                        this.renameLayouts(transform(data.OnLayoutRenamed));\n                        this.restoredLayout(transform(data.OnLayoutRestored));\n                        this.callbacks.execute(\"streamEvent\", data);\n                    });\n\n                    subs.onFailed((err) => {\n                        const msg = \"can not subscribe to T42.ACS.OnLayoutEvent \" + err;\n                        this.rejectReady(msg);\n                        this.rejectGotSnapshot(msg);\n                    });\n\n                    this.resolveReady();\n                })\n                .catch((err) => {\n                    const msg = \"Error subscribing for T42.ACS.OnLayoutEvent stream. Err: \" + err;\n                    this.rejectReady(msg);\n                    this.rejectGotSnapshot(msg);\n                });\n        }\n    }\n\n    public onEvent(callback: (streamEvent: ACSStreamData) => void): UnsubscribeFunction {\n        return this.callbacks.add(\"streamEvent\", callback);\n    }\n\n    public waitFor(token: string, timeout?: number): Promise<void> {\n        if (!timeout) {\n            timeout = 10000; // default timeout is 10 seconds\n        }\n        return new Promise<void>((resolve, reject) => {\n            let done = false;\n            const unsubscribe = this.onEvent((streamEvent) => {\n                if (streamEvent.Token === token) {\n                    done = true;\n                    unsubscribe();\n                    resolve();\n                }\n            });\n\n            setTimeout(() => {\n                if (!done) {\n                    reject(\"timed out\");\n                }\n            }, timeout);\n        });\n    }\n\n    private checkForLayoutEventMethod() {\n        try {\n            return this.agm\n                .methods()\n                .map((m) => m.name)\n                .indexOf(\"T42.ACS.OnLayoutEvent\") !== -1;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    private addLayouts(layoutsData: any[]) {\n        if (!layoutsData) {\n            return;\n        }\n\n        layoutsData.forEach((layoutData) => {\n            const layout = new LayoutImpl(layoutData);\n            store.add(layout);\n            this.callbacks.execute(\"added\", layout);\n        });\n    }\n\n    private removeLayouts(removedLayouts: any[]) {\n        if (!removedLayouts) {\n            return;\n        }\n        removedLayouts.forEach((removedLayout) => {\n            store.removeWhere((existingLayout) => !this.compareLayouts(existingLayout, removedLayout));\n\n            this.callbacks.execute(\"removed\", removedLayout);\n        });\n    }\n\n    private changeLayouts(changedLayouts: any[]) {\n        if (!changedLayouts) {\n            return;\n        }\n\n        changedLayouts.forEach((changedLayout) => {\n            // removed the changed layout and push it again\n            store.removeWhere((existingLayout) => !this.compareLayouts(existingLayout, changedLayout));\n            store.add(new LayoutImpl(changedLayout));\n            // execute callback\n            this.callbacks.execute(\"changed\", changedLayout);\n        });\n\n    }\n\n    private renameLayouts(renamedLayouts: any[]) {\n        if (!renamedLayouts) {\n            return;\n        }\n\n        renamedLayouts.forEach((renamedLayout) => {\n            const existingLayout = store.first((current) => this.compareLayouts(current, { type: renamedLayout.type, name: renamedLayout.oldName }));\n\n            if (!existingLayout) {\n                throw Error(\"received rename event for unknown layout with type \" + renamedLayout.type + \" and name \" + renamedLayout.oldName);\n            }\n\n            existingLayout.name = renamedLayout.newName;\n\n            this.callbacks.execute(\"renamed\", existingLayout);\n        });\n    }\n\n    private compareLayouts(layout1: { name: string, type: string }, layout2: { name: string, type: string }) {\n        return layout1.name === layout2.name && layout1.type === layout2.type;\n    }\n\n    private getObjectValues(obj: any) {\n        if (!obj) {\n            return [];\n        }\n\n        return Object.keys(obj).map((k) => obj[k]);\n    }\n\n    private restoredLayout(restoredLayouts: any[]) {\n\n        if (!restoredLayouts) {\n            return;\n        }\n\n        restoredLayouts.forEach((restoredLayout) => {\n            const existingLayout = store.first((current) => this.compareLayouts(current, { type: restoredLayout.type, name: restoredLayout.name }));\n            this.callbacks.execute(\"restored\", existingLayout);\n        });\n    }\n}\n","import contextProviderFactory from \"./contextProvider\";\nimport Layouts from \"./layouts\";\nimport store from \"./store\";\nimport ACSStream from \"./stream/acsStream\";\nimport streamNull from \"./stream/nullStream\";\nimport { Glue42 } from \"../../glue\";\nimport { LayoutsStream } from \"./types\";\nimport callbackRegistry, { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\n\nexport default function(config: Glue42.Layouts.Configuration): Layouts {\n\n    if (!config.agm) {\n        throw Error(\"config.agm is required\");\n    }\n\n    if (!config.logger) {\n        throw Error(\"config.logger is required\");\n    }\n\n    // default mode to slim\n    config.mode = config.mode || \"slim\";\n\n    const logger = config.logger;\n    const callbacks: CallbackRegistry = callbackRegistry();\n\n    let acsStream: LayoutsStream;\n\n    if (config.mode === \"full\" || \"fullWaitSnapshot\") {\n        acsStream = new ACSStream(config.agm, callbacks);\n    } else {\n        acsStream = streamNull();\n    }\n\n    return new Layouts(config, acsStream, callbacks);\n}\n","import { Glue42 } from \"../../glue\";\nimport { Glue42Core } from \"@glue42/core\";\nimport CaptureOptions = Glue42.Displays.CaptureOptions;\n\nconst T42DisplayCommand = \"T42.Displays.Command\";\n\nexport default class DisplayManager implements Glue42.Displays.API {\n    constructor(\n        private _agm: Glue42Core.AGM.API,\n        private _logger: Glue42Core.Logger.API,\n    ) {\n        //\n    }\n\n    public all = async (): Promise<Glue42.Displays.Display[]> => {\n        const displays = await this.callGD<Glue42.Displays.Display[]>(DisplayCommand.GetAll, {});\n        return displays.map(this.decorateDisplay);\n    }\n\n    public get = async (id: number): Promise<Glue42.Displays.Display> => {\n        const display = await this.callGD<Glue42.Displays.Display>(DisplayCommand.Get, {id});\n        return this.decorateDisplay(display);\n    }\n\n    public getPrimary = async (): Promise<Glue42.Displays.Display> => {\n        const primary = (await this.all()).find((d) => d.isPrimary);\n        return primary;\n    }\n\n    public capture = async (options: CaptureOptions): Promise<string> => {\n        const screenshot = await this.callGD<string>(DisplayCommand.Capture, { ...options });\n        return screenshot;\n    }\n\n    public captureAll = async (options: Glue42.Displays.CaptureAllOptions): Promise<string | string[]> => {\n        const screenshots = await this.callGD<string | string[]>(DisplayCommand.CaptureAll, { ...options });\n        return screenshots;\n    }\n\n    public getMousePosition = async (): Promise<Glue42.Displays.Point> => {\n        const point = await this.callGD<Glue42.Displays.Point>(DisplayCommand.GetMousePosition);\n        return point;\n    }\n\n    private callGD = async <T>(command: string, options?: object): Promise<T> => {\n        // Consider targetting only GD\n        const invocationResult = await this._agm.invoke(T42DisplayCommand, { options: {...options}, command });\n        return invocationResult.returned.data;\n    }\n\n    private decorateDisplay = (original: Glue42.Displays.Display): Glue42.Displays.Display => {\n        return {\n            ...original,\n            capture: (size: SizeOptions) => this.capture({ id: original.id, size })\n        };\n    }\n}\n\ntype SizeOptions =  Glue42.Displays.ScaleOptions |  Glue42.Displays.AbsoluteSizeOptions;\n\nenum DisplayCommand {\n    Capture = \"capture\",\n    CaptureAll = \"captureAll\",\n    GetAll = \"getAll\",\n    Get = \"get\",\n    GetMousePosition = \"getMousePosition\",\n}\n","import { Glue42 } from \"../../glue\";\nimport { ChannelsImpl } from \"./channels\";\n\nlet interop: Glue42.Interop.API;\nlet windowId: string;\n\nexport async function setupAGM(interopLib: Glue42.Interop.API, channels: ChannelsImpl) {\n    interop = interopLib;\n\n    if (typeof window !== \"undefined\") {\n        if (window.glue42gd) {\n            windowId = window.glue42gd.windowId;\n        }\n    }\n\n    if (!windowId) {\n        // not supported\n        return;\n    }\n\n    await interop.register(\"T42.Channels.Command\", (args: any) => {\n        const command = args.command;\n        if (!command) {\n            throw new Error(\"missing command argument\");\n        }\n        if (command === \"join\") {\n            const id = args.channel;\n            if (!id) {\n                throw new Error(\"missing argument id\");\n            }\n            // this is coming from GD (which means from selector switch, join without triggering selection change again)\n            channels.joinNoSelectorSwitch(id);\n            return;\n        }\n        if (command === \"leave\") {\n            channels.leaveNoSelectorSwitch();\n            return;\n        }\n        if (command === \"get\") {\n            const id = channels.current();\n            return { id };\n        }\n        throw new Error(`unknown command ${command}`);\n    });\n\n    // agm interface is available for SW windows only\n    interop.invoke(\"T42.Channels.Announce\", { swId: windowId, instance: interop.instance.instance });\n}\n\nexport async function switchChannel(channel?: string, id?: string) {\n    interop.invoke(\"T42.Channels.Announce\", {\n        swId: id ?? windowId,\n        command: \"switchChannel\",\n        data: { newChannel: channel }\n    });\n}\n","import { Glue42 } from \"../../glue\";\n\nconst CONTEXT_PREFIX = \"___channel___\";\n\nexport class SharedContextSubscriber {\n    private unsubscribeFunc: () => void;\n    private callback: any;\n\n    constructor(private contexts: Glue42.Contexts.API) {\n    }\n\n    public subscribe(callback: any): void {\n        this.callback = callback;\n    }\n\n    public subscribeFor(name: string, callback: (data: object, context: Glue42.Channels.ChannelContext, updaterId: string) => void): Promise<() => void> {\n        if (!this.isChannel(name)) {\n            return Promise.reject(new Error(`Channel with name: ${name} doesn't exist!`));\n        }\n\n        const contextName = this.createContextName(name);\n\n        return this.contexts.subscribe(contextName, (data, _, __, ___, extraData) => {\n            callback(data.data, data, extraData?.updaterId);\n        });\n    }\n\n    public async switchChannel(name: string): Promise<void> {\n        this.unsubscribe();\n        const contextName = this.createContextName(name);\n        this.unsubscribeFunc = await this.contexts.subscribe(contextName, (data, _, __, ___, extraData) => {\n            if (this.callback) {\n                this.callback(data.data, data, extraData?.updaterId);\n            }\n        });\n    }\n\n    public unsubscribe(): void {\n        if (this.unsubscribeFunc) {\n            this.unsubscribeFunc();\n        }\n    }\n\n    public add(name: string, data: Glue42.Channels.ChannelContext): Promise<void> {\n        const contextName = this.createContextName(name);\n        return this.contexts.set(contextName, data);\n    }\n\n    public all(): string[] {\n        const contextNames = this.contexts.all();\n        const channelContextNames = contextNames.filter((contextName) => contextName.startsWith(CONTEXT_PREFIX));\n        const channelNames = channelContextNames.map((channelContextName) => channelContextName.substr(CONTEXT_PREFIX.length));\n        return channelNames;\n    }\n\n    public getContextData(name: string): Promise<Glue42.Channels.ChannelContext> {\n        return new Promise((resolve, reject) => {\n            if (!this.isChannel(name)) {\n                return reject(new Error(`A channel with name: ${name} doesn't exist!`));\n            }\n\n            const contextName = this.createContextName(name);\n\n            this.contexts.subscribe(contextName, (data) => {\n                resolve(data);\n            }).then((unsubscribeFunc) => unsubscribeFunc());\n        });\n    }\n\n    public update(name: string, data: any): Promise<void> {\n        const contextName = this.createContextName(name);\n        return this.contexts.update(contextName, data);\n    }\n\n    private createContextName(name: string): string {\n        return CONTEXT_PREFIX + name;\n    }\n\n    private isChannel(name: string): boolean {\n        return this.all().some((channelName) => channelName === name);\n    }\n}\n","import { Glue42 } from \"../../glue\";\nimport { default as CallbackRegistryFactory, CallbackRegistry } from \"callback-registry\";\nimport { SharedContextSubscriber } from \"./contexts\";\nimport { switchChannel } from \"./agm\";\n\nexport class ChannelsImpl implements Glue42.Channels.API {\n    private subsKey = \"subs\";\n    private changedKey = \"changed\";\n\n    private registry: CallbackRegistry = CallbackRegistryFactory();\n    private currentContext: string;\n\n    constructor(private shared: SharedContextSubscriber) {\n        this.shared.subscribe(this.handler.bind(this));\n    }\n\n    public subscribe(callback: (data: object, context: Glue42.Channels.ChannelContext, updaterId: string) => void): () => void {\n        if (typeof callback !== \"function\") {\n            throw new Error(\"Please provide the callback as a function!\");\n        }\n        return this.registry.add(this.subsKey, callback);\n    }\n\n    public async subscribeFor(name: string, callback: (data: object, context: Glue42.Channels.ChannelContext, updaterId: string) => void): Promise<() => void> {\n        if (typeof name !== \"string\") {\n            throw new Error(\"Please provide the name as a string!\");\n        }\n        if (typeof callback !== \"function\") {\n            throw new Error(\"Please provide the callback as a function!\");\n        }\n        const unsubscribeFunc = await this.shared.subscribeFor(name, callback);\n        return unsubscribeFunc;\n    }\n\n    public async publish(data: object, name?: string): Promise<void> {\n        if (typeof data !== \"object\") {\n            throw new Error(\"Please provide the data as an object!\");\n        }\n\n        if (name) {\n            if (typeof name !== \"string\") {\n                throw new Error(\"Please provide the name as a string!\");\n            }\n\n            const context = await this.get(name);\n\n            return this.shared.update(context.name, { data });\n        }\n\n        if (!this.currentContext) {\n            throw new Error(\"Not joined to any channel!\");\n        }\n        return this.shared.update(this.currentContext, { data });\n    }\n\n    public all(): Promise<string[]> {\n        const channelNames = this.shared.all();\n        return Promise.resolve(channelNames);\n    }\n\n    public async list(): Promise<Glue42.Channels.ChannelContext[]> {\n        const channelNames = await this.all();\n        const channelContexts = await Promise.all(channelNames.map((channelName) => this.get(channelName)));\n        return channelContexts;\n    }\n\n    public get(name: string): Promise<Glue42.Channels.ChannelContext> {\n        if (typeof name !== \"string\") {\n            return Promise.reject(new Error(\"Please provide the channel name as a string!\"));\n        }\n\n        return this.shared.getContextData(name);\n    }\n\n    public async join(name: string): Promise<void> {\n        return this.joinCore(name);\n    }\n\n    public async joinNoSelectorSwitch(name: string): Promise<void> {\n        return this.joinCore(name, false);\n    }\n\n    public leave() {\n        return this.leaveCore();\n    }\n\n    public leaveNoSelectorSwitch() {\n        return this.leaveCore(false);\n    }\n\n    public current(): string {\n        return this.currentContext;\n    }\n\n    public my(): string {\n        return this.current();\n    }\n\n    public changed(callback: (channel: string) => void): () => void {\n        if (typeof callback !== \"function\") {\n            throw new Error(\"Please provide the callback as a function!\");\n        }\n\n        return this.registry.add(this.changedKey, callback);\n    }\n\n    public onChanged(callback: (channel: string) => void): () => void {\n        return this.changed(callback);\n    }\n\n    public async add(info: Glue42.Channels.ChannelContext): Promise<Glue42.Channels.ChannelContext> {\n        if (typeof info !== \"object\") {\n            throw new Error(\"Please provide the info as an object!\");\n        }\n        if (typeof info.name === \"undefined\") {\n            throw new Error(\"info.name is missing!\");\n        }\n        if (typeof info.name !== \"string\") {\n            throw new Error(\"Please provide the info.name as a string!\");\n        }\n        if (typeof info.meta === \"undefined\") {\n            throw new Error(\"info.meta is missing!\");\n        }\n        if (typeof info.meta !== \"object\") {\n            throw new Error(\"Please provide the info.meta as an object!\");\n        }\n        if (typeof info.meta.color === \"undefined\") {\n            throw new Error(\"info.meta.color is missing!\");\n        }\n        if (typeof info.meta.color !== \"string\") {\n            throw new Error(\"Please provide the info.meta.color as a string!\");\n        }\n\n        const context: Glue42.Channels.ChannelContext = {\n            name: info.name,\n            meta: info.meta || {},\n            data: info.data || {}\n        };\n\n        // Note that we use `update` instead of `add` so that if the channel already exists we don't overwrite it.\n        await this.shared.update(info.name, context);\n\n        return context;\n    }\n\n    private handler(data: object, context: Glue42.Channels.ChannelContext, updaterId: string): any {\n        this.registry.execute(this.subsKey, data, context, updaterId);\n    }\n\n    private async joinCore(name: string, changeSelector: boolean = true) {\n        if (typeof name !== \"string\") {\n            throw new Error(\"Please provide the channel name as a string!\");\n        }\n\n        if (name === this.currentContext) {\n            // ignore joining the channel that we're already\n            return;\n        }\n\n        // Checks if a channel exists with the provided name.\n        const doesChannelExist = (channelName: string): boolean => {\n            const channelNames = this.shared.all();\n            return channelNames.includes(channelName);\n        };\n\n        // Wait for 3k ms for the channel to appear if it doesn't already exist.\n        if (!doesChannelExist(name)) {\n            const channelExistsPromise = new Promise((resolve, reject) => {\n                let timeoutId: NodeJS.Timeout;\n\n                // Check every 100 ms for a channel with the provided name.\n                const intervalId = setInterval(() => {\n                    if (doesChannelExist(name)) {\n                        clearTimeout(timeoutId);\n                        clearInterval(intervalId);\n                        resolve();\n                    }\n                }, 100);\n\n                timeoutId = setTimeout(() => {\n                    clearInterval(intervalId);\n\n                    return reject(new Error(`A channel with name: ${name} doesn't exist!`));\n                }, 3000);\n            });\n\n            await channelExistsPromise;\n        }\n\n        await this.shared.switchChannel(name);\n        if (changeSelector) {\n            switchChannel(name);\n        }\n        this.currentContext = name;\n        this.registry.execute(this.changedKey, name);\n    }\n\n    private leaveCore(changeSelector = true): Promise<void> {\n        this.currentContext = undefined;\n        this.registry.execute(this.changedKey, undefined);\n        this.shared.unsubscribe();\n        if (changeSelector) {\n            switchChannel();\n        }\n        return Promise.resolve();\n    }\n}\n","import { Glue42 } from \"../../glue\";\nimport { setupAGM } from \"./agm\";\nimport { SharedContextSubscriber } from \"./contexts\";\nimport { ChannelsImpl } from \"./channels\";\n\nexport function factory(contexts: Glue42.Contexts.API, agm: Glue42.AGM.API): Glue42.Channels.API & { ready: () => Promise<void>; } {\n    const sharedContexts = new SharedContextSubscriber(contexts);\n    const channels = new ChannelsImpl(sharedContexts);\n\n    setupAGM(agm, channels);\n\n    return {\n        subscribe: channels.subscribe.bind(channels),\n        subscribeFor: channels.subscribeFor.bind(channels),\n        publish: channels.publish.bind(channels),\n        all: channels.all.bind(channels),\n        list: channels.list.bind(channels),\n        get: channels.get.bind(channels),\n        join: channels.join.bind(channels),\n        leave: channels.leave.bind(channels),\n        // @ignore-ed, but kept for backwards compatibility.\n        current: channels.current.bind(channels),\n        my: channels.my.bind(channels),\n        // @ignore-ed, but kept for backwards compatibility.\n        changed: channels.changed.bind(channels),\n        onChanged: channels.onChanged.bind(channels),\n        // @ignore-ed as currently not entirely supported by the framework.\n        add: channels.add.bind(channels),\n\n        ready: () => (contexts as any).ready()\n    };\n}\n","import { Glue42 } from \"../../glue\";\r\nimport { default as CallbackRegistryFactory, CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\r\n\r\nconst CommandMethod = \"T42.Hotkeys.Command\";\r\nconst InvokeMethod = \"T42.Hotkeys.Invoke\";\r\n\r\nconst RegisterCommand = \"register\";\r\nconst UnregisterCommand = \"unregister\";\r\nconst UnregisterAllCommand = \"unregisterAll\";\r\n\r\nexport class HotkeysImpl implements Glue42.Hotkeys.API {\r\n\r\n    private registry: CallbackRegistry = CallbackRegistryFactory();\r\n    private firstHotkey = true;\r\n    private hotkeys = new Map<string, Glue42.Hotkeys.HotkeyInfo>();\r\n\r\n    constructor(private agm: Glue42.AGM.API) {\r\n    }\r\n\r\n    public async register(info: string | Glue42.Hotkeys.HotkeyInfo, callback: Glue42.Hotkeys.HotkeyCallback): Promise<void> {\r\n        if (typeof info === \"undefined\") {\r\n            throw new Error(\"Hotkey parameter missing\");\r\n        }\r\n\r\n        if (typeof info === \"string\") {\r\n            info = {\r\n                hotkey: info\r\n            };\r\n        } else {\r\n            if (!info.hotkey) {\r\n                throw new Error(\"Info's hotkey parameter missing\");\r\n            }\r\n\r\n            info = {\r\n                hotkey: info.hotkey,\r\n                description: info.description\r\n            };\r\n        }\r\n\r\n        const hkToLower = this.formatHotkey(info.hotkey);\r\n        if (this.hotkeys.has(hkToLower)) {\r\n            throw new Error(`Shortcut for ${hkToLower} already registered`);\r\n        }\r\n\r\n        // if very first a hotkey is registered by this application register invoke AGM method\r\n        if (this.firstHotkey) {\r\n            this.firstHotkey = false;\r\n            await this.registerInvokeAGMMethod();\r\n        }\r\n        // store the callback\r\n        this.registry.add(hkToLower, callback);\r\n\r\n        // invoke GD method\r\n        await this.agm.invoke(CommandMethod, { command: RegisterCommand, hotkey: hkToLower, description: info.description });\r\n\r\n        this.hotkeys.set(hkToLower, info);\r\n    }\r\n\r\n    public async unregister(hotkey: string): Promise<void> {\r\n        if (typeof hotkey === \"undefined\") {\r\n            throw new Error(\"hotkey parameter missing\");\r\n        }\r\n\r\n        if (typeof hotkey !== \"string\") {\r\n            throw new Error(\"hotkey parameter must be string\");\r\n        }\r\n\r\n        const hkToLower = this.formatHotkey(hotkey);\r\n        await this.agm.invoke(CommandMethod, { command: UnregisterCommand, hotkey: hkToLower });\r\n        this.hotkeys.delete(hkToLower);\r\n        this.registry.clearKey(hkToLower);\r\n    }\r\n\r\n    public async unregisterAll(): Promise<void> {\r\n        await this.agm.invoke(CommandMethod, { command: UnregisterAllCommand });\r\n        this.hotkeys.clear();\r\n        this.registry.clear();\r\n    }\r\n\r\n    /**\r\n     * Whether this application has registered accelerator.\r\n     * @param hotkey\r\n     */\r\n    public isRegistered(hotkey: string): boolean {\r\n        const hkToLower = this.formatHotkey(hotkey);\r\n        return this.hotkeys.has(hkToLower);\r\n    }\r\n\r\n    private registerInvokeAGMMethod(): void {\r\n        this.agm.register(InvokeMethod, (args: {\r\n            key: string;\r\n        }) => {\r\n            const hkToLower = args.key.toLowerCase();\r\n            const info = this.hotkeys.get(hkToLower);\r\n            this.registry.execute(hkToLower, info);\r\n        });\r\n    }\r\n\r\n    private formatHotkey(hotkey: string): string {\r\n        if (hotkey) {\r\n            return hotkey.replace(/\\s/g, \"\").toLowerCase();\r\n        }\r\n    }\r\n}\r\n","import { Glue42 } from \"../../glue\";\nimport generate from \"shortid\";\n\nconst T42_INTENTS_COMMAND = \"T42.Intents.Command\";\nconst T42_INTENTS_EVENTS = \"T42.Intents.Events\";\nlet agm: Glue42.AGM.API;\n\nenum IntentCommand {\n    Find = \"find\",\n    FindByContext = \"findByContext\",\n    GetAll = \"all\",\n    Raise = \"raise\",\n}\n\ninterface Handler {\n    unsubId: string;\n    callback: (context: object) => void;\n}\n\nconst intentListeners: { [intent: string]: Handler[] } = {};\n\nasync function raise(request: string | Glue42.Intents.IntentRequest): Promise<Glue42.Intents.IntentResult> {\n    if (typeof request === \"string\") {\n        request = { intent: request };\n    }\n\n    return invokeGlue<Glue42.Intents.IntentResult>(IntentCommand.Raise, request);\n}\n\nasync function find(intentFilter?: string | Glue42.Intents.IntentFilter): Promise<Glue42.Intents.Intent> {\n    if (typeof intentFilter === \"string\") {\n        intentFilter = { name: intentFilter };\n    }\n\n    // TODO: review filters\n    return invokeGlue<Glue42.Intents.Intent>(IntentCommand.Find, { intentFilter });\n}\n\nasync function findByContext(contextType: string): Promise<Glue42.Intents.Intent[]> {\n    if (!contextType || typeof contextType !== \"string\") {\n        return Promise.reject(Error(`findByContext called with invalid contextType: ${contextType}`));\n    }\n\n    return invokeGlue<Glue42.Intents.Intent[]>(IntentCommand.FindByContext, { contextType });\n}\n\nasync function all(): Promise<Glue42.Intents.Intent[]> {\n    return invokeGlue<Glue42.Intents.Intent[]>(IntentCommand.GetAll);\n}\n\nfunction addIntentListener(intent: string, handler: (context: object) => void): () => void {\n    if (!intentListeners[intent]) {\n        intentListeners[intent] = [];\n    }\n\n    const unsubId: string = generate();\n    intentListeners[intent].push({ unsubId, callback: handler });\n\n    return () => {\n        intentListeners[intent] = intentListeners[intent]\n            .filter((h) => h.unsubId !== unsubId);\n    };\n}\n\nasync function invokeGlue<T>(command: string, options?: object): Promise<T> {\n    // Consider targetting only GD\n    const invocationResult = await agm.invoke(T42_INTENTS_COMMAND, { options: { ...options }, command });\n    return invocationResult.returned.result;\n}\n\nexport function factory(agmAPI: Glue42.AGM.API): Glue42.Intents.API & { ready: () => Promise<void>; } {\n    agm = agmAPI;\n\n    agm.register(T42_INTENTS_EVENTS, handleEvent);\n\n    return {\n        raise,\n        find,\n        findByContext,\n        all,\n        addIntentListener,\n        ready: () => Promise.resolve()\n    };\n}\n\nenum IntentEvents {\n    IntentListenerRaised = \"intentListenerRaised\"\n}\n\ninterface IntentEventData {\n    type: IntentEvents;\n    intent: string;\n\n    [prop: string]: any;\n}\n\nfunction handleEvent(args: IntentEventData) {\n    const { type, intent, context } = args;\n\n    switch (type) {\n        case IntentEvents.IntentListenerRaised:\n            const callbacks = intentListeners[intent]?.map((handler) => handler.callback);\n            // Todo: What should happen when there is no context ?\n            if (callbacks && callbacks.length > 0) {\n                callbacks.forEach((cb) => cb(context));\n            }\n\n    }\n}\n","import { Glue42 } from \"../glue\";\nimport { ActivitiesLibConfigObject, LibConfigObject, InternalConfig } from \"./types\";\n\ninterface InputModeObject {\n    mode?: boolean | string;\n    logger?: Glue42.LoggerConfig;\n}\n\nexport default (options: Glue42.Config): InternalConfig => {\n\n    // Possible options per lib (this is InputLibConfig type)\n    // * false - library is disabled (e.g. config.appManager = false)\n    // * true - library is enabled in running in default mode (e.g config.appManager = true).\n    //          Exception is if default mode is false - in that case it runs default true mode.\n    // * string - start in some mode (e.g. config.appManager = \"full\")\n    // * object - allows further customization (e.g config.appManager = {mode: \"full\", someSetting: 42})\n    //\n    // Some libs support different running modes, some do not.\n    //\n    // Currently defaults are:\n    // appManager: disabled\n    // layouts: enabled in 'slim' mode\n    // activities: enabled in 'trackMyTypeAndInitiatedFromMe' mode\n    // windows: enabled (does not support modes)\n    //\n    // InputLibConfig is transformed to LibConfigObject\n\n    type InputLibConfig = boolean | string | InputModeObject;\n\n    /**\n     * Transforms InputLibConfig (the config as specified from the user)\n     * to LibConfigObject(internal library configuration)\n     */\n    function getLibConfig<T extends LibConfigObject>(value: InputLibConfig, defaultMode: boolean | string, trueMode?: boolean | string): T {\n\n        // if value is false return undefined\n        if (typeof value === \"boolean\" && !value) {\n            return undefined;\n        }\n\n        // find the mode of the library\n        const mode = getModeAsString(value, defaultMode, trueMode);\n\n        // if object we will replace the mode because appManager = {mode: true, setting: 42}\n        // should be turned into appManager = {mode: 'slim', setting: 42}\n        if (typeof value === \"object\") {\n            value.mode = mode;\n            return value as T;\n        }\n\n        return {\n            mode,\n        } as T;\n    }\n\n    /**\n     * Finds the mode based for a given library\n     * 1. If object we call recursively using object.mode for value\n     * 1. If the user hasn't specified anything we use the hard coded defaults\n     * 3. If the value is false or it got defaulted to false, we return undefined\n     * 4. If the value is true we return trueMode or defaultMode (if trueMode is undefined)\n     */\n    function getModeAsString(value: InputLibConfig, defaultMode: boolean | string, trueMode?: boolean | string): string {\n\n        if (typeof value === \"object\") {\n            // 1. if object\n            return getModeAsString(value.mode, defaultMode, trueMode) + \"\";\n        } else if (typeof value === \"undefined\") {\n            // 2. if the user does not pass anything\n            if (typeof defaultMode === \"boolean\" && !defaultMode) {\n                // 3. if gets defaulted to false, the library should be off\n                return undefined;\n            } else {\n                return defaultMode + \"\";\n            }\n        } else if (typeof value === \"boolean\") {\n            // 4. if the user passes true, use trueMode or defaultMode\n            if (value) {\n                // if the user passes true, use trueMode or defaultMode\n                return ((trueMode === undefined) ? defaultMode : trueMode) + \"\";\n            } else {\n                // 3. if the user passes false, the library should be off\n                return undefined;\n            }\n        }\n\n        return value + \"\";\n    }\n\n    const appDefaultMode = false;\n    const appDefaultTrueMode = \"startOnly\";\n\n    const activitiesDefaultMode = \"trackMyTypeAndInitiatedFromMe\";\n\n    const layoutsDefaultMode = \"slim\";\n\n    return {\n        layouts: getLibConfig<LibConfigObject>(options.layouts, layoutsDefaultMode),\n        activities: getLibConfig<ActivitiesLibConfigObject>(options.activities, activitiesDefaultMode),\n        appManager: getLibConfig<LibConfigObject>(options.appManager, appDefaultMode, appDefaultTrueMode),\n        windows: getLibConfig<LibConfigObject>(options.windows, true),\n        channels: getLibConfig<LibConfigObject>(options.channels || false, false),\n        displays: getLibConfig<LibConfigObject>(options.displays, true)\n    };\n};\n","import { Glue42 } from \"../../glue\";\nimport callbackRegistry, { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\n\nexport class Glue42Notification implements Glue42.Notifications.Glue42Notification {\n    public readonly actions: Glue42.Notifications.Glue42NotificationAction[];\n    public badge: string;\n    public body: string;\n    public data: any;\n    public dir: NotificationDirection;\n    public icon: string;\n    public image: string;\n    public lang: string;\n    public renotify: boolean;\n    public requireInteraction: boolean;\n    public silent: boolean;\n    public tag: string;\n    public timestamp: number;\n    public title: string;\n    public readonly vibrate: number[];\n\n    public onclick: ((this: Notification, ev: Event) => any) | null;\n    public onclose: ((this: Notification, ev: Event) => any) | null;\n    public onerror: ((this: Notification, ev: Event) => any) | null;\n    public onshow: ((this: Notification, ev: Event) => any) | null;\n    public onaction: ((this: Notification, ev: Glue42.Notifications.ActionEvent) => any) | null;\n\n    private callbacks: CallbackRegistry = callbackRegistry();\n\n    public constructor(public options: Glue42.Notifications.Glue42NotificationOptions) {\n        this.actions = options.actions;\n        this.body = options.body;\n        this.badge = options.badge;\n        this.data = options.data;\n        this.dir = options.dir;\n        this.icon = options.icon;\n        this.image = options.image;\n        this.lang = options.lang;\n        this.renotify = options.renotify;\n        this.requireInteraction = options.requireInteraction;\n        this.silent = options.silent;\n        this.tag = options.tag;\n        this.timestamp = options.timestamp;\n        this.title = options.title;\n    }\n\n    public close(): void {\n        throw new Error(\"Method not implemented.\");\n    }\n    public addEventListener<K extends \"click\" | \"close\" | \"error\" | \"show\">(type: K, listener: (this: Notification, ev: NotificationEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    public addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    public addEventListener(type: any, listener: any, options?: any) {\n        this.callbacks.add(type, listener);\n    }\n    public removeEventListener<K extends \"click\" | \"close\" | \"error\" | \"show\">(type: K, listener: (this: Notification, ev: NotificationEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    public removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n    public removeEventListener(type: any, listener: any, options?: any) {\n        // DO NOTHING FOR NOW\n    }\n    public dispatchEvent(event: Event): boolean {\n        this.callbacks.execute(event.type, event);\n        return true;\n    }\n}\n","import { Glue42 } from \"../../glue\";\nimport { Glue42Notification } from \"./notification\";\nimport { GnsNotificationSettings, GnsNotificationActionSettings, GnsNotificationActionPayload } from \"./types\";\nimport shortid from \"shortid\";\n\nexport class Notifications implements Glue42.Notifications.API {\n    private methodRegistered: boolean = false;\n    private readonly methodName = \"T42.Notifications.Handler-\" + shortid();\n    private nextId = 0;\n    private notifications: { [id: string]: Glue42Notification } = {};\n\n    constructor(private interop: Glue42.Interop.API) {\n    }\n\n    public async raise(options: Glue42.Notifications.Glue42NotificationOptions): Promise<Glue42.Notifications.Glue42Notification> {\n        if (!options) {\n            throw new Error(\"invalid options - should be an object\");\n        }\n        if (!options.title) {\n            throw new Error(\"invalid options - should have title\");\n        }\n        if (!this.methodRegistered) {\n            await this.interop.register(this.methodName, this.handleNotificationAction.bind(this));\n            this.methodRegistered = true;\n        }\n\n        // transform actions\n        const id = String(this.nextId++);\n        const notification: GnsNotificationSettings = {\n            title: options.title,\n            severity: \"Medium\",\n            description: options.body,\n            glueRoutingDetailMethodName: this.methodName,\n            actions: [],\n            source: id\n        };\n\n        if (options.actions) {\n            for (const action of options.actions) {\n                const args: GnsNotificationActionPayload = { // this should include user arguments (action.interop?.arguments)\n                    g42notificationId: id,\n                    g42action: action.action,\n                    g42interopMethod: action.interop?.method,\n                    g42interopTarget: action.interop?.target,\n                };\n                // TODO, properly convert between args and GNS value\n                const parameters = Object.keys(args).map((key) => {\n                    const value = (args as any)[key];\n                    return {\n                        name: key,\n                        value: {\n                            stringValue: value\n                        }\n                    };\n                });\n\n                const glueAction: GnsNotificationActionSettings = {\n                    name: this.methodName,\n                    description: action.title,\n                    displayName: action.title,\n                    parameters\n                };\n\n                notification.actions.push(glueAction);\n            }\n        }\n\n        await this.interop.invoke(\"T42.GNS.Publish.RaiseNotification\", { notification });\n\n        const g42notification = new Glue42Notification(options);\n        this.notifications[id] = g42notification;\n        return g42notification;\n    }\n\n    private handleNotificationAction(args: any) {\n        if (args.g42notificationId) {\n            // action click\n            const payload: GnsNotificationActionPayload = args as GnsNotificationActionPayload;\n            const id = payload.g42notificationId;\n            const notification = this.notifications[id];\n            if (!notification) {\n                return;\n            }\n\n            // user event\n            const event = new Event(\"onaction\");\n            (event as Glue42.Notifications.ActionEvent).action = payload.g42action;\n            if (notification.onaction) {\n                notification.onaction(event as Glue42.Notifications.ActionEvent);\n            }\n\n            // interop\n            const actionDefinition = (notification.actions || []).find((item) => item.action === payload.g42action);\n            const actionInterop = actionDefinition.interop;\n            if (actionInterop) {\n                this.interop.invoke(actionInterop.method, actionInterop.arguments || {}, actionInterop.target || \"best\");\n            }\n\n            // dispatch\n            notification.dispatchEvent(event);\n        } else if (args.notification && args.notification.source) {\n            // notification click\n            const id = args.notification.source;\n            const notification = this.notifications[id];\n            if (!notification) {\n                return;\n            }\n\n            // user event\n            const event = new Event(\"onclick\");\n            if (notification.onclick) {\n                notification.onclick(event);\n            }\n\n            // interop\n            const clickInterop = notification.options.clickInterop;\n            if (clickInterop) {\n                this.interop.invoke(clickInterop.method, clickInterop.arguments || {}, clickInterop.target || \"best\");\n            }\n\n            // dispatch\n            notification.dispatchEvent(event);\n        }\n    }\n}\n","import CallbackRegistryFactory, { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\r\nimport { Glue42 } from \"../../glue\";\r\nimport { Glue42Core } from \"@glue42/core\";\r\n\r\nconst ThemesConfigurationMethodName = \"T42.Themes.Configuration\";\r\ninterface ThemesConfiguration {\r\n    setThemesMethodName: string;\r\n    getThemesMethodName: string;\r\n    sharedContextName: string;\r\n    getThemesConfigurationMethodName: string;\r\n}\r\ninterface GetResult {\r\n    all: Glue42.Themes.Theme[];\r\n    selected: string;\r\n}\r\nexport class ThemesImpl implements Glue42.Themes.API {\r\n    private registry: CallbackRegistry = CallbackRegistryFactory();\r\n    private sharedContextName: string;\r\n    private getMethodName: string;\r\n    private setMethodName: string;\r\n\r\n    constructor(private core: Glue42Core.GlueCore) {\r\n        this.getConfiguration();\r\n    }\r\n\r\n    public async list(): Promise<Glue42.Themes.Theme[]> {\r\n        await this.getConfiguration();\r\n        if (!this.getMethodName) {\r\n            throw new Error(\"not supported\");\r\n        }\r\n        return (await this.getAll()).returned.all;\r\n    }\r\n\r\n    public async getCurrent(): Promise<Glue42.Themes.Theme> {\r\n        await this.getConfiguration();\r\n        if (!this.getMethodName) {\r\n            throw new Error(\"not supported\");\r\n        }\r\n        const all = await this.getAll();\r\n        return all.returned.all.find((t) => t.name === all.returned.selected);\r\n    }\r\n\r\n    public async select(theme: string): Promise<void> {\r\n        await this.getConfiguration();\r\n        if (!this.setMethodName) {\r\n            throw new Error(\"not supported\");\r\n        }\r\n\r\n        await this.core.interop.invoke(this.setMethodName, { theme });\r\n    }\r\n\r\n    public onChanged(callback: (theme: Glue42.Themes.Theme) => any): UnsubscribeFunction {\r\n        this.subscribe();\r\n        return this.registry.add(\"changed\", callback);\r\n    }\r\n\r\n    private async getConfiguration() {\r\n        try {\r\n            if (this.sharedContextName) {\r\n                return;\r\n            }\r\n            const config = await this.core.interop.invoke<ThemesConfiguration>(ThemesConfigurationMethodName);\r\n            this.sharedContextName = config.returned.sharedContextName;\r\n            this.getMethodName = config.returned.getThemesMethodName;\r\n            this.setMethodName = config.returned.setThemesMethodName;\r\n        } catch (error) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    private async getAll() {\r\n        await this.getConfiguration();\r\n        return await this.core.interop.invoke<GetResult>(this.getMethodName);\r\n    }\r\n\r\n    private async subscribe() {\r\n        await this.getConfiguration();\r\n        this.core.contexts.subscribe(this.sharedContextName, (data: { all: Glue42.Themes.Theme[], selected: string }) => {\r\n            if (data && data.all && data.selected) {\r\n                this.registry.execute(\"changed\", data.all.find((t) => t.name === data.selected));\r\n            }\r\n        });\r\n    }\r\n}\r\n","import CoreFactory, { Glue42Core } from \"@glue42/core\";\n\nimport { ActivityModule } from \"./activity/main\";\nimport AppManagerFactory from \"./app-manager/main\";\nimport WindowsFactory from \"./windows/main\";\nimport LayoutsFactory from \"./layouts/main\";\nimport DisplayManager from \"./displays/displayManager\";\nimport { factory as channels } from \"./channels/main\";\nimport { factory as hotkeys } from \"./hotkeys/main\";\n\nimport { Glue42 } from \"../glue\";\nimport { version } from \"../package.json\";\nimport prepareConfig from \"./config\";\nimport { LibConfigObject } from \"./types\";\nimport { ActivityMode } from \"./activity/activityConfig\";\nimport Utils from \"./utils\";\nimport { factory as intents } from \"./intents/main\";\nimport { Notifications } from \"./notifications/main\";\nimport { factory as themes } from \"./themes/main\";\n\nconst factory = (options: Glue42.Config): Promise<Glue42.Glue> => {\n    const gdMajorVersion = Utils.getGDMajorVersion();\n    // get config object\n    // basically selecting some properties (and defaulting them)\n    // it's used to extract things like layouts, appManager, activities etc things\n    // that glueCore itself doesn't know about\n    options = options || {};\n    const glueConfig = prepareConfig(options);\n    options.gateway = options.gateway || {};\n\n    let _appManager: any;\n    let _activity: any;\n    let _windows: any;\n    let _displays: any;\n\n    // dependency graph:\n    //   windows: agm, appManager (via getter)\n    //   activities: contexts, agm, logger, windows, appManager (via getter)\n    //   appManager: agm, windows, logger, activities\n    //   layouts: agm, appManager, logger\n    function createWindows(core: Glue42Core.GlueCore) {\n        if (glueConfig.windows) {\n\n            const windowsLogger = getLibLogger(\"windows\", core.logger, glueConfig.windows);\n\n            _windows = WindowsFactory(\n                core.agm,\n                windowsLogger,\n                () => {\n                    return _appManager;\n                },\n                gdMajorVersion);\n            debugLog(_windows);\n            return _windows;\n        }\n    }\n\n    function createActivities(core: Glue42Core.GlueCore) {\n        if (glueConfig.activities) {\n            if (ActivityModule.checkIsUsingGW3Implementation && ActivityModule.checkIsUsingGW3Implementation(core.connection)) {\n\n                const activityLogger = getLibLogger(\"activity\", core.logger, glueConfig.activities);\n\n                _activity = new ActivityModule({\n                    connection: core.connection,\n                    contexts: core.contexts,\n                    agm: core.agm,\n                    logger: activityLogger,\n                    logLevel: \"info\",\n                    disableAutoAnnounce: false,\n                    disposeRequestHandling: \"ignore\",\n                    announcementInfo: null,\n                    windows: _windows,\n                    appManagerGetter: () => {\n                        return _appManager;\n                    },\n                    mode: glueConfig.activities.mode as ActivityMode,\n                    typesToTrack: glueConfig.activities.typesToTrack,\n                    activityId: typeof window !== \"undefined\" && window.glue42gd && window.glue42gd.activityInfo && window.glue42gd.activityInfo.activityId,\n                    gdMajorVersion\n                }).api;\n                debugLog(_activity);\n                return _activity;\n            }\n        }\n    }\n\n    function createAppManager(core: Glue42Core.GlueCore) {\n        if (!glueConfig.appManager) {\n            return;\n        }\n\n        const logger = getLibLogger(\"appManager\", core.logger, glueConfig.appManager);\n\n        // AppManager v3\n        _appManager = AppManagerFactory({\n            agm: core.agm,\n            windows: _windows,\n            logger,\n            activities: _activity,\n            mode: glueConfig.appManager.mode as Glue42.AppManager.Mode,\n            gdMajorVersion\n        });\n        debugLog(_appManager);\n        return _appManager;\n    }\n\n    function createLayouts(core: Glue42Core.GlueCore) {\n        if (!glueConfig.layouts) {\n            return;\n        }\n\n        const logger = getLibLogger(\"layouts\", core.logger, glueConfig.layouts);\n        const lay = LayoutsFactory({\n            agm: core.agm,\n            appManager: _appManager,\n            activityGetter: () => _activity,\n            logger,\n            mode: glueConfig.layouts.mode as Glue42.Layouts.Mode,\n            gdMajorVersion\n        });\n        debugLog(lay);\n        return lay;\n    }\n\n    function createChannels(core: Glue42Core.GlueCore) {\n        if (!glueConfig.channels) {\n            return;\n        }\n\n        if (!core.contexts) {\n            // TODO log - notify the user that he can not use channels without context\n            return;\n        }\n\n        // Logger\n        const channelsAPI = channels(core.contexts, core.agm);\n\n        debugLog(channelsAPI);\n        return channelsAPI;\n    }\n\n    function createHotkeys(core: Glue42Core.GlueCore) {\n        const hotkeysAPI = hotkeys(core.agm);\n\n        debugLog(hotkeysAPI);\n        return hotkeysAPI;\n    }\n\n    function createIntents(core: Glue42Core.GlueCore) {\n        const intentsAPI = intents(core.agm);\n\n        debugLog(intentsAPI);\n        return intentsAPI;\n    }\n\n    function createNotifications(core: Glue42Core.GlueCore) {\n        const notificationsAPI = new Notifications(core.interop);\n\n        debugLog(notificationsAPI);\n        return notificationsAPI;\n    }\n\n    function createDisplaysApi(core: Glue42Core.GlueCore) {\n        if (glueConfig.displays) {\n            const displaysLogger = getLibLogger(\"displays\", core.logger, glueConfig.displays);\n\n            _displays = new DisplayManager(core.agm, displaysLogger);\n            debugLog(_displays);\n            return _displays;\n        }\n    }\n\n    function createThemes(core: Glue42Core.GlueCore) {\n        if (!core.contexts) {\n            // TODO log - notify the user that he can not use themes without context\n            return;\n        }\n        const themesAPI = themes(core);\n\n        debugLog(themesAPI);\n        return themesAPI;\n    }\n\n    function getLibLogger(loggerName: string, logger: Glue42Core.Logger.API, config: LibConfigObject) {\n        const newLogger = logger.subLogger(loggerName);\n\n        if (config && config.logger) {\n            const loggerConfig = config.logger;\n            if (loggerConfig.console) {\n                newLogger.consoleLevel(loggerConfig.console);\n            }\n            if (loggerConfig.publish) {\n                newLogger.publishLevel(loggerConfig.publish);\n            }\n            // not supported in GD3\n            // if (loggerConfig.metrics) {\n            //  newLogger.metricsLevel(loggerConfig.metrics);\n            // }\n        }\n\n        return newLogger;\n    }\n\n    const ext: Glue42Core.Extension = {\n        // define extra libraries for glue-core to raise\n        libs: [\n            { name: \"windows\", create: createWindows },\n            { name: \"activities\", create: createActivities },\n            { name: \"appManager\", create: createAppManager },\n            { name: \"layouts\", create: createLayouts },\n            { name: \"channels\", create: createChannels },\n            { name: \"hotkeys\", create: createHotkeys },\n            { name: \"displays\", create: createDisplaysApi },\n            { name: \"intents\", create: createIntents },\n            { name: \"notifications\", create: createNotifications },\n            { name: \"themes\", create: createThemes }\n        ],\n\n        version,\n\n        enrichGlue: (glue: Glue42Core.GlueCore) => {\n            // put some data to config\n            glue.config.activities = glueConfig.activities;\n            glue.config.windows = glueConfig.windows;\n            glue.config.appManager = glueConfig.appManager;\n            glue.config.layouts = glueConfig.layouts;\n            glue.config.channels = glueConfig.channels;\n            glue.config.displays = glueConfig.displays;\n        },\n    };\n\n    const currentLog: any[] = [];\n    if (typeof window !== \"undefined\") {\n        if (!(window as any).glueFactoryLog) {\n            (window as any).glueFactoryLog = [];\n        }\n        (window as any).glueFactoryLog.push(currentLog);\n    }\n\n    function debugLog(entry: any) {\n        currentLog.push(entry);\n    }\n\n    return CoreFactory(options, ext) as Promise<Glue42.Glue>;\n};\n\nfactory.coreVersion = (CoreFactory as any).version;\nfactory.version = version;\n\nexport default factory;\n","import { Glue42 } from \"../../glue\";\nimport { HotkeysImpl } from \"./hotkeys\";\n\nexport function factory(agm: Glue42.AGM.API): Glue42.Hotkeys.API & { ready: () => Promise<void>; } {\n    const hotkeys = new HotkeysImpl(agm);\n\n    return {\n        register: hotkeys.register.bind(hotkeys),\n        unregister: hotkeys.unregister.bind(hotkeys),\n        unregisterAll: hotkeys.unregisterAll.bind(hotkeys),\n        isRegistered: hotkeys.isRegistered.bind(hotkeys),\n\n        ready: () => Promise.resolve()\n    };\n}\n","import { Glue42 } from \"../../glue\";\r\nimport { ThemesImpl } from \"./themes\";\r\nimport { Glue42Core } from \"@glue42/core\";\r\n\r\nexport function factory(core: Glue42Core.GlueCore): Glue42.Themes.API & { ready: () => Promise<void>; } {\r\n    const themes = new ThemesImpl(core);\r\n\r\n    return {\r\n        list: themes.list.bind(themes),\r\n        getCurrent: themes.getCurrent.bind(themes),\r\n        select: themes.select.bind(themes),\r\n        onChanged: themes.onChanged.bind(themes),\r\n        ready: () => Promise.resolve(),\r\n    };\r\n}\r\n","import CreateGlue from \"./glue\";\n\nlet whatToExpose = CreateGlue;\nlet shouldSetToWindow = true;\n\nif (typeof window !== \"undefined\") {\n    // if glue42gd (running in GD3) and autoInjected\n    const glue42gd = (window as any).glue42gd;\n    if (glue42gd && glue42gd.autoInjected) {\n        whatToExpose = (window as any).Glue;\n        // no need to set to window, it's already there\n        shouldSetToWindow = false;\n    }\n\n    if (shouldSetToWindow) {\n        (window as any).Glue = whatToExpose;\n    }\n\n    // remove GlueCore from the window object (injected by Glue-core)\n    delete (window as any).GlueCore;\n}\n// add default library for ES6 modules\n(whatToExpose as any).default = whatToExpose;\n\nexport default whatToExpose;\n"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__spreadArrays","il","r","k","a","j","jl","MetricTypes","getMetricTypeByValue","metric","type","getTypeByValue","Date","serializeMetric","serializedMetrics","values","keys","reduce","memo","key","innerType","composite","defineNestedComposite","description","context","name","normalizeMetricName","path","join","getMetricValueByType","now","publishNestedComposite","getTime","Boolean","toString","composeMsgForRootStateMetric","system","merged","flatten","arr","flat","toFlatten","concat","isArray","root","getAggregateState","highestState","sort","state","msg","forEach","m","idx","slice","aggregateDescription","Helpers","definition","parent","transport","Error","BaseMetric","createMetric","defineProperty","get","_a","repo","enumerable","configurable","update","newValue","updateMetric","NumberMetric","_super","incrementBy","num","increment","decrement","decrementBy","ObjectMetric","mergeValues","_this","StringMetric","TimestampMetric","Repository","options","protocol","init","separator","_transport","_name","_description","_repo","_parent","_path","_buildPath","shadowedSystem","_state","id","_subSystems","_metrics","_getOrCreateMetric","metricObject","expectedType","metricDef","matching","filter","shadowedMetric","existing","me","subSystems","metrics","subSystem","nameSystem","descriptionSystem","match","_system","getState","setState","stateDescription","updateSystem","stringMetric","timestampMetric","objectMetric","numberMetric","aggState","shadowedSubSystem","createSystem","addSystemMetrics","clickStream","undefined","rootSystem","useClickStream","navigator","userAgent","document","clickStream_1","documentClickHandler","target","timestamp","className","tagName","toLowerCase","href","title","page","window","location","addEventListener","attachEvent","urlMetric","appNameMetric","startUrl","glue42gd","appName","NullProtocol","connection","config","joinPromise","session","replayRepo","replaySystem","ss","createMetricsMsg","Description","Value","send","metricClone","cloneMetric","updateMetricCore","canUpdate","publishMetricsMsg","canUpdateMetric","_b","resolveReadyPromise","domain","onJoined","reconnect","defineRootMetricsMsg","service","instance","shadowedUpdateMetric","stateObj","rootMetric","peer_id","peerId","gw3","createRegistry","errorHandling","_userErrorHandler","callbacks","_handleError","exceptionArtifact","errParam","stack","console","error","add","callback","callbacksForKey","allForKey","acc","element","index","execute","argumentsArr","_i","results","err","clear","clearKey","default","lib","InProcTransport","settings","logger","registry","gw","facade","connect","_client","message","messageHandler","client","sendObject","_msg","onMessage","onConnectedChanged","close","open","SharedWorkerTransport","workerFile","worker","SharedWorker","port","onmessage","data","postMessage","Utils","getGDMajorVersion","glueDesktop","version","ver","Number","substr","isNaN","isNode","_isNode","global","process","PromiseWrapper","resolved","promise","delay","time","setTimeout","WebSocketConstructor","require","WebSocket","WS","_running","_registry","wsRequests","ws","waitForSocketConnection","info","pw","failed","readyState","openSocket","retryInterval","retriesLeft","reconnectInterval","notifyForSocketState","debug","initiateSocket","retries","onerror","reason","JSON","stringify","seen_1","WeakSet","has","notifyStatusChanged","onclose","onopen","identity","application","wsRequest","status","seed","alphabet","previousSeed","shuffled","randomFromSeed","nextValue","_seed_","ORIGINAL","reset","setCharacters","_alphabet_","unique","split","item","ind","lastIndexOf","getShuffled","characterIndex","sourceArray","targetArray","Math","floor","splice","shuffle","alphabet_1","characters","lookup","crypto","msCrypto","randomByteBrowser","getRandomValues","random","dest","Uint8Array","encode_1","number","loopCounter","str","pow","decode_1","indexOf","isValid","len","lib$1","fn","module","exports","createCommonjsModule","counter","previousSeconds","clusterWorkerId","generate","seconds","seedValue","workerId","newCharacters","decode","shortid","domainSession","successMessages","errorMessages","_latestOptions","isJoined","tryReconnecting","_connectionOn","disconnected","loggedIn","on","handleSuccessMessage","handleErrorMessage","sm","requestsMap","destination","wasReconnect","handleJoined","catch","requestId","request_id","entry","success","getNextRequestId","tag","skipPeerId","successMsg","_tag","errorMsg","warn","leave","onLeft","sendFireAndForget","connected","GW3ProtocolImpl","protocolVersion","datePrefix","datePrefixLen","dateMinLen","datePrefixFirstChar","_isLoggedIn","shouldTryLogin","initialLogin","initialLoginAttempts","sessions","handleDisconnected","ping","processStringMessage","parse","substring","milliseconds","parseInt","ex","msgType","createStringMessage","oldToJson","toJSON","datePrefix_1","processObjectMessage","createObjectMessage","login","authentication","e_1","helloMsg","sendOptions","welcomeMsg","token","err_1","_c","loginConfig","username","password","gatewayToken","getNewGWToken","method","flowName","provider","flowCallback","sessionId","secret","globalDomain","subLogger","maxRetries","reconnectAttempts","Buffer","from","resolvedIdentity","resolved_identity","availableDomains","available_domains","access_token","setLoggedIn","logout","promises","pingTimer","clearTimeout","map","all","domainName","domainLogger","authToken","res","getGWToken","MessageReplayerImpl","specs","specsNames","messages","subs","subsRefCount","specs_1","spec","name_1","_loop_1","refCount","this_1","sub","processMessage","types","isDone","name_2","drain","off","Connection","messageHandlers","ids","_connected","isTrace","inproc","sharedWorker","canPublish","handleConnectionChanged","bind","handleTransportMessage","replaySpecs","replayer","isObjectBasedTransport","trace","strMessage","isLoggedIn","authRequest","distributeMessage","handlers","handlerId","handler","msgObj","order","Logger","logFn","subLoggers","customLogFn","loggerFullName","includeTimeAndLevel","existingSub","publishLevel","level","_publishLevel","consoleLevel","_consoleLevel","log","publishMessage","compareWith","loggerName","Interop","methods","InteropMethodName","invoke","prefix","date","getHours","getMinutes","getSeconds","getMilliseconds","toPrint","ContextMessageReplaySpec","prepareConfig","configuration","ext","_d","nodeStartingContext","startingContextString","env","_GD_STARTING_CONTEXT_","_e","instanceId","windowId","pid","environment","region","gwConfig","gateway","gwURL","applicationName","uid","applicationConfig","getApplication","uniqueAppName","appInstanceId","api","getConnection","bus","auth","gwToken","getAuth","publish","getLogger","contexts","libs","customLogger","timer","endTime","period","startTime","stop","GW3ContextData","contextId","isAnnounced","activityId","updateCallbacks","hasCallbacks","applyContextDelta","delta","deepClone","added_1","added","updated_1","updated","removed","mergeObjectsProperties","obj","hash","WeakMap","Set","RegExp","source","flags","set","what","withWhat","right","left","deepEqual","x","InvokeStatus","GW3Bridge","_contextNameToData","_gw3Subscriptions","_nextCallbackSubscriptionNumber","_contextNameToId","_contextIdToName","_connection","_logger","_gw3Session","subscribeToContextCreatedMessages","subscribeToContextUpdatedMessages","subscribeToContextDestroyedMessages","handleContextCreatedMessage","handleContextUpdatedMessage","handleContextDestroyedMessage","dispose","contextName","createContext","lifetime","createContextMsg","context_id","contextData","sentExplicitSubscription","invokeUpdateCallbacks","currentContext","calculatedDelta","calculateContextDelta","gwResponse","handleUpdated","updaterId","resolveImmediately","subscribe","un","unsubscribe","thisCallbackSubscriptionNumber","hadCallbacks","joinedActivity","sendSubscribe","subscriptionKey","sendUnsubscribe","extraData","oldContext","createdMessageTypes_1","createdMessageType","contextCreatedMsg","activity_id","updatedMessageTypes_1","updatedMessageType","contextUpdatedMsg","justSeen","context_snapshot","updater_id","updateCallbackIndex","updateCallback","destroyedMessageTypes_1","destroyedMessageType","destroyedMsg","to","ContextsModule","_bridge","checkName","ready","promisify","successCallback","errorCallback","rejectAfter","ms","Client","callProtocolSubscribe","targetServers","stream","successProxy","errorProxy","methodResponseTimeout","waitTimeoutMs","methodDef","method_response_timeout","wait_for_method_timeout","delayTillNow","currentServers","getServerMethodsByFilterAndTarget","retry_1","streamInfo","servers","methodFilter","filterCopy","getServers","serverMethodMap","server","getMethods","methodsForInstance","getMethodsForInstance","methodAdded","onMethodAdded","methodRemoved","onMethodRemoved","serverAdded","onServerAdded","serverRemoved","onServerRemoved","serverMethodAdded","onServerMethodAdded","serverMethodRemoved","onServerMethodRemoved","argumentObj","additionalOptions","methodDefinition","serversMethodMap","errorObj","timeout","additionalOptionsCopy","invokePromises","invocationMessages","methodResponseTimeoutMs","tryToAwaitForMethods","supportsStreaming","objectTypes","called_with","executed_by","returned","serversMethodPair","invId","invokePromise","race","invocationId","getInvocationResultObj","every","getInvokePromise","invocationResults","calledWith","all_return_values","invokeMessage","Success","allValues","currentValue","all_errors","allErrors","currError","invResult","interval","setInterval","clearInterval","filterByTarget","matches","myMatches","serverMethodPair","instanceMatch","localMachine","find","isLocal","instanceFilter","instanceDefinition","containsProps","methodMatch","repoMethod","prop","isMatch","filterValue","repoMethodValue","filterObjTypes","repoObjectTypes","objTypeToContains","object","objType","repoObjType","isFullfiled","containsAllFromFilter","String","matchingServers","resultMethodsObject","methodKey","identifier","prev","current","matchingMethods","getServerMethodsById","ServerSubscription","subscription","branchKey","closeSingleSubscription","pushDataToSingle","Request","requestContext","accept","acceptRequestOnBranch","acceptOnBranch","branch","rejectRequest","ServerStreaming","onSubRequest","rc","rm","handleSubRequest","onSubAdded","handleSubAdded","onSubRemoved","handleSubRemoved","streamCallbacks","subscriptionRequestHandler","request","subscriptionAddedHandler","subscriptionRemovedHandler","ServerBranch","subscriptions","getSubscriptionList","closeAllSubscriptions","pushData","ServerStream","_protocol","_repoMethod","_server","branches","bList","getBranchList","def2","accepts","displayName","returns","unregister","updateRepoMethod","Server","serverRepository","invocations","currentlyUnregistering","streaming","onInvoked","onMethodInvoked","createStream","streamDef","existingStream","streamMethodDefinition","getList","some","serverMethod","protocolState","streamUserObject","repoId","remove","register","wrappedCallbackFunction","resultCallback","resultValue","args","userCallback","registerCore","registerAsync","wrappedCallback","resultCalled_1","methodResult","userCallbackAsync","forStream","methodToBeRemoved","unregisterWithPredicate","removeMethodsOrStreams","filterPredicate","methodsOrStreamsToRemove","methodsToRemove","methodUnregPromises","addAsCurrentlyUnregistering","methodName","theFunction","unregisterInProgress","methodToExecute","invocationArgs","unStrException","_value","methodInvocationResult","InstanceWrapper","wrapped","getStreams","refreshWrappedObject","refresh","unwrap","user","machine","API","ClientRepository","methodsCount","addServer","serverId","wrapper","serverEntry","removeServerById","methodId","removeServerMethod","addServerMethod","createMethodIdentifier","that","gatewayId","display_name","object_types","input_signature","result_signature","getServersByMethod","allMethods","allServers","unsubscribeFunc","serversWithMethodsToReplay","returnUnsubWithDelayedReplay","methodsToReplay","unsubCalled","getServerById","methodInfo","collectionToReplay","ServerRepository","nextId","getById","ServerStreaming$1","repository","ERR_URI_SUBSCRIPTION_FAILED","nextStreamId","handleAddInterest","handleRemoveInterest","streamingMethod","subscriptionsMap","branchKeyToStreamIdMap","streamId","getStreamId","subscription_id","subscribeMsg","stream_id","sendSubscriptionFailed","br","dropSubscriptionMessage","closeMultipleSubscriptions","subscriptionsToClose","drop","allSubscriptions","onSubscriptionLifetimeEvent","method_id","eventName","handlerFunc","getNextStreamId","caller_id","arguments_kv","subscriptionId","errorMessage","reason_uri","needleBranch","ServerProtocol","clientRepository","handleInvokeMessage","isStreaming","registerMsg","restrictions","invocation_id","callerId","UserSubscription","subscriptionData","params","trackedServers","pair","onData","dataCallback","queued","dataItem","onClosed","closedCallback","onFailed","onConnected","setNewSubscription","newSub","ClientStreaming","subscriptionsList","subscriptionIdToLocalKeyMap","nextSubLocalKey","handleErrorSubscribing","errorResponse","subLocalKey","pendingSub","timeoutId","callArgs","callOnClosedHandlers","handleSubscribed","acceptingServer","isFirstResponse","serverInstance","handleEventData","trackedServersFound","isPrivateData","oob","sendingServerId","receivedStreamData","requestArguments","private","onDataHandlers","queuedData","handleSubscriptionCancelled","expectedNewLength","closers","getNextSubscriptionLocalKey","registerSubscription","server_id","ERR_MSG_SUB_FAILED","drainSubscriptions","subsInfo","localKey","closeSubscription","closingServer","closersCount","closingServerId","ClientProtocol","handlePeerAdded","handlePeerRemoved","handleMethodsAddedMessage","handleMethodsRemovedMessage","handleResultMessage","handleInvocationError","newPeerId","new_peer_id","remoteId","meta","local","serverInfo","removedPeerId","removed_id","methodIdList","gW3ProtocolFactory","libConfig","interop","readyPromise","existingSubscriptions_1","registeredMethods","registeredMethods_1","def","handleReconnect","protocolPromise","MessageBus","topic","routingKey","removeEmptyValues","routing_key","target_identity","response","watchOnEvent","keysMatch","cleaned","obj1","obj2","keysObj1","allMatch","GlueCore","userConfig","gdVersion","preloadPromise","gdPreloadPromise","_interop","_contexts","_bus","glueInitTimer","internalConfig","registerLib","inner","initTime","initEndTime","initStartTime","setupMetrics","initTimer","metricsPublishingEnabledFunc","getMetricsPublishingEnabled","rootMetrics","disableAutoAppSystem","featureMetric","reportingSystem","action","payload","addFAVSupport","setupContexts","hasActivities","activities","setupBus","setupExternalLibs","externalLibs","createCallback","setupExternalLib","authPromise","authConfig","agmConfig","libsReadyPromises","coreVersion","glue","feedback","feedbackInfo","agm","performance","glueVer","glueConfig","browser","timing","memory","initTimes","extOptions","enrichGlue","updatePerfData","_id","ActivityEntity","other","_updateCore","isString","arg","isUndefined","isUndefinedOrNull","isFunction","ifNotUndefined","doWithIt","ownerWindow","helperWindows","_ownerWindow","_helperWindows","ActivityType","_manager","initiate","appByWindowTypeGetter","_appByWindowTypeGetter","WindowType","getWindows","activity","isIndependent","createWindow","entitiy","entity","eventType","newStatus","oldStatus","EntityEventType","StatusChange","EntityEventContext","ActivityContextChange","ActivityState","_activity","ActivityAGM","_ensureHasAgm","AGM","util.isUndefinedOrNull","windows","w","methodNames","methodsForWindow","currentWindowMethod","activityServers","util.isString","potentialTargets","util.isArray","firstElem","_isInstance","_isActivityWindow","win","parameters","manager","ownerActivityId","_ownerActivityId","AttachedActivityDescriptor","ownerId","windowIds","frameColor","descriptor","detachActivities","nextTick","cb","nodeify","util.isFunction","resp","actType","_actType","_status","_context","_ownerId","_agm","Activity","getActivityType","addWindowToActivity","windowType","windowTypes","createStackedWindows","leaveWindowFromActivity","setActivityContext","updateActivityContext","subscribeActivityEvents","ns","os","subscribeWindowEvents","subscribeActivityContextChanged","act","stopActivity","clone","attachActivities","subscribeActivitiesAttached","newActId","oldActId","subscribeActivitiesDetached","newAct","originalActivity","allStates","_attached","color","callbacksToWait","underlyingWindow","setFrameColor","LogLevel","GlueLogger","_glueLogger","owner","GetTypeName","Level","Trace","_getMessage","Debug","Info","Warn","exec","windowGetter","hcWindowId","Get","_type","_activityId","_instance","_isIndependent","_windowGetter","_hcWindowId","ActivityWindow","getWindowBounds","getWindowType","util.isUndefined","getActivityById","isVisible","setWindowVisibility","focus","activateWindow","bounds","setWindowBounds","closeWindow","_subscribeForActivityWindowEvent","ActivityWindowJoinedActivity","ActivityWindowLeftActivity","event","ActivityStatus","_config","_sessionJoinedPromise","_sessionJoinedPromiseResolve","_activityJoinedPromise","_activityJoinedPromiseResolve","glue42gd_1","addRefreshHandler","setGWToken","nameToWindowType","windowName","owner_type","helper_types","peer_type","owner_id","activity_type","EntityEvent","ActivityStatusChangeEventContext","forwardActivityTypeMessagesToStatusEventHandlers","handleActivityCreatedMessage","handleActivityDestroyedMessage","forwardActivityMessagesToStatusEventHandlers","forwardActivityCreatedAndJoinedActivityToActivityWindowEventHandlers","forwardPeerFactoryMessagesToStatusEventHandlers","forwardPeerFactoryMessagesToPeerFactoryRequests","handlePeerFactoriesAdded","handlePeerFactoriesRemoved","forwardActivityWindowMessagesToEventHandlers","disposeRequestHandling","exit","mode","activity_types","typesToTrack","_activityTypeStatusChangeCallbacks","activityTypeName","toActivityPeerConfig","windowDefinition","activityType","activityTypeGwMessageEntityToActivityType","invokeCallbacks","Added","Removed","_windowTypeStatusChangeCallbacks","factory","_peerFactoriesRegisteredByUs","factories","peerFactoryGwMessageEntityToWindowType","factory_ids","_activityChangeCallbacks","initiateMsg","initial_context","isOverrideTypeDefinition","types_override","helpers","wd","sendCreateAndMapResultingMessagesToPromise","initMsg","_activityTypesInitiatedFromMe","fullReplace","removedKeys","removedKeys_1","activityWindowId","independent","shouldSendReady","activityInfo","_activityWindowChangeCallbacks","getAgmInstance","generateWindowGetter","layout","width","height","top","cellSize","peer_name","created_id","joinActivity","destroy_peer_id","announcementInfo","activityWindowType","activityWindowIndependent","activityWindowName","search","URLSearchParams","searchParams","maybeName","target_id","Updated","windowDefinitions","visible","cloneOptions","into","merge","newActivityInfo","addedMessageType","removedMessageType","mapper","getGetEntityEvent","isAdded","forwardMessageToEventHandler","messageType","getEntityEvent","ent","h","initiatedMessageType","initiatedMessageFilter","createdMessageFilter","cancelledMessageType","cancelledMessageFilter","createdMessageToPromiseResolution","resolveCreatedPromise","rejectCreatedPromise","initiatedSubscription","createdSubscription","cancelledSubscription","errorSubscription","reqId","getRandomRequestId","createdPromise","initiatedMessageAck","dropSubscriptions","dropSubscription","msg4","msg1","msg2","msg3","toReturn","factoryId","peerType","_peerIdAndFactoryIdToPeerType","_contextSubscriptions","subscribeToContext","ActivityContextChangedEventContext","unsubscribeContext","forwardAddedAndRemovedMessagesToEventHandler","activityCreatedMessage","participants","createdMessage","activityGwMessageToActivity","activityToActivityStatusChangeEvent","peerFactoryIdAndOwnerIdToWindowType","peer_factory","gateway_token","joinedMessage","joinedId","joined_id","joinedType","joined_type","joinedName","joined_name","left_id","list","_m","am","_subscribeMyContextChanged","_subscribeMyWindowEvent","_subscribeActivitiesAttached","_subscribeActivitiesDetached","onWindowFrameColorChanged","_subscribeWindowFrameColorChanged","ActivityMy","_w","announcedWindows","myWin","updateContext","setContext","_myActivityJoinedCallbacks","_myActivityRemovedCallbacks","_myContextUpdateCallbacks","_myAttached","_myDetached","_myAttachedTo","_myDetachedFrom","attached","getFrameColor","_myActivityFrameColorChanged","myActivity","_notifyMyContextChanged","_notifyMyWindowEvent","callbackStore","detached","_notifyAttachedTo","_notifyAttached","oldAct","_notifyDetached","_notifyDetachedFrom","signalsToWait","_signals","_callbacks","ReadyMarker","isSet","isError","_error","processNew","_processNew","EntityObservableCollection","items","_items","htmlContainer","internalEntity","_updateInternalCollections","_notifyListeners","entityAddedHandler","getByName","_listeners","listener","entityAsAny","isActivityDestroy","Destroyed","isWindowClose","Closed","oldEntity","_beforeDelete","_update","bridge","autoAnnounce","_activityTypes","_grabEntity","_windowTypes","_activities","_windows","_dataReadyMarker","_descriptorsMarker","_readyMarker","setCallback","dataErr","announceWindow","_announcedWindows","signal","errCatch","refreshDescriptors","onActivitiesAttached","_handleActivitiesAttached","onActivitiesDetached","_handleActivitiesDetached","onActivityAttachedDescriptorsRefreshed","_handleActivityDescriptorsRefreshed","_handleWindowFrameColorChanged","_subscribeForData","initReady","aw","_getInitialData","ActivityManager","bridgeType","getError","ownerWindowType","helperWindowTypes","ownerDefinition","helperDefinitions","relativeTo","relativeDirection","windowStyleAttributes","registerActivityType","unregisterActivityType","initiateActivity","actId","getOrWait","at","factoryMethod","getName","registerWindowFactory","unregisterWindowFactory","array","predicate","util.some","getAnnouncementInfo","registerWindow","currentWindow","windowEventHandler_1","unsubscribeWindowEvents","wt","window_1","wrappingHandler","_windowHandlers","found","windowTypeOrConfiguration","relativeToWindow","wid","relativeWindowTypes","relativeWindows","useExisting","activityWindows","alreadyCreated","leaveActivity","removedKey","cloneActivity","descriptors","_updateDescriptors","stateWrapped","u","_attachedCallbacks","_detachedCallbacks","_frameColorChangesCallbacks","getActivityTypes","getWindowTypes","getActivities","ac","getActivityWindows","onActivityTypeStatusChange","onWindowTypeStatusChange","onActivityWindowChange","onActivityStatusChange","descriptorAsObjectFromAPI","oldActivityId","newActivityId","getAttachedDescriptors","my","_my","activityTypes","_getActivityTypesWrapper","subscribeActivityTypeEvents","_getWindowTypesWrapper","registerFactory","unregisterFactory","subscribeWindowTypeEvents","announce","instances","ActivityManagementAPI","subscribeActivityFrameColorChanged","_mgr","ActivityAPI","aware","inActivity","logLevel","_isUsingHCImplementation","gdMajorVersion","_isUsingGW3Implementation","ActivityModule","checkIsUsingGW3Implementation","activityManager","disableAutoAnnounce","My","_api","_readyPromise","objectValues","objectClone","_appManager","CallbackRegistryFactory","onInstanceStarted","onInstanceStopped","onAppRemoved","app","onAppChanged","onAppAvailable","onAppUnavailable","ApplicationImpl","_props","Title","Version","AutoStart","IsShell","Caption","IsHidden","ApplicationName","ActivityWindowType","Arguments","AllowMultiple","IsReady","Icon","IconUrl","SortOrder","UserProperties","autoStart","caption","hidden","container","allowMultiple","Type","Mode","isActivity","styleAttributes","WindowStyleAttributes","modeIndex","startModeIndex","stopModeIndex","style","props","Name","Context","Options","acsResult","Instance_0","Id","handleInstanceStarted","unsub","check","filtered","isActivityInstance","onInstanceAgmServerReady","waitForApplicationInstance","_appName","startFailed","_addToRegistry","_unsubscribeInstanceStopped","_unsubscribeInstanceAgmServerReady","InstanceImpl","activityInstance","instWinCntx","_t42","activityIsOwner","activityOwnerInstance","_startUpContext","_title","_isActivityInstance","_inActivity","_agmInstance","ActivityId","updateAgmInstanceFromProps","AgmServers","GD3","agmInstances","gdAgmServers","propsAgmServer","propsAgm","machineName","userName","handleInstanceStopped","_gdMajorVersion","_apps","_instances","instanceId_1","_getAppId","_updateAppFromProps","_getAppOrThrow","updateFromProps","available","_getInstanceId","_getInstanceAppName","_updateInstanceFromProps","_getInstanceOrThrow","_matchInstance","_replay","AppManagerImpl","_getInstanceByIdAndName","itemsToReplay","_agmInvoke","Region","Branches","Branch","ResultMessage","funct","Entitlement","Function","func","Result","transformFunction","appManager","entitlements","EntitlementsImpl","skipIcon","applications","handleAppAdded","snapshot","skipIcons","start","resolveFunc","rejectFunc","resultPromise","streamData","events","handleAppUpdated","handleAppRemoved","handleAppReady","handleInstanceStartFailed","handleInstanceUpdated","handleInstanceAgmServerReady","handleBranchModified","handleBranchesModified","subscriptionFactory","onAppAdded","myInstance","getMyInstance","onInstanceUpdated","onInstanceStartFailed","getRegion","getBranches","getCurrentBranch","getFunctionalEntitlement","getFunctionalEntitlementBranch","setCurrentBranch","setRegion","currentUser","canI","canIBranch","onBranchesChanged","restart","CallbackFactory","WindowStore","_pendingWindows","remote","_pendingWindowsStates","urlChanged","targetWindowState","markReadyToShow","waitForTimeoutInMilliseconds","onReadyWindow","fail","displays","monitor","totalOverlap","calculateTotalOverlap","display","max","workingAreaWidth","workingAreaHeight","r1","r2","r1x","r1y","r1xMax","r1yMax","r2x","r2y","r2xMax","r2yMax","min","executor","appManagerGetter","_group","resultWindow","_mode","_url","url","_bounds","_frameColor","_focus","_neighbours","neighbours","_groupId","groupId","_isGroupHeaderVisible","isGroupHeaderVisible","_isTabHeaderVisible","isTabHeaderVisible","_isTabSelected","isTabSelected","_settings","_isVisible","isCollapsed","_windowState","_tabGroupId","tabGroupId","_isLocked","isLocked","_frameButtons","_zoomFactor","zoomFactor","moveResize","dimensions","resolveTimeout","unsubscribeBoundsChanged","areBoundsEqual","onBoundsChanged","setVisible","toBeVisible","isVisibilityCorrect","onVisibilityChanged","waitForLockingChanged","onLockingChanged","onUrlChanged","onCollapsed","onExpanded","onMaximized","onMinimized","onNormal","onDetached","onTabHeaderVisibilityChanged","getNeighboursByDirection","direction","winId","windowStore","getApplicationName","_APPLICATION_NAME","getWindowInfo","requested","minHeight","maxHeight","minWidth","maxWidth","areHeightsEqual","areWidthsEqual","areLeftsEqual","areTopsEqual","handleWindowClose","handleWindowChangeState","handleTitleChanged","newTitle","handleVisibilityChanged","handleUrlChanged","newUrl","handleWindowSettingsChanged","handleContextUpdated","handleFrameIsLockedChanged","handleBoundsChanged","handleFocusChanged","isFocused","handleFrameButtonAdded","frameButton","buttonObj","btn","buttonId","handleFrameButtonRemoved","frameButtonId","button","handleFrameButtonClicked","handleFrameColorChanged","handleFrameAttached","handleFrameSelectionChanged","newWindow","prevWindow","selectedWindow","previousWindow","un_1","onTabSelectionChanged","newWin","prevWin","handleCompositionChanged","handleGroupHeaderVisibilityChanged","handleTabHeaderVisibilityChanged","handleGroupChanged","newGroup","oldGroup","handleGroupAssociation","group","handleAttached","newTabGroupId","tabHeaderVisible","handleDetached","handleWindowAttached","handleWindowDetached","handleZoomFactorChanged","hostInstance","agmInstance","frameButtons","opened","topNeighbours","leftNeighbours","rightNeighbours","bottomNeighbours","screen","utils","getMonitor","monitors","maximize","restore","minimize","maximizeRestore","currEvent","collapse","expand","toggleCollapse","activate","setTitle","setStyle","errMessage","callbackifyPromise","setOnTop","onTop","resetButtons","buttons","setSizeConstraints","constraints","navigate","addFrameButton","buttonInfo","imageBase64","removeFrameButton","show","hide","center","getDisplayCenterOfScreen","snap","targetWindowGroup","targetGroup","targetWindow","onWindowAdded","showLoader","loader","hideLoader","lock","unlock","getIcon","icon","setIcon","base64Image","setTabTooltip","tooltip","attachTab","tab","sourceWindowId","targetWindowId","argsForSend","sourceWin","onAttached","detachTab","opt","_options","hideTabHeader","visibilityChangeHeard","detachedHeard","unVisibility","unDetached","setTabHeaderVisible","toBeTabHeaderVisible","showPopup","createFlydown","setModalState","isModal","setZoomFactor","zoomIn","zoomOut","showDevTools","capture","captureOptions","flash","suppliedOptions","flashOptions","shouldFlash","onClose","onTitleChanged","onFrameButtonAdded","onFrameButtonRemoved","onFrameButtonClicked","onContextUpdated","onFrameColorChanged","onFocusChanged","onGroupChanged","onWindowAttached","onWindowDetached","onClosing","onRefreshing","prevent","onZoomFactorChanged","tabs","allWindows","getURL","getTitle","getBounds","getContext","resizeTo","moveTo","getParentWindow","myParentId","parentInstanceId","getChildWindows","Events","GDExecutor","agmTarget","stylePromises","wait","tabTooltip","tabToolTip","toolTip","allowClose","allowCollapse","allowLockUnlock","allowMaximize","allowMinimize","buttonsConfig","snappingEdge","command","replace","dataURL","toShow","optionsCopy","targetLocation","reformatedOptions","popupBounds","size","targetId","popupId","horizontalOffset","verticalOffset","fullOptions","reformatFlydownOptions","zoneIds","zones","z","flydownSize","cancel","destroy","clearFlydownArea","cancelCallback","callbackData","zoneId","flydownId","flydownWindowBounds","flydownWindowId","responses","defaultResponse","groupWindowIds","addCloseHandler","assignGeneralIfUnassigned","zone","valueFromOptions","flydownBounds","flydownActiveArea","activeArea","areaIds","getWindowsByTabGroupId","wndId","normalizeInstance","_windowId","_appManagerGetter","GDEnvironment","caller","respondToEvent","streamResolve","streamReject","_waitTimeout","updateWindow","copyOptions","windowState","handleFlydownBoundsRequested","windowInfo","readyResolve","extendedStreamEvent","getExtendedStreamEvent","windowInfoCreatedEvent","setReadyState","windowObjectAndEvents","theWindow","theWindowEvents","windowInfoBoundsChangedEvent","windowInfoUrlChangedEvent","setUrlChangedState","windowInfoTitleChanged","windowInfoCompositionChanged","neighbors","groupHeaderVisible","windowInfoFocusChanged","focusChanged","frameId","winsToBeNotified_1","oldTabGroupId","winsToBeNotified_2","newWindowId","prevWindowId","windowObjAndEvents","windowFactory","mapToWindowConstructorOptions","isActiveTab","streamEvent","charAt","toUpperCase","callbackRegistry","_windowsId","waitForHeaderVisibilityChanged","onHeaderVisibilityChanged","groupObject","_mapToWindowObjects","winObjects","windowObject","_mapToWindowObject","mappedWindows","mappedWindow","isHeaderVisible","showHeader","setGroupHeaderVisible","hideHeader","getGroupTitle","setGroupTitle","captureGroup","onWindowRemoved","groupAPI","groupInternal","addWindow","removeWindow","window_2","_groups","heardForWindowsCounter","findGroupByWindow","groupFound","addNewWindow","windowGroupId","createdGroup","groupFactory","createOrGetGroup","deleteGroup","onCompositionChanged","newGroupId","oldGroupId","onGroupHeaderVisibilityChanged","groupEvents","onAdded","onRemoved","groupsAPI","groupsEvents","onWindowMoved","groups","isReady","GD","gdPromise","rej","envDetector","groupsFactory","windowAdded","windowRemoved","myWindow","getIfReady","errorHandler","waitFor","windowsForListing","findById","onTabAttached","tabAttached","onTabDetached","tabDetached","onWindowGotFocus","onWindowLostFocus","onEvent","unsubFunc","unsubscribed","LayoutStore","condition","layouts","where","randomByte","encode","build","require$$0","activitiesGetter","ContextProvider","registeredRequestsMethods","registerRequestMethods","context_1","requestResult","activityContext","windowContext","isActivityOwner","transformACSLayout","something","accumulator","convertedValue","components","metadata","activityGetter","LayoutsAPIImpl","isSlimMode","l","gotSnapshot","verifyNotSlimMode","ignoreHidden","layoutObject","actIds","appIds","ignoreLayoutRestrictions","isVisibleWindow","ignoreMyInstance","autoCollectApps","invokeMethodAndTrack","activityIdToJoin","restoreActivityOwner","ignoreActivityWindowTypes","closeRunningInstance","reuseWindows","t42","restoreOptions","activityToJoin","closeOldWindows","reuseExistingWindows","toClose","splash","getInstancesToClose","store","getObjectValues","Layouts","LayoutImpl","newName","oldName","onSaveRequested","skipStreamEvent","agmResult","streamEventReceived","handleResult","shellApp","isShell","shellApplicationName","resolveReady","rejectReady","resolveGotSnapshot","rejectGotSnapshot","ACSStream","noRetry","transform","checkForLayoutEventMethod","IsSnapshot","addLayouts","OnLayoutAdded","removeLayouts","OnLayoutRemoved","changeLayouts","OnLayoutChanged","renameLayouts","OnLayoutRenamed","restoredLayout","OnLayoutRestored","Token","layoutsData","layoutData","removedLayouts","removedLayout","removeWhere","existingLayout","compareLayouts","changedLayouts","changedLayout","renamedLayouts","renamedLayout","first","layout1","layout2","restoredLayouts","acsStream","DisplayCommand","callGD","GetAll","decorateDisplay","isPrimary","Capture","CaptureAll","GetMousePosition","original","switchChannel","channel","swId","newChannel","SharedContextSubscriber","isChannel","createContextName","___","startsWith","channelContextName","channelName","shared","ChannelsImpl","subsKey","subscribeFor","channelNames","getContextData","joinCore","leaveCore","changedKey","changed","changeSelector","doesChannelExist","includes","intervalId","sharedContexts","channels","interopLib","leaveNoSelectorSwitch","joinNoSelectorSwitch","setupAGM","onChanged","Map","HotkeysImpl","hotkey","hkToLower","formatHotkey","hotkeys","firstHotkey","registerInvokeAGMMethod","delete","IntentCommand","getLibConfig","defaultMode","trueMode","getModeAsString","IntentEvents","intentListeners","raise","intent","invokeGlue","Raise","intentFilter","Find","findByContext","contextType","FindByContext","addIntentListener","unsubId","handleEvent","IntentListenerRaised","actions","badge","dir","image","lang","renotify","requireInteraction","silent","Glue42Notification","Notifications","methodRegistered","handleNotificationAction","notification","severity","glueRoutingDetailMethodName","g42notificationId","g42action","g42interopMethod","g42interopTarget","stringValue","glueAction","g42notification","notifications","payload_1","event_1","Event","onaction","actionInterop","dispatchEvent","event_2","onclick","clickInterop","core","getConfiguration","ThemesImpl","getMethodName","getAll","selected","theme","setMethodName","sharedContextName","getThemesMethodName","setThemesMethodName","_displays","getLibLogger","newLogger","loggerConfig","windowsLogger","debugLog","WindowsFactory","activityLogger","AppManagerFactory","lay","LayoutsFactory","channelsAPI","hotkeysAPI","unregisterAll","isRegistered","displaysLogger","DisplayManager","agmAPI","intentsAPI","notificationsAPI","themesAPI","themes","getCurrent","select","currentLog","glueFactoryLog","CoreFactory","whatToExpose","CreateGlue","shouldSetToWindow","autoInjected","Glue"],"mappings":"4NAgBA,IAAIA,EAAgB,SAASC,EAAGC,GAI5B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAG5B,SAASO,EAAUR,EAAGC,GAElB,SAASQ,IAAOC,KAAKC,YAAcX,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEY,UAAkB,OAANX,EAAaC,OAAOW,OAAOZ,IAAMQ,EAAGG,UAAYX,EAAEW,UAAW,IAAIH,GAGnF,IAAIK,EAAW,WAQX,OAPAA,EAAWZ,OAAOa,QAAU,SAAkBC,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAIZ,KADTW,EAAIG,UAAUF,GACOhB,OAAOU,UAAUL,eAAee,KAAKL,EAAGX,KAAIU,EAAEV,GAAKW,EAAEX,IAE9E,OAAOU,IAEKO,MAAMb,KAAMU,YAGhC,SAASI,EAAUC,EAASC,EAAYC,EAAGC,GACvC,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,IAAW,MAAOG,GAAKL,EAAOK,IACpF,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,IAAW,MAAOG,GAAKL,EAAOK,IACvF,SAASF,EAAKI,GAAUA,EAAOC,KAAOT,EAAQQ,EAAOL,OAAS,IAAIN,GAAE,SAAUG,GAAWA,EAAQQ,EAAOL,UAAWO,KAAKR,EAAWK,GACnIH,GAAMN,EAAYA,EAAUL,MAAME,EAASC,GAAc,KAAKS,WAItE,SAASM,EAAYhB,EAASiB,GAC1B,IAAsGC,EAAGC,EAAG5B,EAAG6B,EAA3GC,EAAI,CAAEC,MAAO,EAAGC,KAAM,WAAa,GAAW,EAAPhC,EAAE,GAAQ,MAAMA,EAAE,GAAI,OAAOA,EAAE,IAAOiC,KAAM,GAAIC,IAAK,IAChG,OAAOL,EAAI,CAAEV,KAAMgB,EAAK,GAAIC,MAASD,EAAK,GAAIE,OAAUF,EAAK,IAAwB,mBAAXG,SAA0BT,EAAES,OAAOC,UAAY,WAAa,OAAO7C,OAAUmC,EACvJ,SAASM,EAAKhC,GAAK,OAAO,SAAUqC,GAAK,OACzC,SAAcC,GACV,GAAId,EAAG,MAAM,IAAIe,UAAU,mCAC3B,KAAOZ,GAAG,IACN,GAAIH,EAAI,EAAGC,IAAM5B,EAAY,EAARyC,EAAG,GAASb,EAAU,OAAIa,EAAG,GAAKb,EAAS,SAAO5B,EAAI4B,EAAU,SAAM5B,EAAEM,KAAKsB,GAAI,GAAKA,EAAET,SAAWnB,EAAIA,EAAEM,KAAKsB,EAAGa,EAAG,KAAKlB,KAAM,OAAOvB,EAE3J,OADI4B,EAAI,EAAG5B,IAAGyC,EAAK,CAAS,EAARA,EAAG,GAAQzC,EAAEiB,QACzBwB,EAAG,IACP,KAAK,EAAG,KAAK,EAAGzC,EAAIyC,EAAI,MACxB,KAAK,EAAc,OAAXX,EAAEC,QAAgB,CAAEd,MAAOwB,EAAG,GAAIlB,MAAM,GAChD,KAAK,EAAGO,EAAEC,QAASH,EAAIa,EAAG,GAAIA,EAAK,CAAC,GAAI,SACxC,KAAK,EAAGA,EAAKX,EAAEI,IAAIS,MAAOb,EAAEG,KAAKU,MAAO,SACxC,QACI,KAAkB3C,GAAZA,EAAI8B,EAAEG,MAAY5B,OAAS,GAAKL,EAAEA,EAAEK,OAAS,MAAkB,IAAVoC,EAAG,IAAsB,IAAVA,EAAG,IAAW,CAAEX,EAAI,EAAG,SACjG,GAAc,IAAVW,EAAG,MAAczC,GAAMyC,EAAG,GAAKzC,EAAE,IAAMyC,EAAG,GAAKzC,EAAE,IAAM,CAAE8B,EAAEC,MAAQU,EAAG,GAAI,MAC9E,GAAc,IAAVA,EAAG,IAAYX,EAAEC,MAAQ/B,EAAE,GAAI,CAAE8B,EAAEC,MAAQ/B,EAAE,GAAIA,EAAIyC,EAAI,MAC7D,GAAIzC,GAAK8B,EAAEC,MAAQ/B,EAAE,GAAI,CAAE8B,EAAEC,MAAQ/B,EAAE,GAAI8B,EAAEI,IAAIU,KAAKH,GAAK,MACvDzC,EAAE,IAAI8B,EAAEI,IAAIS,MAChBb,EAAEG,KAAKU,MAAO,SAEtBF,EAAKf,EAAKpB,KAAKG,EAASqB,GAC1B,MAAOV,GAAKqB,EAAK,CAAC,EAAGrB,GAAIQ,EAAI,UAAeD,EAAI3B,EAAI,EACtD,GAAY,EAARyC,EAAG,GAAQ,MAAMA,EAAG,GAAI,MAAO,CAAExB,MAAOwB,EAAG,GAAKA,EAAG,QAAK,EAAQlB,MAAM,GArB9BL,CAAK,CAACf,EAAGqC,MAyB7D,SAASK,IACL,IAAK,IAAI5C,EAAI,EAAGC,EAAI,EAAG4C,EAAK1C,UAAUC,OAAQH,EAAI4C,EAAI5C,IAAKD,GAAKG,UAAUF,GAAGG,OACxE,IAAI0C,EAAI1D,MAAMY,GAAI+C,EAAI,EAA3B,IAA8B9C,EAAI,EAAGA,EAAI4C,EAAI5C,IACzC,IAAK,IAAI+C,EAAI7C,UAAUF,GAAIgD,EAAI,EAAGC,EAAKF,EAAE5C,OAAQ6C,EAAIC,EAAID,IAAKF,IAC1DD,EAAEC,GAAKC,EAAEC,GACjB,OAAOH,EAGX,IAAIK,EACQ,EADRA,EAEQ,EAFRA,EAGW,EAHXA,EAIQ,EAGZ,SAASC,EAAqBC,GAC1B,OAAIA,EAAOC,OAASH,EACT,YAEFE,EAAOC,OAASH,EACd,SAEFE,EAAOC,OAASH,EACd,SAEFE,EAAOC,OAASH,EACd,SAEJ,UAEX,SAASI,EAAevC,GACpB,OAAIA,EAAMtB,cAAgB8D,KACf,YAEe,iBAAVxC,EACL,SAEe,iBAAVA,EACL,SAEe,iBAAVA,EACL,SAGA,SAGf,SAASyC,EAAgBJ,GACrB,IAAIK,EAAoB,GACpBJ,EAAOF,EAAqBC,GAChC,GAAa,WAATC,EAAmB,CACnB,IAAIK,EAAS1E,OAAO2E,KAAKP,EAAOrC,OAAO6C,QAAO,SAAUC,EAAMC,GAC1D,IAAIC,EAAYT,EAAeF,EAAOrC,MAAM+C,IAC5C,GAAkB,WAAdC,EAAwB,CACxB,IAAIC,EAyBpB,SAASC,EAAsBP,GAC3B,OAAO1E,OAAO2E,KAAKD,GAAQE,QAAO,SAAUC,EAAMC,GAC9C,IAAIT,EAAOC,EAAeI,EAAOI,IAgBjC,OAdID,EAAKC,GADI,WAATT,EACY,CACRA,KAAM,SACNa,YAAa,GACbC,QAAS,GACTH,UAAWC,EAAsBP,EAAOI,KAIhC,CACRT,KAAMA,EACNa,YAAa,GACbC,QAAS,IAGVN,IACR,IA5CyBI,CAAsBb,EAAOrC,MAAM+C,IACnDD,EAAKC,GAAO,CACRT,KAAM,SACNa,YAAa,GACbC,QAAS,GACTH,UAAWA,QAIfH,EAAKC,GAAO,CACRT,KAAMU,EACNG,YAAa,GACbC,QAAS,IAGjB,OAAON,IACR,IACHJ,EAAkBO,UAAYN,EAMlC,OAJAD,EAAkBW,KAAOC,EAAoBjB,EAAOkB,KAAKC,KAAK,KAAO,IAAMnB,EAAOgB,MAClFX,EAAkBJ,KAAOA,EACzBI,EAAkBS,YAAcd,EAAOc,YACvCT,EAAkBU,QAAU,GACrBV,EAuBX,SAASY,EAAoBD,GACzB,YAAoB,IAATA,GAAwBA,EAAKjE,OAAS,GAAiB,MAAZiE,EAAK,GAChD,IAAMA,EAGNA,EAGf,SAASI,EAAqBpB,GAE1B,MAAa,cADFD,EAAqBC,GAErBG,KAAKkB,MAMpB,SAASC,EAAuBhB,GAC5B,GAAsB,iBAAXA,EACP,OAAOA,EAEX,OAAO1E,OAAO2E,KAAKD,GAAQE,QAAO,SAAUC,EAAMC,GAC9C,IAAI/C,EAAQ2C,EAAOI,GAanB,MAZqB,iBAAV/C,GAAsBA,EAAMtB,cAAgB8D,KACnDM,EAAKC,GAAOY,EAAuB3D,GAE9BA,EAAMtB,cAAgB8D,KAC3BM,EAAKC,GAAO,IAAIP,KAAKxC,GAAO4D,UAEvB5D,EAAMtB,cAAgBmF,QAC3Bf,EAAKC,GAAO/C,EAAM8D,WAGlBhB,EAAKC,GAAO/C,EAET8C,IACR,IAtBQa,CAAuBtB,EAAOrC,OA0D7C,SAAS+D,EAA6BC,GAClC,IACIC,EApCR,SAASC,EAAQC,GACb,OAAOA,EAAItB,QAAO,SAAUuB,EAAMC,GAC9B,OAAOD,EAAKE,OAAOlG,MAAMmG,QAAQF,GAAaH,EAAQG,GAAaA,KACpE,IAiCUH,CADSF,EAAOQ,KAAKC,qBAE9BC,EAA+BT,EA/BxBU,MAAK,SAAU3C,EAAGhE,GACzB,OAAKgE,EAAE4C,MAGF5G,EAAE4G,MAGA5G,EAAE4G,MAAQ5C,EAAE4C,OAFP,EAHD,KAMZ,GAyBH,MAAO,CACHzB,YAxBR,SAA8BgB,GAC1B,IAAIU,EAAM,GAUV,OATAV,EAAIW,SAAQ,SAAUC,EAAGC,EAAKhD,GAC1B,IAAIuB,EAAOwB,EAAExB,KAAKC,KAAK,KACnBwB,IAAQhD,EAAE5C,OAAS,EACnByF,GAAOtB,EAAO,IAAMwB,EAAE1B,KAAO,KAAO0B,EAAE5B,YAGtC0B,GAAOtB,EAAO,IAAMwB,EAAE1B,KAAO,KAAO0B,EAAE5B,YAAc,OAGxD0B,EAAIzF,OAAS,IACNyF,EAAII,MAAM,EAAG,KAAO,MAGpBJ,EAOSK,CAAqBjB,GAGrCjE,MAAO0E,EAAaE,OAoL5B,IAAIO,EACU,SAAUC,EAAYC,EAAQC,GACpC,GAAmB,OAAfF,GAA6C,iBAAfA,EAC9B,MAAM,IAAIG,MAAM,sBAEpB,GAAe,OAAXF,GAAqC,iBAAXA,EAC1B,MAAM,IAAIE,MAAM,kBAEpB,GAAkB,OAAdD,GAA2C,iBAAdA,EAC7B,MAAM,IAAIC,MAAM,sBAKxBC,EAAc,WACd,SAASA,EAAWJ,EAAYpB,EAAQsB,EAAWtF,EAAOsC,GACtD7D,KAAK2G,WAAaA,EAClB3G,KAAKuF,OAASA,EACdvF,KAAK6G,UAAYA,EACjB7G,KAAKuB,MAAQA,EACbvB,KAAK6D,KAAOA,EACZ7D,KAAK8E,KAAO,GACZ4B,EAAiBC,EAAYpB,EAAQsB,GACrC7G,KAAK8E,KAAOS,EAAOT,KAAK0B,MAAM,GAC9BxG,KAAK8E,KAAK5B,KAAKqC,EAAOX,MACtB5E,KAAK4E,KAAO+B,EAAW/B,KACvB5E,KAAK0E,YAAciC,EAAWjC,YAC9BmC,EAAUG,aAAahH,MAmB3B,OAjBAR,OAAOyH,eAAeF,EAAW7G,UAAW,OAAQ,CAChDgH,IAAK,WACD,IAAIC,EACJ,OAA8B,QAAtBA,EAAKnH,KAAKuF,cAA2B,IAAP4B,OAAgB,EAASA,EAAGC,MAEtEC,YAAY,EACZC,cAAc,IAElB9H,OAAOyH,eAAeF,EAAW7G,UAAW,KAAM,CAC9CgH,IAAK,WAAc,OAAOlH,KAAKuF,OAAOT,KAAO,IAAMF,MACnDyC,YAAY,EACZC,cAAc,IAElBP,EAAW7G,UAAUqH,OAAS,SAAUC,GACpCxH,KAAKuB,MAAQiG,EACbxH,KAAK6G,UAAUY,aAAazH,OAEzB+G,KAGPW,EAAgB,SAAUC,GAE1B,SAASD,EAAaf,EAAYpB,EAAQsB,EAAWtF,GACjD,OAAOoG,EAAO/G,KAAKZ,KAAM2G,EAAYpB,EAAQsB,EAAWtF,EAAOmC,IAAuB1D,KAc1F,OAhBAF,EAAU4H,EAAcC,GAIxBD,EAAaxH,UAAU0H,YAAc,SAAUC,GAC3C7H,KAAKuH,OAAOvH,KAAKuB,MAAQsG,IAE7BH,EAAaxH,UAAU4H,UAAY,WAC/B9H,KAAK4H,YAAY,IAErBF,EAAaxH,UAAU6H,UAAY,WAC/B/H,KAAK4H,aAAa,IAEtBF,EAAaxH,UAAU8H,YAAc,SAAUH,GAC3C7H,KAAK4H,aAAmB,EAAPC,IAEdH,GACTX,GAEEkB,EAAgB,SAAUN,GAE1B,SAASM,EAAatB,EAAYpB,EAAQsB,EAAWtF,GACjD,OAAOoG,EAAO/G,KAAKZ,KAAM2G,EAAYpB,EAAQsB,EAAWtF,EAAOmC,IAAuB1D,KAc1F,OAhBAF,EAAUmI,EAAcN,GAIxBM,EAAa/H,UAAUqH,OAAS,SAAUC,GACtCxH,KAAKkI,YAAYV,GACjBxH,KAAK6G,UAAUY,aAAazH,OAEhCiI,EAAa/H,UAAUgI,YAAc,SAAUhE,GAC3C,IAAIiE,EAAQnI,KACZ,OAAOR,OAAO2E,KAAKnE,KAAKuB,OAAO8E,SAAQ,SAAU/C,QACpB,IAAdY,EAAOZ,KACd6E,EAAM5G,MAAM+B,GAAKY,EAAOZ,QAI7B2E,GACTlB,GAEEqB,EAAgB,SAAUT,GAE1B,SAASS,EAAazB,EAAYpB,EAAQsB,EAAWtF,GACjD,OAAOoG,EAAO/G,KAAKZ,KAAM2G,EAAYpB,EAAQsB,EAAWtF,EAAOmC,IAAuB1D,KAE1F,OAJAF,EAAUsI,EAAcT,GAIjBS,GACTrB,GAEEsB,EAAmB,SAAUV,GAE7B,SAASU,EAAgB1B,EAAYpB,EAAQsB,EAAWtF,GACpD,OAAOoG,EAAO/G,KAAKZ,KAAM2G,EAAYpB,EAAQsB,EAAWtF,EAAOmC,IAA0B1D,KAK7F,OAPAF,EAAUuI,EAAiBV,GAI3BU,EAAgBnI,UAAU+E,IAAM,WAC5BjF,KAAKuH,OAAO,IAAIxD,OAEbsE,GACTtB,GAyIF,IAAIuB,EAAc,WACd,SAASA,EAAWC,EAASC,GACzBA,EAASC,KAAKzI,MACdA,KAAK+F,KA1Ib,SAASR,EAAOX,EAAMwC,EAAMoB,EAAU5B,EAAQlC,GAC1C,IAAK0C,EACD,MAAM,IAAIN,MAAM,0BAEpB,IAAK0B,EACD,MAAM,IAAI1B,MAAM,yBAEpB,IAsEwBhC,EAAM4D,EAtE1BC,EAAaH,EACbI,EAAQhE,EACRiE,EAAenE,GAAe,GAC9BoE,EAAQ1B,EACR2B,EAAUnC,EACVoC,EAyDJ,SAASC,EAAWC,GAChB,IAAKA,IAAmBA,EAAetC,OACnC,MAAO,GAEX,IAAI9B,EAAOmE,EAAWC,EAAetC,QAErC,OADA9B,EAAK5B,KAAKgG,EAAetE,MAClBE,EA/DCmE,CAAWrC,GACnBuC,EAAS,GACTC,GA+D0BV,EA/DC,MA+DP5D,EA/DAkE,IAgEHlE,EAAKnE,OAAS,EAAKmE,EAAKC,KAAK2D,GAAa,IAhEzB9D,GAClCmB,EAAOqB,EAAKrB,KACZsD,EAAc,GACdC,EAAW,GA6Bf,SAASC,EAAmBC,EAAcC,EAAclI,EAAOyF,GAC3D,IAAI0C,EAAY,CAAE9E,KAAM,IAEpB8E,EADwB,iBAAjBF,EACK,CAAE5E,KAAM4E,GAGRA,EAEhB,IAAIG,EAAWL,EAASM,QAAO,SAAUC,GAAkB,OAAOA,EAAejF,OAAS8E,EAAU9E,QACpG,GAAI+E,EAAShJ,OAAS,EAAG,CACrB,IAAImJ,EAAWH,EAAS,GACxB,GAAIG,EAASjG,OAAS4F,EAClB,MAAM,IAAI3C,MAAM,kBAAoB4C,EAAU9E,KAAO,4CAKzD,YAHqB,IAAVrD,GACPuI,EAASvC,OAAOhG,GAEbuI,EAEX,IAAIlG,EAASoD,EAAa0C,GAE1B,OADAJ,EAASpG,KAAKU,GACPA,EA+BX,IAAImG,EAAK,CACLnF,WACI,OAAOgE,GAEXlE,kBACI,OAAOmE,GAEXzB,WACI,OAAO0B,GAEXlC,aACI,OAAOmC,GAEXjE,KAAMkE,EACNI,GAAIA,EACJrD,KAAMA,EACNiE,iBACI,OAAOX,GAEXY,cACI,OAAOX,GAEXY,UAtGJ,SAAmBC,EAAYC,GAC3B,IAAKD,GAAoC,IAAtBA,EAAWxJ,OAC1B,MAAM,IAAImG,MAAM,oBAEpB,IAAIuD,EAAQhB,EAAYO,QAAO,SAAUrJ,GAAK,OAAOA,EAAEqE,OAASuF,KAChE,GAAIE,EAAM1J,OAAS,EACf,OAAO0J,EAAM,GAEjB,IAAIC,EAAU/E,EAAO4E,EAAYrB,EAAOH,EAAYoB,EAAIK,GAExD,OADAf,EAAYnG,KAAKoH,GACVA,GA6FPC,SAAU,WACN,OAAOpB,GAEXqB,SA9FJ,SAAkBrE,EAAOsE,GACrBtB,EAAS,CAAEhD,MAAOA,EAAOzB,YAAa+F,GACtC9B,EAAW+B,aAAaX,EAAIZ,IA6F5BwB,aA3FJ,SAAsBhE,EAAYpF,GAC9B,OAAOgI,EAAmB5C,EAAYjD,EAAoBnC,GAAO,SAAUmI,GAAa,OAAO,IAAItB,EAAasB,EAAWK,EAAIpB,EAAYpH,OA2F3IqJ,gBAnFJ,SAAyBjE,EAAYpF,GACjC,OAAOgI,EAAmB5C,EAAYjD,EAAuBnC,GAAO,SAAUmI,GAAa,OAAO,IAAIrB,EAAgBqB,EAAWK,EAAIpB,EAAYpH,OAmFjJsJ,aAvFJ,SAAsBlE,EAAYpF,GAC9B,OAAOgI,EAAmB5C,EAAYjD,EAAoBnC,GAAO,SAAUmI,GAAa,OAAO,IAAIzB,EAAayB,EAAWK,EAAIpB,EAAYpH,OAuF3IuJ,aA3FJ,SAAsBnE,EAAYpF,GAC9B,OAAOgI,EAAmB5C,EAAYjD,EAAoBnC,GAAO,SAAUmI,GAAa,OAAO,IAAIhC,EAAagC,EAAWK,EAAIpB,EAAYpH,OA2F3IyE,kBAjDJ,WACI,IAAI+E,EAAW,GAef,OAdIvL,OAAO2E,KAAKgF,GAAQxI,OAAS,GAC7BoK,EAAS7H,KAAK,CACV0B,KAAMgE,EACN9D,KAAMkE,EACN7C,MAAOgD,EAAOhD,MACdzB,YAAayE,EAAOzE,cAG5B2E,EAAYhD,SAAQ,SAAU2E,GAC1B,IAAIpJ,EAASoJ,EAAkBhF,oBAC3BpE,EAAOjB,OAAS,GAChBoK,EAAS7H,KAAKrC,MAAMkK,EAAUnJ,MAG/BmJ,IAoCX,OADApC,EAAWsC,aAAalB,GACjBA,EAMSxE,CAAO,GAAIvF,KAAMwI,GAC7BxI,KAAKkL,iBAAiBlL,KAAK+F,KAAMwC,EAAQ4C,kBAAuCC,IAAxB7C,EAAQ4C,aAgDpE,OA9CA7C,EAAWpI,UAAUgL,iBAAmB,SAAUG,EAAYC,GAI1D,GAHyB,oBAAdC,WACPF,EAAWV,aAAa,YAAaY,UAAUC,WAE/CF,GAAsC,oBAAbG,SAA0B,CACnD,IAAIC,EAAgBL,EAAWnB,UAAU,eACrCyB,EAAuB,SAAUjK,GACjC,GAAKA,EAAEkK,OAAP,CAGA,IAAIA,EAASlK,EAAEkK,OACfF,EAAcb,aAAa,mBAAoB,CAC3ChH,KAAM,QACNgI,UAAW,IAAI9H,KACf6H,OAAQ,CACJE,UAAWpK,EAAEkK,OAASA,EAAOE,UAAY,GACzC1C,GAAIwC,EAAOxC,GACXvF,KAAM,IAAM+H,EAAOG,QAAQC,cAAgB,IAC3CC,KAAML,EAAOK,MAAQ,QAIjCP,EAAcb,aAAa,OAAQ,CAC/BqB,MAAOT,SAASS,MAChBC,KAAMC,OAAOC,SAASJ,OAEtBR,SAASa,iBACTb,SAASa,iBAAiB,QAASX,GAGnCF,SAASc,YAAY,UAAWZ,GAGxBN,EAAWV,aAAa,aAAa,IAAK5G,MAAQsB,YAAlE,IACImH,EAAYnB,EAAWV,aAAa,WAAY,IAChD8B,EAAgBpB,EAAWV,aAAa,UAAW,IACvD,GAAsB,oBAAXyB,OAAwB,CAC/B,QAA+B,IAApBA,OAAOC,SAA0B,CACxC,IAAIK,EAAWN,OAAOC,SAASJ,KAC/BO,EAAUjF,OAAOmF,QAEU,IAApBN,OAAOO,UACdF,EAAclF,OAAO6E,OAAOO,SAASC,WAI1CtE,KAGPuE,EAAgB,WAChB,SAASA,KAYT,OAVAA,EAAa3M,UAAUuI,KAAO,SAAUrB,KAExCyF,EAAa3M,UAAU+K,aAAe,SAAU1F,KAEhDsH,EAAa3M,UAAUwK,aAAe,SAAU9G,EAAQuC,KAExD0G,EAAa3M,UAAU8G,aAAe,SAAUpD,KAEhDiJ,EAAa3M,UAAUuH,aAAe,SAAU7D,KAEzCiJ,KAGP5C,WAAqB1B,GACrB,IAAIC,EAQJ,OAHIA,EAJCD,EAAQuE,YAA4C,iBAAvBvE,EAAQuE,WA5e9C,SAAcA,EAAYC,GACtB,IAAKD,GAAoC,iBAAfA,EACtB,MAAM,IAAIhG,MAAM,oCAEpB,IAAIkG,EACAC,EA2CAC,EAAa,SAAU9F,GACvB+F,EAAa/F,EAAKrB,OAElBoH,EAAe,SAAU5H,GACzB0F,EAAa1F,GACbA,EAAO0E,QAAQ5D,SAAQ,SAAUC,GAC7BU,EAAaV,MAEjBf,EAAOyE,WAAW3D,SAAQ,SAAU+G,GAChCD,EAAaC,OAGjBnC,EAAe,SAAU1F,QACH6F,IAAlB7F,EAAOqB,QAGXoG,EAAYlL,MAAK,WACb,IAgBIuL,EAAmB,CACnBxJ,KAAM,SACNoG,QAAS,CAlBA,CACTrF,KAAMC,EAAoBU,EAAOT,KAAKC,KAAK,KAAO,IAAMQ,EAAOX,KAAO,UACtEf,KAAM,SACNW,UAAW,CACP8I,YAAa,CACTzJ,KAAM,SACNa,YAAa,IAEjB6I,MAAO,CACH1J,KAAM,SACNa,YAAa,KAGrBA,YAAa,eACbC,QAAS,MAMbsI,EAAQO,KAAKH,OAiCjBrG,EAAe,SAAUpD,GACzB,IAAI6J,EAAcC,EAAY9J,GAC9BoJ,EAAYlL,MAAK,WACb,IACIuL,EAAmB,CACnBxJ,KAAM,SACNoG,QAAS,CAHLjG,EAAgByJ,KAKxBR,EAAQO,KAAKH,QACoB,IAAtBI,EAAYlM,OACnBoM,EAAiBF,OAQzBE,EAAmB,SAAU/J,GAC7B,GAAIgK,IAAa,CACb,IAAIrM,EAAQyD,EAAqBpB,GAC7BiK,EAAoB,CACpBhK,KAAM,UACNK,OAAQ,CAAC,CACDU,KAAMC,EAAoBjB,EAAOkB,KAAKC,KAAK,KAAO,IAAMnB,EAAOgB,MAC/DrD,MAAOA,EACPsK,UAAW9H,KAAKkB,SAG5BgI,EAAQO,KAAKK,KAGjBH,EAAc,SAAU9J,GACxB,IAAI6J,EAAcrN,EAAS,GAAIwD,GAI/B,MAH4B,iBAAjBA,EAAOrC,OAAuC,OAAjBqC,EAAOrC,QAC3CkM,EAAYlM,MAAQnB,EAAS,GAAIwD,EAAOrC,QAErCkM,GAEPG,EAAY,WACZ,IAAIzG,EACJ,IAEI,OAD6C,QAAjCA,EAAK4F,EAAOe,uBAAoC,IAAP3G,EAAgBA,aAAoB,OAAO,MAGpG,MAAO4G,GACH,OAAO,IAGf,MAAO,CACHtF,KAlKO,SAAUrB,GACjB,IAAI4G,EACJhB,EAAc,IAAI7L,SAAQ,SAAUC,GAChC4M,EAAsB5M,MAE1B6L,EAAUH,EAAWmB,OAAO,YACpBC,UAAS,SAAUC,IAClBA,GAAaH,IACdA,IACAA,OAAsB5C,GAE1B,IAgBIgD,EAAuB,CACvBvK,KAAM,SACNoG,QAAS,CAlBS,CAClBrF,KAAM,SACNf,KAAM,SACNW,UAAW,CACP8I,YAAa,CACTzJ,KAAM,SACNa,YAAa,IAEjB6I,MAAO,CACH1J,KAAM,SACNa,YAAa,KAGrBA,YAAa,eACbC,QAAS,MAMbsI,EAAQO,KAAKY,GACTD,GACAjB,EAAW9F,MAGnB6F,EAAQlI,KAAK,CACTQ,OAAQwH,EAAOxH,OACf8I,QAAStB,EAAOsB,QAChBC,SAAUvB,EAAOuB,YA4HrBrD,aAAcA,EACdP,aAlFe,SAAUnF,EAAQY,GACjC6G,EAAYlL,MAAK,WACb,IAAIyM,EAAuB,CACvB1K,KAAM,UACNK,OAAQ,CAAC,CACDU,KAAMC,EAAoBU,EAAOT,KAAKC,KAAK,KAAO,IAAMQ,EAAOX,KAAO,UACtErD,MAAO,CACH+L,YAAanH,EAAMzB,YACnB6I,MAAOpH,EAAMA,OAEjB0F,UAAW9H,KAAKkB,SAG5BgI,EAAQO,KAAKe,GACb,IAAIC,EAAWlJ,EAA6BC,GACxCkJ,EAAa,CACb5K,KAAM,UACN6K,QAAS5B,EAAW6B,OACpBzK,OAAQ,CAAC,CACDU,KAAM,SACNrD,MAAO,CACH+L,YAAakB,EAAS9J,YACtB6I,MAAOiB,EAASjN,OAEpBsK,UAAW9H,KAAKkB,SAG5BgI,EAAQO,KAAKiB,OAwDjBzH,aAAcA,EACdS,aAxCe,SAAU7D,GACzB,IAAI6J,EAAcC,EAAY9J,GAC9BoJ,EAAYlL,MAAK,WAAc,OAAO6L,EAAiBF,QA0W5CmB,CAAIrG,EAAQuE,WAAYvE,GAHxB,IAAIsE,EAKR,IAAIvE,EAAWC,EAASC,GACvBzC,MAiChB,SAAS8I,EAAetG,GACpB,GAAIA,GAAWA,EAAQuG,eACiB,mBAA1BvG,EAAQuG,eACW,QAA1BvG,EAAQuG,eACkB,WAA1BvG,EAAQuG,eACkB,UAA1BvG,EAAQuG,cACX,MAAM,IAAIhI,MAAM,mIAA2IyB,EAAQuG,cAAgB,eAEvL,IAAIC,EAAoBxG,GAA4C,mBAA1BA,EAAQuG,eAAgCvG,EAAQuG,cACtFE,EAAY,GA4ChB,SAASC,EAAaC,EAAmB5K,GACrC,IAAI6K,EAAWD,aAA6BpI,MAAQoI,EAAoB,IAAIpI,MAAMoI,GAClF,GAAIH,EACAA,EAAkBI,OADtB,CAIA,IAAI/I,EAAM,qDAAwD9B,EAAM,aAAgB6K,EAASC,MACjG,GAAI7G,EACA,OAAQA,EAAQuG,eACZ,IAAK,MACD,OAAOO,QAAQC,MAAMlJ,GACzB,IAAK,SACD,OACJ,IAAK,QACD,MAAM,IAAIU,MAAMV,GAG5BiJ,QAAQC,MAAMlJ,IAYlB,MAAO,CACHmJ,IAzEJ,SAAajL,EAAKkL,GACd,IAAIC,EAAkBT,EAAU1K,GAMhC,OALKmL,IACDA,EAAkB,GAClBT,EAAU1K,GAAOmL,GAErBA,EAAgBvM,KAAKsM,GACd,WACH,IAAIE,EAAYV,EAAU1K,GACrBoL,IAGLA,EAAYA,EAAUtL,QAAO,SAAUuL,EAAKC,EAASC,GAIjD,OAHMD,IAAYJ,GAAYG,EAAIhP,SAAWkP,GACzCF,EAAIzM,KAAK0M,GAEND,IACR,IACHX,EAAU1K,GAAOoL,KAwDrBI,QArDJ,SAAiBxL,GAEb,IADA,IAAIyL,EAAe,GACVC,EAAK,EAAGA,EAAKtP,UAAUC,OAAQqP,IACpCD,EAAaC,EAAK,GAAKtP,UAAUsP,GAErC,IAAIP,EAAkBT,EAAU1K,GAChC,IAAKmL,GAA8C,IAA3BA,EAAgB9O,OACpC,MAAO,GAEX,IAAIsP,EAAU,GAWd,OAVAR,EAAgBpJ,SAAQ,SAAUmJ,GAC9B,IACI,IAAI5N,EAAS4N,EAAS3O,WAAMuK,EAAW2E,GACvCE,EAAQ/M,KAAKtB,GAEjB,MAAOsO,GACHD,EAAQ/M,UAAKkI,GACb6D,EAAaiB,EAAK5L,OAGnB2L,GAkCPE,MAbJ,WACInB,EAAY,IAaZoB,SAXJ,SAAkB9L,GACQ0K,EAAU1K,WAIzB0K,EAAU1K,KASzBuK,EAAewB,QAAUxB,EACzB,IAAIyB,EAAMzB,EAEN0B,EAAmB,WACnB,SAASA,EAAgBC,EAAUC,GAC/B,IAAItI,EAAQnI,KACZA,KAAK0Q,SAAWJ,IAChBtQ,KAAK2Q,GAAKH,EAASI,OACnB5Q,KAAK2Q,GAAGE,SAAQ,SAAUC,EAASC,GAC/B5I,EAAM6I,eAAeD,MACtBjP,MAAK,SAAUmP,GACd9I,EAAM8I,OAASA,KA2CvB,OAxCAzR,OAAOyH,eAAesJ,EAAgBrQ,UAAW,yBAA0B,CACvEgH,IAAK,WACD,OAAO,GAEXG,YAAY,EACZC,cAAc,IAElBiJ,EAAgBrQ,UAAUgR,WAAa,SAAU9K,GAC7C,OAAIpG,KAAKiR,QACLjR,KAAKiR,OAAOzD,KAAKpH,GACVjF,QAAQC,aAAQgK,IAGhBjK,QAAQE,OAAO,kBAG9BkP,EAAgBrQ,UAAUsN,KAAO,SAAU2D,GACvC,OAAOhQ,QAAQE,OAAO,kBAE1BkP,EAAgBrQ,UAAUkR,UAAY,SAAU5B,GAC5C,OAAOxP,KAAK0Q,SAASnB,IAAI,YAAaC,IAE1Ce,EAAgBrQ,UAAUmR,mBAAqB,SAAU7B,GACrDA,GAAS,IAEbe,EAAgBrQ,UAAUoR,MAAQ,WAC9B,OAAOnQ,QAAQC,WAEnBmP,EAAgBrQ,UAAUqR,KAAO,WAC7B,OAAOpQ,QAAQC,WAEnBmP,EAAgBrQ,UAAU0E,KAAO,WAC7B,MAAO,aAEX2L,EAAgBrQ,UAAUiO,UAAY,WAClC,OAAOhN,QAAQC,WAEnBmP,EAAgBrQ,UAAU8Q,eAAiB,SAAU5K,GACjDpG,KAAK0Q,SAASZ,QAAQ,YAAa1J,IAEhCmK,KAGPiB,EAAyB,WACzB,SAASA,EAAsBC,EAAYhB,GACvC,IAAItI,EAAQnI,KACZA,KAAKyQ,OAASA,EACdzQ,KAAK0Q,SAAWJ,IAChBtQ,KAAK0R,OAAS,IAAIC,aAAaF,GAC/BzR,KAAK0R,OAAOE,KAAKC,UAAY,SAAUnQ,GACnCyG,EAAM6I,eAAetP,EAAEoQ,OAsC/B,OAnCAtS,OAAOyH,eAAeuK,EAAsBtR,UAAW,yBAA0B,CAC7EgH,IAAK,WACD,OAAO,GAEXG,YAAY,EACZC,cAAc,IAElBkK,EAAsBtR,UAAUgR,WAAa,SAAU9K,GAEnD,OADApG,KAAK0R,OAAOE,KAAKG,YAAY3L,GACtBjF,QAAQC,WAEnBoQ,EAAsBtR,UAAUsN,KAAO,SAAU2D,GAC7C,OAAOhQ,QAAQE,OAAO,kBAE1BmQ,EAAsBtR,UAAUkR,UAAY,SAAU5B,GAClD,OAAOxP,KAAK0Q,SAASnB,IAAI,YAAaC,IAE1CgC,EAAsBtR,UAAUmR,mBAAqB,SAAU7B,GAC3DA,GAAS,IAEbgC,EAAsBtR,UAAUoR,MAAQ,WACpC,OAAOnQ,QAAQC,WAEnBoQ,EAAsBtR,UAAUqR,KAAO,WACnC,OAAOpQ,QAAQC,WAEnBoQ,EAAsBtR,UAAU0E,KAAO,WACnC,MAAO,iBAEX4M,EAAsBtR,UAAUiO,UAAY,WACxC,OAAOhN,QAAQC,WAEnBoQ,EAAsBtR,UAAU8Q,eAAiB,SAAU5K,GACvDpG,KAAK0Q,SAASZ,QAAQ,YAAa1J,IAEhCoL,KAGPQ,EAAS,WACT,SAASA,KA+BT,OA7BAA,EAAMC,kBAAoB,WACtB,GAAsB,oBAAX7F,QAGNA,OAAO8F,aAGP9F,OAAO8F,YAAYC,QAAxB,CAGA,IAAIC,EAAMC,OAAOjG,OAAO8F,YAAYC,QAAQG,OAAO,EAAG,IACtD,OAAOC,MAAMH,QAAOhH,EAAYgH,IAEpCJ,EAAMQ,OAAS,WACX,QAA6B,IAAlBR,EAAMS,QACb,OAAOT,EAAMS,QAEjB,GAAsB,oBAAXrG,OAEP,OADA4F,EAAMS,SAAU,GACT,EAEX,IACIT,EAAMS,QAA6D,qBAAnDjT,OAAOU,UAAUmF,SAASzE,KAAK8R,OAAOC,SAE1D,MAAOjR,GACHsQ,EAAMS,SAAU,EAEpB,OAAOT,EAAMS,SAEVT,KAGPY,EAAkB,WAClB,SAASA,IACL,IAAIzK,EAAQnI,KACZA,KAAK2B,UAAW,EAChB3B,KAAK6S,UAAW,EAChB7S,KAAK8S,QAAU,IAAI3R,SAAQ,SAAUC,EAASC,GAC1C8G,EAAM/G,QAAU,SAAUd,GACtB6H,EAAM0K,UAAW,EACjBzR,EAAQd,IAEZ6H,EAAM9G,OAAS,SAAU6O,GACrB/H,EAAMxG,UAAW,EACjBN,EAAO6O,OAcnB,OAVA0C,EAAeG,MAAQ,SAAUC,GAC7B,OAAO,IAAI7R,SAAQ,SAAUC,GAAW,OAAO6R,WAAW7R,EAAS4R,OAEvExT,OAAOyH,eAAe2L,EAAe1S,UAAW,QAAS,CACrDgH,IAAK,WACD,OAAOlH,KAAK2B,UAAY3B,KAAK6S,UAEjCxL,YAAY,EACZC,cAAc,IAEXsL,KAGPM,EAAuBlB,EAAMQ,SAAWW,QAAQ,MAAQ/G,OAAOgH,UAC/DC,EAAM,WACN,SAASA,EAAG7C,EAAUC,GAMlB,GALAzQ,KAAKsT,UAAW,EAChBtT,KAAKuT,UAAYjD,IACjBtQ,KAAKwT,WAAa,GAClBxT,KAAKwQ,SAAWA,EAChBxQ,KAAKyQ,OAASA,GACTzQ,KAAKwQ,SAASiD,GACf,MAAM,IAAI3M,MAAM,iBAmKxB,OAhKAuM,EAAGnT,UAAUkR,UAAY,SAAU5B,GAC/B,OAAOxP,KAAKuT,UAAUhE,IAAI,YAAaC,IAE3C6D,EAAGnT,UAAUsN,KAAO,SAAUpH,EAAKmC,GAC/B,IAAIJ,EAAQnI,KACZ,OAAO,IAAImB,SAAQ,SAAUC,EAASC,GAClC8G,EAAMuL,yBAAwB,WAC1B,IAAIvM,EACJ,IACwB,QAAnBA,EAAKgB,EAAMsL,UAAuB,IAAPtM,GAAyBA,EAAGqG,KAAKpH,GAC7DhF,IAEJ,MAAOM,GACHL,EAAOK,MAEZL,OAGXgS,EAAGnT,UAAUqR,KAAO,WAChB,IAAIpJ,EAAQnI,KAGZ,OAFAA,KAAKyQ,OAAOkD,KAAK,iBACjB3T,KAAKsT,UAAW,EACT,IAAInS,SAAQ,SAAUC,EAASC,GAClC8G,EAAMuL,wBAAwBtS,EAASC,OAG/CgS,EAAGnT,UAAUoR,MAAQ,WAKjB,OAJAtR,KAAKsT,UAAW,EACZtT,KAAKyT,IACLzT,KAAKyT,GAAGnC,QAELnQ,QAAQC,WAEnBiS,EAAGnT,UAAUmR,mBAAqB,SAAU7B,GACxC,OAAOxP,KAAKuT,UAAUhE,IAAI,qBAAsBC,IAEpD6D,EAAGnT,UAAU0E,KAAO,WAChB,MAAO,MAAQ5E,KAAKwQ,SAASiD,IAEjCJ,EAAGnT,UAAUiO,UAAY,WACrB,IAAIhH,EACe,QAAlBA,EAAKnH,KAAKyT,UAAuB,IAAPtM,GAAyBA,EAAGmK,QACvD,IAAIsC,EAAK,IAAIhB,EAIb,OAHA5S,KAAK0T,yBAAwB,WACzBE,EAAGxS,aAEAwS,EAAGd,SAEdO,EAAGnT,UAAUwT,wBAA0B,SAAUlE,EAAUqE,GACvD,IAAI1M,EACJ0M,EAASA,MAAAA,EAAuCA,eAC3C7T,KAAKsT,SAIkE,KAApD,QAAlBnM,EAAKnH,KAAKyT,UAAuB,IAAPtM,OAAgB,EAASA,EAAG2M,aAI5D9T,KAAKwT,WAAWtQ,KAAK,CAAEsM,SAAUA,EAAUqE,OAAQA,IAC/C7T,KAAKwT,WAAW7S,OAAS,GAG7BX,KAAK+T,cAPDvE,IAJAqE,EAAO,sBAAwB7T,KAAKwQ,SAASiD,GAAK,oCAa1DJ,EAAGnT,UAAU6T,WAAa,SAAUC,EAAeC,GAC/C,OAAOnT,EAAUd,UAAM,OAAQ,GAAQ,WACnC,IACImI,EAAQnI,KACZ,OAAO+B,EAAY/B,MAAM,SAAU+N,GAC/B,OAAQA,EAAG1L,OACP,KAAK,EAID,QAHsB+I,IAAlB4I,IACAA,EAAgBhU,KAAKwQ,SAAS0D,wBAEd9I,IAAhB6I,EAA2B,CAC3B,GAAoB,IAAhBA,EAEA,OADAjU,KAAKmU,qBAAqB,sBAAwBnU,KAAKwQ,SAASiD,GAAK,kCAC9D,CAAC,GAEZzT,KAAKyQ,OAAO2D,MAAM,cAAgBH,EAAc,sBAAwBD,EAAgB,QAE5FjG,EAAG1L,MAAQ,EACf,KAAK,EAED,OADA0L,EAAGxL,KAAKW,KAAK,CAAC,EAAG,GAAK,IACf,CAAC,EAAGlD,KAAKqU,kBACpB,KAAK,EAGD,OAFAtG,EAAGzL,OACHtC,KAAKmU,uBACE,CAAC,EAAG,GACf,KAAK,EAMD,OALKpG,EAAGzL,OACR2Q,YAAW,WACP,IAAIqB,OAA0BlJ,IAAhB6I,OAA4B7I,EAAY6I,EAAc,EACpE9L,EAAM4L,WAAWC,EAAeM,KACjCN,GACI,CAAC,EAAG,GACf,KAAK,EAAG,MAAO,CAAC,WAKhCX,EAAGnT,UAAUmU,eAAiB,WAC1B,IAAIlM,EAAQnI,KACR4T,EAAK,IAAIhB,EAsCb,OArCA5S,KAAKyQ,OAAO2D,MAAM,oBAAsBpU,KAAKwQ,SAASiD,GAAK,OAC3DzT,KAAKyT,GAAK,IAAIP,EAAqBlT,KAAKwQ,SAASiD,IAAM,IACvDzT,KAAKyT,GAAGc,QAAU,SAAUrE,GACxB,IAAIsE,EAAS,GACb,IACIA,EAASC,KAAKC,UAAUxE,GAE5B,MAAOZ,GACH,IAAIqF,EAAS,IAAIC,QAUjBJ,EAASC,KAAKC,UAAUxE,GATT,SAAU5L,EAAK/C,GAC1B,GAAqB,iBAAVA,GAAgC,OAAVA,EAAgB,CAC7C,GAAIoT,EAAOE,IAAItT,GACX,OAEJoT,EAAOpF,IAAIhO,GAEf,OAAOA,KAIfqS,EAAGvS,OAAO,SACV8G,EAAM2M,qBAAoB,EAAON,IAErCxU,KAAKyT,GAAGsB,QAAU,SAAU7E,GACxB/H,EAAMsI,OAAOkD,KAAK,aAAezD,GACjC0D,EAAGvS,OAAO,UACV8G,EAAM2M,qBAAoB,IAE9B9U,KAAKyT,GAAGuB,OAAS,WACb,IAAI7N,EACJgB,EAAMsI,OAAOkD,KAAK,cAAmD,QAAlCxM,EAAKgB,EAAMqI,SAASyE,gBAA6B,IAAP9N,OAAgB,EAASA,EAAG+N,cACzGtB,EAAGxS,UACH+G,EAAM2M,qBAAoB,IAE9B9U,KAAKyT,GAAG5B,UAAY,SAAUd,GAC1B5I,EAAMoL,UAAUzD,QAAQ,YAAaiB,EAAQe,OAE1C8B,EAAGd,SAEdO,EAAGnT,UAAUiU,qBAAuB,SAAU7E,GAC1CtP,KAAKwT,WAAWnN,SAAQ,SAAU8O,GAC1B7F,EACI6F,EAAUtB,QACVsB,EAAUtB,OAAOvE,GAIrB6F,EAAU3F,cAGlBxP,KAAKwT,WAAa,IAEtBH,EAAGnT,UAAU4U,oBAAsB,SAAUM,EAAQZ,GACjDxU,KAAKuT,UAAUzD,QAAQ,qBAAsBsF,EAAQZ,IAElDnB,KAUX,IAAIgC,EAAO,EAgBX,IAMIC,EACAC,EAEAC,EATAC,EAAiB,CACjBC,UAVJ,WAEI,OADAL,GAAe,KAAPA,EAAc,OAAS,gBAU/BA,KANJ,SAAiBM,GACbN,EAAOM,IAQPC,EAAW,mEAMf,SAASC,IACLL,GAAW,EAGf,SAASM,EAAcC,GACnB,GAAKA,GAQL,GAAIA,IAAeT,EAAnB,CAIA,GAAIS,EAAWpV,SAAWiV,EAASjV,OAC/B,MAAM,IAAImG,MAAM,uCAAyC8O,EAASjV,OAAS,qCAAuCoV,EAAWpV,OAAS,gBAAkBoV,GAG5J,IAAIC,EAASD,EAAWE,MAAM,IAAIrM,QAAO,SAASsM,EAAMC,EAAKzQ,GAC1D,OAAOyQ,IAAQzQ,EAAI0Q,YAAYF,MAGlC,GAAIF,EAAOrV,OACP,MAAM,IAAImG,MAAM,uCAAyC8O,EAASjV,OAAS,yDAA2DqV,EAAOjR,KAAK,OAGtJuQ,EAAWS,EACXF,UAxBQP,IAAaM,IACbN,EAAWM,EACXC,KAwDZ,SAASQ,IACL,OAAIb,IAGJA,EAtBJ,WACSF,GACDQ,EAAcF,GAQlB,IALA,IAGIU,EAHAC,EAAcjB,EAASW,MAAM,IAC7BO,EAAc,GACdnT,EAAIoS,EAAeC,YAGhBa,EAAY5V,OAAS,GACxB0C,EAAIoS,EAAeC,YACnBY,EAAiBG,KAAKC,MAAMrT,EAAIkT,EAAY5V,QAC5C6V,EAAYtT,KAAKqT,EAAYI,OAAOL,EAAgB,GAAG,IAE3D,OAAOE,EAAYzR,KAAK,IAOb6R,IAcf,IAAIC,EAAa,CACbC,WAlDJ,SAAoBf,GAEhB,OADAD,EAAcC,GACPT,GAiDPD,KA9CJ,SAAmBA,GACfI,EAAeJ,KAAKA,GAChBE,IAAiBF,IACjBQ,IACAN,EAAeF,IA2CnB0B,OARJ,SAAgBlH,GAEZ,OADuBwG,IACCxG,IAOxB2F,SAAUa,GAGVW,EAA2B,iBAAX5K,SAAwBA,OAAO4K,QAAU5K,OAAO6K,UAWpE,IAAIC,EATJ,WACI,IAAKF,IAAWA,EAAOG,gBACnB,OAAyC,GAAlCV,KAAKC,MAAsB,IAAhBD,KAAKW,UAE3B,IAAIC,EAAO,IAAIC,WAAW,GAE1B,OADAN,EAAOG,gBAAgBE,GACN,GAAVA,EAAK,IAmBhB,IAAIE,EAdJ,SAAgBR,EAAQS,GAMpB,IALA,IACI3V,EADA4V,EAAc,EAGdC,EAAM,IAEF7V,GACJ6V,GAAYX,EAAWS,GAAW,EAAIC,EAAgB,GAASP,KAC/DrV,EAAO2V,EAAUf,KAAKkB,IAAI,GAAIF,EAAc,GAC5CA,IAEJ,OAAOC,GAkBX,IAAIE,EARJ,SAAgBxO,GACZ,IAAI0N,EAAaD,EAAWrB,WAC5B,MAAO,CACHrD,QAA+C,GAAtC2E,EAAWe,QAAQzO,EAAGkJ,OAAO,EAAG,IACzCZ,OAA8C,GAAtCoF,EAAWe,QAAQzO,EAAGkJ,OAAO,EAAG,MAqBhD,IAAIwF,EAfJ,SAAmB1O,GACf,IAAKA,GAAoB,iBAAPA,GAAmBA,EAAGzI,OAAS,EAC7C,OAAO,EAKX,IAFA,IAAImW,EAAaD,EAAWC,aACxBiB,EAAM3O,EAAGzI,OACLH,EAAI,EAAGA,EAAIuX,EAAIvX,IACnB,IAAmC,IAA/BsW,EAAWe,QAAQzO,EAAG5I,IACtB,OAAO,EAGf,OAAO,GAKPwX,EAxLJ,SAA8BC,EAAIC,GACjC,OAAiCD,EAA1BC,EAAS,CAAEC,QAAS,IAAiBD,EAAOC,SAAUD,EAAOC,QAuLzDC,EAAqB,SAAUF,GAU3C,IAaIG,EAGAC,EANAC,EAAmB,EAYvB,SAASC,IAEL,IAAId,EAAM,GAENe,EAAUhC,KAAKC,MAAmC,MAA5B3S,KAAKkB,MA1BjB,gBA0Cd,OAdIwT,IAAYH,EACZD,KAEAA,EAAU,EACVC,EAAkBG,GAGtBf,GAAYH,EAASV,EAAWE,OA/BtB,GAgCVW,GAAYH,EAASV,EAAWE,OAAQwB,GACpCF,EAAU,IACVX,GAAYH,EAASV,EAAWE,OAAQsB,IAE5CX,GAAYH,EAASV,EAAWE,OAAQ0B,GA2C5CP,EAAOC,QAAUK,EACjBN,EAAOC,QAAQK,SAAWA,EAC1BN,EAAOC,QAAQ9C,KAjCf,SAAcqD,GAEV,OADA7B,EAAWxB,KAAKqD,GACTR,EAAOC,SAgClBD,EAAOC,QAAQzG,OAvBf,SAAgBiH,GAEZ,OADAJ,EAAkBI,EACXT,EAAOC,SAsBlBD,EAAOC,QAAQrB,WAdf,SAAoB8B,GAKhB,YAJsBxN,IAAlBwN,GACA/B,EAAWC,WAAW8B,GAGnB/B,EAAWrB,YAUtB0C,EAAOC,QAAQU,OAASjB,EACxBM,EAAOC,QAAQL,QAAUA,KASrBgB,GAPQd,EAAMQ,SACNR,EAAM3C,KACN2C,EAAMtG,OACNsG,EAAMlB,WACNkB,EAAMa,OACNb,EAAMF,QAEJE,GAEd,SAASe,EAAe9K,EAAQnB,EAAY2D,EAAQuI,EAAiBC,GACnD,MAAVhL,IACAA,EAAS,UAEb+K,EAAkBA,GAAmB,CAAC,WACtCC,EAAgBA,GAAiB,CAAC,SAClC,IAEIC,EAFAC,GAAW,EACXC,GAAkB,EAElBC,GAAgB,EAChBrK,EAAYsB,IAChBxD,EAAWwM,cAuEX,WACID,GAAgB,EAChB5I,EAAO2D,MAAM,sBACb+E,GAAW,EACXC,GAAkB,EAClBpK,EAAUc,QAAQ,SAAU,CAAEwJ,cAAc,OA3EhDxM,EAAWyM,UA6EX,WACIF,GAAgB,EACZD,IACA3I,EAAO2D,MAAM,iDACbrP,EAAKmU,OAhFbpM,EAAW0M,GAAG,WAAW,SAAUpT,GAAO,OAAOqT,EAAqBrT,MACtE0G,EAAW0M,GAAG,SAAS,SAAUpT,GAAO,OAAOsT,EAAmBtT,MAClE0G,EAAW0M,GAAG,UAAU,SAAUpT,GAAO,OAAOqT,EAAqBrT,MACjE4S,GACAA,EAAgB3S,SAAQ,SAAUsT,GAC9B7M,EAAW0M,GAAGG,GAAI,SAAUvT,GAAO,OAAOqT,EAAqBrT,SAGnE6S,GACAA,EAAc5S,SAAQ,SAAUsT,GAC5B7M,EAAW0M,GAAGG,GAAI,SAAUvT,GAAO,OAAOsT,EAAmBtT,SAGrE,IAAIwT,EAAc,GAClB,SAAS7U,EAAKwD,GAEV,OADA2Q,EAAiB3Q,EACV,IAAIpH,SAAQ,SAAUC,EAASC,GAClC,GAAI8X,EACA/X,QADJ,CAIA,IAAI4L,EACJ,GAAe,WAAXiB,EACAjB,EAAcqM,EAAgBlY,QAAQC,QAAQ,IAAMD,QAAQE,OAAO,iCAGnEoP,EAAO2D,MAAM,kBAAoBnG,GAOjCjB,EAAcQ,EANA,CACV3J,KAAM,OACNgW,YAAa5L,EACbA,OAAQ,SACR1F,QAASA,IAIjByE,EACKlL,MAAK,YA0BlB,WACI2O,EAAO2D,MAAM,YAAcnG,GAC3BkL,GAAW,EACX,IAAIW,EAAeV,EACnBA,GAAkB,EAClBpK,EAAUc,QAAQ,WAAYgK,GA9BtBC,GACA3Y,OAEC4Y,OAAM,SAAU9J,GACjBO,EAAO2D,MAAM,iBAAmBnG,EAAS,YAAcwG,KAAKC,UAAUxE,IACtE7O,EAAO6O,UAqDnB,SAASwJ,EAAmBtT,GACxB,GAAI6H,IAAW7H,EAAI6H,OAAnB,CAGA,IAAIgM,EAAY7T,EAAI8T,WACpB,GAAKD,EAAL,CAGA,IAAIE,EAAQP,EAAYK,GACnBE,GAGLA,EAAM7K,MAAMlJ,KAEhB,SAASqT,EAAqBrT,GAC1B,GAAIA,EAAI6H,SAAWA,EAAnB,CAGA,IAAIgM,EAAY7T,EAAI8T,WACpB,GAAKD,EAAL,CAGA,IAAIE,EAAQP,EAAYK,GACnBE,GAGLA,EAAMC,QAAQhU,KAElB,SAASiU,IACL,OAAOvB,IAEX,SAAStL,EAAKpH,EAAKkU,EAAK/R,GACpBA,EAAUA,GAAW,GACrBnC,EAAI8T,WAAa9T,EAAI8T,YAAcG,IACnCjU,EAAI6H,OAAS7H,EAAI6H,QAAUA,EACtB1F,EAAQgS,aACTnU,EAAIsI,QAAU5B,EAAW6B,QAE7B,IAAIsL,EAAY7T,EAAI8T,WACpB,OAAO,IAAI/Y,SAAQ,SAAUC,EAASC,GAClCuY,EAAYK,GAAa,CACrBG,QAAS,SAAUI,UACRZ,EAAYK,GACnBO,EAAWC,KAAOH,EAClBlZ,EAAQoZ,IAEZlL,MAAO,SAAUoL,GACbjK,EAAOkK,KAAK,cAAgBlG,KAAKC,UAAUgG,GAAY,gBAAkBjG,KAAKC,UAAUtO,WACjFwT,EAAYK,GACnBS,EAASD,KAAOH,EAChBjZ,EAAOqZ,KAGf5N,EACKU,KAAKpH,EAAKmC,GACVyR,OAAM,SAAU9J,GACjB0J,EAAYK,GAAW3K,MAAM,CAAEY,IAAKA,UAUhD,MAAO,CACHnL,KAAMA,EACN6V,MArHJ,WACI,MAAe,WAAX3M,EACO9M,QAAQC,WAEnBqP,EAAO2D,MAAM,oBAAsBnG,EAAS,OAM5CmL,GAAkB,EACX5L,EANQ,CACX3J,KAAM,QACNgW,YAAa5L,EACbA,OAAQ,WAGUnM,MAAK,WACvBqX,GAAW,EACXnK,EAAUc,QAAQ,eAyGtB5B,SAjFJ,SAAkBsB,GAId,OAHI2J,GACA3J,GAAS,GAENR,EAAUO,IAAI,WAAYC,IA8EjCqL,OA5EJ,SAAgBrL,GAIZ,OAHK2J,GACD3J,IAEGR,EAAUO,IAAI,SAAUC,IAyE/BhC,KAAMA,EACNsN,kBAZJ,SAA2B1U,GACvBA,EAAI8T,WAAa9T,EAAI8T,WAAa9T,EAAI8T,WAAaG,IACnDjU,EAAI6H,OAAS7H,EAAI6H,QAAUA,EAC3B7H,EAAIsI,QAAU5B,EAAW6B,OACzB7B,EAAWU,KAAKpH,IAShBoT,GAAI,SAAU3V,EAAM2L,GAChB1C,EAAW0M,GAAG3V,GAAM,SAAUuC,GAC1B,GAAIA,EAAI6H,SAAWA,EAGnB,IACIuB,EAASpJ,GAEb,MAAO1E,GACH+O,EAAOnB,MAAM,qBAAuB5N,EAAI,OAASA,EAAE0N,MAAQ,gBAAkBqF,KAAKC,UAAUtO,GAAM1E,QAI9G6X,SAAU,SAAU/J,GAAY,OAAO1C,EAAWyM,SAAS/J,IAC3DuL,UAAW,SAAUvL,GAAY,OAAO1C,EAAWiO,UAAUvL,IAC7D8J,aAAc,SAAU9J,GAAY,OAAO1C,EAAWwM,aAAa9J,IACnEb,aACI,OAAO7B,EAAW6B,QAEtBV,aACI,OAAOA,IAKnB,IAAI+M,EAAmB,WACnB,SAASA,EAAgBlO,EAAY0D,EAAUC,GAC3C,IAAItI,EAAQnI,KACZA,KAAK8M,WAAaA,EAClB9M,KAAKwQ,SAAWA,EAChBxQ,KAAKyQ,OAASA,EACdzQ,KAAKib,gBAAkB,EACvBjb,KAAKkb,WAAa,aAClBlb,KAAKmb,cAAgBnb,KAAKkb,WAAWva,OACrCX,KAAKob,WAAapb,KAAKmb,cAAgB,EACvCnb,KAAKqb,oBAAsBrb,KAAKkb,WAAW,GAC3Clb,KAAK0Q,SAAWJ,IAChBtQ,KAAKsb,aAAc,EACnBtb,KAAKub,gBAAiB,EACtBvb,KAAKwb,cAAe,EACpBxb,KAAKyb,qBAAuB,EAC5Bzb,KAAK0b,SAAW,GAChB5O,EAAWwM,cAAa,WACpBnR,EAAMwT,wBAEV3b,KAAK4b,OAgTT,OA9SApc,OAAOyH,eAAe+T,EAAgB9a,UAAW,aAAc,CAC3DgH,IAAK,WACD,OAAOlH,KAAKsb,aAEhBjU,YAAY,EACZC,cAAc,IAElB0T,EAAgB9a,UAAU2b,qBAAuB,SAAU9K,GACvD,IAAI5I,EAAQnI,KACRoG,EAAMqO,KAAKqH,MAAM/K,GAAS,SAAUzM,EAAK/C,GACzC,GAAqB,iBAAVA,EACP,OAAOA,EAEX,GAAIA,EAAMZ,OAASwH,EAAMiT,WACrB,OAAO7Z,EAEX,GAAIA,EAAM,KAAO4G,EAAMkT,oBACnB,OAAO9Z,EAEX,GAAIA,EAAMwa,UAAU,EAAG5T,EAAMgT,iBAAmBhT,EAAM+S,WAClD,OAAO3Z,EAEX,IACI,IAAIya,EAAeC,SAAS1a,EAAMwa,UAAU5T,EAAMgT,cAAe5Z,EAAMZ,QAAS,IAChF,OAAI4R,MAAMyJ,GACCza,EAEJ,IAAIwC,KAAKiY,GAEpB,MAAOE,GACH,OAAO3a,MAGf,MAAO,CACH6E,IAAKA,EACL+V,QAAS/V,EAAIvC,OAGrBmX,EAAgB9a,UAAUkc,oBAAsB,SAAUrL,GACtD,IAAIsL,EAAYtY,KAAK7D,UAAUoc,OAC/B,IACI,IAAIC,EAAevc,KAAKkb,WAKxB,OAJAnX,KAAK7D,UAAUoc,OAAS,WACpB,OAAOC,EAAevc,KAAKmF,WAElBsP,KAAKC,UAAU3D,WAI5BhN,KAAK7D,UAAUoc,OAASD,IAGhCrB,EAAgB9a,UAAUsc,qBAAuB,SAAUzL,GACvD,IAAKA,EAAQlN,KACT,MAAM,IAAIiD,MAAM,oCAEpB,MAAO,CACHV,IAAK2K,EACLoL,QAASpL,EAAQlN,OAGzBmX,EAAgB9a,UAAUuc,oBAAsB,SAAU1L,GACtD,OAAOA,GAEXiK,EAAgB9a,UAAUwc,MAAQ,SAAU3P,EAAQoB,GAChD,OAAOrN,EAAUd,UAAM,OAAQ,GAAQ,WACnC,IAAI2c,EAAuBC,EAAKzV,EAAI0V,EAAUC,EAAaC,EAAY3W,EAAK4W,EAAOjP,EAAIkP,EACvF,OAAOlb,EAAY/B,MAAM,SAAUkd,GAC/B,OAAQA,EAAG7a,OACP,KAAK,EASD,GARArC,KAAKyQ,OAAO2D,MAAM,iBAClBpU,KAAKmd,YAAcpQ,EACd/M,KAAKmd,cACNnd,KAAKmd,YAAc,CAAEC,SAAU,GAAIC,SAAU,KAEjDrd,KAAKub,gBAAiB,EACtBoB,EAAiB,GACjB3c,KAAK8M,WAAWwQ,aAAevQ,EAAOuQ,cACjCvQ,EAAOuQ,aAAc,MAAO,CAAC,EAAG,GACrC,IAAKnP,EAAW,MAAO,CAAC,EAAG,GAC3B+O,EAAG7a,MAAQ,EACf,KAAK,EAED,OADA6a,EAAG3a,KAAKW,KAAK,CAAC,EAAG,GAAK,IACf,CAAC,EAAGlD,KAAKud,iBACpB,KAAK,EAGD,OAFAP,EAAQE,EAAG5a,OACXyK,EAAOuQ,aAAeN,EACf,CAAC,EAAG,GACf,KAAK,EAGD,OAFAJ,EAAMM,EAAG5a,OACTtC,KAAKyQ,OAAOkK,KAAK,8CAAgDiC,MAAAA,OAAiC,EAASA,EAAI7L,UAAY6L,IACpH,CAAC,EAAG,GACf,KAAK,EAID,OAHAD,EAAea,OAAS,gBACxBb,EAAeK,MAAQjQ,EAAOuQ,aAC9Btd,KAAK8M,WAAWwQ,aAAevQ,EAAOuQ,aAC/B,CAAC,EAAG,IACf,KAAK,EACD,MAA0B,SAApBvQ,EAAO0Q,SAA6B,CAAC,EAAG,IAC9Cd,EAAee,SAAW,MAC1Bf,EAAea,OAAS,eAClBzQ,EAAO4Q,cAAgB5Q,EAAO6Q,WACpCzW,EAAKwV,EACE,CAAC,EAAG5P,EAAO4Q,aAAa5Q,EAAO6Q,UAAW,QAFM,CAAC,EAAG,IAG/D,KAAK,EAKD,OAJAzW,EAAG6V,MACEE,EAAG5a,OACCwP,KACAzM,SAAS,UACX,CAAC,EAAG,GACf,KAAK,EAAG,MAAM,IAAIyB,MAAM,uBACxB,KAAK,EAAG,MAAO,CAAC,EAAG,IACnB,KAAK,EACD,GAAIiG,EAAOiQ,MACPL,EAAea,OAAS,eACxBb,EAAeK,MAAQjQ,EAAOiQ,UAE7B,CAAA,IAAIjQ,EAAOqQ,SAMZ,MAAM,IAAItW,MAAM,uBAAyB2N,KAAKC,UAAU3H,IALxD4P,EAAea,OAAS,SACxBb,EAAeD,MAAQ3P,EAAOqQ,SAC9BT,EAAekB,OAAS9Q,EAAOsQ,SAKnCH,EAAG7a,MAAQ,GACf,KAAK,GACDwa,EAAW,CACPhZ,KAAM,QACNoR,SAAUjV,KAAKwQ,SAASyE,SACxB0H,eAAgBA,GAEhB5P,EAAO6Q,YACPf,EAAS3C,WAAanN,EAAO6Q,WAEjC5d,KAAK8d,aAAe/E,EAAc,SAAU/Y,KAAK8M,WAAY9M,KAAKyQ,OAAOsN,UAAU,iBAAkB,CACjG,UACA,QACA,2BAEJjB,EAAc,CAAEvC,YAAY,GACxBva,KAAKwb,eACLsB,EAAY9I,cAAgBhU,KAAKwQ,SAAS0D,kBAC1C4I,EAAYkB,WAAahe,KAAKwQ,SAASyN,mBAE3Cf,EAAG7a,MAAQ,GACf,KAAK,GACD6a,EAAG3a,KAAKW,KAAK,CAAC,GAAI,GAAI,GAAI,KAC1B6Z,OAAa,EACbG,EAAG7a,MAAQ,GACf,KAAK,GACD,MAAO,CAAC,EAAGrC,KAAK8d,aAAatQ,KAAKqP,OAAUzR,EAAW0R,IAC3D,KAAK,GAED,MAAmB,4BADnB1W,EAAM8W,EAAG5a,QACCuB,KAA2C,CAAC,EAAG,KACzDmZ,EAAQkB,OAAOC,KAAK/X,EAAIuW,eAAeK,MAAO,UACxCjQ,EAAO4Q,cAAgB5Q,EAAO6Q,WACpC7P,EAAK8O,EAASF,eACP,CAAC,EAAG5P,EAAO4Q,aAAa5Q,EAAO6Q,UAAWZ,KAFM,CAAC,EAAG,KAG/D,KAAK,GACDjP,EAAGiP,MACEE,EAAG5a,OACCwP,KACAzM,SAAS,UAClB6X,EAAG7a,MAAQ,GACf,KAAK,GAED,OADAwa,EAAS3C,WAAanN,EAAO6Q,UACtB,CAAC,EAAG,IACf,KAAK,GACD,GAAiB,YAAbxX,EAAIvC,KAEJ,OADAkZ,EAAa3W,EACN,CAAC,EAAG,IAEV,KAAiB,UAAbA,EAAIvC,KACH,IAAIiD,MAAM,0BAA4BV,EAAIoO,QAG1C,IAAI1N,MAAM,kDAAoDV,EAAIvC,MAEhF,KAAK,GAAI,MAAO,CAAC,EAAG,IACpB,KAAK,GAWD,OAVA7D,KAAKwb,cAAe,EACpBxb,KAAKyQ,OAAOkD,KAAK,gCAAkCoJ,EAAWrO,SAC9D1O,KAAK8M,WAAW6B,OAASoO,EAAWrO,QACpC1O,KAAK8M,WAAWsR,iBAAmBrB,EAAWsB,kBAC9Cre,KAAK8M,WAAWwR,iBAAmBvB,EAAWwB,kBAC1CxB,EAAWxU,UACXvI,KAAK8M,WAAWkQ,MAAQD,EAAWxU,QAAQiW,aAC3Cxe,KAAK8M,WAAW6G,KAAOoJ,EAAWxU,QAAQoL,MAE9C3T,KAAKye,aAAY,GACV,CAAC,EAAG1B,EAAWsB,mBAC1B,KAAK,GAGD,MAFApB,EAAQC,EAAG5a,OACXtC,KAAKyQ,OAAOnB,MAAM,kCAAoC2N,EAAMlM,SAAWkM,EAAM7W,KAAO6W,EAAMzI,QAAUyI,GAAQA,GACtGA,EACV,KAAK,GAID,OAHIlQ,GAAUA,EAAO4Q,cAAgB5Q,EAAO6Q,WACxC7Q,EAAO4Q,aAAa5Q,EAAO6Q,UAAW,MAEnC,CAAC,GACZ,KAAK,GAAI,MAAO,CAAC,WAKjC5C,EAAgB9a,UAAUwe,OAAS,WAC/B,OAAO5d,EAAUd,UAAM,OAAQ,GAAQ,WACnC,IAAI2e,EACJ,OAAO5c,EAAY/B,MAAM,SAAUmH,GAC/B,OAAQA,EAAG9E,OACP,KAAK,EASD,OARArC,KAAKyQ,OAAO2D,MAAM,kBAClBpU,KAAKub,gBAAiB,EAClBvb,KAAK4e,WACLC,aAAa7e,KAAK4e,WAEtBD,EAAW3e,KAAK0b,SAASoD,KAAI,SAAU7R,GACnCA,EAAQ2N,WAEL,CAAC,EAAGzZ,QAAQ4d,IAAIJ,IAC3B,KAAK,EAED,OADAxX,EAAG7E,OACI,CAAC,WAK5B0Y,EAAgB9a,UAAUqZ,SAAW,SAAU/J,GAI3C,OAHIxP,KAAKsb,aACL9L,IAEGxP,KAAK0Q,SAASnB,IAAI,aAAcC,IAE3CwL,EAAgB9a,UAAU+N,OAAS,SAAU+Q,EAAYC,EAAcjG,EAAiBC,GACpF,IAAIhM,EAAUjN,KAAK0b,SAAS9R,QAAO,SAAUrJ,GAAK,OAAOA,EAAE0N,SAAW+Q,KAAe,GAKrF,OAJK/R,IACDA,EAAU8L,EAAciG,EAAYhf,KAAK8M,WAAYmS,EAAcjG,EAAiBC,GACpFjZ,KAAK0b,SAASxY,KAAK+J,IAEhBA,GAEX+N,EAAgB9a,UAAUyb,mBAAqB,WAC3C,IAAIxT,EAAQnI,KAGZ,GAFAA,KAAKye,aAAY,GACAze,KAAKub,gBACJvb,KAAKwb,aAAc,CACjC,GAAIxb,KAAKyb,sBAAwB,EAC7B,OAEJzb,KAAKyb,uBAGT,GADAzb,KAAKyQ,OAAO2D,MAAM,qCAAuCpU,KAAKub,gBAC1Dvb,KAAKub,eAAgB,CACrB,IAAKvb,KAAKmd,YACN,MAAM,IAAIrW,MAAM,iBAEpB9G,KAAK8M,WAAW4P,MAAM1c,KAAKmd,aAAa,GACnCnD,OAAM,WACP/G,WAAW9K,EAAMwT,mBAAoB,UAIjDX,EAAgB9a,UAAUue,YAAc,SAAUld,GAC9CvB,KAAKsb,YAAc/Z,EACfvB,KAAKsb,aACLtb,KAAK0Q,SAASZ,QAAQ,eAG9BkL,EAAgB9a,UAAU0b,KAAO,WAC7B,IAAIzT,EAAQnI,KACPA,KAAKub,iBAGNvb,KAAKsb,aACLtb,KAAK8M,WAAWU,KAAK,CAAE3J,KAAM,SAEjC7D,KAAK4e,UAAY3L,YAAW,WACxB9K,EAAMyT,SACP,OAEPZ,EAAgB9a,UAAUgf,UAAY,WAIlC,OAAKlf,KAAK8d,aAGH9d,KAAK8d,aAAatQ,KANJ,CACjB3J,KAAM,iBAML/B,MAAK,SAAUqd,GAChB,OAAOA,EAAInC,SAJJ7b,QAAQE,OAAO,IAAIyF,MAAM,8BAOxCkU,EAAgB9a,UAAUqd,cAAgB,WACtC,QAAsBnS,WAAXgB,OAAsB,CAC7B,IAAIO,EAAWP,OAAOO,SACtB,GAAIA,EACA,OAAOA,EAASyS,aAGxB,OAAOje,QAAQE,OAAO,IAAIyF,MAAM,uBAE7BkU,KAGPqE,EAAuB,WACvB,SAASA,EAAoBC,GACzBtf,KAAKuf,WAAa,GAClBvf,KAAKwf,SAAW,GAChBxf,KAAKyf,KAAO,GACZzf,KAAK0f,aAAe,GACpB1f,KAAKsf,MAAQ,GACb,IAAK,IAAItP,EAAK,EAAG2P,EAAUL,EAAOtP,EAAK2P,EAAQhf,OAAQqP,IAAM,CACzD,IAAI4P,EAAOD,EAAQ3P,GACnBhQ,KAAKsf,MAAMM,EAAKhb,MAAQgb,EACxB5f,KAAKuf,WAAWrc,KAAK0c,EAAKhb,OA6DlC,OA1DAya,EAAoBnf,UAAUuI,KAAO,SAAUqE,GAC3C,IAAI3E,EAAQnI,KACZA,KAAK8M,WAAaA,EAClB,IAAK,IAAIkD,EAAK,EAAG7I,EAAKnH,KAAKuf,WAAYvP,EAAK7I,EAAGxG,OAAQqP,IAgBnD,IAfA,IAAI6P,EAAS1Y,EAAG6I,GACZ8P,EAAU,SAAUjc,GACpB,IAAIkc,EAAWC,EAAON,aAAa7b,GAMnC,GALKkc,IACDA,EAAW,GAEfA,GAAY,EACZC,EAAON,aAAa7b,GAAQkc,EACxBA,EAAW,EACX,MAAO,WAEX,IAAIE,EAAMnT,EAAW0M,GAAG3V,GAAM,SAAUuC,GAAO,OAAO+B,EAAM+X,eAAerc,EAAMuC,MACjF4Z,EAAOP,KAAK5b,GAAQoc,GAEpBD,EAAShgB,KACJ+N,EAAK,EAAGmP,EAAKld,KAAKsf,MAAMO,GAAQM,MAAOpS,EAAKmP,EAAGvc,OAAQoN,IAAM,CAElE+R,EADW5C,EAAGnP,MAK1BsR,EAAoBnf,UAAUggB,eAAiB,SAAUrc,EAAMuC,GAC3D,IAAIpG,KAAKogB,QAAWha,EAGpB,IAAK,IAAI4J,EAAK,EAAG7I,EAAKnH,KAAKuf,WAAYvP,EAAK7I,EAAGxG,OAAQqP,IAAM,CACzD,IAAIqQ,EAASlZ,EAAG6I,GAChB,IAAgD,IAA5ChQ,KAAKsf,MAAMe,GAAQF,MAAMtI,QAAQhU,GAAc,CAC/C,IAAI2b,EAAWxf,KAAKwf,SAASa,IAAW,GACxCrgB,KAAKwf,SAASa,GAAUb,EACxBA,EAAStc,KAAKkD,MAI1BiZ,EAAoBnf,UAAUogB,MAAQ,SAAU1b,EAAM4K,GAClD,IAAIrI,EACAqI,IACCxP,KAAKwf,SAAS5a,IAAS,IAAIyB,QAAQmJ,UAEjCxP,KAAKwf,SAAS5a,GACrB,IAAK,IAAIoL,EAAK,EAAGjC,EAAK/N,KAAKsf,MAAM1a,GAAMub,MAAOnQ,EAAKjC,EAAGpN,OAAQqP,IAAM,CAChE,IAAInM,EAAOkK,EAAGiC,GACdhQ,KAAK0f,aAAa7b,IAAS,EACvB7D,KAAK0f,aAAa7b,IAAS,IACA,QAA1BsD,EAAKnH,KAAK8M,kBAA+B,IAAP3F,GAAyBA,EAAGoZ,IAAIvgB,KAAKyf,KAAK5b,WACtE7D,KAAKyf,KAAK5b,UACV7D,KAAK0f,aAAa7b,WAG1B7D,KAAKsf,MAAM1a,GACb5E,KAAKsf,MAAM3e,SACZX,KAAKogB,QAAS,IAGff,KAGPmB,EAAc,WACd,SAASA,EAAWhQ,EAAUC,GAW1B,GAVAzQ,KAAKwQ,SAAWA,EAChBxQ,KAAKyQ,OAASA,EACdzQ,KAAKygB,gBAAkB,GACvBzgB,KAAK0gB,IAAM,EACX1gB,KAAK0Q,SAAWJ,IAChBtQ,KAAK2gB,YAAa,EAClB3gB,KAAK4gB,SAAU,GACfpQ,EAAWA,GAAY,IACdyN,kBAAoBzN,EAASyN,mBAAqB,GAC3DzN,EAAS0D,kBAAoB1D,EAAS0D,mBAAqB,IACvD1D,EAASqQ,OACT7gB,KAAK6G,UAAY,IAAI0J,EAAgBC,EAASqQ,OAAQpQ,EAAOsN,UAAU,kBAEtE,GAAIvN,EAASsQ,aACd9gB,KAAK6G,UAAY,IAAI2K,EAAsBhB,EAASsQ,aAAcrQ,EAAOsN,UAAU,sBAElF,CAAA,QAAoB3S,IAAhBoF,EAASiD,GAId,MAAM,IAAI3M,MAAM,uCAHhB9G,KAAK6G,UAAY,IAAIwM,EAAG7C,EAAUC,EAAOsN,UAAU,OAKvD/d,KAAK4gB,QAAUnQ,EAAOsQ,WAAW,SACjCtQ,EAAOkD,KAAK,iBAAmB3T,KAAK6G,UAAUjC,OAAS,cACvD5E,KAAKwI,SAAW,IAAIwS,EAAgBhb,KAAMwQ,EAAUC,EAAOsN,UAAU,aACrE/d,KAAK6G,UAAUwK,mBAAmBrR,KAAKghB,wBAAwBC,KAAKjhB,OACpEA,KAAK6G,UAAUuK,UAAUpR,KAAKkhB,uBAAuBD,KAAKjhB,OACtDwQ,EAAS2Q,aAAe3Q,EAAS2Q,YAAYxgB,SAC7CX,KAAKohB,SAAW,IAAI/B,EAAoB7O,EAAS2Q,aACjDnhB,KAAKohB,SAAS3Y,KAAKzI,OA8I3B,OA3IAR,OAAOyH,eAAeuZ,EAAWtgB,UAAW,kBAAmB,CAC3DgH,IAAK,WACD,IAAIC,EACJ,OAAgC,QAAxBA,EAAKnH,KAAKwI,gBAA6B,IAAPrB,OAAgB,EAASA,EAAG8T,iBAExE5T,YAAY,EACZC,cAAc,IAElBkZ,EAAWtgB,UAAUsN,KAAO,SAAUuD,EAASxI,GAC3C,GAAIvI,KAAK6G,UAAUqK,YACflR,KAAK6G,UAAUwa,uBAAwB,CACvC,IAAIjb,EAAMpG,KAAKwI,SAASiU,oBAAoB1L,GAI5C,OAHI/Q,KAAK4gB,SACL5gB,KAAKyQ,OAAO6Q,MAAM,MAAQ7M,KAAKC,UAAUtO,IAEtCpG,KAAK6G,UAAUqK,WAAW9K,EAAKmC,GAGtC,IAAIgZ,EAAavhB,KAAKwI,SAAS4T,oBAAoBrL,GAInD,OAHI/Q,KAAK4gB,SACL5gB,KAAKyQ,OAAO6Q,MAAM,MAAQC,GAEvBvhB,KAAK6G,UAAU2G,KAAK+T,EAAYhZ,IAG/CiY,EAAWtgB,UAAUsZ,GAAK,SAAU3V,EAAMmN,GACtCnN,EAAOA,EAAKmI,mBACuBZ,IAA/BpL,KAAKygB,gBAAgB5c,KACrB7D,KAAKygB,gBAAgB5c,GAAQ,IAEjC,IAAIuF,EAAKpJ,KAAK0gB,MAEd,OADA1gB,KAAKygB,gBAAgB5c,GAAMuF,GAAM4H,EAC1B,CACHnN,KAAMA,EACNuF,GAAIA,IAGZoX,EAAWtgB,UAAUqgB,IAAM,SAAU5M,UAC1B3T,KAAKygB,gBAAgB9M,EAAK9P,KAAKmI,eAAe2H,EAAKvK,KAE9D5J,OAAOyH,eAAeuZ,EAAWtgB,UAAW,cAAe,CACvDgH,IAAK,WACD,OAAOlH,KAAKwI,SAASgZ,YAEzBna,YAAY,EACZC,cAAc,IAElBkZ,EAAWtgB,UAAU6a,UAAY,SAAUvL,GACvC,IAAIrH,EAAQnI,KACZ,OAAOA,KAAKwI,SAAS+Q,UAAS,WAC1B/J,EAASrH,EAAMqI,SAASiD,IAAMtL,EAAMqI,SAASsQ,cAAgB,QAGrEN,EAAWtgB,UAAUoZ,aAAe,SAAU9J,GAC1C,OAAOxP,KAAK0Q,SAASnB,IAAI,eAAgBC,IAE7CgR,EAAWtgB,UAAUwc,MAAQ,SAAU+E,EAAatT,GAChD,OAAOrN,EAAUd,UAAM,OAAQ,GAAQ,WAEnC,OAAO+B,EAAY/B,MAAM,SAAUmH,GAC/B,OAAQA,EAAG9E,OACP,KAAK,EAAG,MAAO,CAAC,EAAGrC,KAAK6G,UAAU0K,QAClC,KAAK,EAGD,OAFApK,EAAG7E,OAEI,CAAC,EADGtC,KAAKwI,SAASkU,MAAM+E,EAAatT,YAMhEqS,EAAWtgB,UAAUwe,OAAS,WAC1B,OAAO5d,EAAUd,UAAM,OAAQ,GAAQ,WACnC,OAAO+B,EAAY/B,MAAM,SAAUmH,GAC/B,OAAQA,EAAG9E,OACP,KAAK,EAAG,MAAO,CAAC,EAAGrC,KAAKwI,SAASkW,UACjC,KAAK,EAED,OADAvX,EAAG7E,OACI,CAAC,EAAGtC,KAAK6G,UAAUyK,SAC9B,KAAK,EAED,OADAnK,EAAG7E,OACI,CAAC,WAK5Bke,EAAWtgB,UAAUqZ,SAAW,SAAU/J,GACtC,OAAOxP,KAAKwI,SAAS+Q,SAAS/J,IAElCgR,EAAWtgB,UAAU+N,OAAS,SAAUA,EAAQ+K,EAAiBC,GAC7D,OAAOjZ,KAAKwI,SAASyF,OAAOA,EAAQjO,KAAKyQ,OAAOsN,UAAU,UAAY9P,GAAS+K,EAAiBC,IAEpGuH,EAAWtgB,UAAUgf,UAAY,WAC7B,OAAOlf,KAAKwI,SAAS0W,aAEzBsB,EAAWtgB,UAAUiO,UAAY,WAC7B,OAAOnO,KAAK6G,UAAUsH,aAE1BqS,EAAWtgB,UAAUwhB,kBAAoB,SAAU3Q,EAASlN,GACxD,IAAIsE,EAAQnI,KACR2hB,EAAW3hB,KAAKygB,gBAAgB5c,EAAKmI,oBACxBZ,IAAbuW,GACAniB,OAAO2E,KAAKwd,GAAUtb,SAAQ,SAAUub,GACpC,IAAIC,EAAUF,EAASC,GACvB,QAAgBxW,IAAZyW,EACA,IACIA,EAAQ9Q,GAEZ,MAAOzB,GACHnH,EAAMsI,OAAOnB,MAAM,+BAAiCA,EAAMF,MAAOE,QAMrFkR,EAAWtgB,UAAU8gB,wBAA0B,SAAUjG,GACjD/a,KAAK2gB,aAAe5F,IAGxB/a,KAAK2gB,WAAa5F,EACdA,EACA/a,KAAK0Q,SAASZ,QAAQ,aAGtB9P,KAAK0Q,SAASZ,QAAQ,kBAG9B0Q,EAAWtgB,UAAUghB,uBAAyB,SAAU9a,GACpD,IAAI0b,EAEAA,EADe,iBAAR1b,EACEpG,KAAKwI,SAASqT,qBAAqBzV,GAGnCpG,KAAKwI,SAASgU,qBAAqBpW,GAE5CpG,KAAK4gB,SACL5gB,KAAKyQ,OAAO6Q,MAAM,MAAQ7M,KAAKC,UAAUoN,IAE7C9hB,KAAK0hB,kBAAkBI,EAAO1b,IAAK0b,EAAO3F,UAEvCqE,KAGPuB,GAAQ,CAAC,QAAS,QAAS,OAAQ,OAAQ,QAAS,OACpDC,GAAU,WACV,SAASA,EAAOpd,EAAMgC,EAAQqb,GAC1BjiB,KAAK4E,KAAOA,EACZ5E,KAAK4G,OAASA,EACd5G,KAAKkiB,WAAa,GAClBliB,KAAKiiB,MAAQ5S,QACbrP,KAAKmiB,aAAc,EACnBniB,KAAK4E,KAAOA,EAER5E,KAAK8E,KADL8B,EACYA,EAAO9B,KAAO,IAAMF,EAGpBA,EAEhB5E,KAAKoiB,eAAiB,IAAMpiB,KAAK8E,KAAO,IACxC9E,KAAKqiB,qBAAuBJ,EACxBA,IACAjiB,KAAKiiB,MAAQA,EACbjiB,KAAKmiB,aAAc,GAiH3B,OA9GAH,EAAO9hB,UAAU6d,UAAY,SAAUnZ,GACnC,IAAI0d,EAActiB,KAAKkiB,WAAWtY,QAAO,SAAUmU,GAC/C,OAAOA,EAAUnZ,OAASA,KAC3B,GACH,QAAoBwG,IAAhBkX,EACA,OAAOA,EAEX9iB,OAAO2E,KAAKnE,MAAMqG,SAAQ,SAAU/B,GAChC,GAAIA,IAAQM,EACR,MAAM,IAAIkC,MAAM,2CAGxB,IAAImZ,EAAM,IAAI+B,EAAOpd,EAAM5E,KAAMA,KAAKmiB,YAAcniB,KAAKiiB,WAAQ7W,GAEjE,OADApL,KAAKkiB,WAAWhf,KAAK+c,GACdA,GAEX+B,EAAO9hB,UAAUqiB,aAAe,SAAUC,GACtC,IAAIrb,EAIJ,OAHIqb,IACAxiB,KAAKyiB,cAAgBD,GAElBxiB,KAAKyiB,gBAAyC,QAAtBtb,EAAKnH,KAAK4G,cAA2B,IAAPO,OAAgB,EAASA,EAAGob,iBAE7FP,EAAO9hB,UAAUwiB,aAAe,SAAUF,GACtC,IAAIrb,EAIJ,OAHIqb,IACAxiB,KAAK2iB,cAAgBH,GAElBxiB,KAAK2iB,gBAAyC,QAAtBxb,EAAKnH,KAAK4G,cAA2B,IAAPO,OAAgB,EAASA,EAAGub,iBAE7FV,EAAO9hB,UAAU0iB,IAAM,SAAU7R,EAASyR,EAAOlT,GAC7CtP,KAAK6iB,eAAeL,GAAS,OAAQzR,EAASzB,IAElD0S,EAAO9hB,UAAUohB,MAAQ,SAAUvQ,GAC/B/Q,KAAK4iB,IAAI7R,EAAS,UAEtBiR,EAAO9hB,UAAUkU,MAAQ,SAAUrD,GAC/B/Q,KAAK4iB,IAAI7R,EAAS,UAEtBiR,EAAO9hB,UAAUyT,KAAO,SAAU5C,GAC9B/Q,KAAK4iB,IAAI7R,EAAS,SAEtBiR,EAAO9hB,UAAUya,KAAO,SAAU5J,GAC9B/Q,KAAK4iB,IAAI7R,EAAS,SAEtBiR,EAAO9hB,UAAUoP,MAAQ,SAAUyB,EAASb,GACxClQ,KAAK4iB,IAAI7R,EAAS,UAEtBiR,EAAO9hB,UAAU6gB,WAAa,SAAUyB,EAAOM,GAG3C,OAFef,GAAMlK,QAAQ2K,IACRT,GAAMlK,QAAQiL,GAAe9iB,KAAK0iB,gBAAkB,UAG7EV,EAAO9hB,UAAU2iB,eAAiB,SAAUL,EAAOzR,EAASzB,GACxD,IAAInI,EAAI4G,EACJgV,EAAa/iB,KAAKoiB,eACtB,GAAc,UAAVI,IAAsBlT,EAAO,CAC7B,IAAI5N,EAAI,IAAIoF,MACRpF,EAAE0N,QACF2B,EACIA,EACI,KACArP,EAAE0N,MACG6G,MAAM,MACNzP,MAAM,GACNzB,KAAK,OAY1B,GATI/E,KAAK+gB,WAAWyB,EAAOxiB,KAAKuiB,kBACG,QAAzBpb,EAAK6a,EAAOgB,eAA4B,IAAP7b,OAAgB,EAASA,EAAG8b,QAAQ,CAAEre,KAAMod,EAAOkB,oBAAqBviB,QAAU,IAC3F,QAAzBoN,EAAKiU,EAAOgB,eAA4B,IAAPjV,GAAyBA,EAAGoV,OAAOnB,EAAOkB,kBAAmB,CAC3F9c,IAAK,GAAK2K,EACVN,OAAQsS,EACRP,MAAOA,KAIfxiB,KAAK+gB,WAAWyB,GAAQ,CACxB,IAAIY,EAAS,GACb,GAAIpjB,KAAKqiB,oBAAqB,CAC1B,IAAIgB,EAAO,IAAItf,KAEfqf,EAAS,KADEC,EAAKC,WAAa,IAAMD,EAAKE,aAAe,IAAMF,EAAKG,aAAe,IAAMH,EAAKI,mBACtE,MAAQjB,EAAQ,KAE1C,IAAIkB,EAAU,GAAKN,EAASL,EAAa,KAAOhS,EAChD,OAAQyR,GACJ,IAAK,QACDxiB,KAAKiiB,MAAM7N,MAAMsP,GACjB,MACJ,IAAK,QACG1jB,KAAKiiB,MAAM7N,MACXpU,KAAKiiB,MAAM7N,MAAMsP,GAGjB1jB,KAAKiiB,MAAMW,IAAIc,GAEnB,MACJ,IAAK,OACD1jB,KAAKiiB,MAAMtO,KAAK+P,GAChB,MACJ,IAAK,OACD1jB,KAAKiiB,MAAMtH,KAAK+I,GAChB,MACJ,IAAK,QACD1jB,KAAKiiB,MAAM3S,MAAMoU,EAASpU,MAK1C0S,EAAOkB,kBAAoB,oBACpBlB,KAiBP2B,GAA2B,CAC3B/e,WACI,MAAO,WAEXub,YACI,MAAO,CAnBiB,iBACE,UACE,YACH,kBACF,gBACI,oBACC,qBACC,sBACJ,kBACE,oBACH,iBACC,kBACA,YA2BjC,SAASyD,GAAeC,EAAeC,EAAKnX,GACxC,IAAIxF,EAAI4G,EAAImP,EAAI6G,EACZC,EACJ,GAAIhS,EAAMQ,SAAU,CAChB,IAAIyR,EAAwBtR,QAAQuR,IAAIC,sBACxC,GAAIF,EACA,IACID,EAAsBvP,KAAKqH,MAAMmI,GAErC,MAAOG,KAgIf,IAAItX,EA5HJ,WACI,IAAI3F,EAAI4G,EAAImP,EAAI6G,EAkBZM,EACAC,EACAC,EACAC,EACAC,EArBAC,EAAWb,EAAcc,QACzB1J,EAA0G,QAAvF9T,EAAKud,MAAAA,OAA2C,EAASA,EAASzJ,uBAAoC,IAAP9T,EAAgBA,EAAK,EACvI+M,EAAoBwQ,MAAAA,OAA2C,EAASA,EAASxQ,kBACjF+J,EAAoByG,MAAAA,OAA2C,EAASA,EAASzG,kBAEjFxK,EAAKiR,MAAAA,OAA2C,EAASA,EAASjR,GAClEqN,EAAe4D,MAAAA,OAA2C,EAASA,EAAS5D,aAC5ED,EAAS6D,MAAAA,OAA2C,EAASA,EAAS7D,OACtElU,IACA8G,EAAK9G,EAASiY,OAEd5S,EAAMQ,UAAYwR,GAAuBA,EAAoBY,QAC7DnR,EAAKuQ,EAAoBY,OAExBnR,GAAOqN,GAAiBD,IACzBpN,EAXY,uBAkBhB,IAAI7G,EA6CR,WACI,GAAIiX,EAAc3O,YACd,OAAO2O,EAAc3O,YAEzB,GAAIvI,EACA,OAAOA,EAASkY,gBAEpB,IAAIC,EAAMhM,IACV,GAAI9G,EAAMQ,SACN,OAAIwR,EACOA,EAAoBe,kBAAkBngB,KAE1C,SAAWkgB,EAEtB,GAAsB,oBAAX1Y,QAA8C,oBAAbX,SACxC,OAAOA,SAASS,MAAS,KAAO4Y,EAAM,IAE1C,OAAOA,EA9DOE,GACVC,EAAgBrY,OACI,IAAbD,GACP2X,EAAW3X,EAAS2X,SACpBC,EAAM5X,EAAS4X,IACX5X,EAASuX,MACTM,EAAc7X,EAASuX,IAAIA,IAC3BO,EAAS9X,EAASuX,IAAIO,QAE1BQ,EAAgD,QAA/BlX,EAAKpB,EAASuI,mBAAgC,IAAPnH,EAAgBA,EAAK,WAC7EsW,EAAa1X,EAASuY,eAEjBlT,EAAMQ,UACX+R,EAAM5R,QAAQ4R,IACVP,IACAQ,EAAcR,EAAoBE,IAClCO,EAAST,EAAoBS,OAC7BJ,EAAaL,EAAoBK,aAIrCC,EAAWlY,OAAOxH,MAAQkU,IAE9B,IAAIqI,EAA0G,QAA3F4C,EAAsC,QAAhC7G,EAAK2G,EAAcc,eAA4B,IAAPzH,OAAgB,EAASA,EAAGiE,mBAAgC,IAAP4C,EAAgBA,EAAK,GAE3I,OADA5C,EAAYje,KAAKygB,IACV,CACH1O,SAAU,CACNC,YAAa+P,EACbJ,gBAAiBjY,EACjB0X,SAAUA,EACVhW,SAAU+V,EACV1R,QAAS4R,EACTE,OAAQA,EACRD,YAAaA,EACbW,IAAKrB,EAAI3R,SAzEX,SA2EF+B,kBAAmBA,EACnBT,GAAIA,EACJqN,aAAcA,EACdD,OAAQA,EACR5F,gBAAiBA,EACjBgD,kBAAmBA,EACnBkD,YAAaA,GA0DJiE,GACjB,MAAO,CACHC,IAAkC,QAA5Ble,EAAK0c,EAAcwB,WAAwB,IAAPle,GAAgBA,EAC1Dme,KAvCJ,WACI,IAAIne,EAAI4G,EACR,MAAkC,iBAAvB8V,EAAcyB,KACd,CACHtI,MAAO6G,EAAcyB,MAGzBzB,EAAcyB,KACPzB,EAAcyB,KAErBtT,EAAMQ,UAAYwR,GAAuBA,EAAoBuB,QACtD,CACHjI,aAAc0G,EAAoBuB,UAGJ,QAAhCpe,EAAK0c,EAAcc,eAA4B,IAAPxd,OAAgB,EAASA,EAAG0Z,UAA6C,QAAhC9S,EAAK8V,EAAcc,eAA4B,IAAP5W,OAAgB,EAASA,EAAG+S,cAChJ,CACH1D,SAAU,SAAUC,SAAU,eAFtC,EAwBMmI,GACN/U,OAnBJ,WACI,IAAItJ,EAAI4G,EACJhB,EAAS8W,EAAcpT,OAK3B,OAHK1D,IACDA,EAFe,SAIG,iBAAXA,EACA,CAAEsC,QAAStC,EAAQ0Y,QALX,SAOZ,CACHpW,QAAmC,QAAzBlI,EAAK4F,EAAOsC,eAA4B,IAAPlI,EAAgBA,EAR5C,QASfse,QAAmC,QAAzB1X,EAAKhB,EAAO0Y,eAA4B,IAAP1X,EAAgBA,EAT5C,SAgBX2X,GACR5Y,WAAYA,EACZ7C,QAA0C,QAAhC8D,EAAK8V,EAAc5Z,eAA4B,IAAP8D,GAAgBA,EAClE4X,SAA4C,QAAjCzI,EAAK2G,EAAc8B,gBAA6B,IAAPzI,GAAgBA,EACpE/K,QAAS2R,EAAI3R,SAnJP,QAoJNyT,KAA0B,QAAnB7B,EAAKD,EAAI8B,YAAyB,IAAP7B,EAAgBA,EAAK,GACvD8B,aAAchC,EAAcgC,cAIpC,SAASC,KACL,SAAS7gB,IACL,OAAO,IAAIlB,MAAOoB,UAEtB,IACI4gB,EACAC,EAFAC,EAAYhhB,IAQhB,MAAO,CACHghB,gBACI,OAAOA,GAEXF,cACI,OAAOA,GAEXC,aACI,OAAOA,GAEXE,KAfJ,WAGI,OAFAH,EAAU9gB,IACV+gB,EAAS/gB,IAAQghB,IAiBzB,IAAIE,GAAkB,WAClB,SAASA,EAAeC,EAAWxhB,EAAMyhB,EAAaC,GAClDtmB,KAAKumB,gBAAkB,GACvBvmB,KAAKomB,UAAYA,EACjBpmB,KAAK4E,KAAOA,EACZ5E,KAAKqmB,YAAcA,EACnBrmB,KAAKsmB,WAAaA,EAClBtmB,KAAK2E,QAAU,GAiBnB,OAfAwhB,EAAejmB,UAAUsmB,aAAe,WACpC,OAAOhnB,OAAO2E,KAAKnE,KAAKumB,iBAAiB5lB,OAAS,GAEtDwlB,EAAejmB,UAAUqK,SAAW,WAChC,OAAIvK,KAAKqmB,aAAermB,KAAKwmB,eAClB,EAEPxmB,KAAKqmB,YACE,EAEPrmB,KAAKwmB,eACE,EAEJ,GAEJL,KAGX,SAASM,GAAkB9hB,EAAS+hB,GAChC,GAAIA,EAAO,CACP,GAAIA,EAAM7Q,MAEN,OADAlR,EAAUvE,EAAS,GAAIsmB,EAAM7Q,OAGjClR,EAAUgiB,GAAUhiB,OAASyG,GAC7B,IAAIwb,EAAUF,EAAMG,MAChBC,EAAYJ,EAAMK,QAClBC,EAAUN,EAAMM,QAChBJ,GACApnB,OAAO2E,KAAKyiB,GAASvgB,SAAQ,SAAU/B,GACnCK,EAAQL,GAAOsiB,EAAQtiB,MAG3BwiB,GACAtnB,OAAO2E,KAAK2iB,GAAWzgB,SAAQ,SAAU/B,GACrC2iB,GAAuB3iB,EAAKK,EAASmiB,MAGzCE,GACAA,EAAQ3gB,SAAQ,SAAU/B,UACfK,EAAQL,MAI3B,OAAOK,EAEX,SAASgiB,GAAUO,EAAKC,GAEpB,GADAA,EAAOA,GAAQ,IAAIC,QACf5nB,OAAO0nB,KAASA,EAChB,OAAOA,EAEX,GAAIA,aAAeG,IACf,OAAO,IAAIA,IAAIH,GAEnB,GAAIC,EAAKtS,IAAIqS,GACT,OAAOC,EAAKjgB,IAAIggB,GAEpB,IAAItlB,EAASslB,aAAenjB,KAAO,IAAIA,KAAKmjB,GACtCA,aAAeI,OAAS,IAAIA,OAAOJ,EAAIK,OAAQL,EAAIM,OAC/CN,EAAIjnB,YAAc,IAAIinB,EAAIjnB,YACtBT,OAAOW,OAAO,MAE5B,OADAgnB,EAAKM,IAAIP,EAAKtlB,GACPpC,OAAOa,OAAOQ,MAAMrB,OAAQ2D,EAAe,CAACvB,GAASpC,OAAO2E,KAAK+iB,GAAKpI,KAAI,SAAUxa,GACvF,IAAI6C,EACJ,OAAQA,EAAK,IAAO7C,GAAOqiB,GAAUO,EAAI5iB,GAAM6iB,GAAOhgB,OAG9D,IAAI8f,GAAyB,SAAU3iB,EAAKojB,EAAMC,GAC9C,IAAIC,EAAQD,EAASrjB,GACrB,QAAc8G,IAAVwc,EACA,OAAOF,EAEX,IAAIG,EAAOH,EAAKpjB,GAChB,OAAKujB,GAASD,EAIM,iBAATC,GACS,iBAATA,GACS,kBAATA,GACU,iBAAVD,GACU,iBAAVA,GACU,kBAAVA,GACPjoB,MAAMmG,QAAQ+hB,IACdloB,MAAMmG,QAAQ8hB,IACdF,EAAKpjB,GAAOsjB,EACLF,IAEXA,EAAKpjB,GAAO9E,OAAOa,OAAO,GAAIwnB,EAAMD,GAC7BF,IAfHA,EAAKpjB,GAAOsjB,EACLF,IAgBf,SAASI,GAAUC,EAAG7lB,GAClB,GAAI6lB,IAAM7lB,EACN,OAAO,EAEX,KAAM6lB,aAAavoB,QAAa0C,aAAa1C,QACzC,OAAO,EAEX,GAAIuoB,EAAE9nB,cAAgBiC,EAAEjC,YACpB,OAAO,EAEX,IAAK,IAAIL,KAAKmoB,EACV,GAAKA,EAAEloB,eAAeD,GAAtB,CAGA,IAAKsC,EAAErC,eAAeD,GAClB,OAAO,EAEX,GAAImoB,EAAEnoB,KAAOsC,EAAEtC,GAAf,CAGA,GAAsB,iBAAVmoB,EAAEnoB,GACV,OAAO,EAEX,IAAKkoB,GAAUC,EAAEnoB,GAAIsC,EAAEtC,IACnB,OAAO,GAGf,IAAK,IAAIA,KAAKsC,EACV,GAAIA,EAAErC,eAAeD,KAAOmoB,EAAEloB,eAAeD,GACzC,OAAO,EAGf,OAAO,EAGX,IA6fIooB,GA7fAC,GAAa,WACb,SAASA,EAAUlb,GACf,IACI5F,EADAgB,EAAQnI,KAEZA,KAAKkoB,mBAAqB,GAC1BloB,KAAKmoB,kBAAoB,GACzBnoB,KAAKooB,gCAAkC,EACvCpoB,KAAKqoB,iBAAmB,GACxBroB,KAAKsoB,iBAAmB,GACxBtoB,KAAKuoB,YAAcxb,EAAOD,WAC1B9M,KAAKwoB,QAAUzb,EAAO0D,OACtBzQ,KAAKyoB,YAAczoB,KAAKuoB,YAAYta,OAAO,SAAU,CAvW5B,kBAGG,qBAGD,oBAEF,oBAqWzBjO,KAAK0oB,oCACL1oB,KAAK2oB,oCACL3oB,KAAK4oB,sCACgC,QAApCzhB,EAAKnH,KAAKuoB,YAAYnH,gBAA6B,IAAPja,GAAyBA,EAAGmZ,MAAMqD,GAAyB/e,MAAM,SAAUmM,GACpH,IAAIlN,EAAOkN,EAAQlN,KACdA,IAlXgB,oBAqXjBA,GApXe,kBAqXfA,GAxXkB,YAyXlBA,EACAsE,EAAM0gB,4BAA4B9X,GArXd,uBAuXflN,GAlXY,oBAmXjBA,GAlXiB,WAmXjBA,EACAsE,EAAM2gB,4BAA4B/X,GAvXf,sBAyXdlN,GAhYe,cAiYpBA,GACAsE,EAAM4gB,8BAA8BhY,OAuZhD,OAnZAkX,EAAU/nB,UAAU8oB,QAAU,WAC1B,IAAK,IAAIhZ,EAAK,EAAG7I,EAAKnH,KAAKmoB,kBAAmBnY,EAAK7I,EAAGxG,OAAQqP,IAAM,CAChE,IAAIiQ,EAAM9Y,EAAG6I,GACbhQ,KAAKuoB,YAAYhI,IAAIN,GAGzB,IAAK,IAAIgJ,KADTjpB,KAAKmoB,kBAAkBxnB,OAAS,EACRX,KAAKkoB,mBACrBloB,KAAKqoB,iBAAiBxoB,eAAeopB,WAC9BjpB,KAAKkoB,mBAAmBe,IAI3ChB,EAAU/nB,UAAUgpB,cAAgB,SAAUtkB,EAAMkN,GAChD,IAAI3J,EAAQnI,KACZ,OAAOA,KAAKyoB,YACPjb,KAAK,CACN3J,KAxZoB,iBAyZpBoK,OAAQ,SACRrJ,KAAMA,EACNkN,KAAMA,EACNqX,SAAU,aAETrnB,MAAK,SAAUsnB,GAEhB,GADAjhB,EAAMkgB,iBAAiBzjB,GAAQwkB,EAAiBC,YAC3ClhB,EAAMmgB,iBAAiBc,EAAiBC,YAAa,CACtDlhB,EAAMmgB,iBAAiBc,EAAiBC,YAAczkB,EACtD,IAAI0kB,EAAcnhB,EAAM+f,mBAAmBtjB,IAAS,IAAIuhB,GAAeiD,EAAiBC,WAAYzkB,GAAM,OAAMwG,GAUhH,OATAke,EAAYjD,aAAc,EAC1BiD,EAAY1kB,KAAOA,EACnB0kB,EAAYlD,UAAYgD,EAAiBC,WACzClhB,EAAM+f,mBAAmBtjB,GAAQ0kB,EACjCA,EAAY3kB,QAAUykB,EAAiBtX,KACvCwX,EAAYC,0BAA2B,EACnCD,EAAY3kB,SACZwD,EAAMqhB,sBAAsBF,EAAaA,EAAY3kB,aAASyG,GAE3DjD,EAAMZ,OAAO3C,EAAMkN,GAAMhQ,MAAK,WAAc,OAAOsnB,EAAiBC,cAE/E,OAAOD,EAAiBC,eAGhCpB,EAAU/nB,UAAU6e,IAAM,WACtB,IAAI5W,EAAQnI,KACZ,OAAOR,OAAO2E,KAAKnE,KAAKkoB,oBACnBte,QAAO,SAAUhF,GAAQ,OAAOuD,EAAM+f,mBAAmBtjB,GAAMyhB,gBAExE4B,EAAU/nB,UAAUqH,OAAS,SAAU3C,EAAM8hB,GACzC,OAAO5lB,EAAUd,UAAM,OAAQ,GAAQ,WACnC,IAAIspB,EAAaG,EAAgBC,EAC7BvhB,EAAQnI,KACZ,OAAO+B,EAAY/B,MAAM,SAAUmH,GAC/B,OAAQA,EAAG9E,OACP,KAAK,EAED,OADAinB,EAActpB,KAAKkoB,mBAAmBtjB,KACjB0kB,EAAYjD,aAGjCoD,EAAiBH,EAAY3kB,QACvB2kB,EAAY9C,eAAuB,CAAC,EAAG,GACtC,CAAC,EAAGxmB,KAAKkH,IAAIoiB,EAAY1kB,MAAM,KAJ3B,CAAC,EAAG5E,KAAKkpB,cAActkB,EAAM8hB,IAK5C,KAAK,EACD+C,EAAiBtiB,EAAG7E,OACpB6E,EAAG9E,MAAQ,EACf,KAAK,EAED,OADAqnB,EAAkB1pB,KAAK2pB,sBAAsBF,EAAgB/C,GACxDlnB,OAAO2E,KAAKulB,EAAgB7C,OAAOlmB,QAChCnB,OAAO2E,KAAKulB,EAAgB3C,SAASpmB,QACrC+oB,EAAgB1C,QAAQrmB,OAGzB,CAAC,EAAGX,KAAKyoB,YACPjb,KAAK,CACN3J,KAtcA,iBAucAoK,OAAQ,SACRob,WAAYC,EAAYlD,UACxBM,MAAOgD,GACR,GAAI,CAAEnP,YAAY,IAChBzY,MAAK,SAAU8nB,GAChBzhB,EAAM0hB,cAAcP,EAAaI,EAAiB,CAC9CI,UAAWF,EAAWlb,cAXvB,CAAC,EAAGvN,QAAQC,mBAkB3C6mB,EAAU/nB,UAAUunB,IAAM,SAAU7iB,EAAMkN,GACtC,IAAI3J,EAAQnI,KACRspB,EAActpB,KAAKkoB,mBAAmBtjB,GAC1C,OAAK0kB,GAAgBA,EAAYjD,YAG1BrmB,KAAKyoB,YACPjb,KAAK,CACN3J,KA5doB,iBA6dpBoK,OAAQ,SACRob,WAAYC,EAAYlD,UACxBM,MAAO,CAAE7Q,MAAO/D,IACjB,GAAI,CAAEyI,YAAY,IAChBzY,MAAK,SAAU8nB,GAChBzhB,EAAM0hB,cAAcP,EAAa,CAAEzT,MAAO/D,EAAM+U,MAAO,GAAIG,QAAS,GAAID,QAAS,IAAM,CAAE+C,UAAWF,EAAWlb,aAVxG1O,KAAKkpB,cAActkB,EAAMkN,IAaxCmW,EAAU/nB,UAAUgH,IAAM,SAAUtC,EAAMmlB,GACtC,IAAI5hB,EAAQnI,UACeoL,IAAvB2e,IACAA,GAAqB,GAEzB,IAAIT,EAActpB,KAAKkoB,mBAAmBtjB,GAC1C,OAAK0kB,GACAA,EAAYjD,aACZiD,EAAY9C,gBACRuD,EAaF5oB,QAAQC,QAAQkoB,GAAeA,EAAY3kB,SAZnC,IAAIxD,SAAQ,SAAUC,EAASC,GAAU,OAAOP,EAAUqH,OAAO,OAAQ,GAAQ,WACpF,IAAIA,EAAQnI,KACZ,OAAO+B,EAAY/B,MAAM,SAAUmH,GAK/B,OAJAnH,KAAKgqB,UAAUplB,GAAM,SAAUkN,EAAM4U,EAAOM,EAASiD,GACjD9hB,EAAM+hB,YAAYD,GAClB7oB,EAAQ0Q,MAEL,CAAC,aAO5BmW,EAAU/nB,UAAU8pB,UAAY,SAAUplB,EAAM4K,GAC5C,IAAI2a,EAAiCnqB,KAAKooB,gCAC1CpoB,KAAKooB,iCAAmC,EACxC,IAAIkB,EAActpB,KAAKkoB,mBAAmBtjB,GAC1C,IAAK0kB,IACAA,EAAYjD,YAIb,OAHAiD,EAAcA,GAAe,IAAInD,QAAe/a,EAAWxG,GAAM,OAAOwG,GACxEpL,KAAKkoB,mBAAmBtjB,GAAQ0kB,EAChCA,EAAY/C,gBAAgB4D,GAAkC3a,EACvDrO,QAAQC,QAAQ+oB,GAE3B,IAAIC,EAAed,EAAY9C,eAE/B,OADA8C,EAAY/C,gBAAgB4D,GAAkC3a,EACzD4a,GACId,EAAYe,gBACTf,EAAY3kB,SACZ2kB,EAAYC,0BAapB/Z,EAAS8Z,EAAY3kB,QAAS2kB,EAAY3kB,QAAS,GAAIwlB,GAChDhpB,QAAQC,QAAQ+oB,IAVZnqB,KAAKsqB,cAAchB,GACrBxnB,MAAK,WAAc,OAAOqoB,MAY3ClC,EAAU/nB,UAAUgqB,YAAc,SAAUK,GACxC,IAAK,IAAIva,EAAK,EAAG7I,EAAK3H,OAAO2E,KAAKnE,KAAKkoB,oBAAqBlY,EAAK7I,EAAGxG,OAAQqP,IAAM,CAC9E,IAAI6P,EAAS1Y,EAAG6I,GAEZsZ,GADYtpB,KAAKqoB,iBAAiBxI,GACpB7f,KAAKkoB,mBAAmBrI,IAC1C,IAAKyJ,EACD,OAEJ,IAAIc,EAAed,EAAY9C,sBACxB8C,EAAY/C,gBAAgBgE,GAC/BjB,EAAYjD,aACZ+D,IACCd,EAAY9C,gBACb8C,EAAYC,0BACZvpB,KAAKwqB,gBAAgBlB,GAEpBA,EAAYjD,aACZiD,EAAY9C,uBACNxmB,KAAKkoB,mBAAmBrI,KAI3CoI,EAAU/nB,UAAU2pB,cAAgB,SAAUP,EAAa5C,EAAO+D,GAC9D,IAAIC,EAAapB,EAAY3kB,QAC7B2kB,EAAY3kB,QAAU8hB,GAAkB6C,EAAY3kB,QAAS+hB,GACzD1mB,KAAKkoB,mBAAmBoB,EAAY1kB,QAAU0kB,GAC7CxB,GAAU4C,EAAYpB,EAAY3kB,UACnC3E,KAAKwpB,sBAAsBF,EAAaA,EAAY3kB,QAAS+hB,EAAO+D,IAG5ExC,EAAU/nB,UAAUwoB,kCAAoC,WAMpD,IALA,IAKS1Y,EAAK,EAAG2a,EALS,CAnkBH,gBADE,kBAFC,WA2kBoC3a,EAAK2a,EAAsBhqB,OAAQqP,IAAM,CACnG,IAAI4a,EAAqBD,EAAsB3a,GAC3CiQ,EAAMjgB,KAAKuoB,YAAY/O,GAAGoR,EAAoB5qB,KAAK6oB,4BAA4B5H,KAAKjhB,OACxFA,KAAKmoB,kBAAkBjlB,KAAK+c,KAGpCgI,EAAU/nB,UAAU2oB,4BAA8B,SAAUgC,GACxD,IAAID,EAAqBC,EAAkBhnB,KAllBjB,YAmlBtB+mB,GACA5qB,KAAKqoB,iBAAiBwC,EAAkBC,aAAeD,EAAkBxB,WACzErpB,KAAKsoB,iBAAiBuC,EAAkBxB,YAAcwB,EAAkBC,aAllBrD,kBAolBdF,IACL5qB,KAAKqoB,iBAAiBwC,EAAkBjmB,MAAQimB,EAAkBxB,WAClErpB,KAAKsoB,iBAAiBuC,EAAkBxB,YAAcwB,EAAkBjmB,MAE5E,IAAIA,EAAO5E,KAAKsoB,iBAAiBuC,EAAkBxB,YACnD,IAAKzkB,EACD,MAAM,IAAIkC,MAAM,yDAA2D+jB,EAAkBxB,YAEjG,IAAKrpB,KAAKqoB,iBAAiBzjB,GACvB,MAAM,IAAIkC,MAAM,uDAAyD+jB,EAAkBxB,YAE/F,IAAIC,EAActpB,KAAKkoB,mBAAmBtjB,GAC1C,GAAI0kB,EAAa,CACb,GAAIA,EAAYjD,YACZ,OAGA,IAAKiD,EAAY9C,eACb,MAAM,IAAI1f,MAAM,iDAEpBwiB,EAAYjD,aAAc,EAC1BiD,EAAYlD,UAAYyE,EAAkBxB,WAC1CC,EAAYhD,WAAauE,EAAkBC,YACtCxB,EAAYC,0BACbvpB,KAAKsqB,cAAchB,QAK3BtpB,KAAKkoB,mBAAmBtjB,GAAQ0kB,EAC5B,IAAInD,GAAe0E,EAAkBxB,WAAYzkB,GAAM,EAAMimB,EAAkBC,cAG3F7C,EAAU/nB,UAAUyoB,kCAAoC,WAMpD,IALA,IAKS3Y,EAAK,EAAG+a,EALS,CA/mBD,kBALG,qBAMH,UAmnBqC/a,EAAK+a,EAAsBpqB,OAAQqP,IAAM,CACnG,IAAIgb,EAAqBD,EAAsB/a,GAC3CiQ,EAAMjgB,KAAKuoB,YAAY/O,GAAGwR,EAAoBhrB,KAAK8oB,4BAA4B7H,KAAKjhB,OACxFA,KAAKmoB,kBAAkBjlB,KAAK+c,KAGpCgI,EAAU/nB,UAAU4oB,4BAA8B,SAAUmC,GACxD,IAAID,EAAqBC,EAAkBpnB,KACvCuiB,EAAY6E,EAAkB5B,WAC9BC,EAActpB,KAAKkoB,mBAAmBloB,KAAKsoB,iBAAiBlC,IAC5D8E,GAAY5B,IAAgBA,EAAYjD,YAC5C,GA9nByB,WA8nBrB2E,EACK1B,GAODA,EAAYlD,UAAYA,EACxBkD,EAAYjD,aAAc,EAC1BiD,EAAYhD,WAAa2E,EAAkBH,cAR3CxB,EAAc,IAAInD,GAAeC,EAAW6E,EAAkBH,aAAa,EAAMG,EAAkBH,aACnG9qB,KAAKkoB,mBAAmB+C,EAAkBH,aAAexB,EACzDtpB,KAAKsoB,iBAAiBlC,GAAa6E,EAAkBH,YACrD9qB,KAAKqoB,iBAAiB4C,EAAkBH,aAAe1E,GAO3DkD,EAAYe,gBAAiB,OAG7B,IAAKf,IAAgBA,EAAYjD,YAW7B,YA9pBoB,uBAopBhB2E,IACA1B,EAAcA,GAAe,IAAInD,GAAeC,EAAW6E,EAAkBrmB,MAAM,OAAMwG,IAC7Eme,0BAA2B,EACvCvpB,KAAKkoB,mBAAmB+C,EAAkBrmB,MAAQ0kB,EAClDtpB,KAAKsoB,iBAAiBlC,GAAa6E,EAAkBrmB,KACrD5E,KAAKqoB,iBAAiB4C,EAAkBrmB,MAAQwhB,GAGhDpmB,KAAKwoB,QAAQlZ,MAAM,0CAA4C8W,IAK3E,IAAIsE,EAAapB,EAAY3kB,QAC7B,GAlqB4B,uBAkqBxBqmB,EACA1B,EAAY3kB,QAAUsmB,EAAkBnZ,MAAQ,QAE/C,GA/pBoB,WA+pBhBkZ,EACL1B,EAAY3kB,QAAUsmB,EAAkBE,kBAAoB,OAE3D,CAAA,GAnqBoB,oBAmqBhBH,EAIL,MAAM,IAAIlkB,MAAM,uCAAyCkkB,GAHzD1B,EAAY3kB,QAAU8hB,GAAkB6C,EAAY3kB,QAASsmB,EAAkBvE,QAK/EwE,GACCpD,GAAUwB,EAAY3kB,QAAS+lB,IA/qBR,uBAgrBxBM,GACAhrB,KAAKwpB,sBAAsBF,EAAaA,EAAY3kB,QAASsmB,EAAkBvE,MAAO,CAAEoD,UAAWmB,EAAkBG,cAG7HnD,EAAU/nB,UAAUspB,sBAAwB,SAAUF,EAAaxX,EAAM4U,EAAO+D,GAE5E,IAAK,IAAIY,KADT3E,EAAQA,GAAS,CAAEG,MAAO,GAAIE,QAAS,GAAIlR,MAAO,GAAImR,QAAS,IAC/BsC,EAAY/C,gBACxC,GAAI+C,EAAY/C,gBAAgB1mB,eAAewrB,GAC3C,KAEIC,EADqBhC,EAAY/C,gBAAgB8E,IAClC1E,GAAU7U,GAAOtS,OAAOa,OAAO,GAAIqmB,EAAMG,OAAS,GAAIH,EAAMK,SAAW,GAAIL,EAAM7Q,OAAS,IAAK6Q,EAAMM,QAAS/K,SAASoP,EAAqB,IAAKZ,GAEpK,MAAOva,GACHlQ,KAAKwoB,QAAQpU,MAAM,mBAAqBK,KAAKC,UAAUxE,MAKvE+X,EAAU/nB,UAAU0oB,oCAAsC,WAKtD,IAJA,IAIS5Y,EAAK,EAAGub,EAJW,CAhsBD,oBAPC,aA2sBsCvb,EAAKub,EAAwB5qB,OAAQqP,IAAM,CACzG,IAAIwb,EAAuBD,EAAwBvb,GAC/CiQ,EAAMjgB,KAAKuoB,YAAY/O,GAAGgS,EAAsBxrB,KAAK+oB,8BAA8B9H,KAAKjhB,OAC5FA,KAAKmoB,kBAAkBjlB,KAAK+c,KAGpCgI,EAAU/nB,UAAU6oB,8BAAgC,SAAU0C,GAC1D,IACIrF,EACAxhB,EACJ,GArtB4B,cAktBD6mB,EAAa5nB,MAMpC,GAFAe,EAAO6mB,EAAaX,cACpB1E,EAAYpmB,KAAKqoB,iBAAiBzjB,IAG9B,YADA5E,KAAKwoB,QAAQlZ,MAAM,8CAAgDmc,EAAaX,kBAOpF,GAFA1E,EAAYqF,EAAapC,aACzBzkB,EAAO5E,KAAKsoB,iBAAiBlC,IAGzB,YADApmB,KAAKwoB,QAAQlZ,MAAM,6CAA+Cmc,EAAapC,mBAIhFrpB,KAAKsoB,iBAAiBlC,UACtBpmB,KAAKqoB,iBAAiBzjB,GAC7B,IAAI0kB,EAActpB,KAAKkoB,mBAAmBtjB,UACnC5E,KAAKkoB,mBAAmBtjB,GAC1B0kB,GAAgBA,EAAYjD,aAC7BrmB,KAAKwoB,QAAQlZ,MAAM,6CAA+C8W,IAI1E6B,EAAU/nB,UAAUoqB,cAAgB,SAAUhB,GAE1C,OADAA,EAAYC,0BAA2B,EAChCvpB,KAAKyoB,YACPjb,KAAK,CACN3J,KA/uBuB,oBAgvBvBoK,OAAQ,SACRob,WAAYC,EAAYlD,YACzBtkB,MAAK,SAAUM,QAEtB6lB,EAAU/nB,UAAUsqB,gBAAkB,SAAUlB,GAE5C,OADAA,EAAYC,0BAA2B,EAChCvpB,KAAKyoB,YACPjb,KAAK,CACN3J,KAtvByB,sBAuvBzBoK,OAAQ,SACRob,WAAYC,EAAYlD,YACzBtkB,MAAK,SAAUM,QAEtB6lB,EAAU/nB,UAAUypB,sBAAwB,SAAUxL,EAAMuN,GACxD,IAAIhF,EAAQ,CAAEG,MAAO,GAAIE,QAAS,GAAIC,QAAS,GAAInR,WAAOzK,GAC1D,GAAI+S,EACA,IAAK,IAAInO,EAAK,EAAG7I,EAAK3H,OAAO2E,KAAKga,GAAOnO,EAAK7I,EAAGxG,OAAQqP,IAAM,CAC3D,IAAI+X,EAAI5gB,EAAG6I,IACyB,IAAhCxQ,OAAO2E,KAAKunB,GAAI7T,QAAQkQ,IACX,OAAV2D,EAAG3D,IACFD,GAAU3J,EAAK4J,GAAI2D,EAAG3D,MAC1BrB,EAAMK,QAAQgB,GAAK2D,EAAG3D,IAIlC,IAAK,IAAIha,EAAK,EAAGmP,EAAK1d,OAAO2E,KAAKunB,GAAK3d,EAAKmP,EAAGvc,OAAQoN,IAAM,CACrDga,EAAI7K,EAAGnP,GACNoQ,IAA2C,IAAlC3e,OAAO2E,KAAKga,GAAMtG,QAAQkQ,GAKrB,OAAV2D,EAAG3D,IACRrB,EAAMM,QAAQ9jB,KAAK6kB,GALL,OAAV2D,EAAG3D,KACHrB,EAAMG,MAAMkB,GAAK2D,EAAG3D,IAOhC,OAAOrB,GAEJuB,KAGP0D,GAAkB,WAClB,SAASA,EAAe5e,GACpB/M,KAAK4rB,QAAU,IAAI3D,GAAUlb,GAuCjC,OArCA4e,EAAezrB,UAAU6e,IAAM,WAC3B,OAAO/e,KAAK4rB,QAAQ7M,OAExB4M,EAAezrB,UAAUqH,OAAS,SAAU3C,EAAM8hB,GAE9C,OADA1mB,KAAK6rB,UAAUjnB,GACR5E,KAAK4rB,QAAQrkB,OAAO3C,EAAM8hB,IAErCiF,EAAezrB,UAAUunB,IAAM,SAAU7iB,EAAMkN,GAE3C,OADA9R,KAAK6rB,UAAUjnB,GACR5E,KAAK4rB,QAAQnE,IAAI7iB,EAAMkN,IAElC6Z,EAAezrB,UAAU8pB,UAAY,SAAUplB,EAAM4K,GACjD,IAAIrH,EAAQnI,KAEZ,OADAA,KAAK6rB,UAAUjnB,GACR5E,KAAK4rB,QACP5B,UAAUplB,GAAM,SAAUkN,EAAM4U,EAAOM,EAAS1iB,EAAKmmB,GAAa,OAAOjb,EAASsC,EAAM4U,EAAOM,GAAS,WAAc,OAAO7e,EAAMyjB,QAAQ1B,YAAY5lB,KAASmmB,MAChK3oB,MAAK,SAAUwC,GAChB,OAAO,WACH6D,EAAMyjB,QAAQ1B,YAAY5lB,QAItCqnB,EAAezrB,UAAUgH,IAAM,SAAUtC,EAAMmlB,GAI3C,YAH2B3e,IAAvB2e,IACAA,GAAqB,GAElB/pB,KAAK4rB,QAAQ1kB,IAAItC,EAAMmlB,IAElC4B,EAAezrB,UAAU4rB,MAAQ,WAC7B,OAAO3qB,QAAQC,QAAQpB,OAE3B2rB,EAAezrB,UAAU2rB,UAAY,SAAUjnB,GAC3C,GAAoB,iBAATA,GACE,KAATA,EACA,MAAM,IAAIkC,MAAM,yCAA2ClC,EAAO,MAGnE+mB,KAGX,SAASI,GAAWjZ,EAASkZ,EAAiBC,GAC1C,MAA+B,mBAApBD,GAA2D,mBAAlBC,EACzCnZ,GAEoB,mBAApBkZ,EACPA,EAAkB,aAEY,mBAAlBC,IACZA,EAAgB,cAEbnZ,EAAQhR,KAAKkqB,EAAiBC,IAGzC,SAASC,GAAYC,EAAI7c,GAErB,YADW,IAAP6c,IAAiBA,EAAK,GACnB,IAAIhrB,SAAQ,SAAUC,EAASC,GAAU,OAAO4R,YAAW,WAAc,OAAO5R,EAAOiO,KAAW6c,OAI7G,SAAWnE,GACPA,EAAaA,EAAsB,QAAI,GAAK,UAC5CA,EAAaA,EAAoB,MAAI,GAAK,QAF9C,CAGGA,KAAiBA,GAAe,KACnC,IAAIoE,GAAU,WACV,SAASA,EAAO5jB,EAAUpB,EAAMkH,EAAUuV,GACtC7jB,KAAKwI,SAAWA,EAChBxI,KAAKoH,KAAOA,EACZpH,KAAKsO,SAAWA,EAChBtO,KAAK6jB,cAAgBA,EAiczB,OA/bAuI,EAAOlsB,UAAU8pB,UAAY,SAAUxM,EAAQjV,EAASyjB,EAAiBC,EAAe3J,GACpF,IAAIna,EAAQnI,KACRqsB,EAAwB,SAAUC,EAAeC,EAAQC,EAAcC,GACvE,IAAItlB,EACJoB,EAAQmkB,sBAAiE,QAAxCvlB,EAAKoB,EAAQmkB,6BAA0C,IAAPvlB,EAAgBA,EAAKoB,EAAQokB,cAC9GxkB,EAAMK,SAASyI,OAAO+Y,UAAUuC,EAAQhkB,EAAS+jB,EAAeE,EAAcC,EAAYnK,IA2E9F,OAAOyJ,GAzEO,IAAI5qB,SAAQ,SAAUC,EAASC,GACzC,IAUIurB,EAVAJ,EAAe,SAAUvM,GACzB7e,EAAQ6e,IAERwM,EAAa,SAAUvc,GACvB7O,EAAO6O,IAEX,GAAKsN,EAWL,IALIoP,EADkB,iBAAXpP,EACK,CAAE5Y,KAAM4Y,GAGRA,GAED5Y,KAAf,MAIgBwG,IAAZ7C,IACAA,EAAU,IAEd,IAAIqD,EAASrD,EAAQqD,OAIrB,QAHeR,IAAXQ,IACAA,EAAS,QAES,iBAAXA,GAAkC,QAAXA,GAA+B,SAAXA,EAAtD,MAIsCR,IAAlC7C,EAAQmkB,wBACRnkB,EAAQmkB,sBAAwBnkB,EAAQskB,6BACFzhB,IAAlC7C,EAAQmkB,wBACRnkB,EAAQmkB,sBAAwBvkB,EAAM0b,cAAc6I,6BAG9BthB,IAA1B7C,EAAQokB,gBACRpkB,EAAQokB,cAAgBpkB,EAAQukB,6BACF1hB,IAA1B7C,EAAQokB,gBACRpkB,EAAQokB,cAAgBxkB,EAAM0b,cAAc8I,gBAGpD,IACII,EAAe,EACfC,EAAiB7kB,EAAM8kB,kCAAkCL,EAAWhhB,GACxE,GAAIohB,EAAersB,OAAS,EACxB0rB,EAAsBW,EAAgBA,EAAe,GAAG/J,QAAQ,GAAIuJ,EAAcC,OAEjF,CACD,IAAIS,EAAU,WACV,GAAKthB,GAAYrD,EAAqB,cAKtC,GAFAwkB,GAXQ,KAYRC,EAAiB7kB,EAAM8kB,kCAAkCL,EAAWhhB,IACjDjL,OAAS,EAAG,CAC3B,IAAIwsB,EAAaH,EAAe,GAAG/J,QAAQ,GAC3CoJ,EAAsBW,EAAgBG,EAAYX,EAAcC,QAE/D,GAAIM,GAAgBxkB,EAAQokB,cAAe,CAE5CN,EAAsBW,EADM,iBAAXxP,EAAsB,CAAE5Y,KAAM4Y,GAAWA,EACfgP,EAAcC,QAGzDxZ,WAAWia,EAtBP,MAyBZja,WAAWia,EAzBC,WAfZ7rB,EAAO,IAAIyF,MAAM,IAAO8E,EAAS,mFAXjCvK,EAAO,gKAXPA,EAAO,8JAiEW2qB,EAAiBC,IAE/CG,EAAOlsB,UAAUktB,QAAU,SAAUC,GACjC,IAAIC,OAA8BliB,IAAjBiiB,OACXjiB,EACAhL,EAAS,GAAIitB,GACnB,OAAOrtB,KAAKutB,WAAWD,GAAYxO,KAAI,SAAU0O,GAC7C,OAAOA,EAAgBC,OAAOnf,aAGtC8d,EAAOlsB,UAAU+iB,QAAU,SAAUoK,GAOjC,OALIA,EADwB,iBAAjBA,EACQ,CAAEzoB,KAAMyoB,GAGRjtB,EAAS,GAAIitB,GAEzBrtB,KAAK0tB,WAAWL,IAE3BjB,EAAOlsB,UAAUytB,mBAAqB,SAAUrf,GAC5C,OAAOtO,KAAK4tB,sBAAsBtf,IAEtC8d,EAAOlsB,UAAU2tB,YAAc,SAAUre,GACrC,OAAOxP,KAAKoH,KAAK0mB,cAActe,IAEnC4c,EAAOlsB,UAAU6tB,cAAgB,SAAUve,GACvC,OAAOxP,KAAKoH,KAAK4mB,gBAAgBxe,IAErC4c,EAAOlsB,UAAU+tB,YAAc,SAAUze,GACrC,OAAOxP,KAAKoH,KAAK8mB,cAAc1e,IAEnC4c,EAAOlsB,UAAUiuB,cAAgB,SAAU3e,GACvC,OAAOxP,KAAKoH,KAAKgnB,iBAAgB,SAAUX,EAAQjZ,GAC/ChF,EAASie,EAAQjZ,OAGzB4X,EAAOlsB,UAAUmuB,kBAAoB,SAAU7e,GAC3C,OAAOxP,KAAKoH,KAAKknB,qBAAoB,SAAUb,EAAQjQ,GACnDhO,EAAS,CAAEie,OAAQA,EAAQjQ,OAAQA,QAG3C4O,EAAOlsB,UAAUquB,oBAAsB,SAAU/e,GAC7C,OAAOxP,KAAKoH,KAAKonB,uBAAsB,SAAUf,EAAQjQ,GACrDhO,EAAS,CAAEie,OAAQA,EAAQjQ,OAAQA,QAG3C4O,EAAOlsB,UAAUijB,OAAS,SAAUkK,EAAcoB,EAAa7iB,EAAQ8iB,EAAmBtU,EAAS9K,GAC/F,OAAOxO,EAAUd,UAAM,OAAQ,GAAQ,WACnC,IACImI,EAAQnI,KACZ,OAAO+B,EAAY/B,MAAM,SAAUmH,GA+F/B,MAAO,CAAC,EAAG4kB,GA9FQ,WAAc,OAAOjrB,EAAUqH,OAAO,OAAQ,GAAQ,WACrE,IAAIwmB,EAAkBC,EAAyBpR,EAAQqR,EAAUC,EAASC,EAAuBC,EAAgBC,EAAoBhf,EAEjI9I,EADAgB,EAAQnI,KAEZ,OAAO+B,EAAY/B,MAAM,SAAU+N,GAC/B,OAAQA,EAAG1L,OACP,KAAK,EAOD,KALIssB,EADwB,iBAAjBtB,EACY,CAAEzoB,KAAMyoB,GAGRjtB,EAAS,GAAIitB,IAEdzoB,KAClB,MAAO,CAAC,EAAGzD,QAAQE,OAAO,4JAQ9B,GANKotB,IACDA,EAAc,IAEb7iB,IACDA,EAAS,QAES,iBAAXA,GAAkC,QAAXA,GAA+B,SAAXA,GAAgC,aAAXA,EACvE,MAAO,CAAC,EAAGzK,QAAQE,OAAO,IAAIyF,MAAM,IAAO8E,EAAS,kEAiBxD,GAfK8iB,IACDA,EAAoB,SAE0BtjB,IAA9CsjB,EAAkBQ,0BAClBR,EAAkBQ,wBAA0BR,EAAkB7B,6BACZzhB,IAA9CsjB,EAAkBQ,0BAClBR,EAAkBQ,wBAA0BlvB,KAAK6jB,cAAc6I,6BAG/BthB,IAApCsjB,EAAkB/B,gBAClB+B,EAAkB/B,cAAgB+B,EAAkB5B,6BACZ1hB,IAApCsjB,EAAkB/B,gBAClB+B,EAAkB/B,cAAgB3sB,KAAK6jB,cAAc8I,qBAGrBvhB,IAApCsjB,EAAkB/B,eAA0E,iBAApC+B,EAAkB/B,cAC1E,MAAO,CAAC,EAAGxrB,QAAQE,OAAO,IAAIyF,MAAM,IAAO4nB,EAAkB/B,cAAgB,kDAEjF,GAA2B,iBAAhB8B,EACP,MAAO,CAAC,EAAGttB,QAAQE,OAAO,IAAIyF,MAAM,mDAAqD6nB,EAAiB/pB,QAG9G,GAAkC,KADlCgqB,EAAmB5uB,KAAKitB,kCAAkC0B,EAAkB/iB,IACrDjL,OAAe,MAAO,CAAC,EAAG,GACjDoN,EAAG1L,MAAQ,EACf,KAAK,EAED,OADA0L,EAAGxL,KAAKW,KAAK,CAAC,EAAG,GAAK,IACf,CAAC,EAAGlD,KAAKmvB,qBAAqBR,EAAkB/iB,EAAQ8iB,IACnE,KAAK,EAED,OADAE,EAAmB7gB,EAAGzL,OACf,CAAC,EAAG,GACf,KAAK,EAWD,OAVQyL,EAAGzL,OACXkb,EAASpd,EAASA,EAAS,GAAIuuB,GAAmB,CAAEpB,WAAY,WAAc,MAAO,IAAO6B,mBAAmB,EAAOC,YAAqD,QAAvCloB,EAAKwnB,EAAiBU,mBAAgC,IAAPloB,EAAgBA,EAAK,KACxM0nB,EAAW,CACPrR,OAAQA,EACR8R,YAAab,EACb1d,QAAS,kCAAoC0D,KAAKC,UAAU2Y,GAAgB,uBAAyB5Y,KAAKC,UAAU9I,GACpH2jB,iBAAankB,EACbokB,cAAUpkB,EACVgK,YAAQhK,GAEL,CAAC,EAAGjK,QAAQE,OAAOwtB,IAC9B,KAAK,EAeD,OAdAC,EAAUJ,EAAkBQ,wBAC5BH,EAAwBL,EACxBM,EAAiBJ,EAAiB9P,KAAI,SAAU2Q,GAC5C,IAAIC,EAAQ5W,IACR6W,EAAgBxnB,EAAMK,SAASyI,OAAOkS,OAAOuM,EAAOD,EAAkBxM,QAAQ,GAAIwL,EAAagB,EAAkBhC,OAAQsB,GAC7H,OAAO5tB,QAAQyuB,KAAK,CAChBD,EACAzD,GAAY4C,EAAS,CACjBe,aAAcH,EACd3e,QAAS,uBAAyB+d,EAAU,eAC5C1Z,OAAQ4S,GAAalhB,aAI1B,CAAC,EAAG3F,QAAQ4d,IAAIiQ,IAC3B,KAAK,EAID,OAHAC,EAAqBlhB,EAAGzL,OACxB2N,EAAUjQ,KAAK8vB,uBAAuBb,EAAoBN,EAAkBF,GAC9DQ,EAAmBc,OAAM,SAAUnuB,GAAU,OAAOA,EAAOwT,SAAW4S,GAAalhB,SAEtF,CAAC,EAAG3F,QAAQE,OAAO4O,IAEvB,CAAC,EAAGA,UAIN+f,GAAoB5V,EAAS9K,WAI9D8c,EAAOlsB,UAAU4vB,uBAAyB,SAAUG,EAAmBzS,EAAQ0S,GAC3E,IAAIC,EAAoBF,EACnBrmB,QAAO,SAAUwmB,GAAiB,OAAOA,EAAchb,SAAW4S,GAAaqI,WAC/EjsB,QAAO,SAAUksB,EAAWC,GAW7B,OAVAD,EAAYntB,EAAemtB,EAAW,CAClC,CACIf,YAAagB,EAAajiB,SAC1BkhB,SAAUe,EAAa3uB,OACvB0tB,YAAaY,EACb1S,OAAQA,EACRzM,QAASwf,EAAaxf,QACtBqE,OAAQmb,EAAanb,YAI9B,IACCob,EAAaP,EACZrmB,QAAO,SAAUwmB,GAAiB,OAAOA,EAAchb,SAAW4S,GAAalhB,SAC/E1C,QAAO,SAAUqsB,EAAWC,GAS7B,OARAD,EAAYttB,EAAestB,EAAW,CAClC,CACIlB,YAAamB,EAAUpiB,SACvBghB,YAAaY,EACbtrB,KAAM4Y,EAAO5Y,KACbmM,QAAS2f,EAAU3f,aAI5B,IACC4f,EAAYV,EAAkB,GAWlC,MAVa,CACTzS,OAAQA,EACR8R,YAAaY,EACbV,SAAUmB,EAAU/uB,OACpB2tB,YAAaoB,EAAUriB,SACvB6hB,kBAAmBA,EACnBK,WAAYA,EACZzf,QAAS4f,EAAU5f,QACnBqE,OAAQub,EAAUvb,SAI1BgX,EAAOlsB,UAAUivB,qBAAuB,SAAUR,EAAkB/iB,EAAQ8iB,GACxE,IAAIvmB,EAAQnI,KACZ,OAAO,IAAImB,SAAQ,SAAUC,EAASC,GAClC,GAAwC,IAApCqtB,EAAkB/B,cAItB,IACII,EAAe,EAcf6D,EAAWC,aAbH,WACR9D,GAHY,IAIZ,IAAI6B,EAAmBzmB,EAAM8kB,kCAAkC0B,EAAkB/iB,GACjF,GAAIgjB,EAAiBjuB,OAAS,EAC1BmwB,cAAcF,GACdxvB,EAAQwtB,QAEP,GAAI7B,IAAiB2B,EAAkB/B,eAAiB,KAGzD,OAFAmE,cAAcF,QACdvvB,MAXQ,UAHZA,QAqBZ+qB,EAAOlsB,UAAU6wB,eAAiB,SAAUnlB,EAAQ4hB,GAChD,IAAIrlB,EAAQnI,KACZ,GAAsB,iBAAX4L,EAqBN,CAcD,OAZKjM,MAAMmG,QAAQ8F,GAIDA,EAHA,CAACA,IAKkBxH,QAAO,SAAU4sB,EAASpnB,GAC3D,IAAIqnB,EAAYzD,EAAgB5jB,QAAO,SAAUsnB,GAC7C,OAAO/oB,EAAMgpB,cAAcvnB,EAAQsnB,EAAiBzD,OAAOnf,aAE/D,OAAO0iB,EAAQnrB,OAAOorB,KACvB,IAjCH,GAAe,QAAXrlB,EACA,OAAOzI,EAAeqqB,GAErB,GAAe,SAAX5hB,EAAmB,CACxB,IAAIwlB,EAAe5D,EACd6D,MAAK,SAAU9wB,GAAK,OAAOA,EAAEktB,OAAOnf,SAASgjB,WAClD,GAAIF,EACA,MAAO,CAACA,GAEZ,QAA2BhmB,IAAvBoiB,EAAgB,GAChB,MAAO,CAACA,EAAgB,SAG3B,GAAe,aAAX5hB,EACL,OAAO4hB,EAAgB5jB,QAAO,SAAUzC,GAEpC,OADaA,EAAGsmB,OACFnf,SAASK,SAAWxG,EAAMmG,SAASK,UAoB7D,MAAO,IAEXyd,EAAOlsB,UAAUixB,cAAgB,SAAUI,EAAgBC,GACvD,OAAOxxB,KAAKyxB,cAAcF,EAAgBC,IAE9CpF,EAAOlsB,UAAUwxB,YAAc,SAAUrE,EAAcsB,GACnD,OAAO3uB,KAAKyxB,cAAcpE,EAAcsB,IAE5CvC,EAAOlsB,UAAUuxB,cAAgB,SAAU7nB,EAAQ+nB,GAY/C,OAXkBnyB,OAAO2E,KAAKyF,GACzBA,QAAO,SAAUgoB,GAClB,YAAwBxmB,IAAjBxB,EAAOgoB,IACiB,mBAAjBhoB,EAAOgoB,IACL,iBAATA,GACS,iBAATA,GACS,OAATA,GACS,cAATA,GACS,eAATA,GACY,MAAZA,EAAK,MAEGxtB,QAAO,SAAUytB,EAASD,GACzC,IAAIE,EAAcloB,EAAOgoB,GACrBG,EAAkBJ,EAAWC,GACjC,GAAa,gBAATA,EAAwB,EAmBpBE,EAAYnxB,OAASoxB,EAAgBpxB,SACsB,IAnBnC,SAAUqxB,EAAgBC,GAClD,IAAIC,EAAoBF,EAAe5tB,QAAO,SAAU+tB,EAAQC,GAE5D,OADAD,EAAOC,IAAW,EACXD,IACR,IACHF,EAAgB5rB,SAAQ,SAAUgsB,QACSjnB,IAAnC8mB,EAAkBG,KAClBH,EAAkBG,IAAe,MASzC,OAN8C7yB,OAAO2E,KAAK+tB,GAAmB9tB,QAAO,SAAUkuB,EAAaF,GAIvG,OAHKF,EAAkBE,KACnBE,GAAc,GAEXA,KACR,GAIAC,CAAsBT,EAAaC,MACtCF,GAAU,QAGTW,OAAOV,GAAa9lB,gBAAkBwmB,OAAOT,GAAiB/lB,gBACnE6lB,GAAU,GAEd,OAAOA,KACR,IAEPzF,EAAOlsB,UAAUwtB,WAAa,SAAUL,GACpC,IAAIllB,EAAQnI,KACZ,YAAqBoL,IAAjBiiB,EACOrtB,KAAKoH,KAAKsmB,aAEP1tB,KAAKoH,KAAKsmB,aAAa9jB,QAAO,SAAU4T,GAClD,OAAOrV,EAAMupB,YAAYrE,EAAc7P,OAI/C4O,EAAOlsB,UAAU0tB,sBAAwB,SAAU2D,GAC/C,IAAIppB,EAAQnI,KAERyyB,EADazyB,KAAKoH,KAAKmmB,aACM3jB,QAAO,SAAU6jB,GAC9C,OAAOtlB,EAAMgpB,cAAcI,EAAgB9D,EAAOnf,aAEtD,GAA+B,IAA3BmkB,EAAgB9xB,OAChB,MAAO,GAEX,IAAI+xB,EAAsB,GAY1B,OAX+B,IAA3BD,EAAgB9xB,OAChB+xB,EAAsBD,EAAgB,GAAGxP,QAGzCwP,EAAgBpsB,SAAQ,SAAUonB,GAC9BjuB,OAAO2E,KAAKspB,EAAOxK,SAAS5c,SAAQ,SAAUssB,GAC1C,IAAInV,EAASiQ,EAAOxK,QAAQ0P,GAC5BD,EAAoBlV,EAAOoV,YAAcpV,QAI9Che,OAAO2E,KAAKuuB,GACd5T,KAAI,SAAUxa,GACf,OAAOouB,EAAoBpuB,OAGnC8nB,EAAOlsB,UAAUqtB,WAAa,SAAUF,GACpC,IAAIllB,EAAQnI,KACRotB,EAAUptB,KAAKoH,KAAKmmB,aACxB,YAAqBniB,IAAjBiiB,EACOD,EAAQtO,KAAI,SAAU2O,GACzB,MAAO,CAAEA,OAAQA,EAAQxK,QAAS,OAGnCmK,EAAQhpB,QAAO,SAAUyuB,EAAMC,GAClC,IACIC,EADmB5qB,EAAMf,KAAK4rB,qBAAqBF,EAAQ1pB,IACxBQ,QAAO,SAAU4T,GACpD,OAAOrV,EAAMupB,YAAYrE,EAAc7P,MAK3C,OAHIuV,EAAgBpyB,OAAS,GACzBkyB,EAAK3vB,KAAK,CAAEuqB,OAAQqF,EAAS7P,QAAS8P,IAEnCF,IACR,KAEPzG,EAAOlsB,UAAU+sB,kCAAoC,SAAUI,EAAczhB,GACzE,IAAIgjB,EAAmB5uB,KAAKutB,WAAWF,GACvC,OAAOrtB,KAAK+wB,eAAenlB,EAAQgjB,IAEhCxC,KAGP6G,GAAsB,WACtB,SAASA,EAAmBzqB,EAAUmpB,EAAYuB,GAC9ClzB,KAAKwI,SAAWA,EAChBxI,KAAK2xB,WAAaA,EAClB3xB,KAAKkzB,aAAeA,EAsCxB,OApCA1zB,OAAOyH,eAAegsB,EAAmB/yB,UAAW,SAAU,CAC1DgH,IAAK,WACD,IAAKlH,KAAK2xB,WAAWpF,OACjB,MAAM,IAAIzlB,MAAM,aAEpB,OAAO9G,KAAK2xB,WAAWpF,QAE3BllB,YAAY,EACZC,cAAc,IAElB9H,OAAOyH,eAAegsB,EAAmB/yB,UAAW,YAAa,CAC7DgH,IAAK,WAAc,OAAOlH,KAAKkzB,aAAaxyB,WAAa,IACzD2G,YAAY,EACZC,cAAc,IAElB9H,OAAOyH,eAAegsB,EAAmB/yB,UAAW,YAAa,CAC7DgH,IAAK,WAAc,OAAOlH,KAAKkzB,aAAaC,WAC5C9rB,YAAY,EACZC,cAAc,IAElB9H,OAAOyH,eAAegsB,EAAmB/yB,UAAW,WAAY,CAC5DgH,IAAK,WACD,IAAKlH,KAAKkzB,aAAa5kB,SACnB,MAAM,IAAIxH,MAAM,eAEpB,OAAO9G,KAAKkzB,aAAa5kB,UAE7BjH,YAAY,EACZC,cAAc,IAElB2rB,EAAmB/yB,UAAUoR,MAAQ,WACjCtR,KAAKwI,SAASilB,OAAO2F,wBAAwBpzB,KAAK2xB,WAAY3xB,KAAKkzB,eAEvED,EAAmB/yB,UAAUgD,KAAO,SAAU4O,GAC1C9R,KAAKwI,SAASilB,OAAO4F,iBAAiBrzB,KAAK2xB,WAAY3xB,KAAKkzB,aAAcphB,IAEvEmhB,KAGPK,GAAW,WACX,SAASA,EAAQ9qB,EAAUmpB,EAAY4B,GACnCvzB,KAAKwI,SAAWA,EAChBxI,KAAK2xB,WAAaA,EAClB3xB,KAAKuzB,eAAiBA,EACtBvzB,KAAKU,UAAY6yB,EAAe7yB,UAChCV,KAAKsO,SAAWilB,EAAejlB,SAWnC,OATAglB,EAAQpzB,UAAUszB,OAAS,WACvBxzB,KAAKwI,SAASilB,OAAOgG,sBAAsBzzB,KAAKuzB,eAAgBvzB,KAAK2xB,WAAY,KAErF2B,EAAQpzB,UAAUwzB,eAAiB,SAAUC,GACzC3zB,KAAKwI,SAASilB,OAAOgG,sBAAsBzzB,KAAKuzB,eAAgBvzB,KAAK2xB,WAAYgC,IAErFL,EAAQpzB,UAAUmB,OAAS,SAAUmT,GACjCxU,KAAKwI,SAASilB,OAAOmG,cAAc5zB,KAAKuzB,eAAgBvzB,KAAK2xB,WAAYnd,IAEtE8e,KAGPO,GAAmB,WACnB,SAASA,EAAgBrrB,EAAUilB,GAC/B,IAAItlB,EAAQnI,KACZA,KAAKwI,SAAWA,EAChBxI,KAAKytB,OAASA,EACdjlB,EAASilB,OAAOqG,cAAa,SAAUC,EAAIC,GAAM,OAAO7rB,EAAM8rB,iBAAiBF,EAAIC,MACnFxrB,EAASilB,OAAOyG,YAAW,SAAUjU,EAAK+T,GAAM,OAAO7rB,EAAMgsB,eAAelU,EAAK+T,MACjFxrB,EAASilB,OAAO2G,cAAa,SAAUnU,EAAK+T,GAAM,OAAO7rB,EAAMksB,iBAAiBpU,EAAK+T,MA6BzF,OA3BAH,EAAgB3zB,UAAU+zB,iBAAmB,SAAUV,EAAgB5B,GACnE,GAAMA,GACFA,EAAW2C,iBACsD,mBAA1D3C,EAAW2C,gBAAgBC,2BAFtC,CAKA,IAAIC,EAAU,IAAIlB,GAAQtzB,KAAKwI,SAAUmpB,EAAY4B,GACrD5B,EAAW2C,gBAAgBC,2BAA2BC,KAE1DX,EAAgB3zB,UAAUi0B,eAAiB,SAAUjB,EAAcvB,GAC/D,GAAMA,GACFA,EAAW2C,iBACoD,mBAAxD3C,EAAW2C,gBAAgBG,yBAFtC,CAKA,IAAIxU,EAAM,IAAIgT,GAAmBjzB,KAAKwI,SAAUmpB,EAAYuB,GAC5DvB,EAAW2C,gBAAgBG,yBAAyBxU,KAExD4T,EAAgB3zB,UAAUm0B,iBAAmB,SAAUnB,EAAcvB,GACjE,GAAMA,GACFA,EAAW2C,iBACsD,mBAA1D3C,EAAW2C,gBAAgBI,2BAFtC,CAKA,IAAIzU,EAAM,IAAIgT,GAAmBjzB,KAAKwI,SAAUmpB,EAAYuB,GAC5DvB,EAAW2C,gBAAgBI,2BAA2BzU,KAEnD4T,KAGPc,GAAgB,WAChB,SAASA,EAAarwB,EAAKkE,EAAUmpB,GACjC3xB,KAAKsE,IAAMA,EACXtE,KAAKwI,SAAWA,EAChBxI,KAAK2xB,WAAaA,EAetB,OAbAgD,EAAaz0B,UAAU00B,cAAgB,WACnC,IAAIzsB,EAAQnI,KAEZ,OADcA,KAAKwI,SAASilB,OAAOoH,oBAAoB70B,KAAK2xB,WAAY3xB,KAAKsE,KAC9Dwa,KAAI,SAAUmB,GACzB,OAAO,IAAIgT,GAAmB9qB,EAAMK,SAAUL,EAAMwpB,WAAY1R,OAGxE0U,EAAaz0B,UAAUoR,MAAQ,WAC3BtR,KAAKwI,SAASilB,OAAOqH,sBAAsB90B,KAAK2xB,WAAY3xB,KAAKsE,MAErEqwB,EAAaz0B,UAAUgD,KAAO,SAAU4O,GACpC9R,KAAKwI,SAASilB,OAAOsH,SAAS/0B,KAAK2xB,WAAY7f,EAAM,CAAC9R,KAAKsE,OAExDqwB,KAGPK,GAAgB,WAChB,SAASA,EAAaC,EAAWC,EAAaC,GAC1Cn1B,KAAKi1B,UAAYA,EACjBj1B,KAAKk1B,YAAcA,EACnBl1B,KAAKm1B,QAAUA,EACfn1B,KAAK4E,KAAO5E,KAAKk1B,YAAYvuB,WAAW/B,KA2D5C,OAzDAowB,EAAa90B,UAAUk1B,SAAW,SAAU9wB,GACxC,IAAI6D,EAAQnI,KACRq1B,EAAQr1B,KAAKi1B,UAAUxH,OAAO6H,cAAct1B,KAAKk1B,aACrD,OAAI5wB,EACI+wB,EAAMxd,QAAQvT,IAAQ,EACf,IAAIqwB,GAAarwB,EAAKtE,KAAKi1B,UAAWj1B,KAAKk1B,kBAEtD,EAGOG,EAAMvW,KAAI,SAAUqU,GACvB,OAAO,IAAIwB,GAAaxB,EAAWhrB,EAAM8sB,UAAW9sB,EAAM+sB,iBAItEF,EAAa90B,UAAUyzB,OAAS,SAAUrvB,GACtC,OAAOtE,KAAKo1B,SAAS9wB,IAEzB0wB,EAAa90B,UAAU00B,cAAgB,WACnC,IAAIzsB,EAAQnI,KAEZ,OADcA,KAAKi1B,UAAUxH,OAAOoH,oBAAoB70B,KAAKk1B,aAC9CpW,KAAI,SAAUmB,GACzB,OAAO,IAAIgT,GAAmB9qB,EAAM8sB,UAAW9sB,EAAM+sB,YAAajV,OAG1EzgB,OAAOyH,eAAe+tB,EAAa90B,UAAW,aAAc,CACxDgH,IAAK,WACD,IAAIquB,EAAOv1B,KAAKk1B,YAAYvuB,WAC5B,MAAO,CACH6uB,QAASD,EAAKC,QACd9wB,YAAa6wB,EAAK7wB,YAClB+wB,YAAaF,EAAKE,YAClB7wB,KAAM2wB,EAAK3wB,KACXyqB,YAAakG,EAAKlG,YAClBqG,QAASH,EAAKG,QACdtG,kBAAmBmG,EAAKnG,oBAGhC/nB,YAAY,EACZC,cAAc,IAElB0tB,EAAa90B,UAAUoR,MAAQ,WAC3BtR,KAAKi1B,UAAUxH,OAAOqH,sBAAsB90B,KAAKk1B,aACjDl1B,KAAKm1B,QAAQQ,WAAW31B,KAAKk1B,YAAYvuB,YAAY,IAEzDquB,EAAa90B,UAAUgD,KAAO,SAAU4O,EAAMsjB,GAC1C,GAAwB,iBAAbA,IAA0Bz1B,MAAMmG,QAAQsvB,SAA0BhqB,IAAbgqB,EAC5D,MAAM,IAAItuB,MAAM,qDAEpB,GAAoB,iBAATgL,EACP,MAAM,IAAIhL,MAAM,8CAEpB9G,KAAKi1B,UAAUxH,OAAOsH,SAAS/0B,KAAKk1B,YAAapjB,EAAMsjB,IAE3DJ,EAAa90B,UAAU01B,iBAAmB,SAAUjE,GAChD3xB,KAAKk1B,YAAcvD,GAEhBqD,KAGPa,GAAU,WACV,SAASA,EAAOrtB,EAAUstB,GACtB91B,KAAKwI,SAAWA,EAChBxI,KAAK81B,iBAAmBA,EACxB91B,KAAK+1B,YAAc,EACnB/1B,KAAKg2B,uBAAyB,GAC9Bh2B,KAAKi2B,UAAY,IAAIpC,GAAgBrrB,EAAUxI,MAC/CA,KAAKwI,SAASilB,OAAOyI,UAAUl2B,KAAKm2B,gBAAgBlV,KAAKjhB,OA+S7D,OA7SA61B,EAAO31B,UAAUk2B,aAAe,SAAUC,EAAWrnB,EAAWgd,EAAiBC,EAAeqK,GAC5F,IAAInuB,EAAQnI,KAuDZ,OAAO+rB,GAtDO,IAAI5qB,SAAQ,SAAUC,EAASC,GACzC,GAAKg1B,EAAL,CAIA,IAAIE,EAOJ,KALIA,EADqB,iBAAdF,EACkB,CAAEzxB,KAAM,GAAKyxB,GAGbj2B,EAAS,GAAIi2B,IAEdzxB,KACxB,OAAOvD,EAAO,4GAAkIoT,KAAKC,UAAU6hB,IAInK,GAFwBpuB,EAAM2tB,iBAAiBU,UAC1CC,MAAK,SAAUC,GAAgB,OAAOA,EAAa/vB,WAAW/B,OAAS2xB,EAAuB3xB,QAE/F,OAAOvD,EAAO,2BAA8Bk1B,EAAuB3xB,KAAO,mEAE9E2xB,EAAuBnH,mBAAoB,EACtCpgB,IACDA,EAAY,IAEoC,mBAAzCA,EAAUulB,6BACjBvlB,EAAUulB,2BAA6B,SAAUC,GAC7CA,EAAQhB,WAGhB,IAAI7B,EAAaxpB,EAAM2tB,iBAAiBvmB,IAAI,CACxC5I,WAAY4vB,EACZjC,gBAAiBtlB,EACjB2nB,cAAe,KAEnBxuB,EAAMK,SAASilB,OAAO2I,aAAazE,GAC9B7vB,MAAK,WACN,IAAI80B,EACAN,GACAM,EAAmBN,EACnBA,EAAeV,iBAAiBjE,IAGhCiF,EAAmB,IAAI5B,GAAa7sB,EAAMK,SAAUmpB,EAAYxpB,GAEpEwpB,EAAWpF,OAASqK,EACpBx1B,EAAQw1B,MAEP5c,OAAM,SAAU9J,GACbyhB,EAAWkF,QACX1uB,EAAM2tB,iBAAiBgB,OAAOnF,EAAWkF,QAE7Cx1B,EAAO6O,WAjDP7O,EAAO,6MAoDW2qB,EAAiBC,IAE/C4J,EAAO31B,UAAU62B,SAAW,SAAUpI,EAAkBnf,GACpD,IAAIrH,EAAQnI,KACZ,IAAK2uB,EACD,OAAOxtB,QAAQE,OAAO,2JAE1B,GAAwB,mBAAbmO,EACP,OAAOrO,QAAQE,OAAO,8DAA4F,iBAArBstB,EAAgCA,EAAmBA,EAAiB/pB,OAErK,IAAIoyB,EAA0B,SAAUryB,EAASsyB,GAAkB,OAAOn2B,EAAUqH,OAAO,OAAQ,GAAQ,WACvG,IAAIvG,EAAQs1B,EAAata,EACzB,OAAO7a,EAAY/B,MAAM,SAAUmH,GAC/B,OAAQA,EAAG9E,OACP,KAAK,EAGD,OAFA8E,EAAG5E,KAAKW,KAAK,CAAC,EAAG,GAAK,KACtBtB,EAAS4N,EAAS7K,EAAQwyB,KAAMxyB,EAAQ2J,YACD,mBAAhB1M,EAAOE,KACvB,CAAC,EAAGF,GADgD,CAAC,EAAG,GAEnE,KAAK,EAGD,OAFAs1B,EAAc/vB,EAAG7E,OACjB20B,OAAe7rB,EAAW8rB,GACnB,CAAC,EAAG,GACf,KAAK,EACDD,OAAe7rB,EAAWxJ,GAC1BuF,EAAG9E,MAAQ,EACf,KAAK,EAAG,MAAO,CAAC,EAAG,GACnB,KAAK,EAMD,OALAua,EAAMzV,EAAG7E,UAELsa,EAAM,IAEVqa,EAAera,EAAKA,GACb,CAAC,EAAG,GACf,KAAK,EAAG,MAAO,CAAC,WAK5B,OADAoa,EAAwBI,aAAe5nB,EAChCxP,KAAKq3B,aAAa1I,EAAkBqI,IAE/CnB,EAAO31B,UAAUo3B,cAAgB,SAAU3I,EAAkBnf,GACzD,IAAKmf,EACD,OAAOxtB,QAAQE,OAAO,2JAE1B,GAAwB,mBAAbmO,EACP,OAAOrO,QAAQE,OAAO,8DAA4F,iBAArBstB,EAAgCA,EAAmBA,EAAiB/pB,OAErK,IAAI2yB,EAAkB,SAAU5yB,EAASsyB,GACrC,IACI,IAAIO,GAAiB,EACjBpd,EAAU,SAAUxY,GACf41B,GACDP,OAAe7rB,EAAWxJ,GAE9B41B,GAAiB,GAEjBloB,EAAQ,SAAU5N,GACb81B,IACI91B,IACDA,EAAI,IAERu1B,EAAev1B,EAAGA,IAEtB81B,GAAiB,GAEjBC,EAAejoB,EAAS7K,EAAQwyB,KAAMxyB,EAAQ2J,SAAU8L,EAAS9K,GACjEmoB,GAA6C,mBAAtBA,EAAa31B,MACpC21B,EACK31B,KAAKsY,GACLJ,MAAM1K,GAGnB,MAAO5N,GACHu1B,EAAev1B,OAAG0J,KAI1B,OADAmsB,EAAgBG,kBAAoBloB,EAC7BxP,KAAKq3B,aAAa1I,EAAkB4I,IAE/C1B,EAAO31B,UAAUy1B,WAAa,SAAUtI,EAAcsK,GAElD,YADkB,IAAdA,IAAwBA,GAAY,GACjC72B,EAAUd,UAAM,OAAQ,GAAQ,WACnC,IAAI2uB,EAAkBiJ,EACtB,OAAO71B,EAAY/B,MAAM,SAAUmH,GAC/B,OAAQA,EAAG9E,OACP,KAAK,EACD,YAAqB+I,IAAjBiiB,EACO,CAAC,EAAGlsB,QAAQE,OAAO,iGAEA,mBAAjBgsB,EAAqC,CAAC,EAAG,GAC/C,CAAC,EAAGrtB,KAAK63B,wBAAwBxK,EAAcsK,IAC1D,KAAK,EAED,OADAxwB,EAAG7E,OACI,CAAC,GACZ,KAAK,EAOD,YAA8B8I,KAL1BujB,EADwB,iBAAjBtB,EACY,CAAEzoB,KAAMyoB,GAGRA,GAEFzoB,KACV,CAAC,EAAGzD,QAAQE,OAAO,oFAE9Bu2B,EAAoB53B,KAAK81B,iBAAiBU,UAAUnF,MAAK,SAAUqF,GAC/D,OAAOA,EAAa/vB,WAAW/B,OAAS+pB,EAAiB/pB,OACjD8xB,EAAa/vB,WAAWyoB,oBAAqB,KAAWuI,MAK7D,CAAC,EAAG33B,KAAK83B,uBAAuB,CAACF,KAF7B,CAAC,EAAGz2B,QAAQE,OAAO,uBAA0BstB,EAAiB/pB,KAAO,+DAGpF,KAAK,EAED,OADAuC,EAAG7E,OACI,CAAC,WAK5BuzB,EAAO31B,UAAU23B,wBAA0B,SAAUE,EAAiBJ,GAClE,OAAO72B,EAAUd,UAAM,OAAQ,GAAQ,WACnC,IAAIg4B,EACJ,OAAOj2B,EAAY/B,MAAM,SAAUmH,GAC/B,OAAQA,EAAG9E,OACP,KAAK,EAMD,OALA21B,EAA2Bh4B,KAAK81B,iBAAiBU,UAC5C5sB,QAAO,SAAU+P,GAAM,OAAOoe,EAAgBpe,EAAGhT,eACjDiD,QAAO,SAAU8sB,GAClB,OAAQA,EAAa/vB,WAAWyoB,oBAAqB,KAAWuI,OAEC,IAApCK,EAAyBr3B,OAGnD,CAAC,EAAGX,KAAK83B,uBAAuBE,IAF5B,CAAC,EAAG72B,QAAQE,OAAO,qBAAuBs2B,EAAY,SAAW,UAAY,uCAG5F,KAAK,EAED,OADAxwB,EAAG7E,OACI,CAAC,WAK5BuzB,EAAO31B,UAAU43B,uBAAyB,SAAUG,GAChD,IAAI9vB,EAAQnI,KACRk4B,EAAsB,GAW1B,OAVAD,EAAgB5xB,SAAQ,SAAUmX,GAC9B,IAAI1K,EAAU3K,EAAMK,SAASilB,OAAOkI,WAAWnY,GAC1C1b,MAAK,WACF0b,EAAOqZ,QACP1uB,EAAM2tB,iBAAiBgB,OAAOtZ,EAAOqZ,WAG7CqB,EAAoBh1B,KAAK4P,GACzB3K,EAAMgwB,4BAA4B3a,EAAO7W,WAAW/B,KAAMkO,MAEvD3R,QAAQ4d,IAAImZ,IAEvBrC,EAAO31B,UAAUi4B,4BAA8B,SAAUC,EAAYtlB,GACjE,OAAOhS,EAAUd,UAAM,OAAQ,GAAQ,WACnC,IAAI8uB,EACA3mB,EAAQnI,KACZ,OAAO+B,EAAY/B,MAAM,SAAUmH,GAK/B,OAJA2nB,EAAU,IAAI3tB,SAAQ,SAAUC,GAAW,OAAO6R,WAAW7R,EAAS,QACtEpB,KAAKg2B,uBAAuBoC,GAAcj3B,QAAQyuB,KAAK,CAAC9c,EAASgc,IAAUhtB,MAAK,kBACrEqG,EAAM6tB,uBAAuBoC,MAEjC,CAAC,UAIpBvC,EAAO31B,UAAUm3B,aAAe,SAAU7Z,EAAQ6a,GAC9C,OAAOv3B,EAAUd,UAAM,OAAQ,GAAQ,WACnC,IAAI2uB,EAAkB2J,EAAyC3G,EAC3DxpB,EAAQnI,KACZ,OAAO+B,EAAY/B,MAAM,SAAUmH,GAC/B,OAAQA,EAAG9E,OACP,KAAK,EAOD,OALIssB,EADkB,iBAAXnR,EACY,CAAE5Y,KAAM,GAAK4Y,GAGbpd,EAAS,GAAIod,IAEd5Y,MAGtB0zB,EAAuBt4B,KAAKg2B,uBAAuBrH,EAAiB/pB,OAE7D,CAAC,EAAG0zB,GADuB,CAAC,EAAG,GAH3B,CAAC,EAAGn3B,QAAQE,OAAO,qGAA2HoT,KAAKC,UAAU8I,KAK5K,KAAK,EACDrW,EAAG7E,OACH6E,EAAG9E,MAAQ,EACf,KAAK,EAGD,OAFoBrC,KAAK81B,iBAAiBU,UACrCC,MAAK,SAAUC,GAAgB,OAAOA,EAAa/vB,WAAW/B,OAAS+pB,EAAiB/pB,QAElF,CAAC,EAAGzD,QAAQE,OAAO,2BAA8BstB,EAAiB/pB,KAAO,oEAEhF+pB,EAAiBS,kBACV,CAAC,EAAGjuB,QAAQE,OAAO,4JAA2MstB,EAAiB/pB,KAAO,4EAEjQ+sB,EAAa3xB,KAAK81B,iBAAiBvmB,IAAI,CACnC5I,WAAYgoB,EACZ0J,YAAaA,EACb1B,cAAe,KAEZ,CAAC,EAAG32B,KAAKwI,SAASilB,OAAOsJ,SAASpF,GAChC3X,OAAM,SAAU9J,GAIjB,MAHIyhB,MAAAA,OAA+C,EAASA,EAAWkF,SACnE1uB,EAAM2tB,iBAAiBgB,OAAOnF,EAAWkF,QAEvC3mB,eAMlC2lB,EAAO31B,UAAUi2B,gBAAkB,SAAUoC,EAAiB1I,EAAc2I,GACxE,IAAIrwB,EAAQnI,KACPu4B,GAAoBA,EAAgBF,aAGzCE,EAAgBF,YAAYG,GAAgB,SAAUtoB,EAAKtO,GACvD,GAAIsO,MAAAA,EACA,GAAIA,EAAIa,SAAkC,iBAAhBb,EAAIa,QAC1Bb,EAAMA,EAAIa,aAET,GAAmB,iBAARb,EACZ,IACIA,EAAMuE,KAAKC,UAAUxE,GAEzB,MAAOuoB,GACHvoB,EAAM,oEAAsE1Q,OAAO2E,KAAK+L,GAI/FtO,GAGsB,iBAAXA,GAAuBjC,MAAMmG,QAAQlE,MACjDA,EAAS,CAAE82B,OAAQ92B,IAHnBA,EAAS,GAKbuG,EAAMK,SAASilB,OAAOkL,uBAAuBJ,EAAiB1I,EAAc3f,EAAKtO,OAGlFi0B,KAGP+C,GAAmB,WACnB,SAASA,EAAgBtqB,EAAUxB,GAC/B,IAAI3E,EAAQnI,KACZA,KAAK64B,QAAU,CACXnL,WAAYA,GACZoL,WAAYA,IAEZxqB,GACAtO,KAAK+4B,qBAAqBzqB,GAE1BxB,IACAA,EAAWyM,UAAS,WAChBpR,EAAM6wB,QAAQlsB,MAElB9M,KAAKg5B,QAAQlsB,IA8BrB,OA3BA8rB,EAAgB14B,UAAU+4B,OAAS,WAC/B,OAAOj5B,KAAK64B,SAEhBD,EAAgB14B,UAAU84B,QAAU,SAAUlsB,GAC1C,GAAKA,EAAL,CAGA,IAAIsR,EAAmBtR,MAAAA,OAA+C,EAASA,EAAWsR,iBACtF9P,EAAW9O,OAAOa,OAAO,GAAI+d,MAAAA,EAA2DA,EAAmB,GAAI,CAAEzP,OAAQ7B,MAAAA,OAA+C,EAASA,EAAW6B,SAChM3O,KAAK+4B,qBAAqBzqB,KAE9BsqB,EAAgB14B,UAAU64B,qBAAuB,SAAU3a,GACvD,IAAIjX,EAAI4G,EAAImP,EACZld,KAAK64B,QAAQK,KAAO9a,EAAiB8a,KACrCl5B,KAAK64B,QAAQvqB,SAAW8P,EAAiB9P,SACzCtO,KAAK64B,QAAQ3jB,YAAsD,QAAvC/N,EAAKiX,EAAiBlJ,mBAAgC,IAAP/N,EAAgBA,EAAK2R,IAChG9Y,KAAK64B,QAAQhU,gBAAkBzG,EAAiByG,gBAChD7kB,KAAK64B,QAAQtU,IAAuG,QAAhGrH,EAAqC,QAA/BnP,EAAKqQ,EAAiBmG,WAAwB,IAAPxW,EAAgBA,EAAKqQ,EAAiBzL,eAA4B,IAAPuK,EAAgBA,EAAKzG,KAAKC,MAAsB,KAAhBD,KAAKW,UACjKpX,KAAK64B,QAAQM,QAAU/a,EAAiB+a,QACxCn5B,KAAK64B,QAAQrU,YAAcpG,EAAiBoG,YAC5CxkB,KAAK64B,QAAQpU,OAASrG,EAAiBqG,OACvCzkB,KAAK64B,QAAQvU,SAAWlG,EAAiBkG,SACzCtkB,KAAK64B,QAAQvH,SAAU,EACvBtxB,KAAK64B,QAAQ1T,IAAM/G,EAAiB+G,IACpCnlB,KAAK64B,QAAQxqB,QAAU+P,EAAiB/P,QACxCrO,KAAK64B,QAAQlqB,OAASyP,EAAiBzP,QAEpCiqB,KAEX,SAASlL,KACL,IAAIvmB,EACJ,OAAsC,QAA9BA,EAAKyxB,GAAgBQ,WAAwB,IAAPjyB,OAAgB,EAASA,EAAGwmB,mBAAmB3tB,MAEjG,SAAS84B,KACL,IAAI3xB,EACJ,OAAsC,QAA9BA,EAAKyxB,GAAgBQ,WAAwB,IAAPjyB,OAAgB,EAASA,EAAGwmB,mBAAmB3tB,MAAM4J,QAAO,SAAUtD,GAAK,OAAOA,EAAE8oB,qBAGtI,IAAIiK,GAAoB,WACpB,SAASA,EAAiB5oB,GACtBzQ,KAAKyQ,OAASA,EACdzQ,KAAKotB,QAAU,GACfptB,KAAKs5B,aAAe,GACpBt5B,KAAKgP,UAAYsB,IAwMrB,OAtMA+oB,EAAiBn5B,UAAUq5B,UAAY,SAAU5lB,EAAM6lB,GACnDx5B,KAAKyQ,OAAO2D,MAAM,iBAAmBolB,GACrC,IAAI1G,EAAU9yB,KAAKotB,QAAQoM,GAC3B,GAAI1G,EACA,OAAOA,EAAQ1pB,GAEnB,IAAIqwB,EAAU,IAAIb,GAAgBjlB,GAC9B+lB,EAAc,CACdtwB,GAAIowB,EACJvW,QAAS,GACT3U,SAAUmrB,EAAQR,SAClBQ,QAASA,GAIb,OAFAz5B,KAAKotB,QAAQoM,GAAYE,EACzB15B,KAAKgP,UAAUc,QAAQ,gBAAiB4pB,EAAYprB,UAC7CkrB,GAEXH,EAAiBn5B,UAAUy5B,iBAAmB,SAAUvwB,EAAIoL,GACxD,IAAIrM,EAAQnI,KACRytB,EAASztB,KAAKotB,QAAQhkB,GACrBqkB,GAKDztB,KAAKyQ,OAAO2D,MAAM,mBAAqBhL,GAE3C5J,OAAO2E,KAAKspB,EAAOxK,SAAS5c,SAAQ,SAAUuzB,GAC1CzxB,EAAM0xB,mBAAmBzwB,EAAIwwB,aAE1B55B,KAAKotB,QAAQhkB,GACpBpJ,KAAKgP,UAAUc,QAAQ,kBAAmB2d,EAAOnf,SAAUkG,IAVvDxU,KAAKyQ,OAAOkK,KAAK,uBAAyBvR,EAAK,cAAgBqL,KAAKC,UAAUlV,OAAO2E,KAAKnE,KAAKotB,YAYvGiM,EAAiBn5B,UAAU45B,gBAAkB,SAAUN,EAAUhc,GAC7D,IAAIiQ,EAASztB,KAAKotB,QAAQoM,GAC1B,IAAK/L,EACD,MAAM,IAAI3mB,MAAM,0BAEpB,IAAI2mB,EAAOxK,QAAQzF,EAAOpU,IAA1B,CAGA,IAAIwpB,EAAa5yB,KAAK+5B,uBAAuBvc,GACzCwc,EAAOh6B,KACP2uB,EAAmB,CACnBiE,WAAYA,EACZqH,UAAWzc,EAAOpU,GAClBxE,KAAM4Y,EAAO5Y,KACb6wB,YAAajY,EAAO0c,aACpBx1B,YAAa8Y,EAAO9Y,YACpByN,QAASqL,EAAOrL,QAChBkd,YAAa7R,EAAO2c,cAAgB,GACpC3E,QAAShY,EAAO4c,gBAChB1E,QAASlY,EAAO6c,iBAChBjL,uBAA2C,IAAjB5R,EAAOgK,OAAwBhK,EAAOgK,MAAMyO,UACtE1I,WAAY,WACR,OAAOyM,EAAKM,mBAAmB1H,KAavC,OAVAjE,EAAiBwL,aAAexL,EAAiBU,YACjDV,EAAiBuL,aAAevL,EAAiB8G,YACjD9G,EAAiBxc,QAAUwc,EAAiBxc,QAC5Csb,EAAOxK,QAAQzF,EAAOpU,IAAMulB,EACvB3uB,KAAKs5B,aAAa1G,KACnB5yB,KAAKs5B,aAAa1G,GAAc,EAChC5yB,KAAKgP,UAAUc,QAAQ,gBAAiB6e,IAE5C3uB,KAAKs5B,aAAa1G,GAAc5yB,KAAKs5B,aAAa1G,GAAc,EAChE5yB,KAAKgP,UAAUc,QAAQ,sBAAuB2d,EAAOnf,SAAUqgB,GACxDA,IAEX0K,EAAiBn5B,UAAU25B,mBAAqB,SAAUL,EAAUI,GAChE,IAAInM,EAASztB,KAAKotB,QAAQoM,GAC1B,IAAK/L,EACD,MAAM,IAAI3mB,MAAM,0BAEpB,IAAI0W,EAASiQ,EAAOxK,QAAQ2W,UACrBnM,EAAOxK,QAAQ2W,GACtB55B,KAAKs5B,aAAa9b,EAAOoV,YAAc5yB,KAAKs5B,aAAa9b,EAAOoV,YAAc,EACjC,IAAzC5yB,KAAKs5B,aAAa9b,EAAOoV,aACzB5yB,KAAKgP,UAAUc,QAAQ,kBAAmB0N,GAE9Cxd,KAAKgP,UAAUc,QAAQ,wBAAyB2d,EAAOnf,SAAUkP,IAErE6b,EAAiBn5B,UAAUwtB,WAAa,WACpC,IAAIvlB,EAAQnI,KACRu6B,EAAa,GAWjB,OAVA/6B,OAAO2E,KAAKnE,KAAKotB,SAAS/mB,SAAQ,SAAUmzB,GACxC,IAAI/L,EAAStlB,EAAMilB,QAAQoM,GAC3Bh6B,OAAO2E,KAAKspB,EAAOxK,SAAS5c,SAAQ,SAAUuzB,GAC1C,IAAIpc,EAASiQ,EAAOxK,QAAQ2W,GAC5BW,EAAW/c,EAAOoV,YAAcpV,QAGnBhe,OAAO2E,KAAKo2B,GAAYzb,KAAI,SAAU1V,GACvD,OAAOmxB,EAAWnxB,OAI1BiwB,EAAiBn5B,UAAUqtB,WAAa,WACpC,IAAIplB,EAAQnI,KACRw6B,EAAa,GAKjB,OAJAh7B,OAAO2E,KAAKnE,KAAKotB,SAAS/mB,SAAQ,SAAUmzB,GACxC,IAAI/L,EAAStlB,EAAMilB,QAAQoM,GAC3BgB,EAAWt3B,KAAKuqB,MAEb+M,GAEXnB,EAAiBn5B,UAAU8yB,qBAAuB,SAAUwG,GACxD,IAAI/L,EAASztB,KAAKotB,QAAQoM,GAC1B,OAAOh6B,OAAO2E,KAAKspB,EAAOxK,SAASnE,KAAI,SAAU1V,GAC7C,OAAOqkB,EAAOxK,QAAQ7Z,OAG9BiwB,EAAiBn5B,UAAUguB,cAAgB,SAAU1e,GACjD,IAAIirB,EAAkBz6B,KAAKgP,UAAUO,IAAI,gBAAiBC,GACtDkrB,EAA6B16B,KAAKutB,aAAazO,KAAI,SAAUve,GAAK,OAAOA,EAAE+N,YAC/E,OAAOtO,KAAK26B,6BAA6BF,EAAiBC,EAA4BlrB,IAE1F6pB,EAAiBn5B,UAAU4tB,cAAgB,SAAUte,GACjD,IAAIirB,EAAkBz6B,KAAKgP,UAAUO,IAAI,gBAAiBC,GACtDorB,EAAkB56B,KAAK0tB,aAC3B,OAAO1tB,KAAK26B,6BAA6BF,EAAiBG,EAAiBprB,IAE/E6pB,EAAiBn5B,UAAUouB,oBAAsB,SAAU9e,GACvD,IAAIirB,EAAkBz6B,KAAKgP,UAAUO,IAAI,sBAAuBC,GAC5DqrB,GAAc,EACdzN,EAAUptB,KAAKutB,aAWnB,OAVAta,YAAW,WACPma,EAAQ/mB,SAAQ,SAAUonB,GACtB,IAAIxK,EAAUwK,EAAOxK,QACrBzjB,OAAO2E,KAAK8e,GAAS5c,SAAQ,SAAUuzB,GAC9BiB,GACDrrB,EAASie,EAAOnf,SAAU2U,EAAQ2W,YAI/C,GACI,WACHiB,GAAc,EACdJ,MAGRpB,EAAiBn5B,UAAU8tB,gBAAkB,SAAUxe,GAEnD,OADsBxP,KAAKgP,UAAUO,IAAI,kBAAmBC,IAGhE6pB,EAAiBn5B,UAAUkuB,gBAAkB,SAAU5e,GAEnD,OADsBxP,KAAKgP,UAAUO,IAAI,kBAAmBC,IAGhE6pB,EAAiBn5B,UAAUsuB,sBAAwB,SAAUhf,GAEzD,OADsBxP,KAAKgP,UAAUO,IAAI,wBAAyBC,IAGtE6pB,EAAiBn5B,UAAU46B,cAAgB,SAAU1xB,GACjD,OAAOpJ,KAAKotB,QAAQhkB,IAExBiwB,EAAiBn5B,UAAU2V,MAAQ,WAC/B,IAAI1N,EAAQnI,KACZR,OAAO2E,KAAKnE,KAAKotB,SAAS/mB,SAAQ,SAAU/B,GACxC6D,EAAMwxB,iBAAiBr1B,EAAK,YAEhCtE,KAAKotB,QAAU,GACfptB,KAAKs5B,aAAe,IAExBD,EAAiBn5B,UAAU65B,uBAAyB,SAAUgB,GAC1D,IAAIvF,OAAyCpqB,IAA/B2vB,EAAWX,gBAAgCW,EAAWX,gBAAkB,GAClF1E,OAA0CtqB,IAAhC2vB,EAAWV,iBAAiCU,EAAWV,iBAAmB,GACxF,OAAQU,EAAWn2B,KAAO4wB,EAAUE,GAAS1pB,eAEjDqtB,EAAiBn5B,UAAUo6B,mBAAqB,SAAU1H,GACtD,IAAIzqB,EAAQnI,KACRw6B,EAAa,GAUjB,OATAh7B,OAAO2E,KAAKnE,KAAKotB,SAAS/mB,SAAQ,SAAUmzB,GACxC,IAAI/L,EAAStlB,EAAMilB,QAAQoM,GAC3Bh6B,OAAO2E,KAAKspB,EAAOxK,SAAS5c,SAAQ,SAAUuzB,GACzBnM,EAAOxK,QAAQ2W,GACjBhH,aAAeA,GAC1B4H,EAAWt3B,KAAKuqB,EAAOnf,gBAI5BksB,GAEXnB,EAAiBn5B,UAAUy6B,6BAA+B,SAAUF,EAAiBO,EAAoBxrB,GACrG,IAAIqrB,GAAc,EAQlB,OAPA5nB,YAAW,WACP+nB,EAAmB30B,SAAQ,SAAU6P,GAC5B2kB,GACDrrB,EAAS0G,QAGlB,GACI,WACH2kB,GAAc,EACdJ,MAGDpB,KAGP4B,GAAoB,WACpB,SAASA,IACLj7B,KAAKk7B,OAAS,EACdl7B,KAAKijB,QAAU,GAiCnB,OA/BAgY,EAAiB/6B,UAAUqP,IAAM,SAAUiO,GAIvC,OAHAA,EAAOqZ,OAASrE,OAAOxyB,KAAKk7B,QAC5Bl7B,KAAKk7B,QAAU,EACfl7B,KAAKijB,QAAQ/f,KAAKsa,GACXA,GAEXyd,EAAiB/6B,UAAU42B,OAAS,SAAUD,GAC1C,GAAsB,iBAAXA,EACP,OAAO,IAAI7zB,UAAU,sBAEzBhD,KAAKijB,QAAUjjB,KAAKijB,QAAQrZ,QAAO,SAAUtD,GACzC,OAAOA,EAAEuwB,SAAWA,MAG5BoE,EAAiB/6B,UAAUi7B,QAAU,SAAU/xB,GAC3C,GAAkB,iBAAPA,EAGX,OAAOpJ,KAAKijB,QAAQoO,MAAK,SAAU/qB,GAC/B,OAAOA,EAAEuwB,SAAWztB,MAG5B6xB,EAAiB/6B,UAAUs2B,QAAU,WACjC,OAAOx2B,KAAKijB,QAAQnE,KAAI,SAAUxY,GAAK,OAAOA,MAElD20B,EAAiB/6B,UAAUS,OAAS,WAChC,OAAOX,KAAKijB,QAAQtiB,QAExBs6B,EAAiB/6B,UAAU2V,MAAQ,WAC/B7V,KAAKijB,QAAU,IAEZgY,KAMPG,GAAqB,WACrB,SAASvH,EAAgB5mB,EAASouB,EAAYvF,GAC1C,IAAI3tB,EAAQnI,KACZA,KAAKiN,QAAUA,EACfjN,KAAKq7B,WAAaA,EAClBr7B,KAAK81B,iBAAmBA,EACxB91B,KAAKs7B,4BAA8B,6CACnCt7B,KAAKgP,UAAYsB,IACjBtQ,KAAKu7B,aAAe,EACpBtuB,EAAQuM,GAAG,gBAAgB,SAAUpT,GACjC+B,EAAMqzB,kBAAkBp1B,MAE5B6G,EAAQuM,GAAG,mBAAmB,SAAUpT,GACpC+B,EAAMszB,qBAAqBr1B,MAsPnC,OAnPAytB,EAAgB3zB,UAAUuzB,sBAAwB,SAAUF,EAAgBmI,EAAiB/H,GAIzF,GAHsB,iBAAXA,IACPA,EAAS,IAEiD,iBAAnD+H,EAAgB/E,cAAcgF,iBACrC,MAAM,IAAI34B,UAAU,sDAExB,IAAKrD,MAAMmG,QAAQ41B,EAAgB/E,cAAciF,wBAC7C,MAAM,IAAI54B,UAAU,iDAExB,IAAI64B,EAAW77B,KAAK87B,YAAYJ,EAAiB/H,GAC7CrvB,EAAMivB,EAAentB,IAAI21B,gBACzB7I,EAAe,CACf9pB,GAAI9E,EACJ5D,UAAW6yB,EAAe7yB,UAC1B4N,SAAUilB,EAAejlB,SACzB6kB,UAAWQ,EACXkI,SAAUA,EACVG,aAAczI,EAAentB,KAEjCs1B,EAAgB/E,cAAcgF,iBAAiBr3B,GAAO4uB,EACtDlzB,KAAKiN,QAAQ6N,kBAAkB,CAC3BjX,KAAM,WACNk4B,gBAAiBz3B,EACjB23B,UAAWJ,IAEf77B,KAAKgP,UAAUc,QA5CE,sBA4C0BojB,EAAcwI,IAE7D7H,EAAgB3zB,UAAU0zB,cAAgB,SAAUL,EAAgBmI,EAAiBlnB,GAC3D,iBAAXA,IACPA,EAAS,IAEbxU,KAAKk8B,uBAAuB,kCAAoC1nB,EAAQ+e,EAAentB,IAAI21B,kBAE/FlI,EAAgB3zB,UAAU60B,SAAW,SAAU2G,EAAiB5pB,EAAMsjB,GAClE,IAAIjtB,EAAQnI,KACZ,GAA+B,iBAApB07B,GAAiC/7B,MAAMmG,QAAQ41B,EAAgB/E,cAAciF,wBAAxF,CAGA,GAAoB,iBAAT9pB,EACP,MAAM,IAAIhL,MAAM,8CAEI,iBAAbsuB,EACPA,EAAW,CAACA,KAENz1B,MAAMmG,QAAQsvB,IAAaA,EAASz0B,QAAU,KACpDy0B,EAAW,IAEIsG,EAAgB/E,cAAciF,uBAC5ChyB,QAAO,SAAUuyB,GAClB,OAAK/G,GAAgC,IAApBA,EAASz0B,QAGnBy0B,EAASvd,QAAQskB,EAAG73B,MAAQ,KACpCwa,KAAI,SAAUqd,GACb,OAAOA,EAAGN,YAEDx1B,SAAQ,SAAUw1B,GAC3B,IAAIhZ,EAAiB,CACjBhf,KAAM,UACNo4B,UAAWJ,EACX/pB,KAAMA,GAEV3J,EAAM8E,QAAQ6N,kBAAkB+H,QAGxCgR,EAAgB3zB,UAAUmzB,iBAAmB,SAAU7V,EAAQ0V,EAAcphB,GACzE,GAAoB,iBAATA,EACP,MAAM,IAAIhL,MAAM,8CAEpB,IAAIiL,EAAc,CACdlO,KAAM,OACNk4B,gBAAiB7I,EAAa9pB,GAC9B0I,KAAMA,GAEV9R,KAAKiN,QAAQ6N,kBAAkB/I,IAEnC8hB,EAAgB3zB,UAAUkzB,wBAA0B,SAAUsI,EAAiBxI,GACvEwI,EAAgB/E,cAAcgF,yBACvBD,EAAgB/E,cAAcgF,iBAAiBzI,EAAa9pB,IAEvE,IAAIgzB,EAA0B,CAC1Bv4B,KAAM,oBACNk4B,gBAAiB7I,EAAa9pB,GAC9BoL,OAAQ,yCAEZxU,KAAKiN,QAAQ6N,kBAAkBshB,GACdlJ,EAAa5kB,SAC9BtO,KAAKgP,UAAUc,QAzGI,wBAyG0BojB,EAAcwI,IAE/D7H,EAAgB3zB,UAAUm8B,2BAA6B,SAAUX,EAAiBvI,GAC9E,IAAIhrB,EAAQnI,KACZ,GAA+B,iBAApB07B,GAA0F,iBAAnDA,EAAgB/E,cAAcgF,kBAG3ED,EAAgB/E,cAAcgF,iBAAnC,CAGA,IAAIA,EAAmBD,EAAgB/E,cAAcgF,iBACjDW,EAAuB98B,OAAO2E,KAAKw3B,GAClC7c,KAAI,SAAUxa,GACf,OAAOq3B,EAAiBr3B,MAEH,iBAAd6uB,IACPmJ,EAAuBA,EAAqB1yB,QAAO,SAAUqW,GACzD,OAAOA,EAAIkT,YAAcA,MAGjCmJ,EAAqBj2B,SAAQ,SAAU6sB,UAC5ByI,EAAiBzI,EAAa9pB,IACrC,IAAImzB,EAAO,CACP14B,KAAM,oBACNk4B,gBAAiB7I,EAAa9pB,GAC9BoL,OAAQ,mDAAqD0e,EAAa2I,UAE9E1zB,EAAM8E,QAAQ6N,kBAAkByhB,QAGxC1I,EAAgB3zB,UAAU20B,oBAAsB,SAAU6G,EAAiBvI,GACvE,GAA+B,iBAApBuI,EACP,MAAO,GAGX,IAAKA,EAAgB/E,cAAcgF,iBAC/B,MAAO,GAEX,IAAIA,EAAmBD,EAAgB/E,cAAcgF,iBACjDa,EAAmBh9B,OAAO2E,KAAKw3B,GAC9B7c,KAAI,SAAUxa,GACf,OAAOq3B,EAAiBr3B,MAU5B,MARyB,iBAAd6uB,EACSqJ,EAGAA,EAAiB5yB,QAAO,SAAUqW,GAC9C,OAAOA,EAAIkT,YAAcA,MAKrCU,EAAgB3zB,UAAUo1B,cAAgB,SAAUoG,GAChD,GAA+B,iBAApBA,EACP,MAAO,GAEX,IAAKA,EAAgB/E,cAAcgF,iBAC/B,MAAO,GAEX,IAAIA,EAAmBD,EAAgB/E,cAAcgF,iBACjDa,EAAmBh9B,OAAO2E,KAAKw3B,GAC9B7c,KAAI,SAAUxa,GACf,OAAOq3B,EAAiBr3B,MAExB1C,EAAS,GAUb,OATA46B,EAAiBn2B,SAAQ,SAAU4Z,GAC/B,IAAI0T,EAAS,GACM,iBAAR1T,GAA6C,iBAAlBA,EAAIkT,YACtCQ,EAAS1T,EAAIkT,YAEe,IAA5BvxB,EAAOiW,QAAQ8b,IACf/xB,EAAOsB,KAAKywB,MAGb/xB,GAEXiyB,EAAgB3zB,UAAUg0B,WAAa,SAAU1kB,GAC7CxP,KAAKy8B,4BAxLY,sBAwLoCjtB,IAEzDqkB,EAAgB3zB,UAAU4zB,aAAe,SAAUtkB,GAC/CxP,KAAKy8B,4BA5Lc,wBA4LoCjtB,IAE3DqkB,EAAgB3zB,UAAUk0B,aAAe,SAAU5kB,GAC/CxP,KAAKy8B,4BA7Lc,wBA6LoCjtB,IAE3DqkB,EAAgB3zB,UAAUu7B,qBAAuB,SAAUr1B,GACvD,IAAIs1B,EAAkB17B,KAAK81B,iBAAiBqF,QAAQ/0B,EAAIs2B,WACxD,GAAmC,iBAAxBt2B,EAAI21B,iBACgB,iBAApBL,GAGNA,EAAgB/E,cAAcgF,kBAGgD,iBAAxED,EAAgB/E,cAAcgF,iBAAiBv1B,EAAI21B,iBAA9D,CAGA,IAAI7I,EAAewI,EAAgB/E,cAAcgF,iBAAiBv1B,EAAI21B,wBAC/DL,EAAgB/E,cAAcgF,iBAAiBv1B,EAAI21B,iBAC1D/7B,KAAKgP,UAAUc,QA7MI,wBA6M0BojB,EAAcwI,KAE/D7H,EAAgB3zB,UAAUu8B,4BAA8B,SAAUE,EAAWC,GACzE58B,KAAKgP,UAAUO,IAAIotB,EAAWC,IAElC/I,EAAgB3zB,UAAU28B,gBAAkB,WACxC,OAAO78B,KAAKu7B,eAAiB,IAEjC1H,EAAgB3zB,UAAUs7B,kBAAoB,SAAUp1B,GACpD,IACIkI,EADStO,KAAKq7B,WAAWP,cAAc10B,EAAI02B,WACzBxuB,SAClBilB,EAAiB,CACjBntB,IAAKA,EACL1F,UAAW0F,EAAI22B,cAAgB,GAC/BzuB,SAAUA,GAEVotB,EAAkB17B,KAAK81B,iBAAiBqF,QAAQ/0B,EAAIs2B,WACxD,QAAwBtxB,IAApBswB,EAKAA,EAAgB/E,cAAcgF,kBAC9BD,EAAgB/E,cAAcgF,iBAAiBv1B,EAAI21B,iBACnD/7B,KAAKk8B,uBAAuB,0BAA4B91B,EAAI21B,gBAAkB,mBAAoB31B,EAAI21B,iBAG1G/7B,KAAKgP,UAAUc,QA1OI,wBA0O0ByjB,EAAgBmI,OAV7D,CACI,IAAIhhB,EAAW,qBAAuBtU,EAAIs2B,UAAY,mBACtD18B,KAAKk8B,uBAAuBxhB,EAAUtU,EAAI21B,mBAUlDlI,EAAgB3zB,UAAUg8B,uBAAyB,SAAU1nB,EAAQwoB,GACjE,IAAIC,EAAe,CACfp5B,KAAM,QACNq5B,WAAYl9B,KAAKs7B,4BACjB9mB,OAAQA,EACR0F,WAAY8iB,GAEhBh9B,KAAKiN,QAAQ6N,kBAAkBmiB,IAEnCpJ,EAAgB3zB,UAAU47B,YAAc,SAAUJ,EAAiBvI,GAI/D,GAHyB,iBAAdA,IACPA,EAAY,KAEXuI,EAAgB/E,cAAciF,uBAC/B,MAAM,IAAI90B,MAAM,aAAe40B,EAAgB/0B,WAAW/B,KAAO,kCAErE,IAAIu4B,EAAezB,EAAgB/E,cAAciF,uBAAuBhyB,QAAO,SAAU+pB,GACrF,OAAOA,EAAOrvB,MAAQ6uB,KACvB,GACC0I,EAAYsB,EAAeA,EAAatB,cAAWzwB,EAKvD,MAJwB,iBAAbywB,GAAsC,KAAbA,IAChCA,EAAW77B,KAAK68B,kBAChBnB,EAAgB/E,cAAciF,uBAAuB14B,KAAK,CAAEoB,IAAK6uB,EAAW0I,SAAUA,KAEnFA,GAEJhI,KAGPuJ,GAAkB,WAClB,SAASA,EAAenwB,EAASowB,EAAkBvH,EAAkBrlB,GACjE,IAAItI,EAAQnI,KACZA,KAAKiN,QAAUA,EACfjN,KAAKq9B,iBAAmBA,EACxBr9B,KAAK81B,iBAAmBA,EACxB91B,KAAKyQ,OAASA,EACdzQ,KAAKgP,UAAYsB,IACjBtQ,KAAKi2B,UAAY,IAAImF,GAAkBnuB,EAASowB,EAAkBvH,GAClE91B,KAAKiN,QAAQuM,GAAG,UAAU,SAAUpT,GAAO,OAAO+B,EAAMm1B,oBAAoBl3B,MAgIhF,OA9HAg3B,EAAel9B,UAAUk2B,aAAe,SAAUzE,GAG9C,OAFAA,EAAWgF,cAAcgF,iBAAmB,GAC5ChK,EAAWgF,cAAciF,uBAAyB,GAC3C57B,KAAK+2B,SAASpF,GAAY,IAErCyL,EAAel9B,UAAU62B,SAAW,SAAUpF,EAAY4L,GACtD,IAAIp1B,EAAQnI,KACR4sB,EAAY+E,EAAWhrB,WACvB6gB,EAAQ,CAAEyO,UAAWsH,IAAe,GACpCC,EAAc,CACd35B,KAAM,WACNof,QAAS,CAAC,CACF7Z,GAAIuoB,EAAWkF,OACfjyB,KAAMgoB,EAAUhoB,KAChBs1B,aAActN,EAAU6I,YACxB/wB,YAAakoB,EAAUloB,YACvByN,QAASya,EAAUza,QACnBqV,MAAOA,EACP2S,aAAcvN,EAAUyC,aAAezC,EAAUuN,aACjDC,gBAAiBxN,EAAU4I,QAC3B6E,iBAAkBzN,EAAU8I,QAC5B+H,kBAAcryB,KAG1B,OAAOpL,KAAKiN,QAAQO,KAAKgwB,EAAa,CAAE5D,SAAUjI,EAAWkF,SACxD/0B,MAAK,WACNqG,EAAMsI,OAAO2D,MAAM,qBAAuBud,EAAWhrB,WAAW/B,KAAO,YAAc+sB,EAAWkF,WAE/F7c,OAAM,SAAU5T,GAEjB,MADA+B,EAAMsI,OAAOkK,KAAK,6BAA+BgX,EAAWhrB,WAAW/B,KAAO,YAAc+sB,EAAWkF,OAAS,MAAQpiB,KAAKC,UAAUtO,IACjIA,MAGdg3B,EAAel9B,UAAUg2B,UAAY,SAAU1mB,GAC3CxP,KAAKgP,UAAUO,IAAI,YAAaC,IAEpC4tB,EAAel9B,UAAUy4B,uBAAyB,SAAUnb,EAAQqS,EAAc3f,EAAKtO,GACnF,IAAIwE,EAEAA,EADA8J,GAAe,KAARA,EACD,CACFrM,KAAM,QACNqW,WAAY2V,EACZqN,WAAY,0BACZ1oB,OAAQtE,EACRvL,QAAS/C,EACT8M,aAAStD,GAIP,CACFvH,KAAM,QACN65B,cAAe7N,EACfnhB,QAAS1O,KAAKiN,QAAQ0B,OACtB/M,OAAQA,EACRsY,gBAAY9O,GAGpBpL,KAAKiN,QAAQ6N,kBAAkB1U,IAEnCg3B,EAAel9B,UAAUy1B,WAAa,SAAUnY,GAC5C,OAAO1c,EAAUd,UAAM,OAAQ,GAAQ,WACnC,IAAIoG,EACJ,OAAOrE,EAAY/B,MAAM,SAAUmH,GAC/B,OAAQA,EAAG9E,OACP,KAAK,EAKD,OAJA+D,EAAM,CACFvC,KAAM,aACNof,QAAS,CAACzF,EAAOqZ,SAEd,CAAC,EAAG72B,KAAKiN,QAAQO,KAAKpH,IACjC,KAAK,EAED,OADAe,EAAG7E,OACI,CAAC,WAK5B86B,EAAel9B,UAAUo1B,cAAgB,SAAU9X,GAC/C,OAAOxd,KAAKi2B,UAAUX,cAAc9X,IAExC4f,EAAel9B,UAAU20B,oBAAsB,SAAUrX,EAAQ2V,GAC7D,OAAOnzB,KAAKi2B,UAAUpB,oBAAoBrX,EAAQ2V,IAEtDiK,EAAel9B,UAAU40B,sBAAwB,SAAUtX,EAAQ2V,GAC/DnzB,KAAKi2B,UAAUoG,2BAA2B7e,EAAQ2V,IAEtDiK,EAAel9B,UAAU60B,SAAW,SAAUvX,EAAQ1L,EAAMsjB,GACxDp1B,KAAKi2B,UAAUlB,SAASvX,EAAQ1L,EAAMsjB,IAE1CgI,EAAel9B,UAAUmzB,iBAAmB,SAAU7V,EAAQ0V,EAAcphB,GACxE9R,KAAKi2B,UAAU5C,iBAAiB7V,EAAQ0V,EAAcphB,IAE1DsrB,EAAel9B,UAAUkzB,wBAA0B,SAAU5V,EAAQ0V,GACjElzB,KAAKi2B,UAAU7C,wBAAwB5V,EAAQ0V,IAEnDkK,EAAel9B,UAAUuzB,sBAAwB,SAAUF,EAAgB/V,EAAQmW,GAC/E3zB,KAAKi2B,UAAUxC,sBAAsBF,EAAgB/V,EAAQmW,IAEjEyJ,EAAel9B,UAAU0zB,cAAgB,SAAUL,EAAgB/V,EAAQhJ,GACvExU,KAAKi2B,UAAUrC,cAAcL,EAAgB/V,EAAQhJ,IAEzD4oB,EAAel9B,UAAU4zB,aAAe,SAAUtkB,GAC9CxP,KAAKi2B,UAAUnC,aAAatkB,IAEhC4tB,EAAel9B,UAAUg0B,WAAa,SAAU1kB,GAC5CxP,KAAKi2B,UAAU/B,WAAW1kB,IAE9B4tB,EAAel9B,UAAUk0B,aAAe,SAAU5kB,GAC9CxP,KAAKi2B,UAAU7B,aAAa5kB,IAEhC4tB,EAAel9B,UAAUo9B,oBAAsB,SAAUl3B,GACrD,IAAIypB,EAAezpB,EAAIs3B,cACnBC,EAAWv3B,EAAI02B,UACflD,EAAWxzB,EAAIs2B,UACfvF,EAAO/wB,EAAI22B,aAEXvf,EADaxd,KAAK81B,iBAAiBU,UACf5sB,QAAO,SAAUtD,GACrC,OAAOA,EAAEuwB,SAAW+C,KACrB,GACH,QAAexuB,IAAXoS,EAAJ,CAGA,IACIgb,EAAiB,CAAErB,KAAMA,EAAM7oB,SADtBtO,KAAKq9B,iBAAiBvC,cAAc6C,GAAUrvB,UAE3DtO,KAAKgP,UAAUc,QAAQ,YAAa0N,EAAQqS,EAAc2I,KAEvD4E,KAGPQ,GAAoB,WACpB,SAASA,EAAiBvC,EAAYwC,GAClC79B,KAAKq7B,WAAaA,EAClBr7B,KAAK69B,iBAAmBA,EAgE5B,OA9DAr+B,OAAOyH,eAAe22B,EAAiB19B,UAAW,mBAAoB,CAClEgH,IAAK,WACD,OAAOlH,KAAK69B,iBAAiBC,OAAOp9B,WAAa,IAErD2G,YAAY,EACZC,cAAc,IAElB9H,OAAOyH,eAAe22B,EAAiB19B,UAAW,UAAW,CACzDgH,IAAK,WACD,IAAIiB,EAAQnI,KACZ,OAAOA,KAAK69B,iBAAiBE,eACxBn0B,QAAO,SAAUo0B,GAAQ,OAAOA,EAAKhB,kBACrCle,KAAI,SAAUkf,GAAQ,OAAO71B,EAAMkzB,WAAWP,cAAckD,EAAKxE,UAAUlrB,aAEpFjH,YAAY,EACZC,cAAc,IAElB9H,OAAOyH,eAAe22B,EAAiB19B,UAAW,iBAAkB,CAChEgH,IAAK,WACD,OAAOlH,KAAKotB,QAAQ,IAExB/lB,YAAY,EACZC,cAAc,IAElB9H,OAAOyH,eAAe22B,EAAiB19B,UAAW,SAAU,CACxDgH,IAAK,WACD,OAAOlH,KAAK69B,iBAAiBrgB,QAEjCnW,YAAY,EACZC,cAAc,IAElBs2B,EAAiB19B,UAAU+9B,OAAS,SAAUC,GAC1C,GAA4B,mBAAjBA,EACP,MAAM,IAAIl7B,UAAU,yCAExBhD,KAAK69B,iBAAiBlc,SAASsc,OAAO/6B,KAAKg7B,GACU,IAAjDl+B,KAAK69B,iBAAiBlc,SAASsc,OAAOt9B,QAAgBX,KAAK69B,iBAAiBM,OAAOrsB,KAAKnR,OAAS,GACjGX,KAAK69B,iBAAiBM,OAAOrsB,KAAKzL,SAAQ,SAAU+3B,GAChDF,EAAaE,OAIzBR,EAAiB19B,UAAUm+B,SAAW,SAAUC,GAC5C,GAA8B,mBAAnBA,EACP,MAAM,IAAIt7B,UAAU,oCAExBhD,KAAK69B,iBAAiBlc,SAAS0c,SAASn7B,KAAKo7B,IAEjDV,EAAiB19B,UAAUq+B,SAAW,SAAU/uB,KAEhDouB,EAAiB19B,UAAUs+B,YAAc,SAAUhvB,GAC/C,GAAwB,mBAAbA,EACP,MAAM,IAAIxM,UAAU,oCAExBhD,KAAK69B,iBAAiBlc,SAAS6c,YAAYt7B,KAAKsM,IAEpDouB,EAAiB19B,UAAUoR,MAAQ,WAC/BtR,KAAK69B,iBAAiBvsB,SAE1BssB,EAAiB19B,UAAUu+B,mBAAqB,SAAUC,GACtD1+B,KAAK69B,iBAAmBa,GAErBd,KASPe,GAAmB,WACnB,SAASA,EAAgB1xB,EAASouB,EAAY5qB,GAC1C,IAAItI,EAAQnI,KACZA,KAAKiN,QAAUA,EACfjN,KAAKq7B,WAAaA,EAClBr7B,KAAKyQ,OAASA,EACdzQ,KAAK4+B,kBAAoB,GACzB5+B,KAAK6+B,4BAA8B,GACnC7+B,KAAK8+B,gBAAkB,EACvB9+B,KAAK++B,uBAAyB,SAAUC,GACpC,IAAI1kB,EAAM0kB,EAAcvkB,KACpBwkB,EAAc3kB,EAAI2kB,YAClBC,EAAa/2B,EAAMy2B,kBAAkBK,GACzC,GAA0B,iBAAfC,IAGXA,EAAWnB,eAAiBmB,EAAWnB,eAAen0B,QAAO,SAAU6jB,GACnE,OAAOA,EAAO+L,WAAalf,EAAIkf,YAE/B0F,EAAWnB,eAAep9B,QAAU,GAAG,CAEvC,GADAke,aAAaqgB,EAAWC,WA1BX,mBA2BTD,EAAW9pB,OAAmC,CAC9C,IAAIZ,EAA0C,iBAAzBwqB,EAAcxqB,QAAgD,KAAzBwqB,EAAcxqB,OACpE,oBAAsBwqB,EAAcxqB,OAAS,KAC7C,oBACA4qB,EAAkD,iBAAhCF,EAAWpB,OAAOp9B,UACpC+T,KAAKC,UAAUwqB,EAAWpB,OAAOp9B,WACjC,KACJw+B,EAAW5vB,MAAM,CACbyB,QAhCG,yBAgC6ByD,EAAS,gBAAkB4qB,EAC3D9P,YAAa4P,EAAWpB,OAAOp9B,UAC/B8c,OAAQ0hB,EAAW1hB,aApCnB,eAuCC0hB,EAAW9pB,QAChBjN,EAAMk3B,qBAAqBH,UAExB/2B,EAAMy2B,kBAAkBK,KAGvCj/B,KAAKs/B,iBAAmB,SAAUl5B,GAC9B,IAAI64B,EAAc74B,EAAIqU,KAAKwkB,YACvBC,EAAa/2B,EAAMy2B,kBAAkBK,GACzC,GAA0B,iBAAfC,EAAX,CAGA,IAAI1F,EAAWpzB,EAAIqU,KAAK+e,SACpB+F,EAAkBL,EAAWnB,eAC5Bn0B,QAAO,SAAU6jB,GAClB,OAAOA,EAAO+L,WAAaA,KAC5B,GACH,GAA+B,iBAApB+F,EAAX,CAGAA,EAAgBvC,eAAiB52B,EAAI21B,gBACrC5zB,EAAM02B,4BAA4Bz4B,EAAI21B,iBAAmBkD,EACzD,IAAIO,EA9Da,mBA8DMN,EAAW9pB,OAElC,GADA8pB,EAAW9pB,OA9DC,aA+DRoqB,EAAiB,CACjB,IAAIrxB,GAAY,EACZ8R,EAAMif,EAAWhM,aACjBjT,GACAA,EAAIwe,mBAAmBS,GACvBA,EAAW9kB,QAAQ6F,GACnB9R,GAAY,IAGZ8R,EAAM,IAAI2d,GAAiBz1B,EAAMkzB,WAAY6D,GAC7CA,EAAWhM,aAAejT,EAC1Bif,EAAW9kB,QAAQ6F,IAEvB,IAAK,IAAIjQ,EAAK,EAAG7I,EAAK+3B,EAAWvd,SAAS6c,YAAaxuB,EAAK7I,EAAGxG,OAAQqP,IAAM,CACzE,IAAI6R,EAAU1a,EAAG6I,GACjB,IACI6R,EAAQ5B,EAAIwf,eAAgBtxB,GAEhC,MAAOzM,UAKnB1B,KAAK0/B,gBAAkB,SAAUt5B,GAC7B,IAAI64B,EAAc92B,EAAM02B,4BAA4Bz4B,EAAI21B,iBACxD,QAA2B,IAAhBkD,EAAX,CAGA,IAAI/L,EAAe/qB,EAAMy2B,kBAAkBK,GAC3C,GAA4B,iBAAjB/L,EAAX,CAGA,IAAIyM,EAAsBzM,EAAa6K,eAAen0B,QAAO,SAAU6jB,GACnE,OAAOA,EAAOuP,iBAAmB52B,EAAI21B,mBAEzC,GAAmC,IAA/B4D,EAAoBh/B,OAAxB,CAGA,IAAIi/B,EAAgBx5B,EAAIy5B,IACpBC,EAAkBH,EAAoB,GAAGnG,SACzCuG,EAAqB,WACrB,MAAO,CACHjuB,KAAM1L,EAAI0L,KACV2b,OAAQtlB,EAAMkzB,WAAWP,cAAcgF,GAAiBxxB,SACxD0xB,iBAAkB9M,EAAa4K,OAAOp9B,UACtCqQ,aAAS3F,EACT60B,QAASL,IAGbM,EAAiBhN,EAAavR,SAASsc,OACvCkC,EAAajN,EAAaiL,OAAOrsB,KACjCouB,EAAev/B,OAAS,EACxBu/B,EAAe75B,SAAQ,SAAUmJ,GACL,mBAAbA,GACPA,EAASuwB,QAKjBI,EAAWj9B,KAAK68B,SAGxB//B,KAAKogC,4BAA8B,SAAUh6B,GACzC,IAAI64B,EAAc92B,EAAM02B,4BAA4Bz4B,EAAI21B,iBACxD,QAA2B,IAAhBkD,EAAX,CAGA,IAAI/L,EAAe/qB,EAAMy2B,kBAAkBK,GAC3C,GAA4B,iBAAjB/L,EAAX,CAGA,IAAImN,EAAoBnN,EAAa6K,eAAep9B,OAAS,EAC7DuyB,EAAa6K,eAAiB7K,EAAa6K,eAAen0B,QAAO,SAAU6jB,GACvE,OAAIA,EAAOuP,iBAAmB52B,EAAI21B,kBAC9B7I,EAAaiL,OAAOmC,QAAQp9B,KAAKuqB,EAAO+L,WACjC,MAMXtG,EAAa6K,eAAep9B,SAAW0/B,IAGvCnN,EAAa6K,eAAep9B,QAAU,IACtCke,aAAaqU,EAAaiM,WAC1Bh3B,EAAMk3B,qBAAqBnM,UACpB/qB,EAAMy2B,kBAAkBK,WAE5B92B,EAAM02B,4BAA4Bz4B,EAAI21B,qBAEjD9uB,EAAQuM,GAAG,aAAcxZ,KAAKs/B,kBAC9BryB,EAAQuM,GAAG,QAASxZ,KAAK0/B,iBACzBzyB,EAAQuM,GAAG,yBAA0BxZ,KAAKogC,6BA8J9C,OA5JAzB,EAAgBz+B,UAAU8pB,UAAY,SAAU0R,EAAiBoC,EAAQxR,EAAelS,EAAS9K,EAAOgT,GACpG,IAAIna,EAAQnI,KACZ,GAA6B,IAAzBssB,EAAc3rB,OAAlB,CAQA,IAAIs+B,EAAcj/B,KAAKugC,8BACnBrB,EAAal/B,KAAKwgC,qBAAqBvB,EAAavD,EAAiBoC,EAAQ1jB,EAAS9K,EAAOwuB,EAAOpR,uBAAyB,IAAOpK,GAC9G,iBAAf4c,EAQX5S,EAAcjmB,SAAQ,SAAUuF,GAC5B,IAAI4tB,EAAW5tB,EAAO6hB,OAAOrkB,GACzBoU,EAAS5R,EAAOqX,QAAQoO,MAAK,SAAU/qB,GAAK,OAAOA,EAAE1B,OAAS82B,EAAgB92B,QAClF,GAAK4Y,EAAL,CAIA0hB,EAAWnB,eAAe76B,KAAK,CAC3Bs2B,SAAUA,EACVwD,oBAAgB5xB,IAEpB,IAAIhF,EAAM,CACNvC,KAAM,YACN48B,UAAWjH,EACXkD,UAAWlf,EAAOyc,UAClB8C,aAAce,EAAOp9B,WAEzByH,EAAM8E,QAAQO,KAAKpH,EAAK,CAAEozB,SAAUA,EAAUyF,YAAaA,IACtDn9B,MAAK,SAAUwE,GAAK,OAAO6B,EAAMm3B,iBAAiBh5B,MAClD0T,OAAM,SAAU9J,GAAO,OAAO/H,EAAM42B,uBAAuB7uB,WAf5D/H,EAAMsI,OAAOnB,MAAM,uBAAyBosB,EAAgB92B,KAAO,eAAiBgH,EAAO6hB,OAAOrkB,OAXtGkG,EAAM,CACFkO,OAAQke,EACRpM,YAAawO,EAAOp9B,UACpBqQ,QAAS2vB,qEAbbpxB,EAAM,CACFkO,OAAQke,EACRpM,YAAawO,EAAOp9B,UACpBqQ,QAAS2vB,0EAoCrB/B,EAAgBz+B,UAAUygC,mBAAqB,WAC3C,IAAI72B,EAAWtK,OAAO0E,OAAOlE,KAAK4+B,mBAGlC,OAFA5+B,KAAK4+B,kBAAoB,GACzB5+B,KAAK6+B,4BAA8B,GAC5B/0B,GAEX60B,EAAgBz+B,UAAUqgC,4BAA8B,WACpD,IAAIzN,EAAU9yB,KAAK8+B,gBAEnB,OADA9+B,KAAK8+B,iBAAmB,EACjBhM,GAEX6L,EAAgBz+B,UAAUsgC,qBAAuB,SAAUvB,EAAazhB,EAAQsgB,EAAQ1jB,EAAS9K,EAAOwf,EAASxM,GAC7G,IAAIna,EAAQnI,KACR4gC,EAAW,CACXC,SAAU5B,EACV7pB,OAxNiB,iBAyNjBoI,OAAQA,EACRsgB,OAAQA,EACR1jB,QAASA,EACT9K,MAAOA,EACPyuB,eAAgB,GAChBpc,SAAU,CACNsc,QAAS3b,MAAAA,OAAiD,EAASA,EAAYX,SAASsc,SAAW,GACnGI,UAAW/b,MAAAA,OAAiD,EAASA,EAAYX,SAAS0c,WAAa,GACvGG,aAAclc,MAAAA,OAAiD,EAASA,EAAYX,SAAS6c,cAAgB,IAEjHL,OAAQ,CACJrsB,KAAM,GACNwuB,QAAS,IAEbnB,eAAW/zB,EACXkG,MAAO,WAAc,OAAOnJ,EAAM24B,kBAAkB7B,IACpD/L,aAAc5Q,MAAAA,OAAiD,EAASA,EAAY4Q,cAsCxF,OApCK5Q,IACGwb,EAAOG,QACP2C,EAASjf,SAASsc,OAAO/6B,KAAK46B,EAAOG,QAErCH,EAAOO,UACPuC,EAASjf,SAAS0c,SAASn7B,KAAK46B,EAAOO,UAEvCP,EAAOU,aACPoC,EAASjf,SAAS6c,YAAYt7B,KAAK46B,EAAOU,cAGlDx+B,KAAK4+B,kBAAkBK,GAAe2B,EACtCA,EAASzB,UAAYlsB,YAAW,WAC5B,QAA6C7H,IAAzCjD,EAAMy2B,kBAAkBK,GAA5B,CAGA,IAAIC,EAAa/2B,EAAMy2B,kBAAkBK,GA3PxB,mBA4PbC,EAAW9pB,QACX9F,EAAM,CACFkO,OAAQA,EACR8R,YAAawO,EAAOp9B,UACpBqQ,QAAS2vB,6DAAgE5R,EAAU,gBAEhF3mB,EAAMy2B,kBAAkBK,IAjQvB,eAmQHC,EAAW9pB,QAAgC8pB,EAAWnB,eAAep9B,OAAS,IACnFu+B,EAAWnB,eAAiBmB,EAAWnB,eAAen0B,QAAO,SAAU6jB,GACnE,YAAyC,IAA1BA,EAAOuP,yBAEnBkC,EAAWC,UACdD,EAAWnB,eAAep9B,QAAU,IACpCwH,EAAMk3B,qBAAqBH,UACpB/2B,EAAMy2B,kBAAkBK,QAGxCnQ,GACI8R,GAEXjC,EAAgBz+B,UAAUm/B,qBAAuB,SAAUnM,EAAc1e,GACrE,IAEIusB,EAFAC,EAAe9N,EAAaiL,OAAOmC,QAAQ3/B,OAC3CsgC,EAAmBD,EAAe,EAAK9N,EAAaiL,OAAOmC,QAAQU,EAAe,GAAK,UAEnE51B,IAApB61B,GAA4D,iBAApBA,IACxCF,EAAgB/gC,KAAKq7B,WAAWP,cAAcmG,GAAiB3yB,UAEnE4kB,EAAavR,SAAS0c,SAASh4B,SAAQ,SAAUmJ,GACrB,mBAAbA,GAGXA,EAAS,CACLuB,QAASyD,GAzRM,kBA0RfwrB,iBAAkB9M,EAAa4K,OAAOp9B,WAAa,GACnD+sB,OAAQsT,EACRxU,OAAQ2G,EAAa1V,aAIjCmhB,EAAgBz+B,UAAU4gC,kBAAoB,SAAU7B,GACpD,IAAI92B,EAAQnI,KACRkzB,EAAelzB,KAAK4+B,kBAAkBK,GACd,iBAAjB/L,IAGXA,EAAa6K,eAAe13B,SAAQ,SAAUonB,QACL,IAA1BA,EAAOuP,iBAGlB9J,EAAaiL,OAAOmC,QAAQp9B,KAAKuqB,EAAO+L,UACxCrxB,EAAM8E,QAAQ6N,kBAAkB,CAC5BjX,KAAM,cACNk4B,gBAAiBtO,EAAOuP,eACxBE,WAAY,GACZ1oB,OA9Se,2BAgTZrM,EAAM02B,4BAA4BpR,EAAOuP,oBAEpD9J,EAAa6K,eAAiB,GAC9B/9B,KAAKq/B,qBAAqBnM,EAnTH,0BAoThBlzB,KAAK4+B,kBAAkBK,KAE3BN,KAGPuC,GAAkB,WAClB,SAASA,EAAej0B,EAASouB,EAAY5qB,GACzC,IAAItI,EAAQnI,KACZA,KAAKiN,QAAUA,EACfjN,KAAKq7B,WAAaA,EAClBr7B,KAAKyQ,OAASA,EACdxD,EAAQuM,GAAG,cAAc,SAAUpT,GAAO,OAAO+B,EAAMg5B,gBAAgB/6B,MACvE6G,EAAQuM,GAAG,gBAAgB,SAAUpT,GAAO,OAAO+B,EAAMi5B,kBAAkBh7B,MAC3E6G,EAAQuM,GAAG,iBAAiB,SAAUpT,GAAO,OAAO+B,EAAMk5B,0BAA0Bj7B,MACpF6G,EAAQuM,GAAG,mBAAmB,SAAUpT,GAAO,OAAO+B,EAAMm5B,4BAA4Bl7B,MACxFpG,KAAKi2B,UAAY,IAAI0I,GAAgB1xB,EAASouB,EAAY5qB,GA2G9D,OAzGAywB,EAAehhC,UAAU8pB,UAAY,SAAUuC,EAAQhkB,EAAS+jB,EAAelS,EAAS9K,EAAOgT,GAC3FtiB,KAAKi2B,UAAUjM,UAAUuC,EAAQhkB,EAAS+jB,EAAelS,EAAS9K,EAAOgT,IAE7E4e,EAAehhC,UAAUijB,OAAS,SAAU/Z,EAAIoU,EAAQ2Z,EAAMvrB,GAC1D,IAAIzD,EAAQnI,KACRw5B,EAAW5tB,EAAOxC,GAElBhD,EAAM,CACNvC,KAAM,OACN48B,UAAWjH,EACXkD,UAJWlf,EAAOyc,UAKlB8C,aAAc5F,GAElB,OAAOn3B,KAAKiN,QAAQO,KAAKpH,EAAK,CAAEypB,aAAczmB,EAAIowB,SAAUA,IACvD13B,MAAK,SAAUwE,GAAK,OAAO6B,EAAMo5B,oBAAoBj7B,MACrD0T,OAAM,SAAU9J,GAAO,OAAO/H,EAAMq5B,sBAAsBtxB,OAEnEgxB,EAAehhC,UAAUygC,mBAAqB,WAC1C,OAAO3gC,KAAKi2B,UAAU0K,sBAE1BO,EAAehhC,UAAUihC,gBAAkB,SAAU/6B,GACjD,IAAIq7B,EAAYr7B,EAAIs7B,YAChBC,EAAWv7B,EAAI6O,SACfqc,GAAUlrB,EAAIw7B,MAAOx7B,EAAIw7B,KAAKC,MAC9Btd,EAAMlS,OAAOsvB,EAAShvB,SACtBmvB,EAAa,CACb3I,QAASwI,EAASxI,QAClB5U,IAAKhS,MAAMgS,GAAOod,EAAShvB,QAAU4R,EACrCjW,SAAUqzB,EAASrzB,SACnB4G,YAAaysB,EAASzsB,YACtB2P,gBAAiB8c,EAAS9c,gBAC1BL,YAAamd,EAASnd,YACtBC,OAAQkd,EAASld,OACjByU,KAAMyI,EAASzI,KACf5U,SAAUqd,EAASrd,SACnB3V,OAAQ8yB,EACRtc,IAAKwc,EAASxc,IACdmM,QAASA,GAEbtxB,KAAKq7B,WAAW9B,UAAUuI,EAAYL,IAE1CP,EAAehhC,UAAUkhC,kBAAoB,SAAUh7B,GACnD,IAAI27B,EAAgB37B,EAAI47B,WACpBxtB,EAASpO,EAAIoO,OACjBxU,KAAKq7B,WAAW1B,iBAAiBoI,EAAevtB,IAEpD0sB,EAAehhC,UAAUmhC,0BAA4B,SAAUj7B,GAC3D,IAAI+B,EAAQnI,KACRw5B,EAAWpzB,EAAIq6B,UACLr6B,EAAI6c,QACV5c,SAAQ,SAAUmX,GACtBrV,EAAMkzB,WAAWvB,gBAAgBN,EAAUhc,OAGnD0jB,EAAehhC,UAAUohC,4BAA8B,SAAUl7B,GAC7D,IAAI+B,EAAQnI,KACRw5B,EAAWpzB,EAAIq6B,UACfwB,EAAe77B,EAAI6c,QACnBwK,EAASztB,KAAKq7B,WAAWP,cAActB,GACpBh6B,OAAO2E,KAAKspB,EAAOxK,SACzB5c,SAAQ,SAAUssB,GAC/B,IAAInV,EAASiQ,EAAOxK,QAAQ0P,GACxBsP,EAAapqB,QAAQ2F,EAAOyc,YAAc,GAC1C9xB,EAAMkzB,WAAWxB,mBAAmBL,EAAU7G,OAI1DuO,EAAehhC,UAAUqhC,oBAAsB,SAAUn7B,GACrD,IAAIypB,EAAezpB,EAAIqU,KAAKoV,aACxBjuB,EAASwE,EAAIxE,OACb43B,EAAWpzB,EAAIqU,KAAK+e,SAExB,MAAO,CACH3J,aAAcA,EACdjuB,OAAQA,EACR0M,SAJStO,KAAKq7B,WAAWP,cAActB,GAItBlrB,SACjB8G,OAAQ4S,GAAaqI,QACrBtf,QAAS,KAGjBmwB,EAAehhC,UAAUshC,sBAAwB,SAAUp7B,GAEvD,GADApG,KAAKyQ,OAAO2D,MAAM,2BAA6BK,KAAKC,UAAUtO,IAC1D,SAAUA,EAAK,CACf,IAAIypB,EAAezpB,EAAIqU,KAAKoV,aACxB2J,EAAWpzB,EAAIqU,KAAK+e,SACpB/L,EAASztB,KAAKq7B,WAAWP,cAActB,GACvCzoB,EAAU3K,EAAIoO,OAElB,MAAO,CACHqb,aAAcA,EACdjuB,OAHYwE,EAAIzB,QAIhB2J,SAAUmf,EAAOnf,SACjB8G,OAAQ4S,GAAalhB,MACrBiK,QAASA,GAIb,MAAO,CACH8e,aAAc,GACd9e,QAAS3K,EAAI2K,QACbqE,OAAQ4S,GAAalhB,MACrBwI,MAAOlJ,IAIZ86B,KAGX,SAASgB,GAAoB5zB,EAAUxB,EAAYuwB,EAAkBvH,EAAkBqM,EAAWC,GAC9F,IACIp0B,EADAyC,EAAS0xB,EAAU1xB,OAAOsN,UAAU,gBAEpCskB,EAAe,IAAIlhC,SAAQ,SAAUC,GACrC4M,EAAsB5M,KAEtB6L,EAAUH,EAAWmB,OAAO,MAAO,CAAC,eACpCwf,EAAS,IAAI2P,GAAenwB,EAASowB,EAAkBvH,EAAkBrlB,EAAOsN,UAAU,WAC1F9M,EAAS,IAAIiwB,GAAej0B,EAASowB,EAAkB5sB,EAAOsN,UAAU,WAkD5E,OAbA9Q,EAAQiB,UAAS,SAAUC,GACvBkvB,EAAiB9D,UAAUjrB,EAAUxB,EAAW6B,QAC5CR,EAtCR,WACIsC,EAAOkD,KAAK,kEAEZ,IADA,IACS3D,EAAK,EAAGsyB,EADWrxB,EAAO0vB,qBAC+B3wB,EAAKsyB,EAAwB3hC,OAAQqP,IAAM,CACzG,IAAIiQ,EAAMqiB,EAAwBtyB,GAC9B+qB,EAAa9a,EAAIzC,OACjBsgB,EAASt+B,OAAOa,OAAO,GAAI4f,EAAI6d,QACnCrtB,EAAOkD,KAAK,oCAAsConB,EAAWn2B,MAC7Dw9B,EAAQnxB,OAAO+Y,UAAU+Q,EAAY+C,OAAQ1yB,OAAWA,EAAW6U,GAEvE,IAAIsiB,EAAoBzM,EAAiBU,UACzCV,EAAiBjgB,QACjB,IAAK,IAAI1O,EAAK,EAAGq7B,EAAsBD,EAAmBp7B,EAAKq7B,EAAoB7hC,OAAQwG,IAAM,CAC7F,IAAIqW,EAASglB,EAAoBr7B,GAC7Bs7B,EAAMjlB,EAAO7W,WACjB8J,EAAOkD,KAAK,wBAA0B8uB,EAAI79B,MACtC4Y,EAAO+O,OACP6V,EAAQ3U,OAAO2I,aAAaqM,EAAKjlB,EAAO8W,qBAAiBlpB,OAAWA,EAAWoS,EAAO+O,QAEjF/O,EAAO6a,aAAe7a,EAAO6a,YAAYjB,aAC9CgL,EAAQrL,SAAS0L,EAAKjlB,EAAO6a,YAAYjB,cAEpC5Z,EAAO6a,aAAe7a,EAAO6a,YAAYX,mBAC9C0K,EAAQ9K,cAAcmL,EAAKjlB,EAAO6a,YAAYX,oBAgBlDgL,GAXA10B,IACAA,EAAoB,CAChBiD,OAAQA,EACRwc,OAAQA,IAEZzf,OAAsB5C,MAY9B6B,EAAQ4N,QAAO,WACXwiB,EAAiBxnB,WAErB5I,EAAQlI,OACDs9B,EAGX,IAAIrf,GAAW,WACX,SAASA,EAAQa,GACb,IAAI1b,EAAQnI,KACZ,QAA6B,IAAlB6jB,EACP,MAAM,IAAI/c,MAAM,6BAEpB,QAAwC,IAA7B+c,EAAc/W,WACrB,MAAM,IAAIhG,MAAM,yCAEpB,IAWI67B,EAXA71B,EAAa+W,EAAc/W,WAY/B,GAXmD,iBAAxC+W,EAAc6I,wBACrB7I,EAAc6I,sBAAwB,KAEC,iBAAhC7I,EAAc8I,gBACrB9I,EAAc8I,cAAgB,KAElCiM,GAAgBQ,IAAMp5B,KACtBA,KAAKsO,SAAW,IAAIsqB,QAAgBxtB,EAAW0B,GAAYmsB,SAC3Dj5B,KAAKq9B,iBAAmB,IAAIhE,GAAiBxV,EAAcpT,OAAOsN,UAAU,SAC5E/d,KAAK81B,iBAAmB,IAAImF,GAEO,IAA/BnuB,EAAWmO,gBAIX,MAAM,IAAInU,MAAM,YAAcgG,EAAWmO,gBAAkB,kBAH3D0nB,EAAkBT,GAAmBliC,KAAKsO,SAAUxB,EAAY9M,KAAKq9B,iBAAkBr9B,KAAK81B,iBAAkBjS,EAAe7jB,MAKjIA,KAAKqiC,aAAeM,EAAgB7gC,MAAK,SAAU0G,GAI/C,OAHAL,EAAMK,SAAWA,EACjBL,EAAM8I,OAAS,IAAImb,GAAOjkB,EAAMK,SAAUL,EAAMk1B,iBAAkBl1B,EAAMmG,SAAUuV,GAClF1b,EAAMslB,OAAS,IAAIoI,GAAO1tB,EAAMK,SAAUL,EAAM2tB,kBACzC3tB,KAmDf,OAhDA6a,EAAQ9iB,UAAU4rB,MAAQ,WACtB,OAAO9rB,KAAKqiC,cAEhBrf,EAAQ9iB,UAAUiuB,cAAgB,SAAU3e,GACxC,OAAOxP,KAAKiR,OAAOkd,cAAc3e,IAErCwT,EAAQ9iB,UAAU+tB,YAAc,SAAUze,GACtC,OAAOxP,KAAKiR,OAAOgd,YAAYze,IAEnCwT,EAAQ9iB,UAAUquB,oBAAsB,SAAU/e,GAC9C,OAAOxP,KAAKiR,OAAOsd,oBAAoB/e,IAE3CwT,EAAQ9iB,UAAUmuB,kBAAoB,SAAU7e,GAC5C,OAAOxP,KAAKiR,OAAOod,kBAAkB7e,IAEzCwT,EAAQ9iB,UAAU6tB,cAAgB,SAAUve,GACxC,OAAOxP,KAAKiR,OAAO8c,cAAcve,IAErCwT,EAAQ9iB,UAAU2tB,YAAc,SAAUre,GACtC,OAAOxP,KAAKiR,OAAO4c,YAAYre,IAEnCwT,EAAQ9iB,UAAUytB,mBAAqB,SAAUrf,GAC7C,OAAOtO,KAAKiR,OAAO0c,mBAAmBrf,IAE1C0U,EAAQ9iB,UAAU+iB,QAAU,SAAUoK,GAClC,OAAOrtB,KAAKiR,OAAOgS,QAAQoK,IAE/BrK,EAAQ9iB,UAAUktB,QAAU,SAAUC,GAClC,OAAOrtB,KAAKiR,OAAOmc,QAAQC,IAE/BrK,EAAQ9iB,UAAU8pB,UAAY,SAAUxM,EAAQjV,EAASyjB,EAAiBC,GACtE,OAAOjsB,KAAKiR,OAAO+Y,UAAUxM,EAAQjV,EAASyjB,EAAiBC,IAEnEjJ,EAAQ9iB,UAAUk2B,aAAe,SAAUC,EAAWrnB,EAAWgd,EAAiBC,GAC9E,OAAOjsB,KAAKytB,OAAO2I,aAAaC,EAAWrnB,EAAWgd,EAAiBC,IAE3EjJ,EAAQ9iB,UAAUy1B,WAAa,SAAUtI,GACrC,OAAOrtB,KAAKytB,OAAOkI,WAAWtI,IAElCrK,EAAQ9iB,UAAUo3B,cAAgB,SAAU3I,EAAkBnf,GAC1D,OAAOxP,KAAKytB,OAAO6J,cAAc3I,EAAkBnf,IAEvDwT,EAAQ9iB,UAAU62B,SAAW,SAAUpI,EAAkBnf,GACrD,OAAOxP,KAAKytB,OAAOsJ,SAASpI,EAAkBnf,IAElDwT,EAAQ9iB,UAAUijB,OAAS,SAAUkK,EAAcoB,EAAa7iB,EAAQ8iB,EAAmBtU,EAAS9K,GAChG,OAAOtP,KAAKiR,OAAOkS,OAAOkK,EAAcoB,EAAa7iB,EAAQ8iB,EAAmBtU,EAAS9K,IAEtF0T,KAGPhK,GAAkB,CAAC,aAAc,WACjC4pB,GAAc,WACd,SAASA,EAAW91B,EAAY2D,GAC5B,IAAItI,EAAQnI,KACZA,KAAKylB,QAAU,SAAUod,EAAO/wB,EAAMvJ,GAClC,IAAIpB,EAAKoB,GAAW,GAAIu6B,EAAa37B,EAAG27B,WAAYl3B,EAASzE,EAAGyE,OAC5DurB,EAAOhvB,EAAM46B,kBAAkB,CAC/Bl/B,KAAM,UACNg/B,MAAOA,EACP/wB,KAAMA,EACNpD,QAASvG,EAAMwG,OACfq0B,YAAaF,EACbG,gBAAiBr3B,IAErBzD,EAAM8E,QAAQO,KAAK2pB,IAEvBn3B,KAAKgqB,UAAY,SAAU6Y,EAAOrzB,EAAUjH,GACxC,OAAO,IAAIpH,SAAQ,SAAUC,EAASC,GAClC,IAAI8F,EAAKoB,GAAW,GAAIu6B,EAAa37B,EAAG27B,WAAYl3B,EAASzE,EAAGyE,OAC5DurB,EAAOhvB,EAAM46B,kBAAkB,CAC/Bl/B,KAAM,YACNg/B,MAAOA,EACPn0B,QAASvG,EAAMwG,OACfq0B,YAAaF,EACbvb,OAAQ3b,IAEZzD,EAAM8E,QAAQO,KAAK2pB,GACdr1B,MAAK,SAAUohC,GAChB,IAAInH,EAAkBmH,EAASnH,gBAC/B5zB,EAAMysB,cAAc1xB,KAAK,CAAE64B,gBAAiBA,EAAiB8G,MAAOA,EAAOrzB,SAAUA,EAAU+X,OAAQ3b,IACvGxK,EAAQ,CACJ8oB,YAAa,WAGT,OAFA/hB,EAAM8E,QAAQO,KAAK,CAAE3J,KAAM,cAAek4B,gBAAiBA,EAAiBrtB,QAASvG,EAAMwG,SAC3FxG,EAAMysB,cAAgBzsB,EAAMysB,cAAchrB,QAAO,SAAUrJ,GAAK,OAAOA,EAAEw7B,kBAAoBA,KACtF56B,QAAQC,gBAItB4Y,OAAM,SAAU1K,GAAS,OAAOjO,EAAOiO,UAGpDtP,KAAKmjC,aAAe,WAChBh7B,EAAM8E,QAAQuM,GAAG,SAAS,SAAU2d,GAChC,IAAIrlB,EAAOqlB,EAAKrlB,KAAMiqB,EAAkB5E,EAAK4E,gBACzCxU,EAAS4P,EAAK,sBACdjE,EAAe/qB,EAAMysB,cAAcvD,MAAK,SAAU9wB,GAAK,OAAOA,EAAEw7B,kBAAoBA,KACpF7I,IACKA,EAAa3L,OAIVpf,EAAMi7B,UAAUlQ,EAAa3L,OAAQA,IACrC2L,EAAa1jB,SAASsC,EAAMohB,EAAa2P,MAAOtb,GAJpD2L,EAAa1jB,SAASsC,EAAMohB,EAAa2P,MAAOtb,QAUhEvnB,KAAK8M,WAAaA,EAClB9M,KAAKyQ,OAASA,EACdzQ,KAAK2O,OAAS7B,EAAW6B,OACzB3O,KAAK40B,cAAgB,GACrB50B,KAAKiN,QAAUH,EAAWmB,OAAO,MAAO+K,IACxChZ,KAAKqiC,aAAeriC,KAAKiN,QAAQlI,OACjC/E,KAAKqiC,aAAavgC,MAAK,WACnBqG,EAAMg7B,kBAyBd,OAtBAP,EAAW1iC,UAAU4rB,MAAQ,WACzB,OAAO9rB,KAAKqiC,cAEhBO,EAAW1iC,UAAU6iC,kBAAoB,SAAU7b,GAC/C,IAAImc,EAAU,GAMd,OALA7jC,OAAO2E,KAAK+iB,GAAK7gB,SAAQ,SAAU/B,QACd8G,IAAb8b,EAAI5iB,IAAmC,OAAb4iB,EAAI5iB,KAC9B++B,EAAQ/+B,GAAO4iB,EAAI5iB,OAGpB++B,GAEXT,EAAW1iC,UAAUkjC,UAAY,SAAUE,EAAMC,GAC7C,IAAIC,EAAWhkC,OAAO2E,KAAKm/B,GACvBG,GAAW,EAMf,OALAD,EAASn9B,SAAQ,SAAU/B,GACnBg/B,EAAKh/B,KAASi/B,EAAKj/B,KACnBm/B,GAAW,MAGZA,GAEJb,KAGPc,GAAW,SAAUC,EAAY7f,GACjC,IACInX,EADAi3B,EAAY5xB,EAAMC,oBAElB4xB,EAAiB1iC,QAAQC,UAC7B,GAAIwiC,EAAW,CACX,GAAIA,EAAY,EACZ,MAAM,IAAI98B,MAAM,qEAEX88B,GAAa,IAClBj3B,EAAWP,OAAOO,SAClBk3B,EAAiBz3B,OAAO03B,kBAAoBD,GAGpD,IAIItb,EACAwb,EACAvb,EACAlf,EACA06B,EACAC,EATAC,EAAgBpe,KAGhBqe,EAAiBvgB,GAFrB+f,EAAaA,GAAc,GAC3B7f,EAAMA,GAAO,GACuCnX,GAQhDiZ,EAAO,GACX,SAASwe,EAAYx/B,EAAMy/B,EAAO/jC,GAChBkoB,EAAQzH,WAAW,UAE7ByH,EAAQlH,MAAM,eAAiB1c,EAAO,WAE1C,IAAI/C,EAAO,WACPwiC,EAAMC,SAAWhkC,EAAE4lB,OACnBme,EAAME,YAAcjkC,EAAEylB,QACtByC,EAAQlH,MAAM1c,EAAO,cAEzBy/B,EAAMG,cAAgBlkC,EAAE2lB,UACpBoe,EAAMvY,MACNuY,EAAMvY,QAAQhqB,MAAK,WACfD,OAIJA,IAEClC,MAAMmG,QAAQlB,KACfA,EAAO,CAACA,IAEZA,EAAKyB,SAAQ,SAAU5F,GACnBmlB,EAAKnlB,GAAK4jC,EACVX,GAASjjC,GAAK4jC,KAoDtB,SAASI,IACL,IAAIt9B,EAAI4G,EAAImP,EACRwnB,EAAY5e,KACZ/Y,EAASo3B,EAAel6B,QACxB06B,EAA+Bh4B,MAAAA,OAA2C,EAASA,EAASi4B,4BAC5F3vB,EAAWkvB,EAAer3B,WAAWmI,SACrCnH,EAAkB62B,GAA8D,WAAc,OAAO,GACrGE,EAAc56B,EAAQ,CACtB6C,WAAYC,EAASwb,OAAcnd,EACnCqF,OAAQ+X,EAAQzK,UAAU,WAC1BjQ,gBAAiBA,EACjBvI,OAAQ,SACR8I,QAAyF,QAA/ElH,EAAK8N,MAAAA,OAA2C,EAASA,EAAS5G,eAA4B,IAAPlH,EAAgBA,EAAK,kBACtHmH,SAAyM,QAA9L4O,EAAsF,QAAhFnP,EAAKkH,MAAAA,OAA2C,EAASA,EAAS3G,gBAA6B,IAAPP,EAAgBA,EAAKkH,MAAAA,OAA2C,EAASA,EAASqP,gBAA6B,IAAPpH,EAAgBA,EAAKpE,MAEtOzN,EAAaw5B,EASjB,OAPIx5B,EADkB,kBAAX0B,GAAwBA,EAAO+3B,qBACzBD,EAGAA,EAAY36B,UAAU,OAGvCk6B,EAAY,UADZ96B,EAz9JR,SAAuB/D,GACnB,IAIIw/B,EAJAC,EAAkBz/B,EAAO2E,UAAU,aACnCu4B,EAAM,CACN79B,KAAM,YAyBV,OADAW,EAAOw/B,cArBiB,SAAUngC,EAAMqgC,EAAQC,GAC5C,QAAoB,IAATtgC,GAAiC,KAATA,EAC/B,MAAM,IAAIkC,MAAM,qBAEf,QAAsB,IAAXm+B,GAAqC,KAAXA,EACtC,MAAM,IAAIn+B,MAAM,uBAEf,QAAuB,IAAZo+B,GAAuC,KAAZA,EACvC,MAAM,IAAIp+B,MAAM,wBAEfi+B,EAIDA,EAAcx9B,OAAO,CACjB3C,KAAMA,EACNqgC,OAAQA,EACRC,QAASA,IANbH,EAAgBC,EAAgBn6B,aAAa43B,EAAK,CAAE79B,KAAMA,EAAMqgC,OAAQA,EAAQC,QAASA,KAW1F3/B,EA67JQ4/B,CAAc95B,GACQq5B,GAC1BvjC,QAAQC,UAanB,SAASgkC,IACL,IAAIC,EAAiBlB,EAAemB,YAA8C,IAAhC/c,EAAYtN,gBAE9D,GADoBkpB,EAAexe,UAAY0f,EAC5B,CACf,IAAIX,EAAY5e,KAMhB,OADAse,EAAY,WAJZJ,EAAY,IAAIrY,GAAe,CAC3B7e,WAAYyb,EACZ9X,OAAQ+X,EAAQzK,UAAU,cAEK2mB,GAC5BV,EAGP,IAAI5iB,EAAWmH,EAAYnH,SACvBA,GACAA,EAASd,MAAMqD,GAAyB/e,MAIpD,SAAS2gC,IACL,OAAOzkC,EAAUd,UAAM,OAAQ,GAAQ,WACnC,IAAI0kC,EACJ,OAAO3iC,EAAY/B,MAAM,SAAUmH,GAC/B,OAAKg9B,EAAe9e,KAGpBqf,EAAY5e,KAEZse,EAAY,MADZH,EAAO,IAAIrB,GAAWra,EAAaC,EAAQzK,UAAU,QAC5B2mB,GAClB,CAAC,EAAGvjC,QAAQC,YALR,CAAC,EAAGD,QAAQC,iBASnC,SAASokC,EAAkBC,GACvB,IAII,OAHAA,EAAap/B,SAAQ,SAAUiK,IASvC,SAA0B1L,EAAM8gC,GAC5B,IAAIhB,EAAY5e,KACZxV,EAAMo1B,EAAe9f,GACrBtV,GACA8zB,EAAYx/B,EAAM0L,EAAKo0B,GAZnBiB,CAAiBr1B,EAAI1L,KAAM0L,EAAInQ,WAE5BgB,QAAQC,UAEnB,MAAOM,GACH,OAAOP,QAAQE,OAAOK,IA2G9B,OAAOmiC,EACF/hC,MAnML,WACI,IAAIqF,EACAu9B,EAAY5e,KAKhB,OAJA0C,EAAU,IAAIxG,GAAO,IAAoD,QAA7C7a,EAAKg9B,EAAer3B,WAAWmI,gBAA6B,IAAP9N,OAAgB,EAASA,EAAG+N,kBAAc9J,EAAW+4B,EAAete,eAC7InD,aAAayhB,EAAe1zB,OAAOpB,SAC3CmZ,EAAQjG,aAAa4hB,EAAe1zB,OAAOgV,SAC3C2e,EAAY,SAAU5b,EAASkc,GACxBvjC,QAAQC,aAAQgK,MA6LtBtJ,MA5OL,WACI,IAAI4iC,EAAY5e,KAChByC,EAAc,IAAI/H,EAAW2jB,EAAer3B,WAAY0b,EAAQzK,UAAU,eAC1E,IAAI6nB,EAAczkC,QAAQC,QAAQ+iC,EAAe7e,MAejD,OAdI6e,EAAer3B,aAAeq3B,EAAe7e,OACzC3Y,GACA6b,EAAQlH,MAAM,6BACdskB,EAAcj5B,EAASyS,aAAatd,MAAK,SAAUkb,GAE/C,OADAwL,EAAQlH,MAAM,iBAAmBtE,MAAAA,OAAqC,EAASA,EAAMjB,UAAUiB,EAAMrc,OAAS,MACvG,CACH2c,aAAcN,OAKtB4oB,EAAczkC,QAAQE,OAAO,yCAG9BukC,EACF9jC,MAAK,SAAU+jC,GAChB,IAAIpkB,EACJ,GAAmD,oBAA/CjiB,OAAOU,UAAUmF,SAASzE,KAAKilC,GAI/B,MAAM,IAAI/+B,MAAM,yBAA2B2N,KAAKC,UAAUmxB,IAE9D,OALIpkB,EAAcokB,EAKXtd,EAAY7L,MAAM+E,MAExB3f,MAAK,WAEN,OADAsiC,EAAY,aAAc7b,EAAamc,GAChCP,KAENnqB,OAAM,SAAUtY,GAIjB,MAHI6mB,GACAA,EAAY7J,SAEVhd,QAwMTI,MAAK,WAAc,OAAOX,QAAQ4d,IAAI,CAAC0lB,KAjKpCC,EAAY5e,KACZggB,EAAY,CACZh5B,WAAYyb,EACZ9X,OAAQ+X,EAAQzK,UAAU,YAE9BgmB,EAAW,IAAI/gB,GAAQ8iB,GACvB9jB,GAAOgB,QAAU+gB,EACjBK,EAAY,CAAC,UAAW,OAAQL,EAAUW,GACnCvjC,QAAQC,WAyJyDgkC,IAAiBG,MAlK7F,IACQb,EACAoB,KAiKHhkC,MAAK,WAAc,OAAOiiC,EAAS1B,gBACnCvgC,MAAK,WACN,OAAO0jC,EAAkBrB,EAAeve,MAAQ,OAE/C9jB,MAzGL,WACI,IAAIikC,EAAoBvmC,OAAO2E,KAAKyhB,GAAM9G,KAAI,SAAUxa,GACpD,IAAIgM,EAAMsV,EAAKthB,GACf,OAAOgM,EAAIwb,MACPxb,EAAIwb,QAAU3qB,QAAQC,aAE9B,OAAOD,QAAQ4d,IAAIgnB,MAoGlBjkC,MAlGL,WACI,IAMI6R,EAAO,CACPqyB,YA13GE,QA23GF7zB,QAASgyB,EAAehyB,SAE5B+xB,EAAche,OACd,IAAI+f,EAAO,CACPC,SAZe,SAAUC,GACpBpC,GAGLA,EAAS5gB,OAAO,mBAAoBgjB,EAAc,SASlDxyB,KAAMA,EACNlD,OAAQ+X,EACR4Z,QAAS2B,EACTqC,IAAKrC,EACLj3B,WAAYyb,EACZte,QAASX,EACTqc,SAAUqe,EACV3e,IAAK4e,EACL9xB,QAASgyB,EAAehyB,QACxBwxB,WAAYA,EACZ9hC,KAAM,WAEF,OADA2mB,MAAAA,GAAkDA,EAAQ7U,KAAK,0BACxD4U,EAAY7J,WA6D3B,OA1DAunB,EAAKI,YAAc,CACfC,cACI,OAAOnC,EAAehyB,SAE1Bo0B,iBACI,OAAO9xB,KAAKC,UAAUivB,IAE1B6C,cACI,OAAOp6B,OAAOi6B,YAAYI,OAAOnqB,UAErCoqB,aACI,OAAOt6B,OAAOi6B,YAAYK,QAE9BC,gBACI,IAAI/kC,EAASpC,OAAO2E,KAAK8hC,GACpBr8B,QAAO,SAAUtF,GAClB,IAAI6C,EACJ,MAAY,cAAR7C,GAA+B,QAARA,IAGC,QAApB6C,EAAK8+B,EAAK3hC,UAAyB,IAAP6C,OAAgB,EAASA,EAAGm9B,aAE/DxlB,KAAI,SAAUxa,GACf,MAAO,CACHM,KAAMN,EACN0O,KAAMizB,EAAK3hC,GAAKggC,SAChBre,UAAWggB,EAAK3hC,GAAKkgC,cACrBze,QAASkgB,EAAK3hC,GAAKigC,gBAS3B,OANA3iC,EAAOsB,KAAK,CACR0B,KAAM,OACNqhB,UAAWie,EAAcje,UACzBF,QAASme,EAAcne,QACvB/S,KAAMkxB,EAAcle,SAEjBpkB,IAGfpC,OAAO2E,KAAKyhB,GAAMvf,SAAQ,SAAU/B,GAChC,IAAIgM,EAAMsV,EAAKthB,GACf2hC,EAAK3hC,GAAOgM,KAEhB21B,EAAKl5B,OAAS,GACdvN,OAAO2E,KAAKggC,GAAgB99B,SAAQ,SAAU/C,GAC1C2iC,EAAKl5B,OAAOzJ,GAAK6gC,EAAe7gC,MAEhCwgB,GAAOA,EAAI8iB,YACXpnC,OAAO2E,KAAK2f,EAAI8iB,YAAYvgC,SAAQ,SAAU/C,GAC1C2iC,EAAKl5B,OAAOzJ,GAAKwgB,MAAAA,OAAiC,EAASA,EAAI8iB,WAAWtjC,OAG9EwgB,MAAAA,OAAiC,EAASA,EAAI+iB,aAC9C/iB,EAAI+iB,WAAWZ,GAEft5B,GAAYA,EAASm6B,gBACrBn6B,EAASm6B,eAAeb,EAAKI,aAE1BJ,KAYNjsB,OAAM,SAAU9J,GACjB,OAAO/O,QAAQE,OAAO,CAClB6O,IAAKA,EACL0V,KAAMA,QAII,oBAAXxZ,SACPA,OAAOs3B,SAAWA,IAEtBA,GAASvxB,QA/9GK,QAg+GduxB,GAASrzB,QAAUqzB,i0DCp4LnB,kBAKE,WAAYt6B,GACVpJ,KAAK+mC,IAAM39B,EAyBf,OAtBE5J,sBAAWwnC,sBAAX,WACE,OAAOhnC,KAAK+mC,qCAOPC,oBAAP,SAAeC,GACb,GAAIA,EAAMF,MAAQ/mC,KAAK+mC,IACrB,MAAMjgC,MAAM,iDAEd9G,KAAKknC,YAAYD,IAGZD,wBAAP,SAAmBC,KAIZD,0BAAP,SAAqBC,mBC5BPE,GAASC,GACvB,MAAsB,iBAARA,WAOAthC,GAAQshC,GAEtB,OAAIznC,MAAMmG,QACDnG,MAAMmG,QAAQshC,GAEO,mBAAvB/hC,SAASzE,KAAKwmC,YAEPC,GAAYD,GAC1B,YAAsB,IAARA,WAGAE,GAAkBF,GAChC,OAAQA,QAAsB,IAARA,WAgBRG,GAAWH,GACzB,SAAUA,GAAOA,EAAInnC,aAAemnC,EAAIxmC,MAAQwmC,EAAIvmC,gBAqBtC2mC,GAAkB9f,EAAS+f,QACrB,IAAT/f,GACT+f,EAAS/f,GClDb,mBAOE,WAAY9iB,EAAc8iC,EAAyBC,EAA8BjjC,GAAjF,MACEiD,YAAM/C,gBACNuD,EAAKS,MAAQhE,EACbuD,EAAKU,aAAenE,EACpByD,EAAKy/B,aAAeF,EACpBv/B,EAAK0/B,eAAiBF,GAAiB,KAmD3C,OA/D0C7nC,QAkBxCN,sBAAWsoC,wBAAX,WACE,OAAO9nC,KAAK4I,uCAMdpJ,sBAAWsoC,+BAAX,WACE,OAAO9nC,KAAK6I,8CAOdrJ,sBAAWsoC,iCAAX,WACE,OAAO9nC,KAAK6nC,gDAMdroC,sBAAWsoC,+BAAX,WACE,OAAO9nC,KAAK4nC,8CAYPE,qBAAP,SAAgBnjC,EAAiB6K,EAAyCqU,GACxE,OAAO7jB,KAAK+nC,SAASC,SAAShoC,KAAK4I,MAAOjE,EAAS6K,EAAUqU,IAGxDikB,wBAAP,SAAmBb,GAAnB,WACEt/B,YAAMu/B,sBAAYD,GAClBO,GAAeP,EAAMp+B,cAAc,SAACkf,GAAM,OAAA5f,EAAKU,aAAekf,KAC9Dyf,GAAeP,EAAMW,cAAc,SAAC7f,GAAM,OAAA5f,EAAKy/B,aAAe7f,KAC9Dyf,GAAeP,EAAMY,gBAAgB,SAAC9f,GAAM,OAAA5f,EAAK0/B,eAAiB9f,SA7D5Bif,mBCAxC,WAAYpiC,EAAcqjC,GAA1B,MACEtgC,YAAM/C,gBACNuD,EAAKS,MAAQhE,EACbuD,EAAK+/B,uBAAyBD,IA8BlC,OAtCwCnoC,QAetCN,sBAAW2oC,wBAAX,WACE,OAAOnoC,KAAK4I,uCAOdpJ,sBAAW2oC,0BAAX,WACE,OAAOnoC,KAAKkoC,uBAAuBloC,KAAK4I,wCAM1CpJ,sBAAW2oC,2BAAX,WACE,OAAOnoC,KAAK+nC,SAASK,WAAW,CAAEvkC,KAAM7D,KAAK4I,yCAGxCu/B,mBAAP,SAAcE,EAAoBxkB,GAChC,IAAMld,EAAgCnH,OAAea,OAAO,CAAEwD,KAAM7D,KAAK4E,KAAMA,KAAM5E,KAAK4E,KAAM0jC,eAAe,GAASzkB,GACxH,OAAO7jB,KAAK+nC,SAASQ,aAAaF,EAAU1hC,OApCRqgC,OCLpC,SAAYwB,EAAY7jC,GACpB3E,KAAKyoC,OAASD,EACdxoC,KAAK2E,QAAUA,MAOnB,SAAY+jC,GACR1oC,KAAK6D,KAAO6kC,kBAQhB,WAAYC,EAA2BC,GAAvC,MACIjhC,YAAMkhC,GAAgBC,2BACtB3gC,EAAKwgC,UAAYA,EACjBxgC,EAAKygC,UAAYA,IAEzB,OATsD9oC,WAAAipC,mBAgBlD,WAAYpkC,EAA0BoiB,EAAiBC,GAAvD,MACIrf,YAAMkhC,GAAgBG,oCACtB7gC,EAAKxD,QAA6B,iBAAZA,EAAuB8P,KAAKqH,MAAMnX,GAAWA,EACnEwD,EAAK4e,QAAUA,EACf5e,EAAK6e,QAAUA,IAEvB,OAXwDlnB,WAAAipC,kBAaxD,cAWA,OAVkBF,QAAgB,QAChBA,UAAkB,UAClBA,UAAkB,UAClBA,SAAiB,SACjBA,eAAuB,eACvBA,wBAAgC,wBAChCA,sBAA8B,sBAE9BA,+BAAuC,SACvCA,6BAAqC,0BAGvD,cAIA,OAHkBI,UAAkB,UAClBA,UAAkB,UAClBA,YAAoB,+BC9ClC,WAAYZ,GACRroC,KAAKkpC,UAAYb,EA4KzB,OAzKWc,qBAAP,SAAgBxiC,EAAsDkb,GAClE7hB,KAAKopC,gBACLD,EAAYE,IAAItS,SAASpwB,EAAYkb,IAGlCsnB,oBAAP,WAGI,OAFAnpC,KAAKopC,gBAEDE,GAAuBtpC,KAAKkpC,WAErB,GAGJlpC,KAAKkpC,UAAUK,QAAQzqB,KAC1B,SAAC0qB,GACG,OAAOA,EAAEl7B,aAId66B,oBAAP,WAAA,WAGI,GAFAnpC,KAAKopC,gBAEDE,GAAuBtpC,KAAKkpC,WAE5B,MAAO,GAGX,IAAMK,EAAUvpC,KAAKkpC,UAAUK,QACzBE,EAAwB,GACxBxmB,EAA6C,GAanD,OAVAsmB,EAAQljC,SAAQ,SAAC+F,GACSjE,EAAKuhC,iBAAiBt9B,GAC9B/F,SAAQ,SAACsjC,IACoC,IAAnDF,EAAY5xB,QAAQ8xB,EAAoB/kC,QACxC6kC,EAAYvmC,KAAKymC,EAAoB/kC,MACrCqe,EAAQ/f,KAAKymC,UAKlB1mB,GAGJkmB,6BAAP,SAAwB/8B,GAGpB,OAFApM,KAAKopC,gBAEAh9B,EAAOkC,SAIL66B,EAAYE,IAAI1b,mBAAmBvhB,EAAOkC,UAHtC,IAoBR66B,mBAAP,SACI/Q,EACAgP,EACAx7B,EACArD,EACA6R,EACA9K,GAEAtP,KAAKopC,gBACL,IAAMQ,EAAkB5pC,KAAKotB,UAO7B,GAJIkc,GAAuB19B,KACvBA,EAAS,gBAGTi+B,GAAcj+B,GACd,GAAe,iBAAXA,EACyBg+B,MACtB,CAAA,GAAe,kBAAXh+B,EAUJ,CAAA,GAAe,QAAXA,GAA+B,SAAXA,EAC3B,gBJ/CUkH,EAAuBkZ,EAA6BC,GAE5E,GAA+B,mBAApBD,GAA2D,mBAAlBC,EAClD,OAAOnZ,EAGsB,mBAApBkZ,EACTA,EAAkB,aACgB,mBAAlBC,IAChBA,EAAgB,cAGlBnZ,EAAQhR,KAAKkqB,EAAiBC,GImCTF,CAAUod,EAAYE,IAAIlmB,OAAOiV,EAAYgP,EAAKx7B,EAAQrD,GAAU6R,EAAS9K,GAEpF,MAAM,IAAIxI,MAAM,yBAA2B8E,GAZ3C,IAAMk+B,EAAmBF,EAAgBhgC,QAAO,SAAC6jB,GAE7C,OADgB0b,EAAYE,IAAI1b,mBAAmBF,GACpC7jB,QAAO,SAACtD,GACnB,OAAOA,EAAE1B,OAASwzB,KACnBz3B,OAAS,KAEZmpC,EAAiBnpC,OAAS,GACD,CAACmpC,EAAiB,SAOhD,GAAIC,GAAan+B,IAEpB,GAAKA,EAAejL,QAAU,EAAG,CAC7B,IAAMqpC,EAAap+B,EAAe,GAElC,GAAI5L,KAAKiqC,YAAYD,GACSp+B,EAAqCkT,KAAI,SAACxQ,GAAsC,OAAAA,SACvG,CAAA,IAAItO,KAAKkqC,kBAAkBF,GAG9B,MAAM,IAAIljC,MAAM,yBAFU8E,EAA4BkT,KAAI,SAACqrB,GAAwB,OAAAA,EAAI77B,mBAM/F,GAAItO,KAAKiqC,YAAYr+B,GACQ,CAACA,OACvB,CAAA,IAAI5L,KAAKkqC,kBAAkBt+B,GAG9B,MAAM,IAAI9E,MAAM,yBAFS,CAAE8E,EAA0B0C,UAM7D,MAAM,IAAIxH,MAAM,oBAIbqiC,uBAAP,SAAkBxiC,GAEd,OADA3G,KAAKopC,gBACED,EAAYE,IAAI1T,WAAWhvB,IAG/BwiC,yBAAP,SAAoBxa,EACA8F,EACAC,GAChB10B,KAAKopC,gBAELD,EAAYE,IAAIjT,aAAazH,EAAkB,CAC3C8F,2BACAC,6BACAH,gCAA4BnpB,KAI7B+9B,sBAAP,SAAiBxa,EAA4Dyb,EAAoBx+B,GAK7F,OAJA5L,KAAKopC,gBAIED,EAAYE,IAAIrf,UAAU2E,EAAkByb,IAGhDjB,0BAAP,WACI,GAAIG,GAAuBH,EAAYE,KACnC,MAAM,IAAIviC,MAAM,oDAIjBqiC,wBAAP,SAAmBjiB,GAEf,YAA2B9b,IAApB8b,EAAIhS,aAGRi0B,8BAAP,SAAyBjiB,GACrB,YAAwB9b,IAAjB8b,EAAI5Y,6BChLjB,WACE+7B,EACAC,EACAnkC,GACAnG,KAAK+nC,SAAWsC,EAChBrqC,KAAKuqC,iBAAmBD,EACxBtqC,KAAKmJ,OAAShD,EAsClB,OAnCE3G,sBAAWgrC,2BAAX,WACE,OAAOxqC,KAAKmJ,OAAOshC,yCAGrBjrC,sBAAWgrC,6BAAX,WACE,OAAOxqC,KAAKmJ,OAAOuhC,2CAGrBlrC,sBAAWgrC,8BAAX,WACE,OAAOxqC,KAAKmJ,OAAOwhC,4CAGrBnrC,sBAAWgrC,2BAAX,WACE,OAAOxqC,KAAKmJ,OAAOxE,yCAGrBnF,sBAAWgrC,uBAAX,WACE,OAAOxqC,KAAKmJ,OAAOmR,qCAGdkwB,mBAAP,SAAcI,GAAd,WAEEA,EAAaA,GAAc,GAE3B,IAAMplC,EAA6B,GASnC,OAPAhG,OAAO2E,KAAKnE,KAAKmJ,QAAQ9C,SAAQ,SAACurB,GAChCpsB,EAAOosB,GAAQzpB,EAAKgB,OAAOyoB,MAG7BpsB,EAAOb,QAAUimC,EAAWjmC,SAAWa,EAAOb,QAC9Ca,EAAOmlC,WAAaC,EAAWD,YAAcnlC,EAAOmlC,WAE7C3qC,KAAK+nC,SAAS8C,iBAAiB7qC,KAAKuqC,iBAAkB/kC,SCjD3DslC,GAAW,SAACC,GAChB93B,WAAW83B,EAAI,aAODC,GAAWl4B,EAAqBtD,GAC9C,IAAKy7B,GAAgBz7B,GACnB,OAAOsD,EAGTA,EAAQhR,MACN,SAACopC,GACCJ,IAAU,WACRt7B,EAAS,KAAM07B,SAGnB,SAACh7B,GACC46B,IAAS,WACPt7B,EAASU,EAAK,YCDtB,mBAUE,WACE9G,EACA+hC,EACA/1B,EACAzQ,EACA8lC,GALF,MAME9iC,YAAMyB,gBACNjB,EAAK4+B,IAAM39B,EACXjB,EAAKijC,SAAWD,EAChBhjC,EAAKkjC,QAAUj2B,EACfjN,EAAKmjC,SAAW3mC,EAChBwD,EAAKojC,SAAWd,EAChBtiC,EAAKqjC,KAAO,IAAIrC,GAAYhhC,KA0ShC,OAhUsCrI,QA6BpCN,sBAAWisC,wBAAX,WACE,GAAIzrC,KAAK+nC,SACP,OAAO/nC,KAAK+nC,SAAS2D,gBAAgB1rC,KAAKorC,2CAS9C5rC,sBAAWisC,2BAAX,WACE,OAAOzrC,KAAKsrC,0CAOd9rC,sBAAWisC,0BAAX,WACE,OAAOzrC,KAAKqrC,yCAOd7rC,sBAAWisC,yBAAX,WACE,OAAKzrC,KAAKurC,SAGHvrC,KAAK+nC,SAASK,WAAW,CAAEh/B,GAAIpJ,KAAKurC,WAAY,GAF9C,sCASX/rC,sBAAWisC,2BAAX,WACE,OAAOzrC,KAAK+nC,SAASK,WAAW,CAAE9hB,WAAYtmB,KAAK+mC,uCAMrDvnC,sBAAWisC,uBAAX,WACE,OAAOzrC,KAAKwrC,sCAYPC,sBAAP,SAAiBr/B,EAAwBoD,GACvC,OAAOxP,KAAK+nC,SAAS4D,oBAAoB3rC,KAAMoM,EAAQoD,IAWlDi8B,yBAAP,SAAoBG,EAAuCp8B,GACzD,OAAOxP,KAAK+nC,SAASQ,aAAavoC,KAAM4rC,EAAYp8B,IAY/Ci8B,iCAAP,SAA4BI,EAA+C/c,EAAkBtf,GAC3F,OAAOxP,KAAK+nC,SAAS+D,qBAAqB9rC,KAAM6rC,EAAa/c,EAAStf,IAWjEi8B,kBAAP,SAAar/B,EAAwBoD,GACnC,OAAOxP,KAAK+nC,SAASgE,wBAAwB/rC,KAAMoM,EAAQoD,IAStDi8B,6BAAP,SAAwBG,GACtB,IAAMhiC,EAAS,CAAE0c,WAAYtmB,KAAK+mC,IAAKljC,KAAM+nC,GAC7C,OAAO5rC,KAAK+nC,SAASK,WAAWx+B,IAW3B6hC,uBAAP,SAAkB9mC,EAAiB6K,GACjC,OAAOxP,KAAK+nC,SAASiE,mBAAmBhsC,KAAM2E,EAAS6K,IAalDi8B,0BAAP,SAAqB9mC,EAAiB6K,GACpC,OAAOxP,KAAK+nC,SAASkE,sBAAsBjsC,KAAM2E,EAAS6K,IAUrDi8B,2BAAP,SAAsB5pB,GAAtB,WACE,OAAO7hB,KAAK+nC,SAASmE,yBAAwB,SAAC3oC,EAAG4oC,EAAIC,GAC/C7oC,EAAE6F,KAAOjB,EAAKiB,IAChByY,EAAQte,EAAG4oC,EAAIC,OAWdX,0BAAP,SAAqB5pB,GAArB,WACE,OAAO7hB,KAAK+nC,SAASsE,uBAAsB,SAAC9oC,EAAGimC,EAAG9nC,GAC5C6B,EAAE6F,KAAOjB,EAAKiB,IAChByY,EAAQte,EAAGimC,EAAG9nC,OAWb+pC,6BAAP,SAAwB5pB,GAAxB,WACE7hB,KAAK+nC,SAASuE,iCAAgC,SAACC,EAAK5nC,EAASoiB,EAASC,GAChEulB,EAAInjC,KAAOjB,EAAKiB,IAClByY,EAAQld,EAASoiB,EAASC,EAASulB,MAIvC,IAEE1qB,EAAQ7hB,KAAK2E,QAAS3E,KAAK2E,QAAS,GAAI3E,MACxC,MAAO0B,GACP,SAQG+pC,iBAAP,WACEzrC,KAAK+nC,SAASyE,aAAaxsC,OAQtByrC,kBAAP,SAAaljC,GACX,OAAOvI,KAAK+nC,SAAS0E,MAAMzsC,KAAMuI,IAG5BkjC,mBAAP,SAAcpD,EAA6B/tB,GACzC,IAAIgM,EAMJ,OAJEA,EADsB,iBAAb+hB,EACIA,EAEAA,EAASj/B,GAEjBpJ,KAAK+nC,SAAS2E,iBAAiBpmB,EAAYtmB,KAAKoJ,GAAIkR,IAGtDmxB,+BAAP,SAA0Bj8B,GAA1B,WACExP,KAAK+nC,SAAS4E,6BAA4B,SAACC,EAAkBC,EAAkBjC,GACzEgC,IAAazkC,EAAK4+B,KAItBv3B,EAASo7B,OAINa,uBAAP,SAAkBj8B,GAAlB,WACExP,KAAK+nC,SAAS+E,6BAA4B,SAACC,EAAkBC,EAA4B7mC,GACnF6mC,EAAiB5jC,KAAOjB,EAAK4+B,KAIjCv3B,EAASu9B,EAAQ5mC,OAIdslC,wBAAP,SAAmBxE,GAAnB,WACEt/B,YAAMu/B,sBAAYD,GAClBO,GAAeP,EAAMmE,UAAU,SAACrjB,GAAM,OAAA5f,EAAKijC,SAAWrjB,KACtDyf,GAAeP,EAAMqE,UAAU,SAACvjB,GAAM,OAAA5f,EAAKmjC,SAAWvjB,KACtDyf,GAAeP,EAAMsE,UAAU,SAACxjB,GAAM,OAAA5f,EAAKojC,SAAWxjB,MAClDkf,EAAMoE,SAAarrC,KAAKqrC,SAAYrrC,KAAKqrC,QAAQllC,QAAU8gC,EAAMoE,QAAQllC,QAC3EnG,KAAKqrC,QAAUpE,EAAMoE,UAIlBI,+BAAP,SAA0BwB,GAA1B,WACEjtC,KAAKktC,UAAYD,EAAUnuB,KAAI,SAACve,GAC9B,OAAO,IAAIiqC,GAA2BriC,EAAK4/B,SAAU5/B,EAAK4+B,IAAKxmC,OAInEf,sBAAWisC,4BAAX,WACE,OAAOzrC,KAAKktC,2CAGPzB,0BAAP,SAAqB0B,EAAe39B,GAApC,WA2BE,OAAOw7B,GA1BS,IAAI7pC,SAAkB,SAACC,EAASC,GAE9C,IAAI+rC,EAAkBjlC,EAAKohC,QAAQ5oC,OACX,IAApBysC,GACFhsC,EAAQ+G,GAGVA,EAAKohC,QAAQljC,SAAQ,SAACmjC,GACpBA,EAAE6D,iBAAiBC,cAAcH,GAAO,aACtCC,GACuB,GACrBhsC,EAAQ+G,SAKd8K,YAAW,WAELm6B,EAAkB,GACpB/rC,EAAO8G,EAAKiB,GAAK,8CAAgD+jC,KAGlE,QAImB39B,IAGnBi8B,0BAAP,WAEE,OAAKzrC,KAAKupC,SAAmC,IAAxBvpC,KAAKupC,QAAQ5oC,OAI3BX,KAAKupC,QAAQ,GAAG8D,iBAAiB1C,WAH/B,OA3TyB3D,kBCjBtC,cAMA,OALgBuG,QAAgB,QAChBA,QAAgB,QAChBA,OAAe,OACfA,OAAe,OACfA,QAAgB,2BAoB9B,WAAY3oC,GACV5E,KAAK4I,MAAQhE,EAER0kC,GAAuBtnB,EAAOwrB,cACjCxtC,KAAKytC,YAAczrB,EAAOwrB,WAAWzvB,UAAUnZ,IAuErD,OArFgBod,WAAd,SAAuBpd,GACrB,OAAO,IAAIod,EAAOpd,IAGNod,MAAd,SAAkB0rB,GAChB,OAAO,IAAI1rB,EAAOA,EAAO2rB,YAAYD,KAahC1rB,kBAAP,SAAajR,GACNu4B,GAAuBtpC,KAAKytC,aAG3BzrB,EAAO4rB,QAAUL,GAASM,OAC5Bx+B,QAAQsE,KAAK3T,KAAK8tC,YAAY/8B,EAASw8B,GAASM,QAHlD7tC,KAAKytC,YAAYnsB,MAAMvQ,IAQpBiR,kBAAP,SAAajR,GACNu4B,GAAuBtpC,KAAKytC,aAG3BzrB,EAAO4rB,QAAUL,GAASQ,OAC5B/rB,EAAO4rB,QAAUL,GAASM,OAC1Bx+B,QAAQsE,KAAK3T,KAAK8tC,YAAY/8B,EAASw8B,GAASQ,QAJlD/tC,KAAKytC,YAAYr5B,MAAMrD,IASpBiR,iBAAP,SAAYjR,GACLu4B,GAAuBtpC,KAAKytC,aAG3BzrB,EAAO4rB,QAAUL,GAASQ,OAC5B/rB,EAAO4rB,QAAUL,GAASM,OAC1B7rB,EAAO4rB,QAAUL,GAASS,MAC1B3+B,QAAQsE,KAAK3T,KAAK8tC,YAAY/8B,EAASw8B,GAASS,OALlDhuC,KAAKytC,YAAY95B,KAAK5C,IAUnBiR,iBAAP,SAAYjR,GACLu4B,GAAuBtpC,KAAKytC,aAG3BzrB,EAAO4rB,QAAUL,GAASQ,OAC5B/rB,EAAO4rB,QAAUL,GAASM,OAC1B7rB,EAAO4rB,QAAUL,GAASS,MAC1BhsB,EAAO4rB,QAAUL,GAASU,MAC1B5+B,QAAQsE,KAAK3T,KAAK8tC,YAAY/8B,EAASw8B,GAASS,OANlDhuC,KAAKytC,YAAY9yB,KAAK5J,IAWnBiR,kBAAP,SAAajR,GACNu4B,GAAuBtpC,KAAKytC,cAG/Bp+B,QAAQC,MAAMtP,KAAK8tC,YAAY/8B,EAASw8B,GAASzmC,QACjDuI,QAAQiS,SAHRthB,KAAKytC,YAAYn+B,MAAMyB,IAOpBiR,wBAAP,SAAmBjR,EAAiByR,GAClC,MAAO,IAAMA,EAAQ,KAAOxiB,KAAK4I,MAAQ,MAAQmI,GAMrCiR,cAAd,SAA0BmQ,GACxB,IACMliB,EADgB,qBACUi+B,KAAK/b,EAAOlyB,YAAYoF,YACxD,OAAQ4K,GAAWA,EAAQtP,OAAS,EAAKsP,EAAQ,GAAK,IAxF1C+R,QAAgBurB,GAASS,yBCgBrC,WAAY5kC,EAAYxE,EAAcf,EAAcyiB,EAAoBhY,EAAmCg6B,EAAwB6F,EACvHC,GADZ,MAEIzmC,YAAMyB,gBAZFjB,UAAkB6Z,GAAOqsB,IAAI,UAajClmC,EAAKmmC,MAAQzqC,EACbsE,EAAKomC,YAAcjoB,EACnBne,EAAKS,MAAQhE,EACbuD,EAAKqmC,UAAYlgC,EACjBnG,EAAKsmC,eAAiBnG,EACtBngC,EAAKumC,cAAgBP,EACrBhmC,EAAKwmC,YAAcP,IA8J3B,OAnL4CtuC,QA6BjC8uC,sBAAP,WACI,OAAO5uC,KAAK+nC,SAAS8G,gBAAgB7uC,KAAKoJ,KAM9C5J,sBAAWovC,wBAAX,WACI,OAAO5uC,KAAK4I,uCAMhBpJ,sBAAWovC,iCAAX,WACI,OAAO5uC,KAAKyuC,gDAMhBjvC,sBAAWovC,wBAAX,WACI,GAAI5uC,KAAK+nC,SACL,OAAO/nC,KAAK+nC,SAAS+G,cAAc9uC,KAAKsuC,wCAQhD9uC,sBAAWovC,4BAAX,WACI,IAAIG,GAAiB/uC,KAAKuuC,aAG1B,OAAOvuC,KAAK+nC,SAASiH,gBAAgBhvC,KAAKuuC,8CAM9C/uC,sBAAWovC,2BAAX,WACI,IAAMrC,EAAMvsC,KAAKqoC,SACjB,OAAI0G,GAAiBxC,IAIdA,EAAImB,MAAMtkC,KAAOpJ,KAAKoJ,oCAU1BwlC,uBAAP,SAAkBK,EAAoBz/B,GAClC,OAAOxP,KAAK+nC,SAASmH,oBAAoBlvC,KAAKoJ,GAAI6lC,IAQ/CL,qBAAP,SAAgBO,GACZ,OAAOnvC,KAAK+nC,SAASqH,eAAepvC,KAAKoJ,GAAI+lC,IAU1CP,sBAAP,SAAiBS,EAAsB7/B,GACnC,OAAOxP,KAAK+nC,SAASuH,gBAAgBtvC,KAAKoJ,GAAIimC,EAAQ7/B,IASnDo/B,kBAAP,WACI,OAAO5uC,KAAK+nC,SAASwH,YAAYvvC,KAAKoJ,KAM1C5J,sBAAWovC,4BAAX,WACI,OAAO5uC,KAAKwuC,2CAQhBhvC,sBAAWovC,oCAAX,WACI,IAAMxiC,EAASpM,KAAK0uC,gBACpB,OAAKtiC,GAEM,CACHhD,GAAIpJ,KAAK2uC,8CAMdC,6BAAP,SAAwBp/B,GACpBxP,KAAKwvC,iCAAiC3G,GAAgB4G,6BAA8BjgC,IAGjFo/B,8BAAP,SAAyBp/B,GACrBxP,KAAKwvC,iCAAiC3G,GAAgB6G,2BAA4BlgC,IAG/Eo/B,wBAAP,SAAmB3H,GAAnB,WACIO,GAAeP,EAAMsH,aAAa,SAACxmB,GAAM,OAAA5f,EAAKomC,YAAcxmB,KAC5Dyf,GAAeP,EAAMwH,gBAAgB,SAAC1mB,GAAM,OAAA5f,EAAKsmC,eAAiB1mB,KAClEyf,GAAeP,EAAM0H,aAAa,SAAC5mB,GAAM,OAAA5f,EAAKwmC,YAAc5mB,KAC5Dyf,GAAeP,EAAMqH,OAAO,SAACvmB,GAAM,OAAA5f,EAAKmmC,MAAQvmB,KAChDyf,GAAeP,EAAMr+B,OAAO,SAACmf,GAAM,OAAA5f,EAAKS,MAAQmf,KAE3CuhB,GAAuBrC,EAAMuH,aAC9BxuC,KAAKwuC,UAAYvH,EAAMuH,YAIxBI,6CAAP,SAAwCjS,EAAmBntB,GAA3D,WACIxP,KAAK+nC,SAASsE,uBAAsB,SAAChE,EAAUj8B,EAAQujC,GAE/CvjC,EAAOhD,KAAOjB,EAAKiB,IAInBumC,IAAUhT,GACVntB,EAAS64B,OAKduG,0BAAP,SAAqB3H,GACjBjnC,KAAK2uC,YAAc1H,EAAM0H,gBAjLW3H,kBCR1C,WAAY7gC,EAAe4K,EAAiBiC,GAC1ChT,KAAKmG,MAAQA,EACbnG,KAAK+Q,QAAUA,EACf/Q,KAAKgT,KAAOA,EAchB,OAXS48B,qBAAP,WACE,OAAO5vC,KAAKmG,OAGPypC,uBAAP,WACE,OAAO5vC,KAAK+Q,SAGP6+B,oBAAP,WACE,OAAO5vC,KAAKgT,yBCoHZ,WACIlG,EACA2D,EACAkV,EACA5Y,GAJJ,WA0BI,GA5CI/M,8BAA+E,GAC/EA,wCAA6F,GAC7FA,oCAA2F,GAC3FA,sCAAyF,GAGzFA,mCAAqC,GACrCA,kCAAmE,GACnEA,uBAA2B,GAC3BA,2BAA6B,GAC7BA,mCAAqC,GAazCA,KAAK6vC,QAAU9iC,EACf/M,KAAKuoB,YAAczb,EACnB9M,KAAKwoB,QAAU/X,EACfzQ,KAAKgkC,UAAYre,EAEjB3lB,KAAK8vC,sBAAwB,IAAI3uC,SAAmB,SAACC,GACjD+G,EAAK4nC,6BAA+B3uC,KAGxCpB,KAAKgwC,uBAAyB,IAAI7uC,SAAgB,SAACC,GAC/C+G,EAAK8nC,8BAAgC7uC,KAGpCpB,KAAK6vC,QAAQvpB,YACdtmB,KAAKiwC,8BAA8B,IAGvCjwC,KAAKyoB,YAAc3b,EAAWmB,OAC1B,WACA,CAAC,SAAU,YAAa,eAAgB,UAEtB,oBAAX7B,OAAwB,CAC/B,IAAM8jC,EAAY9jC,OAAeO,SAE7BujC,GAAkD,mBAA/BA,EAASC,mBAC5BD,EAASC,mBAAkB,SAAC/1B,EAAc9K,GACtCnH,EAAKsgB,YACAjb,KACG,CACI3J,KAAM,WAEb/B,MACG,SAACsE,GACG,GAAKA,EAAI4W,MAAT,CAIA,IACIkzB,EAASE,WAAWhqC,EAAI4W,OAC1B,MAAOtb,GAEL,YADA4N,EAAM5N,EAAEqP,SAAWrP,GAGvB0Y,SATI9K,EAAM,4CAWdA,OAg+B5B,OAjlCmB2Y,4CAAf,SACIwgB,EACA/jC,GAEA,IAAM2rC,EACF,SAACC,GACG,OAAA,IAAInI,GACAmI,OACAllC,IAEZ,OAAO,IAAI08B,GACPW,EAAO7jC,KACP6jC,EAAO8H,YAAcF,EAAiB5H,EAAO8H,YAC7C9H,EAAO+H,cAAgB/H,EAAO+H,aAAa1xB,IAAIuxB,GAC/C3rC,IAGOujB,yCAAf,SAAsDwgB,GAClD,OAAO,IAAIN,GACPM,EAAOgI,WAC2C,SAACruC,QAG5C6lB,8BAAf,SAA2C7hB,EAAwBgP,GAC/D,IAAMq1B,OAAwBr/B,IAAdhF,EAAIsnC,MAAsBtnC,EAAIsnC,MAAMh/B,QAAUtI,EAAIsqC,SAClE,OAAO,IAAIjF,GACPrlC,EAAI0kB,YACJ1kB,EAAIuqC,cACJv7B,EACAhP,EAAI+kB,iBACJsf,IAGOxiB,sCAAf,SAAmDskB,GAC/C,OAAO,IAAIqE,GAAsBrE,EAAK,IAAIsE,GAAiCtE,EAAIn3B,YAAQhK,KAqF3F5L,sBAAWyoB,8BAAX,WACI,MAAO,uCAGJA,iBAAP,WAAA,WAEIjoB,KAAK8wC,mDAGL9wC,KAAKgqB,UAhKoB,UAkKrBhqB,KAAK+wC,8BAET/wC,KAAKgqB,UAnKsB,YAqKvBhqB,KAAKgxC,gCAEThxC,KAAKixC,+CAELjxC,KAAKkxC,uEAMLlxC,KAAKmxC,kDAELnxC,KAAKoxC,kDAELpxC,KAAKgqB,UAtKuB,uBAwKxBhqB,KAAKqxC,0BAETrxC,KAAKgqB,UAxKyB,yBA0K1BhqB,KAAKsxC,4BAITtxC,KAAKuxC,+CAGLvxC,KAAKgqB,UAxKgB,gBA0Kd,WACC,GAA4C,YAAxC7hB,EAAK0nC,QAAQ2B,wBAIjB,GAA4C,SAAxCrpC,EAAK0nC,QAAQ2B,uBAAmC,CAChD,GAAsB,oBAAXplC,QAC0B,mBAAzBA,OAAekF,MAEvB,YADAlF,OAAOkF,QAGX,GAAuB,oBAAZqB,SAC0B,mBAAzBA,QAAgB8+B,KAExB,YADA9+B,QAAQ8+B,aAXZtpC,EAAK6gB,aAkBjBhpB,KAAKyoB,YAAYva,UAAS,WAEI,gBAAtB/F,EAAK0nC,QAAQ6B,MACS,kCAAtBvpC,EAAK0nC,QAAQ6B,KACbvpC,EAAK4nC,6BAA6B5nC,GAElCA,EAAKsgB,YACAjb,KACG,CACI3J,KAAM,YACN8tC,eAC2B,aAAtBxpC,EAAK0nC,QAAQ6B,KAAsB,GACV,eAAtBvpC,EAAK0nC,QAAQ6B,KAAwBvpC,EAAK0nC,QAAQ+B,aAAe,KAEhF9vC,MAAK,WACFqG,EAAK4nC,6BAA6B5nC,SAIlDnI,KAAKyoB,YAAY1jB,QAGdkjB,oBAAP,WAAA,WACIjoB,KAAKmoB,kBAAkB9hB,SAAQ,SAAC4Z,GAAQ,OAAAA,GAAO9X,EAAKogB,YAAYhI,IAAIN,MACpEjgB,KAAKmoB,kBAAkBxnB,OAAS,GAK7BsnB,kBAAP,WACI,OAAO9mB,QAAQ4d,IAAI,CAAC/e,KAAK8vC,sBAAuB9vC,KAAKgwC,0BAGlD/nB,sBAAP,WACI,OAAOjoB,KAAK8vC,uBAGT7nB,uCAAP,SAAkCzY,GAC9BxP,KAAK6xC,mCAAmC3uC,KAAKsM,IAG1CyY,iCAAP,SACI6pB,EACApK,EACAC,EACA56B,EACArI,GALJ,WAOU+jC,EAAsC,GAC5CA,EAAO7jC,KAAOktC,EACd,IAAMC,EAAuB,SAACC,GAAuC,OAAGnuC,KAAMmuC,EAAiBnuC,KAAMe,KAAMotC,EAAiBptC,KAAMif,cAAemuB,IAKjJ,OAHAvJ,EAAO8H,WAAawB,EAAqBrK,GACzCe,EAAO+H,aAAe7I,EAAc7oB,IAAIizB,GAEjC/xC,KAAKyoB,YACPjb,KACG,CACI3J,KAtRc,YAuRdsc,MAAO,CAACsoB,KAEf3mC,MAAK,WACF,IAAMmwC,EAAehqB,EAAUiqB,0CAA0CzJ,EAAQ/jC,GAOjF,OANAyD,EAAKgqC,gBACDhqC,EAAK0pC,mCACL,IAAIjB,GACAqB,EACA,IAAIlJ,GAAmBF,GAAgBuJ,QA/R7B,aAiSXH,MAIZhqB,mCAAP,SAA8B6pB,GAA9B,WACI,OAAO9xC,KAAKyoB,YACPjb,KACG,CACI3J,KAvSiB,eAwSjBsc,MAAO,CAAC2xB,KAEfhwC,MAAK,WACF,IAAMmwC,EAAe,IAAInK,GAAagK,OAAkB1mC,OAAWA,OAAWA,GAC9EjD,EAAKgqC,gBACDhqC,EAAK0pC,mCACL,IAAIjB,GACAqB,EACA,IAAIlJ,GAAmBF,GAAgBwJ,UAlT7B,iBAuTvBpqB,qCAAP,SAAgCzY,GAC5BxP,KAAKsyC,iCAAiCpvC,KAAKsM,IAOxCyY,kCAAP,SACI2jB,EACA2G,EACAnI,GAHJ,WAII,GAAIpqC,KAAKwyC,6BAA6B5G,GAClC,OAAOzqC,QAAQE,OAAO,IAAIyF,MAAM,0BAA0B8kC,2BAG9D5rC,KAAKwyC,6BAA6B5G,GAAc2G,EAIhD,IAAM9J,EAAS,CACXr/B,GAAIwiC,EACJ6E,UAAW7E,EACX/nB,cAAeumB,GAEnB,OAAOpqC,KAAKyoB,YAAYjb,KAAK,CACzB3J,KA/TsB,qBAgUtB4uC,UAAW,CAAChK,KAEX3mC,MAAK,WACFqG,EAAKgqC,gBACDhqC,EAAKmqC,iCACL,IAAI1B,GACA3oB,EAAUyqB,uCAAuCjK,GACjD,IAAIM,GAAmBF,GAAgBuJ,QAvU7B,yBA0UrBp4B,OAAM,kBACI7R,EAAKqqC,6BAA6B5G,OAI9C3jB,oCAAP,SAA+B2jB,GAA/B,WAEI,OADgB5rC,KAAKwyC,6BAA6B5G,WAK3C5rC,KAAKwyC,6BAA6B5G,GAElC5rC,KAAKyoB,YAAYjb,KAAK,CACzB3J,KAtVyB,wBAuVzB8uC,YAAa,CAAC/G,KACf9pC,MAAK,WACJqG,EAAKgqC,gBACDhqC,EAAKmqC,iCACL,IAAI1B,GACA,IAAIzI,GAAWyD,OAAYxgC,GAC3B,IAAI29B,GAAmBF,GAAgBwJ,UA/VzB,0BAkVflxC,QAAQE,OAAO,IAAIyF,MAAM,0BAA0B8kC,wBAkB3D3jB,mCAAP,SAA8BzY,GAC1BxP,KAAK4yC,yBAAyB1vC,KAAKsM,IAGhCyY,6BAAP,SAAwBgqB,EAAsBttC,EAAkBkf,GAAhE,WACUgvB,EAAmB,CACrBhvC,KArWoB,SAsWpB8sC,cAAesB,EACfa,gBAAiBnuC,GAYrB,OATI3E,KAAK+yC,yBAAyBlvB,GAC9BgvB,EAAYG,eAAiB,CACzBzC,WAAY,CAAE1sC,KAAMggB,EAAc6pB,MAAM7pC,KAAMe,KAAMif,EAAc6pB,MAAM9oC,KAAMif,cAAeA,EAAc6pB,OAC3G8C,aAAc3sB,EAAcovB,SAAWpvB,EAAcovB,QAAQn0B,KAAI,SAACo0B,GAAO,OAAGrvC,KAAMqvC,EAAGrvC,KAAMe,KAAMsuC,EAAGtuC,KAAMif,cAAeqvB,OAG7HL,EAAYhvB,cAAgBA,GAAiBA,EAAc/E,KAAI,SAACo0B,GAAO,OAAGrvC,KAAMqvC,EAAGrvC,KAAMe,KAAMsuC,EAAGtuC,KAAMif,cAAeqvB,MAGpHlzC,KAAKmzC,2CACRN,EApYuB,aAsYvB,SAACzsC,EAAK6T,GAAc,OAAA7T,EAAI8T,aAAeD,IAxYlB,WA0YrB,SAAC7T,EAAK6T,EAAWm5B,GAAY,OAAAhtC,EAAI0kB,cAAgBsoB,EAAQtoB,cAzYlC,aA2YvB,SAAC1kB,EAAK6T,EAAWm5B,GAAY,OAAAhtC,EAAI0kB,cAAgBsoB,EAAQtoB,eACzD,SAAC1kB,GAAQ,OAAAA,EAAI0kB,eAAahpB,MAAK,SAACsH,GAC5B,MAA0B,kCAAtBjB,EAAK0nC,QAAQ6B,MACRvpC,EAAKkrC,8BAA8BpB,GAcrC7oC,GAbCjB,EAAKkrC,8BAA8BpB,IAAgB,EAE5C9pC,EAAKsgB,YACPjb,KACG,CACI3J,KAAM,YACN8tC,eAAgB,CAACM,KAExBnwC,MAAK,WACF,OAAOsH,UAQ5B6e,yBAAP,SAAoBogB,GAChB,OAAOroC,KAAKyoB,YAAYjb,KAAK,CACzB3J,KA3YqB,UA4YrBinB,YAAaud,EAASj/B,GACtB8zB,WAAY,2DACZ1oB,OAAQ,wBACT1S,MAAK,SAACM,GAAM,OAAA,MAGZ6lB,kCAAP,SAA6BogB,EAAoB1jC,EAAc2uC,EAAsBC,GACjF,GAAID,EAEA,OAAOtzC,KAAKgkC,UAAUvc,IAAI4gB,EAASj/B,GAAIzE,GAGvC,IAAgB,QAAA6uC,EADhBD,EAAcA,GAAe,GACbvjC,WAAAA,IAAa,CACzBrL,QAAa,KAEjB,OAAO3E,KAAKgkC,UAAUz8B,OAAO8gC,EAASj/B,GAAIzE,IAI3CsjB,2BAAP,SAAsB2jB,EAAqB6H,GAIvC,MAAM,IAAI3sC,MAAM,wDAGbmhB,2BAAP,SAAsBpkB,EAAce,EAAc8uC,GAE9C,IAAIC,OAA2D,IAAlC3zC,KAAKuoB,YAAYjL,aACxC3O,EAAS3O,KAAKuoB,YAAY5Z,OAGhC,GAAsB,oBAAXvC,OAAwB,CAC/B,IAAMO,EAAWP,OAAOO,SACpBA,IACAgnC,OAAmD,IAA1BhnC,EAASinC,cAiB1C,OAbID,GACA3zC,KAAKyoB,YAAYjb,KAAK,CAClB3J,KAxbO,UA4bf7D,KAAKmyC,gBACDnyC,KAAK6zC,+BACL,IAAIjD,GACA,IAAIhC,GAAejgC,EAAQ/J,EAAMf,OAAMuH,EAAWpL,KAAK8zC,eAAenlC,GAAS+kC,EAAa1zC,KAAK+zC,qBAAqBplC,QAASvD,GAC/H,IAAI29B,GAAmBF,GAAgBuJ,QAC3C,mBAEGjxC,QAAQC,QAAQuN,IAGpBsZ,mCAAP,SAA8BzY,GAC1BxP,KAAK6zC,+BAA+B3wC,KAAKsM,IAGtCyY,yBAAP,SAAoB3B,EAAoB0rB,GAAxC,WAaI,OATKA,EAAiBgC,SACdhC,EAAiBnqB,MAAQmqB,EAAiBiC,OAASjC,EAAiBkC,QAAUlC,EAAiBmC,OAC/FnC,EAAiBgC,OAAS,CACtBtC,KAAM,SACN0C,SAAU,IAKfp0C,KAAKmzC,2CACR,CACItvC,KA3dY,cA4dZ4sC,UAAWuB,EAAiBnuC,KAC5BwwC,UAAWrC,EAAiBptC,MAAQotC,EAAiBnuC,KACrDggB,cAAemuB,EACflnB,YAAaxE,QAEjBlb,OACAA,EA/diB,gBAiejB,SAAChF,EAAK6T,GAAc,OAAA7T,EAAI8T,aAAeD,SACvC7O,OACAA,GACA,SAAChF,GAAQ,OAAAA,EAAIkuC,cACZxyC,MAAK,SAACsH,GACH,GAAKkd,EAGL,OAAOne,EAAKosC,aAAajuB,EAAYld,EAAI4oC,EAAiBptC,MACrD9C,MAAK,WACF,OAAOsH,SAKpB6e,wBAAP,SAAmB7e,GACf,OAAOpJ,KAAKyoB,YAAYjb,KAAK,CACzBgnC,gBAAiBprC,IAClBtH,MAAK,SAACM,QAGN6lB,gCAAP,WACI,IAAI3B,EAAatmB,KAAK6vC,QAAQvpB,YAAetmB,KAAK6vC,QAAQ4E,kBAAoBz0C,KAAK6vC,QAAQ4E,iBAAiBnuB,WACxGouB,EAAsB10C,KAAK6vC,QAAQ4E,kBAAoBz0C,KAAK6vC,QAAQ4E,iBAAiBC,mBACrFC,EAA6B30C,KAAK6vC,QAAQ4E,kBAAoBz0C,KAAK6vC,QAAQ4E,iBAAiBE,0BAC5FC,EAAsB50C,KAAK6vC,QAAQ4E,kBAAoBz0C,KAAK6vC,QAAQ4E,iBAAiBG,mBAEzF,GAAsB,oBAAXxoC,aACoB,IAApBA,OAAOC,UACdD,OAAOC,SAASwoC,QACW,mBAApBC,gBAAgC,CACvC,IAAMC,EAAe,IAAID,gBAAgBzoC,SAASwoC,OAAOruC,MAAM,IAE/DkuC,GADAA,EAAqBA,GAAsBK,EAAa7tC,IAAI,iBACjB6tC,EAAa7tC,IAAI,8BACnB,IAA9BytC,IACPA,EAA4BI,EAAa7tC,IAAI,iCAEjD0tC,EAAqBA,GAAsBG,EAAa7tC,IAAI,yBAC5Dof,EAAaA,GAAcyuB,EAAa7tC,IAAI,iBAOhD,MAAO,CACHusC,sBAAkBroC,EAClBkb,aACAouB,mBAPJA,EAAqBA,GAAsB,UAQvCC,0BAPJA,EAA4BA,IAA6B,EAQrDC,mBAPJA,EAAqBA,GAAsB50C,KAAKuoB,YAAY5Z,SAWzDsZ,yBAAP,SAAoB3B,EAAoBhC,EAAkB1f,GAA1D,WACUowC,EAAapwC,GAAQ,CAAEA,SAAW,GACxC,OAAO5E,KAAKyoB,YAAYjb,SACpB3J,KA7iBmB,gBA8iBnBoxC,UAAW3wB,EACXwG,YAAaxE,GACV0uB,IACJlzC,MAAK,WACJqG,EAAKgqC,gBACDhqC,EAAK0rC,+BACL,IAAIjD,GACA,IAAIhC,GAAetqB,OAAUlZ,OAAWA,EAAWkb,EAAYne,EAAK2rC,eAAexvB,QAAWlZ,EAAWjD,EAAK4rC,qBAAqBzvB,QAAWlZ,GAC9I,IAAI29B,GAAmBF,GAAgB4G,+BAC3C,oCAEJtnC,EAAKgqC,gBACDhqC,EAAKyqC,yBACL,IAAIhC,GACA,IAAInF,GAASnlB,OAAYlb,EAAW,IAAIwkC,GAAe,eAAWxkC,OAAWA,QAAYA,OAAWA,GACpG,IAAI29B,GAAmBF,GAAgBqM,UAC3C,kCAILjtB,0BAAP,SAAqB3B,EAAoBhC,GAAzC,WACI,OAAOtkB,KAAKyoB,YAAYjb,KAAK,CACzB3J,KAjkBmB,iBAkkBnBoxC,UAAW3wB,EACXwG,YAAaxE,IACdxkB,MAAK,WACJqG,EAAKgqC,gBACDhqC,EAAK0rC,+BACL,IAAIjD,GACA,IAAIhC,GAAetqB,OAAUlZ,OAAWA,EAAW,KAAMjD,EAAK2rC,eAAexvB,QAAWlZ,EAAWjD,EAAK4rC,qBAAqBzvB,QAAWlZ,GACxI,IAAI29B,GAAmBF,GAAgB6G,6BAC3C,kCAEJvnC,EAAKgqC,gBACDhqC,EAAKyqC,yBACL,IAAIhC,GACA,IAAInF,GAASnlB,OAAYlb,EAAW,IAAIwkC,GAAe,eAAWxkC,OAAWA,QAAYA,OAAWA,GACpG,IAAI29B,GAAmBF,GAAgBqM,UAC3C,gCAKLjtB,6BAAP,WACI,OAAO9mB,QAAQC,QAAQ,KAGpB6mB,2BAAP,WACI,OAAO9mB,QAAQC,QAAQ,KAGpB6mB,0BAAP,WACI,OAAO9mB,QAAQC,QAAQ,KAGpB6mB,+BAAP,WACI,OAAO9mB,QAAQC,QAAQ,KAQpB6mB,iCAAP,SAA4B7e,EAAY+rC,EAAuCrmB,KAKxE7G,4BAAP,SAAuB7e,KAKhB6e,4BAAP,SAAuB7e,EAAYimC,KAK5BpnB,2BAAP,SAAsB7e,EAAY+lC,KAK3BlnB,gCAAP,SAA2B7e,EAAYgsC,KAKhCntB,0BAAP,SAAqB7e,EAAYisC,KAK1BptB,6BAAP,SAAwB9J,EAAcuN,EAAYpR,GAC9C,OAAOta,KAAKyoB,YAAYjb,KAAK,CACzB3J,KAzoBsB,QA0oBtByxC,KAAM5pB,EACN6pB,MAAOp3B,KAKR8J,6BAAP,SAAwB3B,EAAoBkvB,GACxC,OAAOx1C,KAAKyoB,YAAYjb,KAAK,CACzB3J,KAjpBqB,QAkpBrBsa,KAAMmI,IAEPxkB,MAAK,WAAM,MAAA,OAIXmmB,iCAAP,SAA4BzY,KAKrByY,iCAAP,SAA4BzY,KAIrByY,mDAAP,SAA8CzY,KAKvCyY,mCAAP,WACI,OAAO9mB,QAAQC,QAAQ,KAOnB6mB,+BAAR,WACI,OAAOjoB,KAAKuoB,YAAY5Z,OAAS,IAAM8H,KAAKC,MAAsB,IAAhBD,KAAKW,WAGnD6Q,yDAAR,SACIwtB,EACAC,EACAC,EACAh0B,GAEA,IAAMi0B,EAAoB,SAACC,GAAqB,OAAA,SAACpN,GAAgB,OAAA,IAAImI,GACjEnI,EACA,IAAIM,GACA8M,EACIhN,GAAgBuJ,MAChBvJ,GAAgBwJ,YAiB5B,MAAO,CAZAoD,GAAoBz1C,KAAK81C,6BAC5BL,GACA,SAACrvC,GAAQ,OAAAuvC,EAAOvvC,GAAK,KACrBwvC,GAAkB,GAClBj0B,GAEG+zB,GAAsB11C,KAAK81C,6BAC9BJ,GACA,SAACtvC,GAAQ,OAAAuvC,EAAOvvC,GAAK,KACrBwvC,GAAkB,GAClBj0B,IAEgB/X,QAAO,SAACme,GAAM,OAAAA,MAG9BE,yCAAR,SACI8tB,EACAJ,EACAK,EACAn0B,GACA,OAAO7hB,KAAKgqB,UACR+rB,GACA,SAAC3vC,GACGuvC,EAAOvvC,GACFC,SAAQ,SAAC4vC,GACN,OAAAp0B,EAAQxb,SAAQ,SAAC6vC,GAAM,OAAAA,EAAEF,EAAeC,EAAK7vC,cAIzD6hB,uDAAR,SACI7hB,EACA+vC,EACAC,EACAxrB,EACAyrB,EACAC,EACAC,EACAC,GARJ,IAYQC,EACAC,EAQAC,EACAC,EACAC,EACAC,SAdEC,EAAQ/2C,KAAKg3C,qBAIbC,EAAiB,IAAI91C,SAAsB,SAACC,EAASC,GACvDo1C,EAAwBr1C,EACxBs1C,EAAuBr1C,KAGvB61C,EAA2B,KAOzBC,EAAoB,WACtBhvC,EAAKivC,iBAAiBT,GACtBxuC,EAAKivC,iBAAiBR,GACtBzuC,EAAKivC,iBAAiBP,GACtB1uC,EAAKivC,iBAAiBN,IAG1BH,EAAwBR,GACpBn2C,KAAKgqB,UACDmsB,GACA,SAACkB,GACQjB,EAAuBiB,EAAMN,KAGlCG,EAAsBG,EACtBlvC,EAAKivC,iBAAiBT,OAElCC,EACI52C,KAAKgqB,UACDY,GACA,SAAC0sB,GACQjB,EAAqBiB,EAAMP,EAAOG,IAGvCT,EAAsBD,EAAkCc,OAEpET,EAAwBP,GACpBt2C,KAAKgqB,UACDssB,GACA,SAACiB,GACQhB,EAAuBgB,EAAMR,EAAOG,IAGzCR,EAAqBa,MAEjCT,EAAoBR,GAChBt2C,KAAKgqB,UA7yBO,SA+yBR,SAACwtB,GACOA,EAAKt9B,aAAe68B,GAGxBL,EAAqBc,MAGjCpxC,EAAI8T,WAAa68B,EAEjB,IAAMU,EAAWz3C,KAAKyoB,YACjBjb,KAAKpH,GACLtE,MAAK,WACF,OAAOm1C,KAGf,OADAQ,EAAS31C,KAAKq1C,EAAmBA,GAC1BM,GAKHxvB,gDAAR,SAA4CyvB,EAAmBjN,GAC3D,IAAMkN,EAAW33C,KAAK43C,8BAA8BnN,EAAU,IAAMiN,GACpE,OAAKC,EAGM,IAAIxP,GAAWwP,OAAUvsC,GAFzB,MAMP6c,sBAAR,SAA4B8tB,EAAqBl0B,GAAjD,WACU5B,EAAMjgB,KAAKuoB,YAAY/O,GACzBu8B,GACA,SAAC3vC,GAAkB,OAAAyb,EAAQZ,KAAK9Y,EAAb0Z,CAAmBzb,MAI1C,OAFApG,KAAKmoB,kBAAkBjlB,KAAK+c,GAErBA,GAGHgI,6BAAR,SAAyBiL,GACjBA,IACAlzB,KAAKuoB,YAAYhI,IAAI2S,UACdlzB,KAAKmoB,kBAAkBnoB,KAAKmoB,kBAAkBtQ,QAAQqb,MAI7DjL,4BAAR,SACIjZ,EACA2gC,EACAjrC,GAHJ,WAIIsK,EAAU3I,SAAQ,SAAC0kC,GACf,IACIA,EAAG4E,GACL,MAAOz/B,GACL/H,EAAKqgB,QAAQlZ,MAAM,aAAY5K,GAAeirC,EAAMhrC,QAAQd,oBAAoB4Q,KAAKC,UAAUxE,SAKnG+X,yCAAR,SAAqC7hB,GAC5BA,EAAIijB,WAGArpB,KAAK63C,sBAAsBzxC,EAAI0kB,cAChC9qB,KAAK83C,mBAAmB1xC,GAH5BpG,KAAKwoB,QAAQlZ,MAAM,6CAA+ClJ,EAAI0kB,cAQhE7C,+BAAd,SAAiC7hB,gHAGzB,OAFEkgB,EAAalgB,EAAI0kB,YACvB3jB,EAAAnH,KAAK63C,sBAAsB9pC,EAAAuY,KACjBtmB,KAAKgkC,UAAUha,UAAU1D,GAC3B,SAACxU,EAAWiV,EAAcC,GACtB,IAAM2oB,EAAQ,IAAIiB,GACd,IAAInF,GAASnlB,OAAYlb,OAAWA,EAAW0G,OAAM1G,GACrD,IAAI2sC,GAAmCjmC,EAAMiV,EAASC,IAE1D7e,EAAKgqC,gBACDhqC,EAAKyqC,yBACLjD,EACA,qCAVhBxoC,KACI+V,qBAaA+K,2CAAR,SAAuC7hB,GACnC,IAAM4xC,EAAqBh4C,KAAK63C,sBAAsBzxC,EAAI0kB,aACxB,mBAAvBktB,GACPA,WAEGh4C,KAAK63C,sBAAsBzxC,EAAI0kB,cAGlC7C,qCAAR,SAAiC7hB,GAAjC,WACIA,EAAIqsC,UAAUpsC,SAAQ,SAACoiC,GACnBtgC,EAAKyvC,8BAA8BxxC,EAAIsqC,SAAW,IAAMjI,EAAOr/B,IAAMq/B,EAAOgI,cAI5ExoB,uCAAR,SAAmC7hB,GAAnC,WACIA,EAAIusC,YAAYtsC,SAAQ,SAACqxC,UACdvvC,EAAKyvC,8BAA8BxxC,EAAIsqC,SAAW,IAAMgH,OAI/DzvB,6DAAR,WACIjoB,KAAKi4C,6CAt5BwB,cAEC,iBAu5B1B,SAAC7xC,EAA4ByvC,GAAY,OAAAA,EACnCzvC,EAAI+Z,MAAMrB,KAAI,SAACxe,GAAM,OAAA2nB,EAAUiqB,0CAA0C5xC,OAAG8K,MAC5EhF,EAAI+Z,MAAMrB,KAAI,SAACxe,GAAM,OAAA,IAAIwnC,GAAaxnC,EAAEsE,UAAMwG,OAAWA,OAAWA,QAC1EpL,KAAK6xC,qCAIL5pB,iFAAR,WAII,IAJJ,eAIyC9gB,GAh6BZ,UAID,SAOF,iBAq5Be6I,WAAAA,IAA4E,CAA5G,IAAMkoC,OACPl4C,KAAK81C,6BACDoC,GACA,SAAC9xC,GACG,MAAA,CAAEA,EAAIsnC,gBAActnC,IAAKvC,KAAMuC,EAAIqqC,UAAW7rC,KAAMwB,EAAIiuC,UAAW3lC,QAAStI,EAAIsqC,YAC3E7qC,OAAOO,EAAI+xC,cAAgB,IAC3Br5B,KAAI,SAACnL,GAAc,OAAA,IAAIi7B,GAAej7B,EAAKjF,QAASiF,EAAK/O,KAAM+O,EAAK9P,KAAMuC,EAAI0kB,YAAa3iB,EAAK2rC,eAAengC,EAAKjF,cAAUtD,EAAWjD,EAAK4rC,qBAAqBpgC,EAAKjF,cAAUtD,SAC3L,SAAC6qC,EAAK7vC,GAAQ,OAAA,IAAIwqC,GAA4BqF,EAAK,IAAIlN,GAAmBF,GAAgB4G,iCAC1FzvC,KAAK6zC,kCAIT5rB,yDAAR,WAII,IAA6B,QAAA9gB,GAh7BJ,UAID,UA46BK6I,WAAAA,IAAqD,CAA7E,IAAMooC,OACPp4C,KAAK81C,6BACDsC,GACA,SAAChyC,GAAQ,MAAA,CAAC6hB,EAAUowB,4BAA4BjyC,EAAK,IAAIwpC,GAAe,UAAW,GAAI,IAAI7rC,WAC3F,SAACkyC,EAAK7vC,GAAQ,OAAA6hB,EAAUqwB,oCAAoCrC,KAC5Dj2C,KAAK4yC,0BAGb5yC,KAAK81C,6BAv7BsB,aAy7BvB,SAAC1vC,GAAQ,MAAA,CAAC6hB,EAAUowB,4BAA4BjyC,EAAK,IAAIwpC,GAAe,YAAaxpC,EAAIoO,OAAQ,IAAIzQ,WACrG,SAACkyC,EAAK7vC,GAAQ,OAAA6hB,EAAUqwB,oCAAoCrC,KAC5Dj2C,KAAK4yC,0BAET5yC,KAAK81C,6BA57BsB,aA87BvB,SAAC1vC,GAAQ,MAAA,CAAC6hB,EAAUowB,4BAA4BjyC,EAAK,IAAIwpC,GAAe,UAAW,GAAI,IAAI7rC,WAC3F,SAACkyC,EAAK7vC,GAAQ,OAAA6hB,EAAUqwB,oCAAoCrC,KAC5Dj2C,KAAK4yC,0BAET5yC,KAAK81C,6BAz7BiB,iBA27BlB,SAAC1vC,GAAQ,MAAA,CAAC6hB,EAAUowB,4BAA4BjyC,EAAK,IAAIwpC,GAAe,UAAW,GAAI,IAAI7rC,WAC3F,SAACkyC,EAAK7vC,GAAQ,OAAA6hB,EAAUqwB,oCAAoCrC,KAC5Dj2C,KAAK4yC,2BAGL3qB,4DAAR,WAAA,WACIjoB,KAAKi4C,6CA97BuB,uBAEE,0BA+7B1B,SAAC7xC,EAA2ByvC,GAAqB,OAAAA,EAC3CzvC,EAAIqsC,UAAU3zB,IAAImJ,EAAUyqB,wCAC5BtsC,EAAIusC,YAAY7zB,KAAI,SAAC1V,GAAO,OAAAjB,EAAKowC,oCAAoCnvC,EAAIhD,EAAIsqC,aAAW9mC,QAAO,SAACme,GAAM,OAAK,MAALA,OAC5G/nB,KAAKsyC,mCAGLrqB,4DAAR,WAAA,WACIjoB,KAAKgqB,UAl8BkB,kBAo8BnB,SAAC5jB,GACG,IAAMmsC,EAAUpqC,EAAKqqC,6BAA6BpsC,EAAIoyC,cACtD,GAAKjG,EAUL,IACI,IAAM1uB,EAAgBzd,EAAIyd,eAAiB,GAS3CA,EAAc40B,cAAgB50B,EAAc40B,eAAiBryC,EAAIqyC,cACjE50B,EAAc20B,aAAe30B,EAAc20B,cAAgBpyC,EAAIoyC,aAC/D,IAAM1lC,EAAUy/B,EAAQ,CACpBjsB,WAAYlgB,EAAIiiC,UAAYjiC,EAAIiiC,SAASj/B,GACzC6oC,aAAc7rC,EAAIiiC,UAAYjiC,EAAIiiC,SAASxkC,KAC3CA,KAAMuC,EAAIyd,eAAiBzd,EAAIyd,cAAchgB,KAC7C0hB,QAAS1B,EAAc40B,cACvB50B,kBAEA/Q,GAAWA,EAAQhR,MAAQgR,EAAQkH,OACnClH,EAAQkH,OAAM,SAAC9J,GAAQ,OAAA/H,EAAKsgB,YAAYjb,KACpC,CACI3J,KAjgCR,QAkgCQqW,WAAY9T,EAAI8T,WAChB1F,OAAQtE,IAAQA,EAAIa,SAAW0D,KAAKC,UAAUxE,SAG5D,MAAOA,GACL/H,EAAKsgB,YAAYjb,KACb,CACI3J,KAzgCJ,QA0gCIqW,WAAY9T,EAAI8T,WAChB1F,OAAQtE,IAAQA,EAAIa,SAAW0D,KAAKC,UAAUxE,WAzCtD/H,EAAKsgB,YAAYjb,KACb,CACI3J,KAp+BJ,QAq+BIqW,WAAY9T,EAAI8T,WAChB1F,OAAQ,wBAAwBpO,EAAIoyC,mBA2CpDvwB,yDAAR,WACI,IADJ,sBACeywB,GACP14B,EAAKgK,UAAU0uB,GACX,SAACtyC,GACG,IAAMuyC,EAzgCM,oBAygCMD,EAA6CtyC,EAAIwyC,UAAYxyC,EAAIsI,QAC7EmqC,EA1gCM,oBA0gCQH,EAA6CtyC,EAAI0yC,YAAc1yC,EAAIqqC,UACjFsI,EA3gCM,oBA2gCQL,EAA6CtyC,EAAI4yC,YAAc5yC,EAAIiuC,UAEjF5L,EAAS,IAAImG,GACf+J,EACAI,EACAF,EACAzyC,EAAI0kB,YACJ3iB,EAAK2rC,eAAe6E,QACpBvtC,EACAjD,EAAK4rC,qBAAqB4E,QAC1BvtC,GAICjD,EAAK0vC,sBAAsBzxC,EAAI0kB,aA1hCxB,WAgiCD4tB,GACPvwC,EAAK8nC,8BAA8B,IANnC9nC,EAAK2vC,mBAAmB1xC,GAAKtE,MAAK,WA3hC1B,WA4hCA42C,GACAvwC,EAAK8nC,8BAA8B,OAS/C9nC,EAAKgqC,gBACDhqC,EAAK0rC,+BACL,IAAIjD,GACAnI,EACA,IAAIM,GAAmBF,GAAgB4G,+BAC3CiJ,kBApCYvxC,GAtgCJ,kBADA,UAugCI6I,WAAAA,aAyC5BhQ,KAAKgqB,UA7iCiB,QA+iClB,SAAC5jB,GACG,IAAMqiC,EAAS,IAAImG,GACfxoC,EAAI6yC,aACJ7tC,OACAA,EACA,KACAjD,EAAK2rC,eAAe1tC,EAAI6yC,cACxB7tC,EACAjD,EAAK4rC,qBAAqB3tC,EAAI6yC,cAC9B7tC,GAEJjD,EAAKgqC,gBACDhqC,EAAK0rC,+BACL,IAAIjD,GACAnI,EACA,IAAIM,GAAmBF,GAAgB6G,6BA9jCjC,WAkkCtB1vC,KAAKi4C,6CAnjCgB,oBAqjCjB7sC,GACA,SAAChF,GAAQ,MAAA,CACL,IAAIwoC,GACAxoC,EAAIkuC,gBACJlpC,OACAA,OACAA,OACAA,OACAA,EACAjD,EAAK4rC,qBAAqB3tC,EAAIkuC,iBAC9BlpC,MACRpL,KAAK6zC,iCAGL5rB,2BAAR,SAAuB7e,GACnB,OAAOpJ,KAAK6vC,QAAQzJ,IAAIhZ,UAAUiE,MAAK,SAAC9wB,GAAM,OAAAA,EAAEoO,SAAWvF,GAAM7I,EAAE+jB,WAAalb,MAG5E6e,iCAAR,SAA6BtZ,GAA7B,WACI,OAAO,WACH,IAAM8e,EAAStlB,EAAK2rC,eAAenlC,GACnC,GAAK8e,EAAL,CAGA,IAAMnJ,EAAWmJ,EAAOnJ,SACxB,OAAOnc,EAAK0nC,QAAQtG,QAAQ2P,OAAOtvC,QAAO,SAAC4/B,GAAM,OAAAA,EAAEpgC,KAAOkb,KAAU,MAIpE2D,qCAAR,SAAiC1mB,GAC7B,YAAqB,IAAVA,KAGNA,EAAiCmsC,0BC3lC5C,WAAYrD,EAA0Bd,GAAtC,WAZOvpC,iBAAkE,GAClEA,iBAAkE,GAClEA,mBAAwF,GACxFA,qBAA8G,GAC9GA,kCAAoE,GACpEA,gCAA8E,GAC9EA,iCAA+E,GAC/EA,+BAAoH,GAGpHA,aAAkBgiB,GAAOqsB,IAAIruC,MAGlCA,KAAKm5C,GAAK9O,EACVA,EAAQve,QACLhqB,MAAK,SAACs3C,GAELA,EAAG9M,gCAAgCnkC,EAAKkxC,2BAA2Bp4B,KAAK9Y,IACxEixC,EAAG/M,sBAAsBlkC,EAAKmxC,wBAAwBr4B,KAAK9Y,IAC3DixC,EAAGzM,4BAA4BxkC,EAAKoxC,6BAA6Bt4B,KAAK9Y,IACtEixC,EAAGtM,4BAA4B3kC,EAAKqxC,6BAA6Bv4B,KAAK9Y,IAClEohC,GACFA,EAAQkQ,0BAA0BtxC,EAAKuxC,kCAAkCz4B,KAAK9Y,OAqaxF,OA3ZE3I,sBAAWm6C,0BAAX,WACE,GAAIrQ,GAAuBtpC,KAAK45C,IAAK,CACnC,IAAMC,EAAmB75C,KAAKm5C,GAAGU,iBAC7BA,EAAiBl5C,OAAS,IAC5BX,KAAK45C,GAAKC,EAAiB,IAG/B,OAAO75C,KAAK45C,oCASdp6C,sBAAWm6C,4BAAX,WACE,IAAMG,EAAQ95C,KAAKoM,OACnB,IAAIk9B,GAAuBwQ,GAG3B,OAAOA,EAAMzR,0CAURsR,yBAAP,SAAoB/N,GAClB,OAAO5rC,KAAKm5C,GAAG5Q,aAAavoC,KAAKqoC,SAAUuD,IAWtC+N,iCAAP,SAA4B9N,EAA+C/c,GACzE,OAAO9uB,KAAKm5C,GAAGrN,qBAAqB9rC,KAAKqoC,SAAUwD,EAAa/c,IAQlEtvB,sBAAWm6C,2BAAX,WACE,IAAMtR,EAAWroC,KAAKqoC,SACtB,OAAI0G,GAAiB1G,GACZ,GAGFA,EAAS1jC,yCAYXg1C,0BAAP,SAAqBh1C,EAAiB6K,GACpC,IAAM64B,EAAWroC,KAAKqoC,SACtB,OAAI0G,GAAiB1G,GACZ,IAAIlnC,SAAgB,SAACC,EAASC,GACnCA,EAAO,sBAIJgnC,EAAS0R,cAAcp1C,EAAS6K,IAUlCmqC,uBAAP,SAAkBh1C,EAAiB6K,GACjC,IAAM64B,EAAWroC,KAAKqoC,SACtB,OAAI0G,GAAiB1G,GACZ,IAAIlnC,SAAQ,SAACC,EAASC,GAC3BA,EAAO,sBAIJgnC,EAAS2R,WAAWr1C,EAAS6K,IAG/BmqC,6BAAP,SAAwBnqC,GACtBxP,KAAKi6C,2BAA2B/2C,KAAKsM,GAGrC,IAAMsqC,EAAQ95C,KAAKoM,OACdk9B,GAAuBwQ,IAAWxQ,GAAuBwQ,EAAMzR,WAClE74B,EAASsqC,EAAMzR,WAIZsR,2BAAP,SAAsBnqC,GACpBxP,KAAKk6C,4BAA4Bh3C,KAAKsM,IASjCmqC,6BAAP,SAAwBnqC,GACtBxP,KAAKm6C,0BAA0Bj3C,KAAKsM,GAGpC,IAAMsqC,EAAQ95C,KAAKoM,OACnB,IAAIk9B,GAAuBwQ,GAA3B,CAIA,IAAMzR,EAAWyR,EAAMzR,SACnBiB,GAAuBjB,IAY3B74B,EAAS64B,EAAS1jC,QAAS0jC,EAAS1jC,QAAS,GAAI0jC,KAG5CsR,kBAAP,SAAapxC,EAAuBiH,GAClC,IAAM+8B,EAAMvsC,KAAKqoC,SACjB,OAAOroC,KAAKm5C,GAAG1M,MAAMF,EAAKhkC,EAASiH,IAG9BmqC,mBAAP,SAActR,EAA6B/tB,GACzC,IAAIgM,EAMJ,OAJEA,EADsB,iBAAb+hB,EACIA,EAEAA,EAASj/B,GAEjBpJ,KAAKm5C,GAAGzM,iBAAiBpmB,EAAYtmB,KAAKqoC,SAASj/B,GAAIkR,IAGzDq/B,+BAAP,SAA0BnqC,GACxBxP,KAAKo6C,YAAYl3C,KAAKsM,IAGjBmqC,+BAAP,SAA0BnqC,GACxBxP,KAAKq6C,YAAYn3C,KAAKsM,IAGjBmqC,iCAAP,SAA4BnqC,GAC1BxP,KAAKs6C,cAAcp3C,KAAKsM,IAGnBmqC,mCAAP,SAA8BnqC,GAC5BxP,KAAKu6C,gBAAgBr3C,KAAKsM,IAG5BhQ,sBAAWm6C,4BAAX,WACE,OAAK35C,KAAKqoC,SAIHroC,KAAKqoC,SAASmS,SAHZ,oCAMJb,0BAAP,SAAqBxM,EAAe39B,GAElC,OAAIxP,KAAKqoC,SACAroC,KAAKqoC,SAASiF,cAAcH,EAAO39B,GAEnCrO,QAAQC,QAAQ,OAIpBu4C,0BAAP,WAEE,OAAI35C,KAAKqoC,SACAroC,KAAKqoC,SAASoS,gBAGhB,IAGFd,gCAAP,SAA2BnqC,GACzBxP,KAAK06C,6BAA6Bx3C,KAAKsM,IAGjCmqC,uCAAR,SAAmCtR,EAAoB1jC,EAAiB+hB,EAAeM,GACrF,IAAM8yB,EAAQ95C,KAAKoM,OACnB,IAAIk9B,GAAuBwQ,GAA3B,CAIA,IAAMa,EAAab,EAAMzR,SACrBiB,GAAuBqR,IAKvBtS,EAASj/B,KAAOuxC,EAAWvxC,IAI/BpJ,KAAK46C,wBAAwBvS,EAAU1jC,EAAS+hB,EAAOM,KAGjD2yB,oCAAR,SAAgCtR,EAAoBj8B,EAAwBujC,GAEtErG,GAAuBtpC,KAAKoM,SAK5BpM,KAAKoM,OAAOhD,KAAOgD,EAAOhD,KAI1BumC,IAAU9G,GAAgB4G,8BAC5BzvC,KAAK66C,qBAAqBxS,EAAUroC,KAAKi6C,4BAqCzCj6C,KAAK46C,wBAAwBvS,EAAUA,EAAS1jC,QAAS,KAAM,OAItDgrC,IAAU9G,GAAgB6G,4BACnC1vC,KAAK66C,qBAAqBxS,EAAUroC,KAAKk6C,+BAKrCP,iCAAR,SAA6BtR,EAAoByS,GAAjD,WACEA,EAAcz0C,SAAQ,SAACuJ,GACrB,IACEA,EAAQy4B,EAAUsH,OAClB,MAAOjuC,GACPyG,EAAKqgB,QAAQ7N,KAAK,0BAA4BjZ,QAK5Ci4C,oCAAR,SAAgCtR,EAAoB1jC,EAAiB+hB,EAAgBM,GAArF,WACEN,EAAQA,GAAS,GACjBM,EAAUA,GAAW,GAErBhnB,KAAKm6C,0BAA0B9zC,SAAS,SAACuJ,GACvC,IACEA,EAAQjL,EAAS+hB,EAAOM,EAASqhB,GACjC,MAAO3mC,GACPyG,EAAKqgB,QAAQ7N,KAAK,0BAA4BjZ,QAK5Ci4C,4BAAR,SAAwBxzC,GAAxB,WAEEnG,KAAKo6C,YAAY/zC,SAAQ,SAAC0kC,GACxB,IACEA,EAAG5kC,GACH,MAAOzE,GACPyG,EAAKqgB,QAAQ7N,KAAK,0BAA4BjZ,QAK5Ci4C,4BAAR,SAAwBxzC,GAAxB,WAEEnG,KAAKq6C,YAAYh0C,SAAQ,SAAC0kC,GACxB,IACEA,EAAG5kC,GACH,MAAOzE,GACPyG,EAAKqgB,QAAQ7N,KAAK,0BAA4BjZ,QAK5Ci4C,8BAAR,SAA0BxzC,GAA1B,WAEEnG,KAAKs6C,cAAcj0C,SAAQ,SAAC0kC,GAC1B,IACEA,EAAG5iC,EAAKkgC,SAAUliC,GAClB,MAAOzE,GACPyG,EAAKqgB,QAAQ7N,KAAK,0BAA4BjZ,QAK5Ci4C,gCAAR,SAA4BoB,EAAoBjxC,EAAoB3D,GAApE,WAEEnG,KAAKu6C,gBAAgBl0C,SAAQ,SAAC0kC,GAC5B,IACEA,EAAGgQ,EAAUjxC,EAAU3D,GACvB,MAAOzE,GACPyG,EAAKqgB,QAAQ7N,KAAK,0BAA4BjZ,QAK5Ci4C,yCAAR,SAAqC5M,EAAkB5mC,GACrD,IAAM2zC,EAAQ95C,KAAKoM,OACnB,IAAIk9B,GAAuBwQ,GAA3B,CAIA,IAAMa,EAAab,EAAMzR,SACrBiB,GAAuBqR,IAKvB5N,EAAO3jC,KAAOuxC,EAAWvxC,KAIzBjD,EAAMukC,UAAU7yB,QAAQiiC,EAAM1wC,KAAO,EACvCpJ,KAAKg7C,kBAAkB70C,GAIzBnG,KAAKi7C,gBAAgB90C,MAGfwzC,yCAAR,SAAqC5M,EAAkBmO,EAAkB/0C,GACvE,IAAM2zC,EAAQ95C,KAAKoM,OACnB,IAAIk9B,GAAuBwQ,GAA3B,CAIA,IAAMa,EAAab,EAAMzR,SACrBiB,GAAuBqR,KAKvBO,EAAO9xC,KAAOuxC,EAAWvxC,IAC3BpJ,KAAKm7C,gBAAgBh1C,GAGnB4mC,EAAO3jC,KAAOuxC,EAAWvxC,IAC3BpJ,KAAKo7C,oBAAoBrO,EAAQmO,EAAQ/0C,MAIrCwzC,8CAAR,SAA0CvtC,GACxC,IAAMmgC,EAAMvsC,KAAKqoC,SACZkE,GAIAA,EAAImB,OAILnB,EAAImB,MAAML,iBAAiBjkC,KAAOgD,EAAOhD,IAC3CpJ,KAAK06C,6BAA6Br0C,SAAQ,SAACmJ,GACzCA,EAASpD,EAAOu+B,mCCxdtB,WAAY/lC,EAAcy2C,GAGxB,GAFAr7C,KAAKwoB,QAAUxG,GAAOqsB,IAAI,gBAAkBzpC,EAAO,KACnD5E,KAAKwoB,QAAQpU,MAAM,kCAAoCxP,EAAO,UAAYy2C,EAAgB,oBACtFA,GAAiB,EACnB,MAAM,IAAIv0C,MAAM,wCAElB9G,KAAKs7C,SAAWD,EAChBr7C,KAAKu7C,WAAa,GAClBv7C,KAAK4I,MAAQhE,EAmEjB,OA7DS42C,wBAAP,SAAmBhsC,GACbxP,KAAKy7C,QACPjsC,OAASpE,GAEApL,KAAK07C,UACdlsC,EAASxP,KAAK27C,QAGhB37C,KAAKu7C,WAAWr4C,KAAKsM,IAMhBgsC,mBAAP,SAAczqC,GAGZ,GAFA/Q,KAAKwoB,QAAQpU,MAAM,cAAgBrD,EAAU,oBAAsB/Q,KAAKs7C,SAAW,IACnFt7C,KAAKs7C,WACDt7C,KAAKs7C,SAAW,EAClB,MAAM,IAAIx0C,MAAM,0BAA4B9G,KAAK4I,MAAQ,kBAAoB5I,KAAKs7C,UAGhFt7C,KAAKy7C,SACPz7C,KAAKu7C,WAAWl1C,SAAQ,SAACmJ,GACvBA,OAASpE,OAQRowC,kBAAP,SAAalsC,GACXtP,KAAK27C,OAASrsC,EACdtP,KAAKu7C,WAAWl1C,SAAQ,SAAC4lB,GACvBA,EAAc3c,OAOXksC,kBAAP,WACE,OAAIx7C,KAAK07C,WAGgB,IAAlB17C,KAAKs7C,UAMPE,oBAAP,WACE,OAAQzM,GAAiB/uC,KAAK27C,SAMzBH,qBAAP,WACE,OAAOx7C,KAAK27C,2BCpEd,WAAYC,GAJJ57C,YAA+B,GAC/BA,gBAAmE,GAIzEA,KAAK67C,YAAcD,EA0NvB,OApNSE,mBAAP,SAAc5lC,GACZlW,KAAKuP,IAAI,CAAC2G,KAML4lC,gBAAP,SAAWC,GAAX,WACEA,EAAM11C,SAAQ,SAACuJ,GACbzH,EAAKwK,QAAQ,IAAIi+B,GAAehhC,EAAS,IAAIm5B,GAAmBF,GAAgBuJ,aAO7E0J,oBAAP,SAAenM,GAEb,IAAMhrC,EAAUgrC,EAAMhrC,QAChBd,EAAOc,EAAQd,KACf4kC,EAASkH,EAAMlH,OASrB,GAAI5kC,IAASglC,GAAgBC,eACzBnkC,EAA6CikC,UAAW,CAC1D,IAAM2D,EAAMvsC,KAAKg8C,OAAOvT,EAAOr/B,IAC3BmjC,IACD5nC,EAA6CikC,UAAY2D,EAAIn3B,QAQ9DvR,IAASglC,GAAgBC,cAC1BnkC,EAA6CikC,WAC7CjkC,EAA6CgkC,WAC7ChkC,EAA6CikC,UAAUziC,QACvDxB,EAA6CgkC,UAAUxiC,QACxDxB,EAAQd,KAAOglC,GAAgBqM,SAKJ,oBAAlB+G,gBACLp4C,IAASglC,GAAgB4G,8BAC3BzvC,KAAKg8C,OAAOvT,EAAOr/B,KAClBpJ,KAAKg8C,OAAOvT,EAAOr/B,IAA8Bi/B,WAClD1jC,EAAQd,KAAOglC,GAAgBqM,SAE7BrxC,IAASglC,GAAgB6G,4BAC3B1vC,KAAKg8C,OAAOvT,EAAOr/B,MACjBpJ,KAAKg8C,OAAOvT,EAAOr/B,IAA8Bi/B,WACnD1jC,EAAQd,KAAOglC,GAAgBqM,UAOnC,IAAMgH,EAAiBl8C,KAAKm8C,2BAA2B1T,EAAQ5kC,EAAMc,GAErE,OADA3E,KAAKo8C,iBAAiBF,EAAgBv3C,GAC/Bu3C,GAMFJ,gBAAP,WACE,IAAMl6C,EAAS,GACf,IAAK,IAAM0C,KAAOtE,KAAKg8C,OACrB,GAAIh8C,KAAKg8C,OAAOn8C,eAAeyE,GAAM,CACnC,IAAMsL,EAAU5P,KAAKg8C,OAAO13C,GAC5B1C,EAAOsB,KAAK0M,GAGhB,OAAOhO,GAQFk6C,sBAAP,SAAiBl3C,GAGf,IAAK,IAAMN,KAAOtE,KAAKg8C,OACrB,GAAI13C,IAAQM,EACV,OAAO5E,KAAKg8C,OAAO13C,IAWlBw3C,sBAAP,SAAiBl3C,GAAjB,WACE,OAAO,IAAIzD,SAAW,SAACC,GACrB,IAAMi7C,EAAqB,SAAC5T,GACtBA,EAAOr/B,KAAOxE,IAGlBxD,EAAQqnC,GACRtgC,EAAK+hB,YAAYmyB,KAEnBl0C,EAAK6hB,UAAUqyB,GAGf,IAAMjwC,EAASjE,EAAKm0C,UAAU13C,GAC9B,GAAIwH,EAGF,OAFAjE,EAAK+hB,YAAYmyB,QACjBj7C,EAAQgL,OAUP0vC,sBAAP,SAAiBj6B,GAAjB,WAQE,OAPA7hB,KAAKu8C,WAAWr5C,KAAK2e,GAErBriB,OAAO2E,KAAKnE,KAAKg8C,QAAQ31C,SAAQ,SAAC/B,GAChC,IAAMsL,EAAUzH,EAAK6zC,OAAO13C,GAC5Bud,EAAQjS,EAAS,IAAIm5B,GAAmBF,GAAgBuJ,MAAM/sC,gBAGzD,WACL8C,EAAK+hB,YAAYrI,KAOdi6B,wBAAP,SAAmBj6B,GACjB,IAAMhS,EAAQ7P,KAAKu8C,WAAW1kC,QAAQgK,IACvB,IAAXhS,GACF7P,KAAKu8C,WAAW5lC,OAAO9G,EAAO,IAO1BisC,6BAAR,SAAyBrT,EAAW9jC,GAClC3E,KAAKu8C,WAAWl2C,SAAQ,SAACm2C,GACvB,IACEA,EAAS/T,EAAQ9jC,GACjB,MAAOjD,GACP,YAQEo6C,uCAAR,SAAmCrT,EAAW5kC,EAAuBc,GACnE,IAAM83C,EAAehU,EAGfiU,EACH74C,IAASglC,GAAgBC,cACxB2T,EAAYrnC,QACZqnC,EAAYrnC,OAAOjP,QAAU8iC,GAAc0T,WAC5C94C,IAASglC,GAAgBC,cACxBnkC,GACAA,EAAQgkC,WACRhkC,EAAQgkC,UAAUxiC,QAAU8iC,GAAc0T,UAIxCC,EAAgB/4C,IAASglC,GAAgBgU,OAG/C,GAFqBh5C,IAASglC,GAAgBwJ,cAAgD,IAA9BoK,EAAYnU,eAExDsU,GAAiBF,EAAmB,CAEtD,IAAMI,EAAY98C,KAAKg8C,OAAOvT,EAAOr/B,IAOrC,cANOpJ,KAAKg8C,OAAOvT,EAAOr/B,IAE1BpJ,KAAK67C,YAAYpT,GACbqU,GACFrU,EAAOsU,cAAcD,GAEhBrU,EAEP,IAAMnkC,EAAMmkC,EAAOr/B,GAUrB,OAROpJ,KAAKg8C,OAAOn8C,eAAeyE,GAI9BtE,KAAKg8C,OAAOvT,EAAOr/B,IAAI4zC,QAAQvU,IAH/BzoC,KAAK67C,YAAYpT,GACjBzoC,KAAKg8C,OAAOvT,EAAOr/B,IAAMq/B,GAMtBzoC,KAAKg8C,OAAOvT,EAAOr/B,wBC7K5B,WAAY6zC,EAAwBC,EAAuB3T,GAA3D,WAnBQvpC,aAAkBgiB,GAAOqsB,IAAI,mBAC7BruC,uBAAsC,GACtCA,wBAAoE,GACpEA,wBAAsF,GACtFA,iCAAkF,GAClFA,qBAA2B,GAejCA,KAAK4rB,QAAUqxB,EACfj9C,KAAKm9C,eAAiB,IAAIrB,IAAyC,SAACp6C,GAAM,OAAAyG,EAAKi1C,YAAY17C,MAC3F1B,KAAKq9C,aAAe,IAAIvB,IAAuC,SAACp6C,GAAM,OAAAyG,EAAKi1C,YAAY17C,MACvF1B,KAAKs9C,YAAc,IAAIxB,IAAqC,SAACp6C,GAAM,OAAAyG,EAAKi1C,YAAY17C,MACpF1B,KAAKu9C,SAAW,IAAIzB,IAA2C,SAACp6C,GAAM,OAAAyG,EAAKi1C,YAAY17C,MAGvF1B,KAAKw9C,iBAAmB,IAAIhC,GAAY,wBAAyB,CAAC,mBAAoB,iBAAkB,gBAAiB,cAAc76C,QACvIX,KAAKy9C,mBAAqB,IAAIjC,GAAY,kCAAmC,CAAC,kBAAkB76C,QAU5Fu8C,GAMFl9C,KAAK09C,aAAe,IAAIlC,GAAY,4BAA6B,CAAC,gBAAgB76C,QAClFX,KAAKw9C,iBAAiBG,aAAY,SAACC,GAC7BA,GACFz1C,EAAKu1C,aAAapuC,MAAMsuC,GAG1Bz1C,EAAKs1C,mBAAmBE,aAAY,SAACztC,GAE/BA,GACF/H,EAAKu1C,aAAapuC,MAAMY,GAG1B/H,EAAKqgB,QAAQpU,MAAM,0BAEnBjM,EAAK01C,iBACF/7C,MAAK,SAAC0nC,GAELrhC,EAAK21C,kBAAkB56C,KAAKsmC,GAC5BrhC,EAAKu1C,aAAaK,OAAO,0CAA4CvU,EAAEpgC,GAAK,QAE7E4Q,OAAM,SAACgkC,GACN71C,EAAKqgB,QAAQpU,MAAM,8BAAgC4pC,GACnD71C,EAAKu1C,aAAaK,eAIxB51C,EAAK81C,yBAIPj+C,KAAK09C,aAAe19C,KAAKw9C,iBAG3Bx9C,KAAK4rB,QAAQsyB,sBAAqB,SAACx8C,GACjCyG,EAAKg2C,0BAA0Bz8C,MAEjC1B,KAAK4rB,QAAQwyB,sBAAqB,SAAC18C,GACjCyG,EAAKk2C,0BAA0B38C,MAEjC1B,KAAK4rB,QAAQ0yB,wCAAuC,SAAC58C,GACnDyG,EAAKo2C,oCAAoC78C,MAEvC6nC,GACFA,EAAQkQ,0BAA0Bz5C,KAAKw+C,+BAA+Bv9B,KAAKjhB,OAI7EA,KAAK4rB,QAAQnjB,OAKbzI,KAAKy+C,oBAULz+C,KAAK4rB,QACF8yB,YACA58C,MAAK,SAAC68C,GACLx2C,EAAKy2C,qBAEN5kC,OAAM,SAAC1K,GAEND,QAAQuT,IAAItT,MAkjCpB,OA5pCE9P,sBAAWq/C,2BAAX,WACE,MAAmC,OAA5B7+C,KAAK4rB,QAAQkzB,4CAGtBt/C,sBAAWq/C,oCAAX,WACE,OAAO7+C,KAAK89C,uBAGd,SAA4Bh7C,GAC1B,MAAM,IAAIgE,MAAM,gDAqGX+3C,kBAAP,SAAarvC,GAAb,WACQsD,EAAU,IAAI3R,SAAyB,SAACC,EAASC,GACrD8G,EAAKu1C,aAAaC,aAChB,SAACztC,GACMA,EAGH7O,EAAO8G,EAAKu1C,aAAaqB,YAFzB39C,EAAQ+G,SAOhB,OAAO6iC,GAAQ7pC,QAAQ4d,IAAI,CAAC/e,KAAK4rB,QAAQE,QAAShZ,IAAUhR,MAAK,WAAM,OAAAqG,KAAOqH,IAMzEqvC,6BAAP,WACE,OAAO7+C,KAAKm9C,eAAej2C,OAQtB23C,4BAAP,SAAuBj6C,GACrB,OAAO5E,KAAKm9C,eAAeb,UAAU13C,IAYhCi6C,iCAAP,SACE/M,EACAkN,EACAC,EACAlyC,EACArI,EACA8K,GANF,WA6EE,OAAOw7B,GAtES,IAAI7pC,SAAsB,SAACC,EAASC,GAYlD,IAOI69C,EAhBJ,GAAI5V,GAAuBwI,GACzBzwC,EAAO,uDAGT,GAAKwoC,GAAciI,GAMnB,GAAKxI,GADWnhC,EAAKujC,gBAAgBoG,IAQrC,GAAI/C,GAAiBiQ,GACnB39C,EAAO,8CADT,CAKE69C,EADErV,GAAcmV,GACE,CAAEn7C,KAAOm7C,EAA4Bp6C,KAAM,GAAI0jC,eAAe,EAAO5nC,UAAW,IAE/Es+C,EAIrB,IAAMG,EAAwC,GAC9C,IAAKpQ,GAAiBkQ,IAAsBlV,GAAakV,GAEvD,IAAK,IAAMpvC,KAASovC,EAAmB,CACrC,IAAM/oC,EAAO+oC,EAAkBpvC,GAC/B,GAAIg6B,GAAc3zB,GAAO,CACvB,IAAMvP,EAAa,CACjB9C,KAAOqS,EACPtR,KAAM,GACN0jC,eAAe,EACf5nC,UAAW,GACX0+C,WAAY,GACZC,kBAAmB,GACnBC,sBAAuB,IAEzBH,EAAkBj8C,KAAKyD,QAEvBw4C,EAAkBj8C,KAAKgT,GAM7B/N,EAAKyjB,QACF2zB,qBAAqBzN,EACpBoN,EACAC,EACApyC,EACArI,GACD5C,MAAK,SAACmwC,GAEL9pC,EAAKi1C,YAAYnL,GACjB7wC,EAAQ6wC,MAETj4B,OAAM,SAAC1K,GACNjO,EAAOiO,WApDTjO,EAAO,kBAAoBywC,EAAmB,yBAN9CzwC,EAAO,wCA8DamO,IAOnBqvC,mCAAP,SAA8Bh7C,EAAc2L,GAA5C,WAUE,OAAOw7B,GATS,IAAI7pC,SAAsB,SAACC,EAASC,GAElD,IAAM8pC,EAAUhjC,EAAKujC,gBAAgB7nC,GACjCkrC,GAAiB5D,GACnB9pC,EAAO,kBAAoBwC,EAAO,qBAGpCsE,EAAKyjB,QAAQ4zB,uBAAuB37C,GAAM/B,MAAK,WAAM,OAAAV,EAAQ+pC,KAAU9pC,MAEjDmO,IAWnBqvC,qBAAP,SAAgB5M,EAAsBttC,EAAkB6K,EAA+BqU,GAAvF,WAwBE,OAAOmnB,GAvBS,IAAI7pC,SAAkB,SAACC,EAASC,GAG1C0tC,GADY5mC,EAAKujC,gBAAgBuG,IAEnC5wC,EAAO,kBAAoB4wC,EAAe,qBAI5C9pC,EAAKyjB,QACF6zB,iBAAiBxN,EAActtC,EAASkf,GACxC/hB,MAAK,SAAC49C,GAELv3C,EAAKm1C,YACFqC,UAAUD,GACV59C,MAAK,SAACyqC,GACLnrC,EAAQmrC,MAETvyB,OAAM,SAAC9J,GAAQ,OAAA7O,EAAO6O,SAE1B8J,OAAM,SAAC9J,GACN7O,EAAO6O,SAGWV,IAGnBqvC,wCAAP,SAAmCh9B,GACjC7hB,KAAKm9C,eAAenzB,WAAU,SAAC41B,EAAIj7C,GACjCkd,EAAQ+9B,EAAIj7C,EAAQd,UAOjBg7C,2BAAP,WACE,OAAO7+C,KAAKq9C,aAAan2C,OAQpB23C,0BAAP,SAAqBj6C,GACnB,OAAO5E,KAAKq9C,aAAaf,UAAU13C,IAa9Bi6C,kCAAP,SACEjT,EACAiU,EACArwC,GAHF,WA0BE,OAAOw7B,GAtBS,IAAI7pC,SAAa,SAACC,EAASC,GACzC,GAAIioC,GAAuBsC,GACzBvqC,EAAO,+BADT,CAKA,GfjXkB,iBADC+lC,EekXDwE,IfjXoB,OAARxE,EekX5BwE,EAAaA,EAAWkU,eACnB,IAAKjW,GAAc+B,GAExB,YADAvqC,EAAO,qEfrXU+lC,EeyXnBj/B,EAAKyjB,QACFm0B,sBAAsBnU,EAAYiU,GAClC/9C,MAAK,SAACgB,GACL1B,EAAQ0B,MAETkX,OAAM,SAAC9J,GACN7O,EAAO6O,UAGWV,IASnBqvC,oCAAP,SAA+BjT,EAAoBp8B,GAAnD,WAqBE,OAAOw7B,GApBS,IAAI7pC,SAAa,SAACC,EAASC,GACrCioC,GAAuBsC,GACzBvqC,EAAO,2BAIJwoC,GAAc+B,GAKnBzjC,EAAKyjB,QACFo0B,wBAAwBpU,GACxB9pC,MAAK,SAACgB,GACL1B,EAAQ0B,MAETkX,OAAM,SAAC9J,GACN7O,EAAO6O,MAVT7O,EAAO,oCAaamO,IAQnBqvC,0BAAP,SAAqB5M,GACnB,IAAI1F,EAAMvsC,KAAKs9C,YAAYp2C,MAE3B,GADAqlC,EAAMA,EAAI3iC,QAAO,SAACrG,GAAM,OAAAA,EAAEgoC,aACrB0G,EACH,OAAO1F,EAET,IAAIpsB,EAAa8xB,EACjB,GAAIpI,GAAcoI,GAChB9xB,EAAQ,CAAC8xB,QACJ,GAAIA,aAAwBnK,GACjC3nB,EAAQ,CAAC8xB,EAAartC,WACjB,KAAIqtC,aAAwBtyC,OAGjC,MAAM,IAAImH,MAAM,2CAA6CmrC,GAG/D,OAAO1F,EAAI3iC,QAAO,SAACg2C,GACjB,IAAM/7C,EAAO+7C,EAAG/7C,KAChB,gBfvZkBo8C,EAAYC,GAClC,IAAK,IAAIrwC,EAAQ,EAAGA,EAAQowC,EAAMt/C,OAAQkP,IACxC,GAAIqwC,EAAUD,EAAMpwC,GAAQA,GAC1B,OAAO,EAGX,OAAO,EeiZIswC,CAAUhgC,GAAO,SAAC7f,GACvB,OAAOuD,EAAKuF,KAAO9I,EAAE8I,UAQpBy1C,4BAAP,SAAuBz1C,GACrB,OAAOpJ,KAAKs9C,YAAYhB,UAAUlzC,IAS7By1C,2BAAP,SAAsBpL,EAA2B7H,GAAjD,WA0EE,OAzEgB,IAAIzqC,SAAwB,SAACC,EAASC,GAGpD,IAAMozC,EAAmBtsC,EAAKyjB,QAAQw0B,sBAOtC,GANIrR,GAAiB0E,KACnBA,EAAmBgB,EAAiBhB,kBAElC1E,GAAiBnD,KACnBA,EAAa6I,EAAiBC,oBAE5BpL,GAAuBsC,GACzB,MAAM,IAAI9kC,MAAM,yCAGlB,IAAMwf,EAAamuB,GAAoBA,EAAiBnuB,WAQxD,GAAIgjB,GAAuBmK,GACzBtrC,EAAKqgB,QAAQpU,MAAM,iCAAmCw3B,EAAa,YAAc6I,EAAiBG,mBAAqB,YAAcH,EAAiBE,0BAA4B,KAElLxsC,EAAKyjB,QAAQy0B,eAAezU,EAAY6I,EAAiBG,mBAAoBH,EAAiBE,2BAC3F7yC,KAAKqG,EAAKo1C,SAASoC,UAAU1+B,KAAK9Y,EAAKo1C,WACvCz7C,MAAK,SAAC0nC,GACL,OAAIljB,EACKne,EAAKm1C,YAAYqC,UAAUr5B,GAAYxkB,MAAK,SAACM,GAAW,OAAAonC,KAExDA,KAGV1nC,MAAK,SAAC0nC,GACLpoC,EAAQooC,MAETxvB,OAAM,SAAC9J,GACN/H,EAAKqgB,QAAQlZ,MAAMY,UAGlB,CAEL/H,EAAKqgB,QAAQpU,MAAM,8BAAgCq/B,EAAmB,eAAiB7H,EAAa,KAGpG,IAAM0U,EAAgBn4C,EAAKo1C,SAASjB,UAAU7I,GAC9C,IAAKnK,GAAuBgX,GAG1B,OAFAn4C,EAAKqgB,QAAQpU,MAAM,mBAAqBq/B,EAAmB,iDAC3DryC,EAAQk/C,GAKV,IAAMC,EAAqB,SAACh9C,EAAaimC,EAAmB9nC,GACtD+xC,IAAqBjK,EAAEpgC,KACrB1H,IAAMmnC,GAAgB4G,+BAEpBV,GADavF,EAAEnB,WAEjBhnC,EAAO,sBAET8G,EAAKqgB,QAAQlH,MAAM,4BAA8BmyB,EAAmB,KACpEryC,EAAQooC,GACRrhC,EAAKq4C,wBAAwBD,MAKnCp4C,EAAKkkC,sBAAsBkU,GAC3Bp4C,EAAKqgB,QAAQlH,MAAM,oCAAsCmyB,EAAmB,KAC5EtrC,EAAKyjB,QAAQiyB,eAAejS,EAAY6H,QAWvCoL,sCAAP,SAAiCh9B,GAC/B7hB,KAAKq9C,aAAarzB,WAAU,SAACy2B,EAAI97C,GAC/Bkd,EAAQ4+B,EAAI97C,EAAQd,UASjBg7C,oCAAP,SAA+Bh9B,GAA/B,WACE,OAAO7hB,KAAKs9C,YAAYtzB,WAAU,SAACuiB,EAAK5nC,GACtC,GAAIA,EAAQd,OAASglC,GAAgBC,aAAc,CACjD,IAAMlpC,EAAK+E,EACXkd,EAAQ0qB,EAAK3sC,EAAE+oC,UAAW/oC,EAAEgpC,WAI9B,GAAIjkC,EAAQd,OAASglC,GAAgBwJ,SAClC1tC,EAAQd,OAASglC,GAAgBC,cAC/BnkC,EAA6CgkC,UAAUp+B,aAAe0+B,GAAc0T,UACvF,IAAqB,QAAAx1C,EAAAgB,EAAKo1C,SAASr2C,MAAd8I,WAAAA,IAAqB,CAArC,IAAM0wC,OACLA,EAAOrY,UAAYqY,EAAOrY,SAASj/B,KAAOmjC,EAAInjC,IAChDjB,EAAKo1C,SAAS5qC,QAAQ,IAAIi+B,GAA4B8P,EAAQ,IAAI3X,GAAmBF,GAAgB6G,mCAYxGmP,kCAAP,SAA6Bh9B,GAC3B,IAAM8+B,EAAkB,SAACv0C,EAAwBzH,GAC/C,IAAI+jC,EAAY/jC,EAAQd,KACpB6kC,IAAcG,GAAgBuJ,QAEhC1J,EAAY,UAEd7mB,EAAQzV,EAAOi8B,SAAUj8B,EAAQs8B,IAGnC,OADA1oC,KAAK4gD,gBAAgB19C,KAAK,CAAC2e,EAAS8+B,IAC7B3gD,KAAKu9C,SAASvzB,UAAU22B,IAG1B9B,oCAAP,SAA+Bh9B,GAC7B,IAAMg/B,EAAQ7gD,KAAK4gD,gBAAgBvvB,MAAK,SAAC2M,GAAS,OAAAA,EAAK,KAAOnc,KAC1Dg/B,IACF7gD,KAAK4gD,gBAAgBjqC,OAAO3W,KAAK4gD,gBAAgB/oC,QAAQgpC,GAAQ,GACjE7gD,KAAKu9C,SAASrzB,YAAY22B,EAAM,MAY7BhC,yBAAP,SAAoBxW,EAAoByY,EAA4DtxC,GAApG,WA0DE,OAAOw7B,GAzDS,IAAI7pC,SAAwB,SAACC,EAASC,GAKpD,IAAI2wC,EAaA+O,EACJ,GAlBIzX,GAAuBwX,IACzBz/C,EAAO,4BAiBJioC,IAZH0I,EADEnI,GAAciX,GACG,CAAEj9C,KAAOi9C,EAAsCl8C,KAAM,GAAI0jC,eAAe,EAAO5nC,UAAW,IACpGogD,aAAqC3Y,GAC3B,CACjBtkC,KAAOi9C,EAAkCj9C,MAAQi9C,EAA0B13C,GAC3ExE,KAAMk8C,EAA0Bl8C,MAASk8C,EAAkCj9C,MAAQi9C,EAA0B13C,GAC7Gk/B,eAAe,GAGGwY,GAIuB1B,YAE3C,GAAgC,iBADhC2B,EAAmB/O,EAAiBoN,aAG7B9V,GADCC,EAAUphC,EAAKigC,WAAW,CAAEvkC,KAAMk9C,MACAxX,EAAQ5oC,OAAS,IACvDqxC,EAAiBoN,WAAa7V,EAAQ,GAAGngC,SAEtC,GAAKkgC,GAAuByX,EAAiBl9C,MAKxCylC,GAAuByX,EAAiBz8B,YAClD0tB,EAAiBoN,WAAa2B,EAAiBz8B,cANU,CACzD,IAAMilB,GACDD,GADCC,EAAUphC,EAAKigC,WAAW,CAAEvkC,KAAMk9C,EAAiBl9C,SACjB0lC,EAAQ5oC,OAAS,IACvDqxC,EAAiBoN,WAAa7V,EAAQ,GAAGngC,IAO/CjB,EAAKyjB,QAAQ2c,aAAaF,GAAYA,EAASj/B,GAAI4oC,GAChDlwC,MAAK,SAACk/C,GAEL74C,EAAKqgB,QAAQpU,MAAM,qDAAuD4sC,GAC1E,IAAMn/B,EAAU,SAACzV,EAAwBzH,GAEnCyH,EAAOhD,KAAO43C,GAAS3Y,IAAYj8B,EAAOi8B,WAC5ClgC,EAAKqgB,QAAQpU,MAAM,6BAA+B4sC,GAClD5/C,EAAQgL,GACRjE,EAAKo1C,SAASrzB,YAAYrI,KAK9B1Z,EAAKo1C,SAASvzB,UAAUnI,MAEzB7H,OAAM,SAAC9J,GACN7O,EAAO6O,SAIWV,IAWnBqvC,iCAAP,SAA4BxW,EAAoB4Y,EAAuDnyB,EAAkBtf,GAAzH,WAqEE,OAAOw7B,GApES,IAAI7pC,SAA0B,SAACC,EAASC,GAClDioC,GAAuBjB,IACzBhnC,EAAO,yBAELioC,GAAuB2X,IACzB5/C,EAAO,oCAGJ1B,MAAMmG,QAAQm7C,IACjB5/C,EAAO,uCAELioC,GAAuBxa,KACzBA,EAAU,KAGZ,IAAMoyB,EAAsC,GAC5CD,EAAoB56C,SAAQ,SAACuJ,GAC3B,IAAIoiC,EAOA+O,EACJ,IAAKzX,IANH0I,EADEnI,GAAcj6B,GACG,CAAE/L,KAAO+L,EAAoBhL,KAAM,GAAI0jC,eAAe,EAAO5nC,UAAW,IAEvEkP,GAIuBwvC,YAG3C,GAAK9V,IADLyX,EAAmB/O,EAAiBoN,YACSv7C,OAEtC,IAAKylC,GAAuByX,EAAiBz8B,UAAW,CAC7D,IAAMilB,EAAUphC,EAAKigC,WAAW,CAAEh/B,GAAI23C,EAAiBz8B,YAClDglB,GAAuBC,IAAYA,EAAQ5oC,OAAS,IACvDqxC,EAAiBoN,WAAa7V,EAAQ,GAAG1lC,KAAKe,KAC9CotC,EAAiBmP,aAAc,SALjCnP,EAAiBoN,WAAa2B,EAAiBl9C,KAUnDq9C,EAAgBh+C,KAAK8uC,MAGvB7pC,EAAKyjB,QAAQkgB,qBAAqBzD,EAASj/B,GAAI83C,EAAiBpyB,GAC7DhtB,MAAK,SAACk/C,GACL,IAAMI,EAAoC,GACpCC,EAA2B,GAC3Bx/B,EAAU,SAASzV,EAAwBzH,GAE3Cq8C,EAAInpC,QAAQzL,EAAOhD,KAAO,GAAKi4C,EAAexpC,QAAQzL,EAAOhD,IAAM,GAAKgD,EAAOi8B,WACjFroC,KAAKwoB,QAAQpU,MAAM,6BAA+B4sC,GAClDI,EAAgBl+C,KAAKkJ,GACrBi1C,EAAen+C,KAAKkJ,EAAOhD,IAEvBg4C,EAAgBzgD,SAAWqgD,EAAIrgD,SACjCS,EAAQggD,GACRphD,KAAKu9C,SAASrzB,YAAYrI,MAG9BZ,KAAK9Y,GAGPA,EAAKo1C,SAASvzB,UAAUnI,MAEzB7H,OAAM,SAAC9J,GACN7O,EAAO6O,SAIWV,IAWnBqvC,gCAAP,SAA2BxW,EAAoBj8B,EAAwBoD,GACrE,IAAMioC,EAAWz3C,KAAK4rB,QAAQ2oB,aAAalM,EAASj/B,GAAIgD,EAAOhD,IAC5DtH,MAAK,WAAM,OAAAsK,KAEd,OADA4+B,GAAQyM,EAAUjoC,GACXioC,GAWFoH,oCAAP,SAA+BxW,EAAoBj8B,EAAwBoD,GACzE,IAAMioC,EAAWz3C,KAAK4rB,QAAQ01B,cAAcjZ,EAASj/B,GAAIgD,EAAOhD,IAC7DtH,MAAK,WAAM,OAAAsK,KAEd,OADA4+B,GAAQyM,EAAUjoC,GACXioC,GAUFoH,+BAAP,SAA0BxW,EAAoB1jC,EAAiB6K,GAA/D,WAmBE,OAAOw7B,GAlBS,IAAI7pC,SAAkB,SAACC,EAASC,GAC1CioC,GAAuBjB,IACzBhnC,EAAO,4BAMT8G,EAAKyjB,QACFqgB,sBAAsB5D,EAAU1jC,GAAS,GACzC7C,MAAK,SAACM,GACLhB,EAAQinC,MAETruB,OAAM,SAAC9J,GACN7O,EAAO6O,SAIWV,IAYnBqvC,kCAAP,SAA6BxW,EAAoB1jC,EAAc6K,GAA/D,WA2BE,OAAOw7B,GA1BS,IAAI7pC,SAAkB,SAACC,EAASC,GAC1CioC,GAAuBjB,IACzBhnC,EAAO,4BAGT,IAAMkyC,EAAc,GACpB,IAAK,IAAMjvC,KAAOK,EACZA,EAAQ9E,eAAeyE,IAAyB,OAAjBK,EAAQL,IACzCivC,EAAYrwC,KAAKoB,GAGrB,IAAyB,QAAAkvC,IAAAxjC,WAAAA,IAAa,CAAjC,IAAMuxC,cACF58C,EAAQ48C,GAGjBp5C,EAAKyjB,QACFqgB,sBAAsB5D,EAAU1jC,GAAS,EAAO4uC,GAChDzxC,MAAK,SAACM,GAELhB,EAAQinC,MAETruB,OAAM,SAAC9J,GACN7O,EAAO6O,SAIWV,IAUnBqvC,4CAAP,SAAuCh9B,GACrC7hB,KAAKs9C,YAAYtzB,WAAU,SAACuiB,EAAK5nC,GAC/B,GAAIA,EAAQd,OAASglC,GAAgBG,sBAAuB,CAC1D,IAAM+Q,EAAgBp1C,EACtBkd,EAAQ0qB,EAAKwN,EAAcp1C,QAASo1C,EAAchzB,QAASgzB,EAAc/yB,cASxE63B,yBAAP,SAAoBxW,EAAoB74B,GAEtC,OAAOw7B,GADShrC,KAAK4rB,QAAQ4gB,aAAanE,GAClB74B,IAQnBqvC,uBAAP,SAAkBj1C,GAChB,OAAImlC,GAAiBnlC,GACZ5J,KAAKu9C,SAASr2C,MAGlB6nC,GAAiBnlC,EAAOR,IAIVpJ,KAAKu9C,SAASr2C,MAEf0C,QAAO,SAAC4/B,GAExB,IAAKuF,GAAiBnlC,EAAO/F,OAAS2lC,EAAE3lC,KAAKuF,KAAOQ,EAAO/F,KACzD,OAAO,EAGT,IAAKkrC,GAAiBnlC,EAAOhF,OAAS4kC,EAAE5kC,OAASgF,EAAOhF,KACtD,OAAO,EAGT,IAAKmqC,GAAiBnlC,EAAO0c,YAAa,CACxC,GAAIgjB,GAAuBE,EAAEnB,UAC3B,OAAO,EAGT,GAAImB,EAAEnB,SAASj/B,KAAOQ,EAAO0c,WAC3B,OAAO,EAIX,OAAO,KAzBA,CAACtmB,KAAKu9C,SAASjB,UAAU1yC,EAAOR,MA6BpCy1C,4BAAP,SAAuBz1C,GACrB,OAAOpJ,KAAK4rB,QAAQijB,gBAAgBzlC,IAG/By1C,4BAAP,SAAuBz1C,EAAYimC,EAAsB7/B,GAAzD,WAOE,OAAOw7B,GANS,IAAI7pC,SAAa,SAACC,EAASC,GACzC8G,EAAKyjB,QAAQ0jB,gBAAgBlmC,EAAIimC,GAC9BvtC,MAAK,WAAM,OAAAV,OACX4Y,OAAM,SAAC9J,GAAQ,OAAA7O,EAAO6O,SAGHV,IAGnBqvC,wBAAP,SAAmBz1C,GACjB,OAAOpJ,KAAK4rB,QAAQ2jB,YAAYnmC,IAG3By1C,2BAAP,SAAsBz1C,EAAY+lC,GAChC,OAAOnvC,KAAK4rB,QAAQwjB,eAAehmC,EAAI+lC,IAGlC0P,gCAAP,SAA2Bz1C,EAAYgsC,GACrC,OAAOp1C,KAAK4rB,QAAQsjB,oBAAoB9lC,EAAIgsC,IAGvCyJ,kBAAP,SAAaxW,EAAoBgN,EAA4B7lC,GAA7D,WAkBE,OAAOw7B,GAjBS,IAAI7pC,SAAa,SAACC,EAASC,GACpCgnC,GACHhnC,EAAO,4BAGT8G,EAAKyjB,QAAQ41B,cAAcnZ,EAASj/B,GAAIisC,GACrCvzC,MAAK,SAACwkB,GACLne,EAAKm1C,YACFqC,UAAUr5B,GACVxkB,MAAK,SAACyqC,GACLnrC,EAAQmrC,MAETvyB,OAAM,SAAC9J,GAAQ,OAAA7O,EAAO6O,SAE1B8J,OAAM,SAAC9J,GAAQ,OAAA7O,EAAO6O,SAGHV,IAGnBqvC,6BAAP,SAAwB1gC,EAAcuN,EAAYpR,EAAc9K,GAAhE,WAoCE,OAlCA8K,EAAMA,GAAO,GAkCN0wB,GAhCS,IAAI7pC,SAAoC,SAACC,EAASC,GAGhE,GADqB8G,EAAKm1C,YAAYhB,UAAUn+B,GAChD,CAMA,GADmBhW,EAAKm1C,YAAYhB,UAAU5wB,GAM9C,OAAOvjB,EAAKyjB,QAAQ8gB,iBAAiBvuB,EAAMuN,EAAIpR,GAC5CxY,MAAK,SAACgQ,GACL,IAAM86B,EAAW96B,EAAK4Z,GAChBvlB,EAAQ2L,EAAK84B,WACbqC,EAAYn7B,EAAK2vC,YAEvBt5C,EAAKm1C,YAAYqC,UAAU/S,GAAU9qC,MAAK,SAACyqC,GACzCA,EAAImV,mBAAmBzU,GACvB,IAAM0U,EAAepV,EAAIiO,SAAS5wC,QAAO,SAACg4C,GAAM,OAAAA,EAAEnX,UAAYtkC,EAAMskC,WAAS,GAE7ErpC,EAAQugD,SAGX3nC,OAAM,SAAC9J,GACN7O,EAAO6O,MAlBT7O,EAAO,iCAAmCqqB,QAN1CrqB,EAAO,iCAAmC8c,MA4BtB3O,IAGnBqvC,6BAAP,SACEv4B,EACAskB,EACAp7B,GAHF,WA8BE,OAAOw7B,GA1BS,IAAI7pC,SAAkB,SAACC,EAASC,GAC9C,OAAO8G,EAAKyjB,QAAQif,iBAAiBvkB,EAAYskB,GAC9C9oC,MAAiB,WAMhBqG,EAAKm1C,YACFqC,eALsBv0C,GAMtBtJ,MAAK,SAACo5C,GACLA,EAAOwG,wBALct2C,GAOrBjD,EAAKm1C,YACFqC,eATkBv0C,GAUlBtJ,MAAK,SAACirC,GACL3rC,EAAQ2rC,SAGb/yB,OAAM,SAAC9J,GAAQ,OAAA7O,EAAO6O,SAE1B8J,OAAM,SAAC9J,GACN7O,EAAO6O,SAIWV,IAGnBqvC,wCAAP,SAAmCrvC,GACjCxP,KAAK6hD,mBAAmB3+C,KAAKsM,IAGxBqvC,wCAAP,SAAmCrvC,GACjCxP,KAAK8hD,mBAAmB5+C,KAAKsM,IAGxBqvC,+CAAP,SAA0CrvC,GACxCxP,KAAK+hD,4BAA4B7+C,KAAKsM,IAIhCqvC,wBAAR,SAAoBpW,GAClBA,EAAOV,SAAW/nC,MAGZ6+C,4BAAR,WAAA,WACE7+C,KAAKwoB,QAAQpU,MAAM,2BAMnBpU,KAAK4rB,QAAQo2B,mBACVlgD,MAAK,SAAC89C,GACLz3C,EAAKg1C,eAAe5tC,IAAIqwC,GACxBz3C,EAAKq1C,iBAAiBO,OAAO,oBAE9B/jC,OAAM,SAAC1K,GACNnH,EAAKqgB,QAAQlZ,MAAMA,GACnBnH,EAAKq1C,iBAAiBluC,MAAM,sEAAwEA,MAGxGtP,KAAK4rB,QAAQq2B,iBACVngD,MAAK,SAAC2+C,GACLt4C,EAAKk1C,aAAa9tC,IAAIkxC,GACtBt4C,EAAKq1C,iBAAiBO,OAAO,uBAE9B/jC,OAAM,SAAC1K,GACNnH,EAAKqgB,QAAQlZ,MAAMA,GACnBnH,EAAKq1C,iBAAiBluC,MAAM,oEAAsEA,MAGtGtP,KAAK4rB,QAAQs2B,gBACVpgD,MAAK,SAACqgD,GACLh6C,EAAKm1C,YAAY/tC,IAAI4yC,GACrBh6C,EAAKq1C,iBAAiBO,OAAO,qBAE9B/jC,OAAM,SAAC1K,GACNnH,EAAKqgB,QAAQlZ,MAAMA,GACnBnH,EAAKq1C,iBAAiBluC,MAAM,0EAA4EA,MAG5GtP,KAAK4rB,QAAQw2B,qBACVtgD,MAAK,SAAC68C,GACLx2C,EAAKo1C,SAAShuC,IAAIovC,GAClBx2C,EAAKq1C,iBAAiBO,OAAO,kBAE9B/jC,OAAM,SAAC1K,GACNnH,EAAKqgB,QAAQlZ,MAAMA,GACnBnH,EAAKq1C,iBAAiBluC,MAAM,wEAA0EA,OAIpGuvC,8BAAR,WAAA,WACE7+C,KAAKwoB,QAAQpU,MAAM,yBAMnBpU,KAAK4rB,QAAQy2B,4BAA2B,SAAC1S,GACvCxnC,EAAKg1C,eAAexqC,QAAQg9B,MAG9B3vC,KAAK4rB,QAAQ02B,0BAAyB,SAAC3S,GACrCxnC,EAAKk1C,aAAa1qC,QAAQg9B,MAG5B3vC,KAAK4rB,QAAQ22B,wBAAuB,SAAC5S,GACnCxnC,EAAKo1C,SAAS5qC,QAAQg9B,MAGxB3vC,KAAK4rB,QAAQ42B,wBAAuB,SAAC7S,GACjCxnC,EAAKm1C,YAAY3qC,QAAQg9B,OAIvBkP,sCAAR,SAAkC/sC,GAAlC,WAEQ86B,EAAW96B,EAAK4Z,GAChBkf,EAAa94B,EAAK84B,WAClB6W,EAAc3vC,EAAK2vC,YAEzBzhD,KAAKs9C,YAAYqC,UAAU/S,GAAU9qC,MAAK,SAACyqC,GACzCA,EAAImV,mBAAmBD,GACvB,IAAMgB,EAA4BlW,EAAIiO,SAAS5wC,QAAO,SAACg4C,GAAM,OAAAA,EAAEnX,UAAYG,EAAWH,WAAS,GAE/FtiC,EAAK05C,mBAAmBx7C,SAAQ,SAACmJ,GAC/B,IACEA,EAAS+8B,EAAKkW,GACd,MAAOvyC,GACP,eAOA2uC,sCAAR,SAAkC/sC,GAAlC,WACQ+6B,EAAW/6B,EAAK4wC,cAChB9V,EAAW96B,EAAK6wC,cAChBlB,EAAc3vC,EAAK2vC,YACnB7W,EAAa94B,EAAK84B,WAExB5qC,KAAKs9C,YAAYqC,UAAU9S,GAAU/qC,MAAK,SAACo5C,GAEzCA,EAAOwG,mBAAmBD,GAE1Bt5C,EAAKm1C,YAAYqC,UAAU/S,GAAU9qC,MAAK,SAACirC,GAEzC5kC,EAAK25C,mBAAmBz7C,SAAQ,SAACmJ,GAC/B,IACEA,EAASu9B,EAAQmO,EAAQtQ,GACzB,MAAO16B,GACP,kBAOF2uC,gDAAR,SAA4C/sC,GAC1C,IAAM1I,EAAK0I,EAAK1I,GACVq4C,EAAc3vC,EAAK2vC,YAEnBlV,EAAMvsC,KAAKs9C,YAAYhB,UAAUlzC,GACnCmjC,GACFA,EAAImV,mBAAmBD,IAInB5C,+BAAR,WAAA,WACE7+C,KAAK4rB,QAAQg3B,yBACV9gD,MAAK,SAACgd,GAGDA,GACFtf,OAAO2E,KAAK2a,GAAKzY,SAAQ,SAAC/B,GACxB,IAAMo7C,EAAQp7C,EACRm9C,EAAc3iC,EAAIxa,GAElBioC,EAAMpkC,EAAKm1C,YAAYhB,UAAUoD,GACnCnT,GACFA,EAAImV,mBAAmBD,MAK7Bt5C,EAAKs1C,mBAAmBM,OAAO,mCAEhC/jC,OAAM,SAAC9J,GACN/H,EAAKs1C,mBAAmBnuC,MAAM,+BAAiCY,OAI7D2uC,2CAAR,SAAuC1U,GACrC,GAAKA,EAAI7jB,WAAT,CAIA,IAAMimB,EAAMvsC,KAAKs9C,YAAYhB,UAAUnS,EAAI7jB,YACtCimB,GAKAA,EAAImB,OAILnB,EAAImB,MAAML,iBAAiBjkC,KAAO+gC,EAAI/gC,IAI1CpJ,KAAK+hD,4BAA4B17C,SAAQ,SAACmJ,GACxC,IACEA,EAAS+8B,EAAKpC,EAAIQ,YAClB,MAAOjpC,GACP,gCC1qCN,WAAY2oC,EAA0BwY,GACpC7iD,KAAKm5C,GAAK9O,EACVrqC,KAAK8iD,IAAMD,EAEX7iD,KAAK+iD,cAAgB,CACnB77C,IAAKlH,KAAKgjD,yBAAyB/hC,KAAKjhB,MACxC+2B,SAAU/2B,KAAKm5C,GAAGoG,qBAAqBt+B,KAAKjhB,KAAKm5C,IACjDxjB,WAAY31B,KAAKm5C,GAAGqG,uBAAuBv+B,KAAKjhB,KAAKm5C,IACrDnvB,UAAWhqB,KAAKm5C,GAAG8J,4BAA4BhiC,KAAKjhB,KAAKm5C,IACzDjvB,iBAAa9e,EACb48B,SAAUhoC,KAAKm5C,GAAGnR,SAAS/mB,KAAKjhB,KAAKm5C,KAGvCn5C,KAAK6rC,YAAc,CACjB3kC,IAAKlH,KAAKkjD,uBAAuBjiC,KAAKjhB,MACtCmjD,gBAAiBnjD,KAAKm5C,GAAG4G,sBAAsB9+B,KAAKjhB,KAAKm5C,IACzDiK,kBAAmBpjD,KAAKm5C,GAAG6G,wBAAwB/+B,KAAKjhB,KAAKm5C,IAC7DnvB,UAAWhqB,KAAKm5C,GAAGkK,0BAA0BpiC,KAAKjhB,KAAKm5C,IACvDjvB,iBAAa9e,GAGfpL,KAAKupC,QAAU,CACbriC,IAAKlH,KAAKm5C,GAAG/Q,WAAWnnB,KAAKjhB,KAAKm5C,IAClCnvB,UAAWhqB,KAAKm5C,GAAG9M,sBAAsBprB,KAAKjhB,KAAKm5C,IACnDmK,SAAUtjD,KAAKm5C,GAAG0E,eAAe58B,KAAKjhB,KAAKm5C,IAC3CjvB,iBAAa9e,EACbjL,OAAQH,KAAKm5C,GAAG5Q,aAAatnB,KAAKjhB,KAAKm5C,KAGzCn5C,KAAKujD,UAAY,CACfr8C,IAAKlH,KAAKm5C,GAAG+I,cAAcjhC,KAAKjhB,KAAKm5C,IACrCnvB,UAAWhqB,KAAKm5C,GAAGjN,wBAAwBjrB,KAAKjhB,KAAKm5C,IACrDjvB,iBAAa9e,GA6BnB,OAzBSo4C,uBAAP,SAAkBh0C,GAChBxP,KAAKm5C,GAAGxM,4BAA4Bn9B,IAG/Bg0C,uBAAP,SAAkBh0C,GAChBxP,KAAKm5C,GAAGrM,4BAA4Bt9B,IAG/Bg0C,wCAAP,SAAmCh0C,GACjCxP,KAAKm5C,GAAGsK,mCAAmCj0C,IAGrCg0C,qCAAR,SAAiC5+C,GAC/B,OAAImqC,GAAiBnqC,GACZ5E,KAAKm5C,GAAG6I,mBAEVhiD,KAAKm5C,GAAGzN,gBAAgB9mC,IAGzB4+C,mCAAR,SAA+B5+C,GAC7B,OAAImqC,GAAiBnqC,GACZ5E,KAAKm5C,GAAG8I,iBAEVjiD,KAAKm5C,GAAGrK,cAAclqC,uBCzD/B,WAAYylC,EAA0BwY,GACpC7iD,KAAK0jD,KAAOrZ,EACZrqC,KAAK8iD,IAAMD,EACX7iD,KAAK+e,IAAM,IAAIykC,GAAsBnZ,EAASwY,GAkFlD,OAzESc,kBAAP,SAAan0C,GAAb,WAUE,OAAOw7B,GATS,IAAI7pC,SAAa,SAACC,EAASC,GACzC8G,EAAKu7C,KAAK53B,QACPhqB,MAAK,WACJV,EAAQ+G,MAET6R,OAAM,SAAC9J,GACN7O,EAAO6O,SAGWV,IAQ1BhQ,sBAAWmkD,sBAAX,WACE,OAAO3jD,KAAK8iD,qCAUdtjD,sBAAWmkD,yBAAX,WACE,YAA2Bv4C,IAApBpL,KAAK8iD,IAAI12C,wCAQlB5M,sBAAWmkD,8BAAX,WACE,OAAO3jD,KAAK4jD,YAA+Bx4C,IAAtBpL,KAAK8iD,IAAIza,0CAYhC7oC,sBAAWmkD,uBAAX,WACE,GAAK3jD,KAAK4jD,MAIV,OAAK5jD,KAAK6jD,WAKH7jD,KAAK8iD,IAAIza,SAASjC,IAHhB,IAAI+C,GAAY,uCAWpBwa,oCAAP,WAEE,MAAO,uBClCP,WAAY52C,GAAZ,IAeQkwC,SAdJ,IAAKlwC,EACD,MAAM,IAAIjG,MAAM,0BAiBpB,GAbKioC,GAAiBhiC,EAAO+2C,YACzB9hC,GAAO4rB,MAAQ7gC,EAAO+2C,UAGrBxa,GAAuBv8B,EAAO0D,UAC/BuR,GAAOwrB,WAAazgC,EAAO0D,QAK/BzQ,KAAK+jD,yBAAqD,IAA1Bh3C,EAAOi3C,eACvChkD,KAAKikD,0BAA4BC,EAAeC,8BAA8Bp3C,EAAOD,YAEjF9M,KAAK+jD,yBACL,MAAM,IAAIj9C,MAAM,qBACb,IAAI9G,KAAKikD,0BAGZ,MAAM,IAAIn9C,MAAM,wDAGpB,KALIm2C,EAAS,IAAIh1B,GAAUlb,EAAOD,WAAyCC,EAAO0D,OAAQ1D,EAAO4Y,SAAU5Y,IAMvG,MAAM,IAAIjG,MAAM,iEAGpBqiC,GAAYE,IAAMt8B,EAAOq5B,IACzB,IAAMge,EAAkB,IAAIvF,GAAgB5B,GAASlwC,EAAOs3C,oBAAqBt3C,EAAOw8B,SAClFsZ,EAAK,IAAIyB,GAAGF,EAAiBr3C,EAAOw8B,SAC1CvpC,KAAKukD,KAAO,IAAIZ,GAAYS,EAAiBvB,GAC7C7iD,KAAKwkD,cAAgBJ,EAAgBt4B,QAAQhqB,MAAK,SAACM,GAAM,OAAA+F,KAcjE,OAlEkB+7C,gCAAd,SAA4Cp3C,GACxC,OAAsC,IAA/BA,EAAWmO,iBAQtBzb,sBAAI0kD,uBAAJ,WACI,OAAOlkD,KAAKukD,UAGhB,SAAQhjD,GACJvB,KAAKukD,KAAOhjD,mCAyChB/B,sBAAW0kD,2CAAX,WACI,OAAOlkD,KAAK+jD,0DAGhBvkD,sBAAW0kD,4CAAX,WACI,OAAOlkD,KAAKikD,2DAGTC,kBAAP,SAAa10C,GACT,OAAOw7B,GAAQhrC,KAAKwkD,cAAeh1C,SCvI3C,SAASX,GAAetG,GACpB,GAAIA,GAAWA,EAAQuG,eACiB,mBAA1BvG,EAAQuG,eACW,QAA1BvG,EAAQuG,eACkB,WAA1BvG,EAAQuG,eACkB,UAA1BvG,EAAQuG,cACX,MAAM,IAAIhI,MAAM,mIAA2IyB,EAAQuG,cAAgB,eAEvL,IAAIC,EAAoBxG,GAA4C,mBAA1BA,EAAQuG,eAAgCvG,EAAQuG,cACtFE,EAAY,GA4ChB,SAASC,EAAaC,EAAmB5K,GACrC,IAAI6K,EAAWD,aAA6BpI,MAAQoI,EAAoB,IAAIpI,MAAMoI,GAClF,GAAIH,EACAA,EAAkBI,OADtB,CAIA,IAAI/I,EAAM,qDAAwD9B,EAAM,aAAgB6K,EAASC,MACjG,GAAI7G,EACA,OAAQA,EAAQuG,eACZ,IAAK,MACD,OAAOO,QAAQC,MAAMlJ,GACzB,IAAK,SACD,OACJ,IAAK,QACD,MAAM,IAAIU,MAAMV,GAG5BiJ,QAAQC,MAAMlJ,IAYlB,MAAO,CACHmJ,IAzEJ,SAAajL,EAAKkL,GACd,IAAIC,EAAkBT,EAAU1K,GAMhC,OALKmL,IACDA,EAAkB,GAClBT,EAAU1K,GAAOmL,GAErBA,EAAgBvM,KAAKsM,GACd,WACH,IAAIE,EAAYV,EAAU1K,GACrBoL,IAGLA,EAAYA,EAAUtL,QAAO,SAAUuL,EAAKC,EAASC,GAIjD,OAHMD,IAAYJ,GAAYG,EAAIhP,SAAWkP,GACzCF,EAAIzM,KAAK0M,GAEND,IACR,IACHX,EAAU1K,GAAOoL,KAwDrBI,QArDJ,SAAiBxL,GAEb,IADA,IAAIyL,EAAe,GACVC,EAAK,EAAGA,EAAKtP,UAAUC,OAAQqP,IACpCD,EAAaC,EAAK,GAAKtP,UAAUsP,GAErC,IAAIP,EAAkBT,EAAU1K,GAChC,IAAKmL,GAA8C,IAA3BA,EAAgB9O,OACpC,MAAO,GAEX,IAAIsP,EAAU,GAWd,OAVAR,EAAgBpJ,SAAQ,SAAUmJ,GAC9B,IACI,IAAI5N,EAAS4N,EAAS3O,WAAMuK,EAAW2E,GACvCE,EAAQ/M,KAAKtB,GAEjB,MAAOsO,GACHD,EAAQ/M,UAAKkI,GACb6D,EAAaiB,EAAK5L,OAGnB2L,GAkCPE,MAbJ,WACInB,EAAY,IAaZoB,SAXJ,SAAkB9L,GACQ0K,EAAU1K,WAIzB0K,EAAU1K,QAUV+L,QAAUxB,GACzB,OAAiBA,YC5FD41C,GAAal9B,GACzB,OAAKA,EAGE/nB,OAAO2E,KAAKojB,GAAQzI,KAAI,SAACxa,GAAQ,OAAAijB,EAAOjjB,MAFpC,YAKCogD,GAAYx9B,GACxB,IAAItlB,EACJ,IACIA,EAAS6S,KAAKqH,MAAMrH,KAAKC,UAAUwS,GAAO,KAC5C,MAAO5X,GACL1N,EAAS,GAGb,OAAOA,ECPX,kBAOI,WAAoB+iD,EAAqC/7C,EAAuB4iC,GAAhF,WAAoBxrC,iBAAA2kD,EAAqC3kD,WAAA4I,EAAuB5I,UAAAwrC,EALxExrC,eAA8B4kD,KAUlCD,EAAYE,mBAAkB,SAACv2C,GACvBA,EAAS4G,aAAe5G,EAAS4G,YAAYtQ,OAASuD,EAAKS,OAI/DT,EAAKoL,UAAUzD,QAAQ,kBAAmBxB,MAG9Cq2C,EAAYG,mBAAkB,SAACx2C,GACvBA,EAAS4G,aAAe5G,EAAS4G,YAAYtQ,OAASuD,EAAKS,OAI/DT,EAAKoL,UAAUzD,QAAQ,kBAAmBxB,MAG9Cq2C,EAAYI,cAAa,SAACC,GAClBA,EAAIpgD,OAASuD,EAAKS,OAItBT,EAAKoL,UAAUzD,QAAQ,aAAck1C,MAGzCL,EAAYM,cAAa,SAACD,GAClBA,EAAIpgD,OAASuD,EAAKS,OAItBT,EAAKoL,UAAUzD,QAAQ,aAAck1C,MAGzCL,EAAYO,gBAAe,SAACF,GACpBA,EAAIpgD,OAASuD,EAAKS,OAItBT,EAAKoL,UAAUzD,QAAQ,eAAgBk1C,MAG3CL,EAAYQ,kBAAiB,SAACH,GACtBA,EAAIpgD,OAASuD,EAAKS,OAItBT,EAAKoL,UAAUzD,QAAQ,iBAAkBk1C,MAmPrD,OA/OIxlD,sBAAI4lD,wBAAJ,WAAqB,OAAOplD,KAAK4I,uCACjCpJ,sBAAI4lD,yBAAJ,WAAsB,OAAOplD,KAAKqlD,OAAOC,uCACzC9lD,sBAAI4lD,2BAAJ,WAAwB,OAAOplD,KAAKqlD,OAAOE,yCAC3C/lD,sBAAI4lD,6BAAJ,WAA2B,OAAOplD,KAAKqlD,OAAOG,2CAC9ChmD,sBAAI4lD,2BAAJ,WAAyB,OAAOplD,KAAKqlD,OAAOI,yCAC5CjmD,sBAAI4lD,2BAAJ,WAAwB,OAAOplD,KAAKqlD,OAAOK,yCAC3ClmD,sBAAI4lD,0BAAJ,WAAwB,OAAOplD,KAAKqlD,OAAOM,0CAC3CnmD,sBAAI4lD,6BAAJ,WAA0B,OAAOplD,KAAKqlD,OAAOO,iDAC7CpmD,sBAAI4lD,gCAAJ,WAA6B,OAAOplD,KAAKqlD,OAAOvd,8CAChDtoC,sBAAI4lD,sCAAJ,WAAmC,OAAOplD,KAAKqlD,OAAOQ,oDACtDrmD,sBAAI4lD,kCAAJ,WACI,OAAKplD,KAAKqlD,OAAOS,UAGVpB,GAAY1kD,KAAKqlD,OAAOS,WAFpB,oCAIftmD,sBAAI4lD,iCAAJ,WAA+B,OAAOplD,KAAKqlD,OAAOU,+CAClDvmD,sBAAI4lD,6BAAJ,WAA2B,OAAOplD,KAAKqlD,OAAOW,UAAW,mCACzDxmD,sBAAI4lD,wBAAJ,WAAqB,OAAOplD,KAAKqlD,OAAOY,sCACxCzmD,sBAAI4lD,2BAAJ,WAAwB,OAAOplD,KAAKqlD,OAAOa,yCAC3C1mD,sBAAI4lD,6BAAJ,WAA0B,OAAOplD,KAAKqlD,OAAOc,2CAC7C3mD,sBAAI4lD,kCAAJ,WACI,OAAKplD,KAAKqlD,OAAOe,eAGV1B,GAAY1kD,KAAKqlD,OAAOe,gBAFpB,oCAIf5mD,sBAAI4lD,8BAAJ,WACI,YAAoCh6C,IAA7BpL,KAAKqlD,OAAOvd,cAA2D,KAA7B9nC,KAAKqlD,OAAOvd,8CAGjEtoC,sBAAI4lD,iCAAJ,WACI,MAAO,CACHiB,UAAWrmD,KAAKqlD,OAAOG,UACvBc,QAAStmD,KAAKqlD,OAAOK,QACrBa,OAAQvmD,KAAKqlD,OAAOM,SACpBa,UAAWxmD,KAAKqlD,OAAOO,gBACvB3T,aAAcjyC,KAAKqlD,OAAOvd,aAC1B2e,cAAezmD,KAAKqlD,OAAOU,gDAInCvmD,sBAAI4lD,6BAAJ,WAAA,WACI,OAAOplD,KAAK2kD,YAAYpB,YAAY35C,QAAO,SAAC0E,GAAyC,OAAAA,EAAS4G,YAAYtQ,OAASuD,EAAKS,0CAG5HpJ,sBAAI4lD,wBAAJ,WACI,OAAOplD,KAAKqlD,OAAOqB,sCAGvBlnD,sBAAI4lD,wBAAJ,WACI,IAAKplD,KAAKqlD,OAEN,MAAO,UAIX,GAAIrlD,KAAKqlD,OAAOsB,MAAoC,iBAArB3mD,KAAKqlD,OAAOsB,KACvC,OAAO3mD,KAAKqlD,OAAOsB,KAAK36C,cAK5B,GAAIhM,KAAK4mD,WACL,MAAO,UAIX,GAAI5mD,KAAKqlD,OAAOS,WAAa9lD,KAAKqlD,OAAOS,UAAUpU,MAA8C,iBAA/B1xC,KAAKqlD,OAAOS,UAAUpU,KACpF,OAAO1xC,KAAKqlD,OAAOS,UAAUpU,KAAK1lC,cAItC,IAAI66C,EAAkB7mD,KAAKqlD,OAAOyB,sBAClC,GAAID,EAAiB,CAGjB,IACME,GAFNF,EAAkBA,EAAgB5wC,MAAM,KAAKlR,KAAK,KAEhB8S,QADhB,UAElB,IAAmB,IAAfkvC,EAAkB,CAClB,IAAMC,EAAiBD,EAHT,SAG+BpmD,OACvCsmD,EAAgBJ,EAAgBhvC,QAAQ,IAAMmvC,GAC9CE,EAAQL,EAAgBv0C,OAAO00C,EAAgBC,EAAgBD,GACrE,GAAIE,GAA0B,iBAAVA,EAChB,OAAOA,EAAMl7C,eAMzB,MAAO,wCAGJo5C,4BAAP,SAAuB+B,GAAvB,WACSnnD,KAAKqlD,SACNrlD,KAAKqlD,OAAS,CAAE+B,KAAMD,EAAMC,OAGhC5nD,OAAO2E,KAAKgjD,GAAO9gD,SAAQ,SAAC/B,GACvB6D,EAAKk9C,OAAe/gD,GAAQ6iD,EAAc7iD,OAI5C8gD,kBAAP,SAAazgD,EAAwB4D,GAArC,WACU3D,EAAO5E,KAAK4I,MAElB,OAAO,IAAIzH,SAAoC,SAACC,EAASC,GACrDkH,EAAUA,GAAW,GACrB5D,EAAUA,GAAW,GAuErBwD,EAAKqjC,KAAKroB,OCxOoB,2BDyO1B,CACIikC,KAAMxiD,EACNyiD,QAAS1iD,EACT2iD,QAAS/+C,GAEb,OACA,CACI2mB,wBAlFiB,MAoFrB,SAACttB,GACG,IAAM2lD,EAA2B3lD,EAAO4tB,UAAY5tB,EAAO4tB,SAASg4B,WAC9D5lD,EAAO4tB,SAASg4B,WAChB5lD,EAAO4tB,SAEb,GAAI+3B,GAAaA,EAAUE,GACvB,GAA8B,cAA1Bt/C,EAAKw8C,YAAYjT,KAAsB,CAGvC,IAAMpjC,EAAWnG,EAAKw8C,YAAY+C,sBAAsBH,GACxDnmD,EAAQkN,QAxFW,SAAClF,GAEhC,IAqBIu+C,EArBEC,EAAQ,WACV,IACIhmD,EADEimD,EAAW1/C,EAAKw8C,YAAYpB,YAAY35C,QAAO,SAACpJ,GAAkC,OAAAA,EAAE4I,KAAOA,KAQjG,OAJIxH,EADoB,IAApBimD,EAASlnD,OACAknD,EAAS,GAAGC,mBAAqBD,EAAS,GAAKA,EAAS,GAExDA,EAAS,IAGdjmD,EAAOwkC,IACAxkC,OAGP,EAIDA,GAKLktB,EAAU7b,YAAW,WACnB00C,GACAA,IAEJtmD,EAAO,aAnCU,KAwDjBsmD,EAAQx/C,EAAKw8C,YAAYoD,0BAlBZ,SAACvnD,GACVA,EAAE4I,KAAOA,IAGTu+C,IACAA,IACAA,OAAQv8C,GAEZyT,aAAaiQ,GAIb7b,YAAW,WACP7R,EAAQwmD,OACT,OAWP,IAAMrE,EAAwCqE,IAC1CrE,IACIoE,IACAA,IACAA,OAAQv8C,GAEZyT,aAAaiQ,GACb1tB,EAAQmiD,IA2BAyE,CAA2BT,EAAUE,SAKzCrmD,OAAQgK,MAGhB,SAAC8E,GACG7O,EAAO6O,UAKhBk1C,8BAAP,SAAyB51C,GACrBxP,KAAKuT,UAAUhE,IAAI,kBAAmBC,IAGnC41C,8BAAP,SAAyB51C,GACrBxP,KAAKuT,UAAUhE,IAAI,kBAAmBC,IAGnC41C,wBAAP,SAAmB51C,GACfxP,KAAKuT,UAAUhE,IAAI,eAAgBC,IAGhC41C,0BAAP,SAAqB51C,GACjBxP,KAAKuT,UAAUhE,IAAI,iBAAkBC,IAGlC41C,sBAAP,SAAiB51C,GACbxP,KAAKuT,UAAUhE,IAAI,aAAcC,IAG9B41C,sBAAP,SAAiB51C,GACbxP,KAAKuT,UAAUhE,IAAI,aAAcC,uBE1RrC,WAAoBu3B,EACAkhB,EACAtD,EACAnZ,EACA8R,EACAC,EACR2K,GANZ,WAAoBloD,SAAA+mC,EACA/mC,cAAAioD,EACAjoD,iBAAA2kD,EACA3kD,UAAAwrC,EACAxrC,iBAAAs9C,EACAt9C,cAAAu9C,EApBbv9C,gBAAaA,KAAKmoD,eAAe,YAEjCnoD,eAAYA,KAAKmoD,eAAe,WAE/BnoD,eAA8B4kD,KAmB9BsD,IAIJloD,KAAKooD,4BAA8BpoD,KAAK2kD,YAAYG,mBAAkB,SAACx2C,GAC/DA,EAASlF,KAAOjB,EAAK4+B,KAIzB5+B,EAAKoL,UAAUzD,QAAQ,UAAWxB,MAGtCtO,KAAKqoD,mCAAqCroD,KAAK2kD,YAAYoD,0BAAyB,SAACz5C,GAC7EA,EAASlF,KAAOjB,EAAK4+B,KAIzB5+B,EAAKoL,UAAUzD,QAAQ,WAAYxB,OA+J/C,OA3JI9O,sBAAI8oD,sBAAJ,WAAmB,OAAOtoD,KAAK+mC,qCAE/BvnC,sBAAI8oD,+BAAJ,WAAmD,OAAOtoD,KAAK2kD,YAAYzvC,YAAYlV,KAAKioD,2CAE5FzoD,sBAAI8oD,4BAAJ,WAAA,WACI,IAAKtoD,KAAKs9C,YACN,MAAM,IAAIx2C,MAAM,+DAEpB,OAAO9G,KAAKs9C,YAAYv+B,IAAIwkC,UAAUr8C,MACjC0C,QAAO,SAAC2+C,GAAiD,OAAAA,EAAiBn/C,KAAOjB,EAAKomC,eAAa,oCAG5G/uC,sBAAI8oD,qCAAJ,WAAA,WACI,OAAOtoD,KAAK2kD,YAAYpB,YACnB35C,QAAO,SAACpJ,GAAM,OAAAA,EAAEmE,SAAYnE,EAAEmE,QAAQ2hB,aAAene,EAAKomC,gDAGnE/uC,sBAAI8oD,yCAAJ,WACI,OAAOtoD,KAAK2kD,YAAYpB,YACnB35C,QAAO,SAAC0E,GACL,GAAIA,EAASlC,QAAUkC,EAASlC,OAAOzH,QAAS,CAC5C,IAAM6jD,EAAcl6C,EAASlC,OAAOzH,QACpC,GAAI6jD,EAAYC,MAAQD,EAAYC,KAAKC,gBACrC,OAAO,EAGf,OAAO,KACR,oCAGXlpD,sBAAI8oD,0BAAJ,WAAA,WACI,IAAKtoD,KAAKu9C,SACN,MAAM,IAAIz2C,MAAM,4DAGpB,IAAIqjC,EAAMnqC,KAAKu9C,SAASrE,OAAOtvC,QAAO,SAAC4/B,GAAM,OAAAA,EAAEpgC,KAAOjB,EAAK4+B,OAAK,GAMhE,OALKoD,GAAOnqC,KAAKqoC,UAAYroC,KAAK2oD,wBAE9Bxe,EAAMnqC,KAAK2oD,sBAAsBv8C,QAG9B+9B,mCAGX3qC,sBAAI8oD,2BAAJ,qBACI,yBAAOtoD,KAAK4oD,6BAAmB5oD,KAAKoM,6BAAQzH,WAAW,oCAG3DnF,sBAAI8oD,yBAAJ,WAAsB,OAAOtoD,KAAK6oD,wCAElCrpD,sBAAI8oD,sCAAJ,WAAoC,OAAOtoD,KAAK8oD,qDAEhDtpD,sBAAI8oD,8BAAJ,WAA2B,OAAOtoD,KAAKuuC,6CAEvC/uC,sBAAI8oD,8BAAJ,WAA4B,OAAOtoD,KAAK+oD,6CAExCvpD,sBAAI8oD,qCAAJ,WAAmC,OAAQtoD,KAAK+oD,6CAEhDvpD,sBAAI8oD,uBAAJ,WACI,OAAOtoD,KAAKgpD,8CAGTV,4BAAP,SAAuBnB,GACnBnnD,KAAK4oD,gBAAkBzB,EAAME,QAC7BrnD,KAAK6oD,OAAS1B,EAAM7B,MACpBtlD,KAAK8oD,qBAAsB,EACvB3B,EAAM8B,YAAmC,KAArB9B,EAAM8B,aAC1BjpD,KAAKuuC,YAAc4Y,EAAM8B,WACzBjpD,KAAK8oD,qBAAsB,IAE1B9oD,KAAKuuC,aAAevuC,KAAK4oD,iBAAmB5oD,KAAK4oD,gBAAgBtiC,aAClEtmB,KAAKuuC,YAAcvuC,KAAK4oD,gBAAgBtiC,YAE5CtmB,KAAK+oD,YAAc3jD,QAAQpF,KAAKuuC,aAEhCvuC,KAAKkpD,2BAA2B/B,IAG7BmB,uCAAP,SAAkCnB,GAC9B,GAAKA,EAAMgC,WAIX,GAAIhC,EAAMiC,IAAK,CACX,IAAMC,EAA0ClC,EAAMgC,WAClDE,IACArpD,KAAKgpD,aAAeK,EAAa,QAElC,CACH,IAAMC,EAAoDnC,EAAMgC,WAC1DI,EAAiB/pD,OAAO2E,KAAKmlD,GAAc,GACjD,IAAKC,EACD,OAEJ,IAAMC,EAAWF,EAAaC,GAC9BvpD,KAAKgpD,aAAe,CAChB7vB,QAASqwB,EAASC,YAClBvwB,KAAMswB,EAASE,SACfllC,YAAaglC,EAAShlC,YACtBtP,YAAas0C,EAAS3kC,mBAK3ByjC,iBAAP,WAAA,WACI,OAAO,IAAInnD,SAAQ,SAACC,EAASC,GACzB,IAAM6oB,EAAc/hB,EAAKw8C,YAAYG,mBAAkB,SAACx2C,GAChDA,EAASlF,KAAOjB,EAAK4+B,MACrB7c,IACA9oB,QAIR+G,EAAKqjC,KAAKroB,ODrJmB,0BCuJzB,CACIikC,KAAMj/C,EAAK8/C,SACXR,GAAIt/C,EAAK4+B,MAEZjlC,MAAK,WAC4B,cAA1BqG,EAAKw8C,YAAYjT,OACjBvpC,EAAKw8C,YAAYgF,sBAAsB,CACnCvC,KAAMj/C,EAAK8/C,SACXR,GAAIt/C,EAAKiB,GACTi+C,aAASj8C,EACTk6C,WAAOl6C,EACP69C,gBAAY79C,EACZ+9C,gBAAY/9C,IAGhBhK,QAGP4Y,OAAM,SAAC9J,GAAa,OAAA7O,EAAO6O,UAIjCo4C,qBAAP,WACI,OAAOtoD,KAAKwrC,KAAKroB,OD7KoB,8BC6K2B,CAAEikC,KAAMpnD,KAAKioD,SAAUR,GAAIznD,KAAK+mC,OAG7FuhB,iBAAP,WAGItoD,KAAKuT,UAAUpD,QAEfnQ,KAAKqoD,qCACLroD,KAAKooD,+BAGDE,2BAAR,SAAuBhkD,GAAvB,WACI,OAAO,SAACkL,GACJrH,EAAKoL,UAAUhE,IAAIjL,EAAKkL,wBChMhC,WACWkiC,EACClG,EACA8R,EACAC,EACA/0B,EACAohC,GANZ,WACW5pD,UAAA0xC,EACC1xC,UAAAwrC,EACAxrC,iBAAAs9C,EACAt9C,cAAAu9C,EACAv9C,aAAAwoB,EACAxoB,qBAAA4pD,EAVJ5pD,WAA4C,GAC5CA,gBAA6B,GAC7BA,eAA8B4kD,KAa/B5kD,iBAAc,SAAC4E,GAClB,OAAOuD,EAAK0hD,MAAMjlD,IAGf5E,kBAAe,WAClB,OAAOR,OAAO2E,KAAKgE,EAAK0hD,OAAO/qC,KAAI,SAACxb,GAAc,OAAA6E,EAAK0hD,MAAMvmD,OAG1DtD,eAAY,WACf,OAAOmI,EAAK2hD,YAGT9pD,mBAAgB,WACnB,GAAImI,EAAKyhD,iBAAmB,EAAG,CAE3B,IAAMG,EAAa39C,OAAOO,SAASuY,cACnC,OAAO/c,EAAK2hD,WAAWlgD,QAAO,SAACpJ,GAAM,OAAAA,EAAE4I,KAAO2gD,KAAY,KAM3D/pD,oBAAiB,SAACmnD,GACrB,IAAM/9C,EAAKjB,EAAK6hD,UAAU7C,GAC1Bh/C,EAAKqgB,QAAQlH,MAAM,cAAclY,GACjCjB,EAAK0hD,MAAMzgD,GAAM,IAAIg8C,GAAgBj9C,EAAMiB,EAAIjB,EAAKqjC,MACpD,IAAMwZ,EAAM78C,EAAK8hD,oBAAoB9C,GAErCh/C,EAAKoL,UAAUzD,QAAQ,WAAYk1C,IAGhChlD,sBAAmB,SAACmnD,GAGvB,IAAMnC,EAAM78C,EAAK8hD,oBAAoB9C,GAErCh/C,EAAKoL,UAAUzD,QAAQ,aAAck1C,IAGlChlD,sBAAmB,SAACmnD,GACvB,IAAM/9C,EAAKjB,EAAK6hD,UAAU7C,GAC1Bh/C,EAAKqgB,QAAQlH,MAAM,gBAAgBlY,GACnC,IAAM47C,EAAM78C,EAAK+M,YAAY9L,GAG7BjB,EAAK2hD,WAAa3hD,EAAK2hD,WAAWlgD,QAAO,SAACpJ,GAAM,OAAAA,EAAE0U,YAAYtQ,OAASogD,EAAIpgD,eAEpEuD,EAAK0hD,MAAMzgD,GAElBjB,EAAKoL,UAAUzD,QAAQ,aAAck1C,IAGlChlD,oBAAiB,SAACmnD,GACrB,IAAM/9C,EAAKjB,EAAK6hD,UAAU7C,GACpBnC,EAAM78C,EAAK+hD,eAAe9gD,GAChC47C,EAAImF,gBAAgBhD,GAEhBnC,EAAIoF,UACJjiD,EAAKoL,UAAUzD,QAAQ,eAAgBk1C,GAEvC78C,EAAKoL,UAAUzD,QAAQ,iBAAkBk1C,IAI1ChlD,2BAAwB,SAACmnD,GAC5Bh/C,EAAKqgB,QAAQlH,MAAM,eAAe6lC,EAAMC,SAAQD,EAAMM,IACtD,IAAMr+C,EAAKjB,EAAKkiD,eAAelD,GACzBv6C,EAAUzE,EAAKmiD,oBAAoBnD,GAEnC74C,EAAW,IAAIg6C,GAAal/C,EAAIwD,EAASzE,EAAMA,EAAKqjC,KAAMrjC,EAAKm1C,YAAan1C,EAAKo1C,UAOvF,OALAp1C,EAAKoiD,yBAAyBj8C,EAAU64C,GAExCh/C,EAAK2hD,WAAW5mD,KAAKoL,GAErBnG,EAAKoL,UAAUzD,QAAQ,kBAAmBxB,GACnCA,GAGJtO,2BAAwB,SAACmnD,GAC5Bh/C,EAAKqgB,QAAQlH,MAAM,uBAAuB6lC,EAAMC,SAAQD,EAAMM,IAE9D,IAAMr+C,EAAKjB,EAAKkiD,eAAelD,GACzBv6C,EAAUzE,EAAKmiD,oBAAoBnD,GACnC74C,EAAWnG,EAAKqiD,oBAAoBphD,EAAIwD,GAE9CzE,EAAK2hD,WAAa3hD,EAAK2hD,WAAWlgD,QAAO,SAACpJ,GAAM,OAAC2H,EAAKsiD,eAAejqD,EAAG4I,EAAIwD,MAE5EzE,EAAKoL,UAAUzD,QAAQ,kBAAmBxB,GAC1CA,EAASzM,QAGN7B,kCAA+B,SAACmnD,GAEnC,IAAM/9C,EAAKjB,EAAKkiD,eAAelD,GACzBv6C,EAAUzE,EAAKmiD,oBAAoBnD,GACnC74C,EAAWnG,EAAKqiD,oBAAoBphD,EAAIwD,GAE9C0B,EAAS46C,2BAA2B/B,GAEpCh/C,EAAKoL,UAAUzD,QAAQ,yBAA0BxB,IAG9CtO,+BAA4B,SAACmnD,GAEhC,IAAM/9C,EAAKjB,EAAKkiD,eAAelD,GACzBv6C,EAAUzE,EAAKmiD,oBAAoBnD,GAEnC74C,EAAW,IAAIg6C,GAAal/C,EAAIwD,OAASxB,OAAWA,OAAWA,OAAWA,GAD5D,GAGpBjD,EAAKoiD,yBAAyBj8C,EAAU64C,GAExCh/C,EAAKoL,UAAUzD,QAAQ,sBAAuBxB,IAG3CtO,2BAAwB,SAACmnD,GAE5B,IAAM/9C,EAAKjB,EAAKkiD,eAAelD,GACzBnC,EAAM78C,EAAKmiD,oBAAoBnD,GAC/B74C,EAAWnG,EAAKqiD,oBAAoBphD,EAAI47C,GAE9C78C,EAAKoiD,yBAAyBj8C,EAAU64C,IAIrCnnD,uBAAoB,SAACwP,GAExB,OADArH,EAAKuiD,QAAQviD,EAAK2hD,WAAYt6C,GACvBrH,EAAKoL,UAAUhE,IAAI,kBAAmBC,IAG1CxP,2BAAwB,SAACwP,GAC5B,OAAOrH,EAAKoL,UAAUhE,IAAI,sBAAuBC,IAG9CxP,uBAAoB,SAACwP,GACxB,OAAOrH,EAAKoL,UAAUhE,IAAI,kBAAmBC,IAG1CxP,uBAAoB,SAACwP,GACxB,OAAOrH,EAAKoL,UAAUhE,IAAI,kBAAmBC,IAG1CxP,8BAA2B,SAACwP,GAC/B,OAAOrH,EAAKoL,UAAUhE,IAAI,yBAA0BC,IAGjDxP,gBAAa,SAACwP,GAEjB,OADArH,EAAKuiD,QAAQviD,EAAK0hD,MAAOr6C,GAClBrH,EAAKoL,UAAUhE,IAAI,WAAYC,IAGnCxP,kBAAe,SAACwP,GACnB,OAAOrH,EAAKoL,UAAUhE,IAAI,aAAcC,IAGrCxP,oBAAiB,SAACwP,GACrB,OAAOrH,EAAKoL,UAAUhE,IAAI,eAAgBC,IAGvCxP,sBAAmB,SAACwP,GACvB,OAAOrH,EAAKoL,UAAUhE,IAAI,iBAAkBC,IAGzCxP,kBAAe,SAACwP,GACnB,OAAOrH,EAAKoL,UAAUhE,IAAI,aAAcC,IAkEhD,OA/DYm7C,2BAAR,SAAuBvhD,GACnB,IAAMxH,EAAS5B,KAAKkV,YAAY9L,GAChC,IAAKxH,EACD,MAAMkF,MAAM,eAAesC,gBAE/B,OAAOxH,GAGH+oD,sBAAR,SAAkBxD,GACd,OAAOA,EAAMC,MAGTuD,2BAAR,SAAuBr8C,EAAsClF,EAAYwD,GACrE,OAAO0B,EAASlF,KAAOA,GAAMkF,EAAS4G,YAAYtQ,OAASgI,GAGvD+9C,oCAAR,SAAgCvhD,EAAYwD,GAA5C,WACI,OAAO5M,KAAK8pD,WAAWlgD,QAAO,SAACpJ,GAAM,OAAA2H,EAAKsiD,eAAejqD,EAAG4I,EAAIwD,MAAU,IAGtE+9C,gCAAR,SAA4BvhD,EAAYwD,GACpC,IAAMhL,EAAS5B,KAAK4qD,wBAAwBxhD,EAAIwD,GAChD,IAAKhL,EACD,MAAMkF,MAAM,oBAAoBsC,gBAEpC,OAAOxH,GAGH+oD,2BAAR,SAAuBxD,GACnB,OAAOA,EAAMM,IAGTkD,gCAAR,SAA4BxD,GACxB,OAAOA,EAAMC,MAGTuD,gCAAR,SAA4BxD,GACxB,IAAM/9C,EAAKpJ,KAAKgqD,UAAU7C,GAC1BnnD,KAAKwoB,QAAQlH,MAAM,wBAAwBlY,OAAO+9C,GAClD,IAAMnC,EAAMhlD,KAAKkqD,eAAe9gD,GAIhC,OAFA47C,EAAImF,gBAAgBhD,GAEbnC,GAGH2F,qCAAR,SAAiCr8C,EAAwB64C,GACrDnnD,KAAKwoB,QAAQlH,MAAM,0BAA4BthB,KAAKqqD,eAAelD,GAAS,YAAcnnD,KAAKsqD,oBAAoBnD,IACnH74C,EAAS67C,gBAAgBhD,IAGrBwD,oBAAR,SAAgBE,EAA+Cr7C,GACvDq7C,IAEIlrD,MAAMmG,QAAQ+kD,GACdA,EAAcxkD,SAAQ,SAAC6P,GAAS,OAAA1G,EAAS0G,MAEhB1W,OAAO2E,KAAK0mD,GAAe/rC,KAAI,SAACxa,GAAQ,OAAAumD,EAAcvmD,MAC9D+B,SAAQ,SAAC6P,GAAS,OAAA1G,EAAS0G,aCpP5D,SAAS6V,GAAUjZ,EAAuBkZ,EAAsCC,GAC5E,IAAMsb,EAAa,SAACH,GAChB,SAAUA,GAAOA,EAAInnC,aAAemnC,EAAIxmC,MAAQwmC,EAAIvmC,QAGxD,IAAK0mC,EAAWvb,KAAqBub,EAAWtb,GAC5C,OAAOnZ,EAGNy0B,EAAWvb,GAIJub,EAAWtb,KACnBA,EAAgB,cAJhBD,EAAkB,aAStBlZ,EAAQhR,KAAKkqB,EAAiBC,GAGlC,OAII,SACYuf,GADZ,WACYxrC,UAAAwrC,EAHJxrC,eAA8B4kD,KAQ/B5kD,0BAAuB,SAAC2zB,GAC3BxrB,EAAKoL,UAAUzD,QAAQ,gBAAiB6jB,IAGrC3zB,4BAAyB,SAACo1B,GAC7BjtB,EAAKoL,UAAUzD,QAAQ,kBAAmBslB,IAGvCp1B,eAAY,SAACoa,EAAmC9K,GACnD,OAAOyc,GACH5jB,EAAK2iD,WH1C+B,kCG4ChC,SAACppD,GAA2D,OAAAA,EAAE8tB,SAASu7B,UAE3E3wC,EACA9K,IAIDtP,iBAAc,SAACoa,EAAyD9K,GAS3E,OAAOyc,GARS5jB,EAAK2iD,WHhDQ,uBGkDzB,SAACppD,GACG,IAAMwlB,EAAMxlB,EAAE8tB,SAASw7B,SACvB,OAAOxrD,OAAO2E,KAAK+iB,GAAKpI,KAAI,SAACxa,GAAQ,OAAA4iB,EAAI5iB,SAIvB8V,EAAS9K,IAGhCtP,sBAAmB,SAACoa,EAAqD9K,GAO5E,OAAOyc,GANS5jB,EAAK2iD,WH3Da,4BG6D9B,SAACppD,GAAM,OAAAA,EAAE8tB,SAASy7B,cAClB7/C,GAGsBgP,EAAS9K,IAGhCtP,eAAY,SAACykB,EAAgBrK,EAAmC9K,GAOnE,OAAOyc,GANS5jB,EAAK2iD,WHzEmB,kCG2EpC,SAACppD,GAAM,OAAAA,EAAE8tB,SAAS07B,gBAClB,CAAEH,OAAQtmC,IAGYrK,EAAS9K,IAGhCtP,sBAAmB,SAAC2zB,EAAgBvZ,EAAmC9K,GAO1E,OAAOyc,GANS5jB,EAAK2iD,WH9Ea,4BGgF9B,SAACppD,GAAM,OAAAA,EAAE8tB,SAAS07B,gBAClB,CAAED,OAAQt3B,IAGYvZ,EAAS9K,IAGhCtP,iBAAc,SAACoa,EAAqD9K,GAEvE,OAAOyc,GADS5jB,EAAK2iD,WH3FI,mBG4FC1wC,EAAS9K,IAGhCtP,8BAA2B,SAACmrD,EAAe/wC,EAAwC9K,GAOtF,OAAOyc,GANS5jB,EAAK2iD,WH3FqB,oCG6FtC,SAACppD,GAAM,OAAAA,EAAE8tB,SAAS47B,cAClB,CAAEC,SAAUF,IAGU/wC,EAAS9K,IAGhCtP,oCAAiC,SAACmrD,EAAex3B,EAAgBvZ,EAAwC9K,GAM5G,OAAOyc,GALS5jB,EAAK2iD,WHrGqB,oCGuGtC,SAACppD,GAAM,OAAAA,EAAE8tB,SAAS47B,cAClB,CAAEC,SAAUF,EAAOF,OAAQt3B,IAELvZ,EAAS9K,IAGhCtP,UAAO,SAACsrD,EAAclxC,EAAqC9K,GAO9D,OAAOyc,GANS5jB,EAAK2iD,WH7GC,gBG+GlB,SAACppD,GAAM,OAAAA,EAAE8tB,SAAS+7B,SAClB,CAAEF,SAAUC,IAGUlxC,EAAS9K,IAGhCtP,gBAAa,SAACsrD,EAAc33B,EAAgBvZ,EAAqC9K,GAOpF,OAAOyc,GANS5jB,EAAK2iD,WHvHC,gBGyHlB,SAACppD,GAAM,OAAAA,EAAE8tB,SAAS+7B,SAClB,CAAEF,SAAUC,EAAML,OAAQt3B,IAGJvZ,EAAS9K,IAGhCtP,uBAAoB,SAACwP,GACxBrH,EAAKoL,UAAUhE,IAAI,kBAAmBC,IAGnCxP,qBAAkB,SAACwP,GACtBrH,EAAKoL,UAAUhE,IAAI,gBAAiBC,IAGjCxP,UAAO,SAACuI,GACX,OAAOJ,EAAK2iD,WHvJc,mBGyJtB,KACAviD,IAIDvI,aAAU,SAACuI,GACd,OAAOJ,EAAK2iD,WH9Ja,kBGgKrB,KACAviD,IAIAvI,gBAAa,SACjBwd,EACAguC,EACAr0B,GAGA,OADAA,EAAOA,GAAQ,GACR,IAAIh2B,SAAQ,SAACC,EAASC,GAEzB8G,EAAKqjC,KAAKroB,OAAO3F,EAAQ2Z,GACpBr1B,MAAK,SAACF,GACE4pD,IACDA,EAAoB,SAAClsD,GAA4C,OAAAA,EAAEkwB,WAEvEpuB,EAAQoqD,EAAkB5pD,OAE7BoY,OARiD,SAAC1K,GAAU,OAAAjO,EAAOiO,2BCvKpEvC,GAEZ,IAAKA,EACD,MAAMjG,MAAM,kBAGhB,IAAKiG,EAAOq5B,IACR,MAAMt/B,MAAM,yBAGhB,IAIM4qC,EAA+B3kC,EAAO2kC,MAJD,YAK3C,GAL2C,cAKvCA,GAJuC,cAIhBA,GAHU,SAGaA,EAC9C,MAAM,IAAI5qC,MAAM,qCAAqC4qC,uBAGzD,IAOIrP,EAPEiD,EAAav4B,EAAOu4B,WACpBc,EAAMr5B,EAAOq5B,IACb31B,EAAS1D,EAAO0D,OAChB84B,EAAUx8B,EAAOw8B,QACjBkiB,EAAa,IAAId,GAAejZ,EAAMtL,EAAKd,EAAYiE,EAAS94B,EAAOsN,UAAU,gBAAiBhR,EAAOi3C,gBACzG0H,EAAe,IAAIC,GAAiBvlB,GAG1C,GAjB2C,cAiBvCsL,EACArP,WC5ByB+D,EAAyBqlB,GACtD,OAAO,IAAItqD,SAAQ,SAACC,EAASC,GACzB+kC,EAAIjjB,OLe6B,0BKfc,CAAEyoC,UAAU,IACtD9pD,MAAK,SAACohC,GACH,IAAMpxB,EAAOoxB,EAAS1T,SACjB1d,GACD1Q,IAGJ,IAAMyqD,EAAe/5C,EAAK+5C,aACrBA,GACDzqD,IAGJqjD,GAAaoH,GAAc/sC,KAAI,SAAC5I,GAAS,OAAAu1C,EAAWK,eAAe51C,MAEnE9U,OAEH4Y,OAAM,SAAC9J,GAAQ,OAAA7O,EAAO,uCAAuC6O,EAAIa,eDUvDg7C,CAAS3lB,EAAKqlB,OAC1B,CACH,IAAMv4B,WE1BiCkT,EAAyBylB,EAA8BH,EAAgCM,GAElI,IAAI94B,EAkEJ,MAAO,CACH+4B,MAlEU,WACV,IAAIC,EACAC,EAEEC,EAAgB,IAAIjrD,SAAQ,SAACC,EAASC,GACxC6qD,EAAc9qD,EACd+qD,EAAa9qD,KAkDjB,OA/CA+kC,EAAIpc,UNDqB,kBMCiB,CAAEtpB,UAAW,CAAEkrD,SAAUI,GAAar/B,cAAe,MAC1F7qB,MAAK,SAACvB,IACH2yB,EAAe3yB,GACF09B,QAAO,SAACouB,GACjB,IAAMC,EAAcD,EAAWv6C,KAE/B2yC,GAAa6H,EAAyC,oBACjDxtC,KAAI,SAAC5I,GAAmB,OAAA21C,EAAaC,eAAe51C,MAEzDuuC,GAAa6H,EAA2C,sBACnDxtC,KAAI,SAAC5I,GAAmB,OAAA21C,EAAaU,iBAAiBr2C,MAE3DuuC,GAAa6H,EAA2C,sBACnDxtC,KAAI,SAAC5I,GAAmB,OAAA21C,EAAaW,iBAAiBt2C,MAE3DuuC,GAAa6H,EAAyC,oBACjDxtC,KAAI,SAAC5I,GAAmB,OAAA21C,EAAaY,eAAev2C,MAEzDuuC,GAAa6H,EAA2C,sBACnDxtC,KAAI,SAAC5I,GAAwB,OAAA21C,EAAanE,sBAAsBxxC,MAErEuuC,GAAa6H,EAA+C,0BACvDxtC,KAAI,SAAC5I,GAAwB,OAAA21C,EAAaa,0BAA0Bx2C,MAEzEuuC,GAAa6H,EAA2C,sBACnDxtC,KAAI,SAAC5I,GAAwB,OAAA21C,EAAalC,sBAAsBzzC,MAErEuuC,GAAa6H,EAA2C,sBACnDxtC,KAAI,SAAC5I,GAAwB,OAAA21C,EAAac,sBAAsBz2C,MAErEuuC,GAAa6H,EAAkD,6BAC1DxtC,KAAI,SAAC5I,GAAwB,OAAA21C,EAAae,6BAA6B12C,MAE5EuuC,GAAa6H,EAAsC,iBAC9CxtC,KAAI,SAAC5I,GAAmC,OAAAw1C,EAAamB,qBAAqB32C,MAE/EuuC,GAAa6H,EAAyC,oBACjDxtC,KAAI,SAAC5I,GAAqC,OAAAw1C,EAAaoB,uBAAuB52C,MAEnFg2C,OAGJh5B,EAAaqL,UAAS,SAACruB,GAAa,OAAAi8C,EAAWj8C,SAGlD8J,OAAM,SAAC9J,GAAa,OAAAi8C,EAAW,sDAAoEj8C,MAEjGk8C,GAWPlmC,KARS,WACLgN,GACAA,EAAa5hB,UFtCIy7C,CAAoB3mB,EAAKqlB,EAAYC,EAnBnB,cAmBiCha,GACxErP,EAAenP,EAAa+4B,QA6ChC,MA1CmC,CAC/BngC,MAAO,WAAM,OAAAuW,GAEbwpB,aAAcJ,EAAWI,aACzB32C,YAAau2C,EAAWv2C,YAExB83C,WAAYvB,EAAWuB,WACvBjI,aAAc0G,EAAW1G,aACzBE,aAAcwG,EAAWxG,aACzBC,eAAgBuG,EAAWvG,eAC3BC,iBAAkBsG,EAAWtG,iBAE7B5B,UAAWkI,EAAWlI,UACtB0J,iBACI,OAAOxB,EAAWyB,iBAGtBrI,kBAAmB4G,EAAW5G,kBAC9BC,kBAAmB2G,EAAW3G,kBAC9BqI,kBAAmB1B,EAAW0B,kBAC9BC,sBAAuB3B,EAAW2B,sBAElCC,UAAW3B,EAAa2B,UACxBC,YAAa5B,EAAa4B,YAC1BC,iBAAkB7B,EAAa6B,iBAC/BC,yBAA0B9B,EAAa8B,yBACvCC,+BAAgC/B,EAAa+B,+BAE7CC,iBAAkBhC,EAAagC,iBAC/BC,UAAWjC,EAAaiC,UAExBC,YAAalC,EAAakC,YAE1BC,KAAMnC,EAAamC,KACnBC,WAAYpC,EAAaoC,WAEzBC,kBAAmBrC,EAAaqC,kBAEhCtc,KAAMia,EAAaja,KACnBuc,QAAStC,EAAasC,aGyDf,eA5HX,aAPiBhuD,kCAAuC,IAChDA,cAA6C,GAC7CA,qBAAoD,GACpDA,2BAA+D,GAKnEA,KAAKuT,UAAY06C,KAyHzB,OAtHWC,iBAAP,SAAYz9C,GACRzQ,KAAKwoB,QAAU/X,GAIZy9C,gBAAP,SAAW9kD,GACP,OAAOpJ,KAAKu9C,SAASn0C,IAAOpJ,KAAKmuD,gBAAgB/kD,IAI9C8kD,uBAAP,SAAkB9kD,GACd,OAAOpJ,KAAKu9C,SAASn0C,IAGzB5J,sBAAW0uD,wBAAX,WACI,OAAOluD,KAAKu9C,0CAGT2Q,gBAAP,SAAW9hD,GAEP,KADgBpM,KAAKmuD,gBAAgB/hD,EAAOgtB,IAAIhwB,IAE5CpJ,KAAKwoB,QAAQlZ,MAAM,gCAAgClD,EAAOgtB,IAAIhwB,kDADlE,CAIA,IAAMglD,EAAmC,WAA1BhiD,EAAOgtB,IAAIwS,WAC1B5rC,KAAKmuD,gBAAgB/hD,EAAOgtB,IAAIhwB,IAAMgD,EACtCpM,KAAKquD,sBAAsBjiD,EAAOgtB,IAAIhwB,IAAM,CACxC0iB,OAAO,EACPwiC,WAAYF,GAGhBpuD,KAAKuT,UAAUzD,QAAQ,WAAY1D,KAGhC8hD,mBAAP,SAAc9hD,UACHpM,KAAKu9C,SAASnxC,EAAOgtB,IAAIhwB,WACzBpJ,KAAKmuD,gBAAgB/hD,EAAOgtB,IAAIhwB,WAChCpJ,KAAKquD,sBAAsBjiD,EAAOgtB,IAAIhwB,IAC7CpJ,KAAKuT,UAAUzD,QAAQ,aAAc1D,IAGlC8hD,0BAAP,SAAqB5pC,GACjB,IAAMiqC,EAAoBvuD,KAAKquD,sBAAsB/pC,QAEpB,IAAtBiqC,IAIXA,EAAkBziC,OAAQ,EAEtByiC,EAAkBD,YAClBtuD,KAAKwuD,gBAAgBlqC,KAItB4pC,+BAAP,SAA0B5pC,GACtB,IAAMiqC,EAAoBvuD,KAAKquD,sBAAsB/pC,QAEpB,IAAtBiqC,IAIXA,EAAkBD,YAAa,EAE3BC,EAAkBziC,OAClB9rB,KAAKwuD,gBAAgBlqC,KAItB4pC,oBAAP,SAAe9kD,GAAf,WACI,OAAO,IAAIjI,SAAQ,SAACC,EAASC,GAEzB,IAAI4oB,EAEE6E,EAAU7b,YAAW,WACvBgX,IACA5oB,EAAO,wBACR8G,EAAKsmD,8BAEFtkB,EAAMhiC,EAAKo1C,SAASn0C,GACtB+gC,GACAtrB,aAAaiQ,GACb1tB,EAAQ+oC,IAERlgB,EAAK9hB,EAAKumD,eAAc,SAACllB,GACjBA,EAAEpQ,IAAIhwB,KAAOA,IAGjByV,aAAaiQ,GACb7E,IACA7oB,EAAQooC,WAMjB0kB,0BAAP,SAAqB1+C,GACjB,OAAOxP,KAAKuT,UAAUhE,IAAI,WAAYC,IAGnC0+C,oBAAP,SAAe1+C,GACX,OAAOxP,KAAKuT,UAAUhE,IAAI,WAAYC,IAGnC0+C,sBAAP,SAAiB1+C,GACb,OAAOxP,KAAKuT,UAAUhE,IAAI,aAAcC,IAIrC0+C,4BAAP,SAAuB5pC,GACftkB,KAAKmuD,gBAAgB7pC,KACrBtkB,KAAKu9C,SAASj5B,GAAYtkB,KAAKmuD,gBAAgB7pC,UACxCtkB,KAAKmuD,gBAAgB7pC,UACrBtkB,KAAKquD,sBAAsB/pC,IAGtCtkB,KAAKuT,UAAUzD,QAAQ,WAAY9P,KAAKu9C,SAASj5B,yBCjIzD,cAuFA,OAtFkBtS,oBAAd,WACI,GAAsB,oBAAX5F,OACP,OAAQ,EAEZ,IAAKA,OAAO8F,YACR,OAAQ,EAEZ,IAAK9F,OAAO8F,YAAYC,QACpB,OAAQ,EAEZ,IAAMC,EAAMC,OAAOjG,OAAO8F,YAAYC,QAAQG,OAAO,EAAG,IACxD,OAAOC,MAAMH,IAAQ,EAAIA,GAGfJ,qBAAd,SACIizB,EACAjZ,EACAC,GAEA,IAAM0iC,EAAO,SAACr/C,GACV,IAAIlJ,EAAMkJ,EAIV,GAHIA,aAAiBxI,QACjBV,EAAMkJ,EAAMyB,SAEa,mBAAlBkb,EAKX,OAAO9qB,QAAQE,OAAO+E,GAJlB6lB,EAAc7lB,IAOtB,IACI,OAAO6+B,IACFnjC,MAAK,SAACF,GAIH,MAH+B,mBAApBoqB,GACPA,EAAgBpqB,GAEbA,KAEVoY,OAAM,SAAC1K,GACJ,OAAOq/C,EAAKr/C,MAEtB,MAAOY,GACL,OAAOy+C,EAAKz+C,KAIN8B,aAAd,SAAyBq9B,EAA+Buf,GAAxD,WAUI,OATgCA,EAAS9vC,KAAI,SAACxY,GAClC,IAAAuhB,SAAMssB,QAAKF,qBAAyBC,sBAE5C,MAAO,CACH2a,QAASvoD,EACTwoD,aAHY3mD,EAAK4mD,sBAAsB,CAAElnC,OAAMssB,MAAKF,QAAOC,UAAU7E,OAK1EnpC,MAAK,SAAC3C,EAAGhE,GAAM,OAAAA,EAAEuvD,aAAevrD,EAAEurD,gBAEN,GAAGD,SAGxB78C,2BAAd,SAAuCzO,EAAmCyrD,GACtE,IAAMnnC,EAAOpR,KAAKC,MAAMD,KAAKw4C,IAAID,EAAQnnC,KAAOmnC,EAAQnnC,MAAQmnC,EAAQE,iBAAmB3rD,EAAE0wC,OAAS,IAEtG,MAAO,CACHE,IAFQ19B,KAAKC,MAAMD,KAAKw4C,IAAID,EAAQ7a,IAAM6a,EAAQ7a,KAAO6a,EAAQG,kBAAoB5rD,EAAE2wC,QAAU,IAGjGrsB,SAIO7V,wBAAf,SAAqCo9C,EAA2BC,GAC5D,IAAMC,EAAMF,EAAGvnC,KACT0nC,EAAMH,EAAGjb,IACTqb,EAASF,EAAMF,EAAGnb,MAClBwb,EAASF,EAAMH,EAAGlb,OAElBwb,EAAML,EAAGxnC,KACT8nC,EAAMN,EAAGlb,IACTyb,EAASF,EAAML,EAAGpb,MAClB4b,EAASF,EAAMN,EAAGnb,OAKxB,OAHiBz9B,KAAKw4C,IAAI,EAAGx4C,KAAKq5C,IAAIN,EAAQI,GAAUn5C,KAAKw4C,IAAIK,EAAKI,IACrDj5C,KAAKw4C,IAAI,EAAGx4C,KAAKq5C,IAAIL,EAAQI,GAAUp5C,KAAKw4C,IAAIM,EAAKI,sBCpE9DvmD,EAAYb,EAAmCwnD,EAAoBt/C,EAA+Bu/C,EAA+C5pB,GAC7J,IAiCI6pB,EACAC,EAlCE38C,EAA8B06C,KAC9BzlC,EAAU/X,EAAOsN,UAAU,UAAU3U,GAErCR,EAAgBL,EAAQ3D,KACxBurD,EAAmC5nD,EAAQmpC,KAC7C0e,EAAe7nD,EAAQ8nD,IACvBxH,EAAiBtgD,EAAQ2D,MACzBo/B,EAAgB/iC,EAAQ5D,SAAW,GACjC2rD,EAAiC/nD,EAAQ8mC,OAC3CkhB,EAAsBhoD,EAAQoiC,WAC9B6lB,EAAkBjoD,EAAQ4mC,MAC1BshB,EAA0BloD,EAAQmoD,YAAc,GAChDC,EAAmBpoD,EAAQqoD,QAC3BC,EAAiCtoD,EAAQuoD,qBACzCC,EAA+BxoD,EAAQyoD,mBACvCC,EAA0B1oD,EAAQ2oD,cAClCC,EAA2C5oD,EAAQiI,SAGnD4gD,EAAsB7oD,EAAQ0mC,UAG9BoiB,EAAuB9oD,EAAQ8oD,YAG/BC,EAA2C/oD,EAAQpC,MAGnDorD,EAAsBhpD,EAAQipD,WAG9BC,EAAqBlpD,EAAQmpD,SAM7BC,EAA6C,GAG7CC,EAAcrpD,EAAQspD,WA4I1B,SAASC,EAAWC,EAA4C33C,EAAqD9K,GACjH,OAAO,IAAInO,SAAQ,SAACC,EAAoDC,GAEpE,IAqBI2wD,EACAC,EAtBEloC,EAAqBmoC,EAAeH,EAAYzB,GAClDlwC,GAAS,EACPve,EAAO,WACLue,IAGJA,GAAS,EACc,mBAAZhG,GACPA,EAAQ81C,GAEZ9uD,EAAQ8uD,GAEJ+B,IACAA,IACAA,OAA2B7mD,GAE3B4mD,IACAnzC,aAAamzC,GACbA,OAAiB5mD,KAKpB2e,IACDkoC,EAA2BE,GAAgB,SAAChoB,GACpCA,EAAI/gC,KAAO8mD,EAAa9mD,IAIvB8oD,EAAeH,EAAY5nB,EAAIkF,SAIpCxtC,QAKRkuD,EAAS+B,WAAW5B,EAAc6B,GAC7BjwD,MAAK,WAEEioB,EACAloB,IAKJmwD,EAAiB/+C,YAAW,WACxBpR,MACD,QAENmY,OAAM,SAACtY,GACiB,mBAAV4N,GACPA,EAAM5N,GAEVL,EAAOK,SA2fvB,SAAS0wD,EAAWC,EAAuBj4C,EAAqD9K,GAC5F,OAAO,IAAInO,SAAQ,SAACC,EAASC,GACzB0uD,EAASqC,WAAWlC,EAAcmC,GAC7BvwD,MAAK,WACF,IAAIwwD,OAAsClnD,IAAhBinD,GAA2C,IAAfjB,EAAsBA,IAAeiB,EAC3F,GAAIC,EAIA,MAHuB,mBAAZl4C,GACPA,EAAQ81C,GAEL9uD,EAAQ8uD,GAGnB,IAAMjmC,EAAKsoC,GAAoB,SAACpoB,GAC5BmoB,OAAsClnD,IAAhBinD,GAA8C,IAAlBloB,EAAI8E,UAAqB9E,EAAI8E,YAAcojB,EACzFloB,EAAI/gC,KAAOA,GAAMkpD,IACM,mBAAZl4C,GACPA,EAAQ81C,GAEZjmC,IACA7oB,EAAQ8uD,UAInBl2C,OAAM,SAACtY,GACiB,mBAAV4N,GACPA,EAAM5N,GAEVL,EAAOK,SA8BvB,SAASq4C,EAAcp1C,EAAcyV,EAAqD9K,GACtF,OAAO,IAAInO,SAAQ,SAACC,EAASC,GACzB0uD,EAAShW,cAAcmW,EAAcvrD,GAChC7C,MAAK,WACqB,mBAAZsY,GACPA,EAAQ81C,GAEZ9uD,EAAQ8uD,MAEXl2C,OAAM,SAACtY,GACiB,mBAAV4N,GACPA,EAAM5N,GAEVL,EAAOK,SAyDvB,SAAS8wD,IACL,OAAO,IAAIrxD,SAAQ,SAACC,GAChB,IAAM6oB,EAAKwoC,GAAiB,SAACrmD,GACrBA,EAAOhD,KAAO8mD,EAAa9mD,KAC3B6gB,IACA7oB,WAsKhB,SAASsxD,EAAaljD,GAClB,OAAO+D,EAAUhE,IAAI,eAAgBC,GAezC,SAASmjD,EAAYnjD,GAIjB,OAHI6hD,GACA7hD,EAAS0gD,GAEN38C,EAAUhE,IAAI,YAAaC,GAGtC,SAASojD,EAAWpjD,GAIhB,OAHK6hD,GACD7hD,EAAS0gD,GAEN38C,EAAUhE,IAAI,WAAYC,GAGrC,SAASqjD,EAAYrjD,GAIjB,MAHqB,cAAjB8hD,GACA9hD,EAAS0gD,GAEN38C,EAAUhE,IAAI,YAAaC,GAGtC,SAASsjD,EAAYtjD,GAIjB,MAHqB,cAAjB8hD,GACA9hD,EAAS0gD,GAEN38C,EAAUhE,IAAI,YAAaC,GAGtC,SAASujD,EAASvjD,GAId,MAHqB,WAAjB8hD,GACA9hD,EAAS0gD,GAEN38C,EAAUhE,IAAI,SAAUC,GAOnC,SAASwjD,EAAWxjD,GAChB,OAAO+D,EAAUhE,IAAI,WAAYC,GAGrC,SAAS+iD,EAAoB/iD,GACzB,OAAO+D,EAAUhE,IAAI,qBAAsBC,GAO/C,SAASijD,EAAiBjjD,GACtB,OAAO+D,EAAUhE,IAAI,eAAgBC,GAGzC,SAAS2iD,EAAgB3iD,GACrB,OAAO+D,EAAUhE,IAAI,iBAAkBC,GAW3C,SAASyjD,EAA6BzjD,GAClC,OAAO+D,EAAUhE,IAAI,gCAAiCC,GAkT1D,SAAS0jD,EAAyBC,GAC9B,IAAMzoB,EAAY+lB,EAAY0C,GAC9B,QAAyB,IAAdzoB,EACP,OAAmCA,EAZpBtmC,QAAO,SAACC,EAAM+uD,GAC7B,IAAMhnD,EAASinD,GAAYnsD,IAAIksD,GAI/B,OAHIhnD,GACA/H,EAAKnB,KAAKkJ,EAAOgtB,KAEd/0B,IACR,IAUP,SAASivD,IACL,GAAIhoB,EAASioB,kBACT,OAAOjoB,EAASioB,kBAEpB,GAAIjoB,GAAYA,EAASmd,MAAQnd,EAASmd,KAAKvzC,YAC3C,OAAOo2B,EAASmd,KAAKvzC,YAEzB,IAAMvB,EAAO6/C,IACb,OAAK7/C,EAIEA,EAAKkR,qBAJZ,EAOJ,SAAS2uC,IACL,QAA+B,IAApBpnD,OAAOO,UAA4BP,OAAOO,SAAS6mD,cAAe,CACzE,IAAM7/C,EAAOvH,OAAOO,SAAS6mD,cAAcpqD,GAC3C,OAAKuK,QACD,GAOZ,SAASu+C,EAAeuB,EAA2C3gC,GAC/D,IAAIohB,EAASuf,EAAUvf,OACnBD,EAAQwf,EAAUxf,MAClBwf,EAAUvf,OAASid,EAAUuC,YAC7Bxf,EAASid,EAAUuC,WAEnBD,EAAUvf,OAASid,EAAUwC,YAC7Bzf,EAASid,EAAUwC,WAEnBF,EAAUxf,MAAQkd,EAAUyC,WAC5B3f,EAAQkd,EAAUyC,UAElBH,EAAUxf,MAAQkd,EAAU0C,WAC5B5f,EAAQkd,EAAU0C,UAGtB,IAAMC,GAAkB5f,GAASphB,EAAQohB,SAAWA,EAC9C6f,GAAiB9f,GAAQnhB,EAAQmhB,QAAUA,EAC3C+f,GAAgBP,EAAU5rC,MAAOiL,EAAQjL,OAAS4rC,EAAU5rC,KAC5DosC,GAAeR,EAAUtf,KAAMrhB,EAAQqhB,MAAQsf,EAAUtf,IAE/D,OAAO2f,GAAmBC,GAAkBC,GAAiBC,EAgSjE,IAAM3H,EAAuB,CACzB4H,kBA7iBJ,gBAC4B9oD,IAApB8kD,EAAa9mD,KAGjB8mD,EAAa9mD,QAAKgC,EAClBmI,EAAUzD,QAAQ,UAAWogD,KAyiB7BiE,wBA3fJ,SAAiChuD,GACf,cAAVA,EACAkrD,GAAc,EACG,aAAVlrD,EACPkrD,GAAc,EAEdC,EAAenrD,EAGnBoN,EAAUzD,QAAQ3J,EAAO+pD,IAmfzBkE,mBA3kBJ,SAA4BC,GACxBxL,EAASwL,EACT9gD,EAAUzD,QAAQ,iBAAkBukD,EAAUnE,IA0kB9CoE,wBAlkBJ,SAAiCrlB,GACzBA,IAAcmiB,IAGlBA,EAAaniB,EACb17B,EAAUzD,QAAQ,qBAAsBogD,KA8jBxCqE,iBAxkBJ,SAA0BC,GACtBpE,EAAOoE,EACPjhD,EAAUzD,QAAQ,eAAgB0kD,EAAQtE,IAukB1CuE,4BA5jBJ,SAAqCjkD,GACjC2gD,EAAY3gD,EACZ+C,EAAUzD,QAAQ,mBAAoBogD,IA2jBtCwE,qBAxjBJ,SAA8B/vD,GAC1B2mC,EAAW3mC,EACX4O,EAAUzD,QAAQ,kBAAmBw7B,EAAU4kB,IAujB/CyE,2BArfJ,SAAoCjD,GAChCD,EAAYC,EACZn+C,EAAUzD,QAAQ,eAAgBogD,IAoflC0E,oBAjfJ,SAA6BvlB,GACrBihB,EAAQnc,MAAQ9E,EAAO8E,KAAOmc,EAAQzoC,OAASwnB,EAAOxnB,MAAQyoC,EAAQrc,QAAU5E,EAAO4E,OAASqc,EAAQpc,SAAW7E,EAAO6E,SAG9Hoc,EAAQnc,IAAM9E,EAAO8E,IACrBmc,EAAQzoC,KAAOwnB,EAAOxnB,KACtByoC,EAAQrc,MAAQ5E,EAAO4E,MACvBqc,EAAQpc,OAAS7E,EAAO6E,OAExB3gC,EAAUzD,QAAQ,iBAAkBogD,KAyepC2E,mBAteJ,SAA4BC,GACxBtE,EAASsE,EACTvhD,EAAUzD,QAAQ,gBAAiBogD,IAqenC6E,uBA/iBJ,SAAgCC,GAC5B,IAAMC,EAAuC,CAAC,WAAY,cAAe,QAAS,WAAW7wD,QAAO,SAACC,EAAWf,GAE5G,OADAe,EAAKf,GAAK0xD,EAAY1xD,GACfe,IACR,KAMoD,IAJ/BstD,EAAc7yC,KAAI,SAACo2C,GACvC,OAAOA,EAAIC,YAGKt9C,QAAQm9C,EAAYG,WACpCxD,EAAczuD,KAAK+xD,GAGvB1hD,EAAUzD,QAAQ,qBAAsBmlD,EAAW/E,IAkiBnDkF,yBA/hBJ,SAAkCC,GAC9B,IAAIC,EACJ3D,EAAgBA,EAAcvtD,QAAO,SAACC,EAAM6wD,GAMxC,OALIA,EAAIC,WAAaE,EACjBC,EAASJ,EAET7wD,EAAKnB,KAAKgyD,GAEP7wD,IACR,SAEY+G,IAAXkqD,GACA/hD,EAAUzD,QAAQ,uBAAwBwlD,EAAQpF,IAohBtDqF,yBAhhBJ,SAAkCP,GAC9B,IAAMM,EAAS3D,EAAc/nD,QAAO,SAACsrD,GACjC,OAAOA,EAAIC,WAAaH,EAAYG,YAGpCG,EAAO30D,OAAS,GAChB4S,EAAUzD,QAAQ,uBAAwBwlD,EAAO,GAAIpF,IA2gBzDsF,wBAreJ,SAAiC7qB,GAC7B4lB,EAAc5lB,EACdp3B,EAAUzD,QAAQ,sBAAuBogD,IAoezCuF,oBAjeJ,SAA6BjE,EAAoBR,GAC7CO,EAAcC,EACdT,EAAsBC,EACtBz9C,EAAUzD,QAAQ,iBAAkBogD,IA+dpCwF,4BA5cJ,SAAqCC,EAAmBC,GACpD,IAAIC,OACqB,IAAdF,GAA6BA,IAAcvsD,GAClD6nD,GAAiB,EACjB4E,EAAiB3F,IAEjBe,GAAiB,EACjB4E,EAAiBxC,GAAYnsD,IAAIyuD,GAAatC,GAAYnsD,IAAIyuD,GAAWv8B,SAAMhuB,GAEnF,IAAM0qD,EAAiBzC,GAAYnsD,IAAI0uD,GAAcvC,GAAYnsD,IAAI0uD,GAAYx8B,SAAMhuB,EAEvF,GAAI6lD,GAAkB6E,EAClB,IAAMC,EAAKD,EAAeE,uBAAsB,SAACC,EAAiCC,IACzEA,GAAWA,EAAQ9sD,MAAQ0sD,EAAe1sD,KAC3C2sD,IACAxiD,EAAUzD,QAAQ,wBAAyB+lD,EAAgBC,EAAgB5F,YAInF38C,EAAUzD,QAAQ,wBAAyB+lD,EAAgBC,EAAgB5F,IA0b/EiG,yBA7dJ,SAAkCzF,EAAwBE,GACtDH,EAAcC,GAAc,GAC5BC,EAAWC,GA4dXwF,mCAzdJ,SAA4CtF,GACxCD,EAAwBC,GAydxBuF,iCAtdJ,SAA0CrF,GAClCD,IAAwBC,IACxBD,EAAsBC,EACtBz9C,EAAUzD,QAAQ,gCAAiCogD,KAodvDoG,mBAvZJ,SAA4BC,EAAgCC,GACxD/lD,EAAO6Q,MAAM,gCAAgClY,qBAAqBmtD,EAASntD,IAC3E6mD,EAASsG,EACT5F,EAAW4F,EAASntD,GACpBmK,EAAUzD,QAAQ,gBAAiBogD,EAAcqG,EAAUC,IAoZ3DC,uBAhZJ,SAAgCC,GACxBA,GACAluC,EAAQlH,MAAM,yBAAyBlY,qBAAqBstD,EAAMttD,IAEtE6mD,EAASyG,GA6YTC,eA3bJ,SAAwBC,EAAuBC,GAC3CtF,EAAcqF,EACd7F,EAAsB8F,EACtBtjD,EAAUzD,QAAQ,WAAYogD,IAyb9B4G,eAlbJ,SAAwBtF,GACpBD,EAAcC,EAGd,IAAMvnC,EAAK1W,EAAUhE,IAAI,kBAAkB,SAAC46B,GACpCA,EAAI/gC,KAAOA,IACX6gB,IACA1W,EAAUzD,QAAQ,WAAYogD,QA4atC6G,qBAvbJ,SAA8B5sB,GAC1B52B,EAAUzD,QAAQ,kBAAmBq6B,IAubrC6sB,qBAxaJ,SAA8B7sB,GAC1B52B,EAAUzD,QAAQ,kBAAmBq6B,IAwarC8sB,wBAraJ,SAAiCpF,GAC7BD,EAAcC,EACdt+C,EAAUzD,QAAQ,sBAAuBogD,KAsa7C,MAAO,CACH92B,IAvTJ82B,EAAe,CACXtrD,WACI,OAAOgE,GAEXsM,kBACI,IAAMu2C,EAAauE,IACnB,OAAOvE,EAAaA,EAAWv2C,YAAYo+C,UAAwBloD,GAEvE8rD,mBACI,OAAOnH,EAASmH,cAEpBC,kBAAA,WACI,GAAI/qD,OAAOO,SACP,OAAOy5B,EAAIhZ,UAAUiE,MAAK,SAAC9wB,GAAM,OAAAA,EAAE+jB,WAAanc,EAAKiB,MAEzD,IAAMwD,EAAU0mD,IAChB,OAAO1mD,EAAU,CAAEsI,YAAatI,QAAYxB,GAEhDilD,UACI,OAAOD,GAEXhnD,KACA8C,YACI,OAAO28C,GAEXvJ,4BACI,OAAO6R,GAEX3gD,eACI,OAAO2gD,GAEXK,iBACI,MAA+B,QAAxBrB,EAAMnkD,cAA0BulD,OAAcnmD,GAEzDgsD,mBACI,OAAOzF,GAEXjgB,WACI,OAAOye,GAEXhqD,YACI,OAAOmrD,GAEXD,kBACI,OAAOA,GAEXpiB,gBACI,OAAOmiB,GAEXM,eACI,OAAOD,GAEX9sD,cACI,OAAO2mC,GAEX+D,aACI,OAAOihB,GAEXoD,gBACI,OAAOvC,EAAUuC,WAErBC,gBACI,OAAOxC,EAAUwC,WAErBC,eACI,OAAOzC,EAAUyC,UAErBC,eACI,OAAO1C,EAAU0C,UAErBiB,gBACI,OAAOtE,GAEX7lB,iBACI,OAAO4lB,GAEX8G,aACI,YAA2BjsD,IAApB8kD,EAAa9mD,IAExBstD,YACI,OAAOzG,GAGXW,cACI,OAAOD,GAGX2G,oBACI,OAAOpE,EAAyB,QAGpCqE,qBACI,OAAOrE,EAAyB,SAGpCsE,sBACI,OAAOtE,EAAyB,UAGpCuE,uBACI,OAAOvE,EAAyB,WAGpCpC,2BACI,OAAOD,GAGXvqC,iBACI,GAAIglB,EAASmd,KACT,OAAOnd,EAASmd,KAAKniC,WAEzB,IAAM3S,EAAO6/C,IACb,OAAK7/C,EAGEA,EAAK2S,gBAHZ,GAMJmtB,uBACI,GAAInI,EAASmd,KACT,OAAOnd,EAASmd,KAAKhV,iBAEzB,IAAM9/B,EAAO6/C,IACb,OAAK7/C,EAGEA,EAAK8/B,sBAHZ,GAMJ7H,iBACI,OAAOrjC,EAAQqjC,YAAc,YAGjCimB,iBACI,OAAOD,GAEX8F,aACI,OAAOC,GAAMC,WAAW1H,EAAa7gB,OAASjjC,OAAOO,SAAiBkrD,WAE1EC,SA1uCJ,SAAkB19C,EAAqD9K,GACnE,OAAO,IAAInO,SAAQ,SAACC,EAASC,GACzB0uD,EAAS+H,SAAS5H,GACbpuD,MAAK,WACF,GAAqB,cAAjBwvD,EAIA,MAHuB,mBAAZl3C,GACPA,EAAQ81C,GAEL9uD,EAAQ8uD,GAGnB,IAAMjmC,EAAK4oC,GAAY,SAAC1oB,GAChBA,EAAI/gC,KAAOA,GAAoB,cAAd+gC,EAAIhkC,QACE,mBAAZiU,GACPA,EAAQ81C,GAEZjmC,IACA7oB,EAAQ8uD,UAKnBl2C,OAAM,SAACtY,GACiB,mBAAV4N,GACPA,EAAM5N,GAEVL,EAAOK,UAitCnBq2D,QA5sCJ,SAAiB39C,EAAqD9K,GAClE,OAAO,IAAInO,SAAQ,SAACC,EAASC,GACzB0uD,EAASgI,QAAQ7H,GACZpuD,MAAK,WACF,GAAqB,WAAjBwvD,EAIA,MAHuB,mBAAZl3C,GACPA,EAAQ81C,GAEL9uD,EAAQ8uD,GAGnB,IAAMjmC,EAAK8oC,GAAS,SAAC5oB,GACb/gC,IAAO+gC,EAAI/gC,IAAoB,WAAd+gC,EAAIhkC,QACE,mBAAZiU,GACPA,EAAQ81C,GAEZjmC,IACA7oB,EAAQ8uD,UAInBl2C,OAAM,SAACtY,GACiB,mBAAV4N,GACPA,EAAM5N,GAEVL,EAAOK,UAorCnBs2D,SA/qCJ,SAAkB59C,EAAqD9K,GACnE,OAAO,IAAInO,SAAQ,SAACC,EAASC,GACzB0uD,EAASiI,SAAS9H,GACbpuD,MAAK,WACF,GAAqB,cAAjBwvD,EAIA,MAHuB,mBAAZl3C,GACPA,EAAQ81C,GAEL9uD,EAAQ8uD,GAGnB,IAAMjmC,EAAK6oC,GAAY,SAAC3oB,GACpB,GAAI/gC,IAAO+gC,EAAI/gC,IAAoB,cAAd+gC,EAAIhkC,MAKrB,MAJuB,mBAAZiU,GACPA,EAAQ81C,GAEZjmC,IACO7oB,EAAQ8uD,SAI1Bl2C,OAAM,SAACtY,GACiB,mBAAV4N,GACPA,EAAM5N,GAEVL,EAAOK,UAupCnBu2D,gBArwCJ,SAAyB79C,EAAqD9K,GAC1E,OAAO,IAAInO,SAAQ,SAACC,EAASC,GACzB,IAAM62D,EAA6B,WAAjB5G,EAA4BuB,EAAcE,EAC5DhD,EAASkI,gBAAgB/H,GACpBpuD,MAAK,WACF,IAAMmoB,EAAKiuC,GAAU,WACM,mBAAZ99C,GACPA,EAAQ81C,GAERjmC,GACAA,IAEJ7oB,EAAQ8uD,SAGfl2C,OAAM,SAACtY,GACiB,mBAAV4N,GACPA,EAAM5N,GAEVL,EAAOK,UAmvCnBy2D,SAnpCJ,SAAkB/9C,EAAqD9K,GACnE,OAAO,IAAInO,SAAQ,SAACC,EAASC,GACzB,GAAIgwD,EAIA,MAHuB,mBAAZj3C,GACPA,EAAQ81C,GAEL9uD,EAAQ8uD,GAEnBH,EAASoI,SAASjI,GACbpuD,MAAK,WACF,GAAIuvD,EAIA,MAHuB,mBAAZj3C,GACPA,EAAQ81C,GAEL9uD,EAAQ8uD,GAGnB,IAAMjmC,EAAK0oC,GAAY,SAACxoB,GAChBA,EAAI/gC,KAAOA,IACY,mBAAZgR,GACPA,EAAQ81C,GAEZjmC,IACA7oB,EAAQ8uD,UAKnBl2C,OAAM,SAACtY,GACiB,mBAAV4N,GACPA,EAAM5N,GAEVL,EAAOK,UAonCnB02D,OA/mCJ,SAAgBh+C,EAAqD9K,GACjE,OAAO,IAAInO,SAAQ,SAACC,EAASC,GACzB,IAAKgwD,EAID,MAHuB,mBAAZj3C,GACPA,EAAQ81C,GAEL9uD,EAAQ8uD,GAEnBH,EAASqI,OAAOlI,GACXpuD,MAAK,WACF,IAAKuvD,EAID,MAHuB,mBAAZj3C,GACPA,EAAQ81C,GAEL9uD,EAAQ8uD,GAGnB,IAAMjmC,EAAK2oC,GAAW,SAACzoB,GACfA,EAAI/gC,KAAOA,IACY,mBAAZgR,GACPA,EAAQ81C,GAEZjmC,IACA7oB,EAAQ8uD,UAKnBl2C,OAAM,SAACtY,GACiB,mBAAV4N,GACPA,EAAM5N,GAEVL,EAAOK,UAglCnB22D,eA3kCJ,SAAwBj+C,EAAqD9K,GACzE,OAAO,IAAInO,SAAQ,SAACC,EAASC,GACzB,IAAM62D,EAAY7G,EAAcuB,EAAaD,EAC7C5C,EAASsI,eAAenI,GACnBpuD,MAAK,WACFo2D,GAAU,SAAC/tB,GACHA,EAAI/gC,KAAOA,IACY,mBAAZgR,GACPA,EAAQ81C,GAEZ9uD,EAAQ8uD,UAInBl2C,OAAM,SAACtY,GACiB,mBAAV4N,GACPA,EAAM5N,GAEVL,EAAOK,UA0jCnBytC,MA3xCJ,SAAe/0B,EAAqD9K,GAChE,OAAO,IAAInO,SAAQ,SAACC,EAASC,GACzB0uD,EAAS5gB,MAAM+gB,GACVpuD,MAAK,WACqB,mBAAZsY,GACPA,EAAQ81C,GAEZ9uD,EAAQ8uD,MAEXl2C,OAAM,SAACtY,GACiB,mBAAV4N,GACPA,EAAM5N,GAEVL,EAAOK,UA+wCnB42D,SA9yCJ,SAAkBl+C,EAAqD9K,GACnE,OAAO,IAAInO,SAAQ,SAACC,EAASC,GACzB0uD,EAASuI,SAASpI,GACbpuD,MAAK,WACqB,mBAAZsY,GACPA,EAAQ81C,GAEZ9uD,EAAQ8uD,MAEXl2C,OAAM,SAACtY,GACiB,mBAAV4N,GACPA,EAAM5N,GAEVL,EAAOK,UAkyCnBowD,aACAyG,SA78CJ,SAAkBlE,EAAkBj6C,EAAqD9K,GACrF,OAAO,IAAInO,SAAiC,SAACC,EAASC,GAClD0uD,EAASwI,SAASrI,EAAcmE,GAC3BvyD,MAAK,WACqB,mBAAZsY,GACPA,EAAQ81C,GAEZ9uD,EAAQ8uD,MAEXl2C,OAAM,SAACtY,GACiB,mBAAV4N,GACPA,EAAM5N,GAEVL,EAAOK,UAi8CnB82D,SAjhDJ,SAAkBtR,EAAmC9sC,EAAqD9K,GACtG,IAAK43C,GAAuC,IAA9B1nD,OAAO2E,KAAK+iD,GAAOvmD,QAAgBnB,OAAO2E,KAAK+iD,GAAOn3B,OAAM,SAACzrB,GAAQ,OAACA,KAGhF,OADAgL,EADMmpD,EAAa,4BAA4BhkD,KAAKC,UAAUwyC,IAEvD/lD,QAAQE,OAAO,IAAIyF,MAAM2xD,IAGpC,GAAIvR,QAAyB97C,IAAhB87C,EAAM/X,MAAqB,CAEhC,IAAMspB,EADV,GAA2B,kBAAhBvR,EAAM/X,MAGb,OADA7/B,EADMmpD,EAAa,mEAAmEhkD,KAAKC,UAAUwyC,IAE9F/lD,QAAQE,OAAO,IAAIyF,MAAM2xD,KACT,IAAhBvR,EAAM/X,OAEb9/B,QAAQsL,KAAK,mCAIrB,OAAIusC,QAA0B97C,IAAjB87C,EAAMX,QAAgD,kBAAjBW,EAAMX,QAEpDj3C,EADMmpD,EAAa,sCAAsChkD,KAAKC,UAAUwyC,IAEjE/lD,QAAQE,OAAO,IAAIyF,MAAM2xD,KAG7Bd,GAAMe,oBACT,WAAM,OAAA3I,EAASyI,SAAStI,EAAchJ,KACtC9sC,EACA9K,IAu/CJqpD,SA3+CJ,SAAkBC,EAAgBx+C,EAAqD9K,GACnF,GAAItP,KAAK44D,QAAUA,EAAO,CACtB,IAAMH,EAAa,oCAAoCG,MAEvD,OADAtpD,EAAMmpD,GACCt3D,QAAQE,OAAO,IAAIyF,MAAM2xD,IAGpC,OAAOd,GAAMe,oBACT,WAAM,OAAA3I,EAAS4I,SAASzI,EAAc0I,KACtCx+C,EACA9K,IAk+CJupD,aAp/CJ,SAAsBC,EAAuC1+C,EAAqD9K,GAC9G,OAAOqoD,GAAMe,oBACT,WAAM,OAAA3I,EAAS8I,aAAa3I,EAAc4I,KAC1C1+C,EACA9K,IAi/CJypD,mBA/9CJ,SAA4BC,EAA6C5+C,EAAqD9K,GAC1H,IAAK0pD,GAAex5D,OAAO2E,KAAK60D,GAAajpC,OAAM,SAACxuB,GAAU,YAAU6J,IAAV7J,KAAsB,CAChF,IAAMk3D,EAAa,wBAAwBhkD,KAAKC,UAAUskD,GAE1D,OADA1pD,EAAMmpD,GACCt3D,QAAQE,OAAO,IAAIyF,MAAM2xD,IAGpC,OAAOd,GAAMe,oBACT,WAAM,OAAA3I,EAASgJ,mBAAmB7I,EAAc8I,KAChD5+C,EACA9K,IAs9CJ2pD,SAljDJ,SAAkBzE,EAAgBp6C,EAAqD9K,GACnF,OAAO,IAAInO,SAAQ,SAACC,EAASC,GACzB0uD,EAASkJ,SAAS/I,EAAcsE,GAC3B1yD,MAAK,WACF,GAAI0yD,IAAWpE,EAIX,MAHuB,mBAAZh2C,GACPA,EAAQ81C,GAEL9uD,EAAQ8uD,GAEnB,IAAMjmC,EAAKyoC,GAAa,SAACrC,EAAalmB,GAC9BA,EAAI/gC,KAAOA,GAAMinD,IAAQlmB,EAAIkmB,MACN,mBAAZj2C,GACPA,EAAQ81C,GAEZjmC,IACA7oB,EAAQ8uD,UAInBl2C,OAAM,SAACtY,GACiB,mBAAV4N,GACPA,EAAM5N,GAEVL,EAAOK,UA2hDnBw3D,eA93CJ,SAAwBC,EAAuC/+C,EAAqD9K,GAChH,OAAO,IAAInO,SAAQ,SAACC,EAASC,GACzB,YAA0B,IAAf83D,EACc,mBAAV7pD,OACPA,EAAM,uBAGVjO,EAAO,uBAIiB+J,IAAxB+tD,EAAWhE,SACU,mBAAV7lD,OACPA,EAAM,oBAGVjO,EAAO,oBAIoB+J,IAA3B+tD,EAAWC,YACU,mBAAV9pD,OACPA,EAAM,uBAGVjO,EAAO,uBAGX0uD,EAASmJ,eAAehJ,EAAciJ,GACjCr3D,MAAK,WACqB,mBAAZsY,GACPA,EAAQ81C,GAEZ9uD,EAAQ8uD,MAEXl2C,OAAM,SAACtY,GACiB,mBAAV4N,GACPA,EAAM5N,GAEVL,EAAOK,UAw1CnB23D,kBAn1CJ,SAA2BlE,EAAkB/6C,EAAqD9K,GAC9F,OAAO,IAAInO,SAAQ,SAACC,EAASC,GACzB,QAAiB+J,IAAb+pD,GAAuC,KAAbA,EAC1B,MAAqB,mBAAV7lD,OACPA,EAAM,oBAGVjO,EAAO,eAIX0uD,EAASsJ,kBAAkBnJ,EAAciF,GACpCrzD,MAAK,WACqB,mBAAZsY,GACPA,EAAQ81C,GAEZ9uD,EAAQ8uD,MAEXl2C,OAAM,SAACtY,GACiB,mBAAV4N,GACPA,EAAM5N,GAEVL,EAAOK,UA8zCnB0wD,aACAkH,KAAM,WAAM,OAAAlH,GAAW,IACvBmH,KAAM,WAAM,OAAAnH,GAAW,IACvBoH,OAAQ,SAAC9B,GAAW,OAAA5F,EAAW6F,GAAM8B,yBAAyBvJ,EAAa7gB,OAAQqoB,GAAUxH,EAAawH,UAC1GpmD,MA3kDJ,SAAe8I,EAAqD9K,GAChE,OAAO,IAAInO,SAAQ,SAACC,EAASC,GACzB0uD,EAASz+C,MAAM4+C,GACVpuD,MAAK,WACqB,mBAAZsY,GACPA,EAAQ81C,GAEZ9uD,EAAQ8uD,MAEXl2C,OAAM,SAACtY,GACiB,mBAAV4N,GACPA,EAAM5N,GAEVL,EAAOK,UA+jDnBg4D,KArkCJ,SAAc9tD,EAA0CunD,EAA6C/4C,EAAqD9K,GACtJ,IAAIqqD,EAiCkCC,EAhCtC,IAAKhuD,EACD,OAAOzK,QAAQE,OAAO,+CAA+CuK,GAGzE,GAAsB,iBAAXA,EAAqB,CAC5B,IAAMiuD,EAAexG,GAAYnsD,IAAI0E,GACrC,IAAKiuD,EACD,OAAO14D,QAAQE,OAAO,IAAIyF,MAAM,8DAA8D8E,IAElG+tD,EAAoBE,EAAazgC,IAAIs9B,WAErCiD,EAAoB/tD,EAAO8qD,MAG/B,OAAOv1D,QAAQ4d,IAAI,EAkBmB66C,EAjBDD,EAkB9B,IAAIx4D,SAAQ,SAACC,EAASC,GACzB,IAAMsmD,EAAQiS,EAAYE,eAAc,SAAC13D,EAAGgK,GACpC8jD,EAAa9mD,KAAOgD,EAAOhD,KAC3Bu+C,IACAvmD,YArBR2uD,EAAS2J,KAAKxJ,EAActkD,EAAQunD,KAEnCrxD,MAAK,WAIF,MAHuB,mBAAZsY,GACPA,EAAQ81C,GAELA,KAEVl2C,OAAM,SAACtY,GAIJ,MAHqB,mBAAV4N,GACPA,EAAM5N,GAEHA,MAwiCfq4D,WAh3BJ,SAAoBC,GAChB,OAAO,IAAI74D,SAAQ,SAACC,EAASC,GACzB0uD,EAASgK,WAAW7J,EAAc8J,GAC7Bl4D,MAAK,WACFV,EAAQ8uD,MAEXl2C,OAAM,SAACtY,GACJL,EAAOK,UA02BnBu4D,WAr2BJ,WACI,OAAO,IAAI94D,SAAQ,SAACC,EAASC,GACzB0uD,EAASkK,WAAW/J,GACfpuD,MAAK,WACFV,EAAQ8uD,MAEXl2C,OAAM,SAACtY,GACJL,EAAOK,UA+1BnBq4C,gBACAmgB,KAx0BJ,SAAc9/C,EAAqD9K,GAC/D,OAAI4gD,EAAawB,UACU,mBAAZt3C,GACPA,EAAQ81C,GAEL/uD,QAAQC,QAAQ8uD,IAGpB,IAAI/uD,SAAQ,SAACC,EAASC,GACzB0uD,EAASmK,KAAKhK,GACTpuD,MAAK,WAAM,OAAA0wD,OACX1wD,MAAK,WACqB,mBAAZsY,GACPA,EAAQ81C,GAEZ9uD,EAAQ8uD,MAEXl2C,OAAM,SAACtY,GACiB,mBAAV4N,GACPA,EAAM5N,GAEVL,EAAOK,UAozBnBy4D,OA/yBJ,SAAgB//C,EAAqD9K,GACjE,OAAK4gD,EAAawB,SAOX,IAAIvwD,SAAQ,SAACC,EAASC,GACzB0uD,EAASoK,OAAOjK,GACXpuD,MAAK,WAAM,OAAA0wD,OACX1wD,MAAK,WACqB,mBAAZsY,GACPA,EAAQ81C,GAEZ9uD,EAAQ8uD,MAEXl2C,OAAM,SAACtY,GACiB,mBAAV4N,GACPA,EAAM5N,GAEVL,EAAOK,UAnBQ,mBAAZ0Y,GACPA,EAAQ81C,GAEL/uD,QAAQC,QAAQ8uD,KA2yB3BkK,QA3wBJ,SAAiBhgD,EAAkC9K,GAC/C,OAAO,IAAInO,SAAQ,SAACC,EAASC,GAEzB0uD,EAASqK,QAAQlK,GACZpuD,MAAK,SAACu4D,GACoB,mBAAZjgD,GACPA,EAAQigD,GAEZj5D,EAAQi5D,MAEXrgD,OAAM,SAACtY,GACiB,mBAAV4N,GACPA,EAAM5N,GAEVL,EAAOK,UA8vBnB44D,QAzvBJ,SAAiBC,EAAqBngD,EAAqD9K,GACvF,OAAO,IAAInO,SAAQ,SAACC,EAASC,GACzB0uD,EAASuK,QAAQpK,EAAcqK,GAC1Bz4D,MAAK,WACqB,mBAAZsY,GACPA,EAAQ81C,GAEZ9uD,EAAQ8uD,MAEXl2C,OAAM,SAACtY,GACiB,mBAAV4N,GACPA,EAAM5N,GAEVL,EAAOK,UA6uBnB4rC,cAxuBJ,SAAuB3C,EAAoBvwB,EAAqD9K,GAC5F,OAAO,IAAInO,SAAQ,SAACC,EAASC,GACzB0uD,EAASziB,cAAc4iB,EAAcvlB,GAChC7oC,MAAK,WACqB,mBAAZsY,GACPA,EAAQ81C,GAEZ9uD,EAAQ8uD,MAEXl2C,OAAM,SAACtY,GACiB,mBAAV4N,GACPA,EAAM5N,GAEVL,EAAOK,UA4tBnB84D,cAzrBJ,SAA6BC,wEACzB,IAAKA,EACD,MAAM,IAAI3zD,MAAS2zD,2BAEvB,SAAO1K,EAASyK,cAActK,EAAcuK,WAsrB5CC,UA9hCJ,SAAmBC,EAAuC9qD,EAAeuK,EAAqD9K,GAC1H,OAAO,IAAInO,SAAQ,SAACC,EAASC,GACzB,IAAIu5D,EACEC,EAAyB3K,EAAa9mD,GACtC6zB,EAAuB,0GAA4GizB,EAAa9mD,GAEtJ,GAAKuxD,EAAL,CAKA,GAAmB,iBAARA,EACPC,EAAiBD,MACd,CAAA,QAAsB,IAAXA,EAAIvxD,GAIlB,YADA/H,EAAO47B,GAFP29B,EAAiBD,EAAIvxD,GAMzB,IAAM0xD,EAAmB,CACrBF,iBACAC,kBAGAhrD,IACAirD,EAAYjrD,MAAQA,GAGxB,IAAMkrD,EAAY1H,GAAYnsD,IAAI4zD,EAAYF,gBAAgBxhC,IACxDnP,EAAK8wC,EAAUC,YAAW,SAAC7wB,GACzBA,EAAI/gC,KAAO2xD,EAAU3xD,KACE,mBAAZgR,GACPA,EAAQ81C,GAEZjmC,IACA7oB,EAAQ8uD,OAIhBH,EAAS2K,UAAUxK,EAAc4K,GAC5B9gD,OAAM,SAACtY,GACiB,mBAAV4N,GACPA,EAAM5N,GAEVuoB,IACA5oB,EAAOK,WAvCXL,EAAO47B,OAwhCfg+B,UA5+BJ,SAAmBC,EAAmC9gD,EAAqD9K,GACvG,OAAO,IAAInO,SAAQ,SAACC,EAASC,GACzB,IAAMy5D,EAAmB,CAAEx2C,SAAU4rC,EAAa9mD,IAC5C+xD,EAAyCD,GAAO,QAEnB,IAAxBC,EAAS/b,aACmB,iBAAxB+b,EAAS/b,WAChB0b,EAAY1b,WAAa+b,EAAS/b,gBACO,IAA3B+b,EAAS/b,WAAWh2C,KAClC0xD,EAAY1b,WAAa+b,EAAS/b,WAAWh2C,SAGP,IAA/B+xD,EAAS9b,oBAChByb,EAAYzb,kBAAoB8b,EAAS9b,wBAGf,IAAnB8b,EAASlnB,QAChB6mB,EAAY7mB,MAAQknB,EAASlnB,YAGF,IAApBknB,EAASjnB,SAChB4mB,EAAY5mB,OAASinB,EAASjnB,cAIP,IAApBinB,EAAS9rB,SAChByrB,EAAYzrB,OAAS8rB,EAAS9rB,aAGI,IAA3B8rB,EAASC,gBAChBN,EAAYM,cAAgBD,EAASC,eAGzC,IAAIC,GAAwB,EACxBC,GAAgB,EAEdC,EAAehoD,EAAUhE,IAAI,2BAAoB46B,GACnD,IAAMmoB,OAAiDlnD,IAA3B+vD,EAASC,eAA+BD,EAASC,gBAAkBjxB,EAAI6mB,mBAC/F5nD,IAAO+gC,EAAI/gC,IAAMkpD,IACjB+I,GAAwB,EACxBE,IACID,IACuB,mBAAZlhD,GACPA,EAAQ81C,GAEZ9uD,EAAQ8uD,GACkB,mBAAfsL,GACPA,SAMVA,EAAaxI,GAAW,SAAC7oB,GACvB/gC,IAAO+gC,EAAI/gC,KACXkyD,GAAgB,EAChBE,IACIH,IACuB,mBAAZjhD,GACPA,EAAQ81C,GAEZ9uD,EAAQ8uD,GACoB,mBAAjBqL,GACPA,SAMhBxL,EAASkL,UAAU/K,EAAc4K,GAC5B9gD,OAAM,SAACtY,GACiB,mBAAV4N,GACPA,EAAM5N,GAEV85D,IACAD,IACAl6D,EAAOK,UAi6BnB+5D,oBA1tBJ,SAA6BC,EAA+BthD,EAAqD9K,GAC7G,OAAO,IAAInO,SAAQ,SAACC,EAASC,GACzB0uD,EAAS0L,oBAAoBvL,EAAcwL,GACtC55D,MAAK,WACF,GAAIivD,IAAwB2K,EAKxB,MAJuB,mBAAZthD,GACPA,EAAQ81C,GAGL9uD,EAAQ8uD,GAEnB,IAAMjmC,EAAKgpC,GAA6B,SAAC9oB,GACjCA,EAAI/gC,KAAOA,GAAM+gC,EAAI6mB,qBAAuB0K,IACrB,mBAAZthD,GACPA,EAAQ81C,GAEZjmC,IACA7oB,EAAQ8uD,UAInBl2C,OAAM,SAACtY,GACiB,mBAAV4N,GACPA,EAAM5N,GAEVL,EAAOK,UAksBnBi6D,UAtrBJ,SAAmB5uD,GACf,OAAOgjD,EAAS4L,UAAUzL,EAAcnjD,IAsrBxC6uD,cAnrBJ,SAAuB7uD,GACnB,OAAOgjD,EAAS6L,cAAc1L,EAAa9mD,GAAI2D,IAmrB/C8uD,cAhrBJ,SAAuBC,GACnB,OAAO/L,EAAS8L,cAAc3L,EAAa9mD,GAAI0yD,IAAW,IAgrB1DC,cA/pBJ,SAAuBlK,EAAoBz3C,EAAqD9K,GAC5F,OAAOqoD,GAAMe,oBAA4C,WACrD,GAAInmD,MAAMs/C,GACN,MAAM,IAAI/qD,MAAM,8BAEpB,OAAOipD,EAASgM,cAAc7L,EAAc2B,KAC7Cz3C,EAAS9K,IA0pBZ0sD,OA9qBJ,SAAgB5hD,EAAqD9K,GACjE,OAAOqoD,GAAMe,oBAA4C,WACrD,OAAO3I,EAASiM,OAAO9L,KACxB91C,EAAS9K,IA4qBZ2sD,QAxqBJ,SAAiB7hD,EAAqD9K,GAClE,OAAOqoD,GAAMe,oBAA4C,WACrD,OAAO3I,EAASkM,QAAQ/L,KACzB91C,EAAS9K,IAsqBZ4sD,aAzpBJ,WACI,OAAOnM,EAASmM,aAAahM,IAypB7BiM,QAtpBJ,SAAiBC,GACb,OAAOrM,EAASoM,QAAQjM,EAAckM,IAspBtCC,MAnpBJ,SAAeC,GACX,IAAMC,EAA6B,CAC/BC,aAAa,GAOjB,MAJ+B,kBAApBF,IACPC,EAAaC,YAAcF,GAGxBvM,EAASsM,MAAMnM,EAAcqM,IA4oBpCE,QAhoBJ,SAAiBjtD,GACb,OAAO+D,EAAUhE,IAAI,UAAWC,IAgoBhCkjD,eACAgK,eAvoBJ,SAAwBltD,GAEpB,OADAA,EAAS0gD,EAAahkD,MAAOgkD,GACtB38C,EAAUhE,IAAI,iBAAkBC,IAsoBvCmtD,mBA3nBJ,SAA4BntD,GACxB,OAAO+D,EAAUhE,IAAI,qBAAsBC,IA2nB3CotD,qBAxnBJ,SAA8BptD,GAC1B,OAAO+D,EAAUhE,IAAI,uBAAwBC,IAwnB7CqtD,qBArnBJ,SAA8BrtD,GAC1B,OAAO+D,EAAUhE,IAAI,uBAAwBC,IAqnB7CmjD,cACAC,aACAE,cACAD,cACAE,WACAiI,WAplBJ,SAAoBxrD,GAChB,OAAO+D,EAAUhE,IAAI,WAAYC,IAolBjCwjD,aACAT,sBACAuK,iBA3kBJ,SAA0BttD,GACtB,OAAO+D,EAAUhE,IAAI,kBAAmBC,IA2kBxCijD,mBACAN,kBACA4K,oBA9jBJ,SAA6BvtD,GACzB,OAAO+D,EAAUhE,IAAI,sBAAuBC,IA8jB5CwtD,eAnkBJ,SAAwBxtD,GACpB,OAAO+D,EAAUhE,IAAI,gBAAiBC,IAmkBtCytD,eAhjBJ,SAAwBztD,GACpB,OAAO+D,EAAUhE,IAAI,gBAAiBC,IAgjBtC0tD,iBAzjBJ,SAA0B1tD,GACtB,OAAO+D,EAAUhE,IAAI,kBAAmBC,IAyjBxC2tD,iBAtjBJ,SAA0B3tD,GACtB,OAAO+D,EAAUhE,IAAI,kBAAmBC,IAsjBxCwmD,sBA/iBJ,SAA+BxmD,GAC3B,OAAO+D,EAAUhE,IAAI,wBAAyBC,IA+iB9CyjD,+BACAmK,UA7iBJ,SAAmB5tD,GACf,IAAKy7B,GAAgBz7B,GACjB,MAAM,IAAI1I,MAAM,iCAYpB,OAAOipD,EAASqN,WARgB,SAAChjD,EAAqB9K,GAClD,IAAMwD,EAAUtD,IACZsD,GAAWA,EAAQhR,KACnBgR,EAAQhR,KAAKsY,GAASJ,MAAM1K,GAE5B8K,MAGgChR,IAgiBxCi0D,aA7hBJ,SAAsB7tD,GAClB,IAAKy7B,GAAgBz7B,GACjB,MAAM,IAAI1I,MAAM,iCAYpB,OAAOipD,EAASsN,cARuB,SAACjjD,EAAqB9K,EAAmBguD,GAC5E,IAAMxqD,EAAUtD,EAAS8tD,GACrBxqD,GAAWA,EAAQhR,KACnBgR,EAAQhR,KAAKsY,GAASJ,MAAM1K,GAE5B8K,MAGmChR,IAghB3Cm0D,oBA7gBJ,SAA6B/tD,GACzB,IAAKy7B,GAAgBz7B,GACjB,MAAM,IAAI1I,MAAM,iCAEpB,OAAOyM,EAAUhE,IAAI,sBAAuBC,IA2gB5CguD,WACI,OA9SEC,EAAapK,GAAYna,KACH,QAAxBiX,EAAMnkD,cACC,GAEJxM,OAAO2E,KAAKs5D,GAAYr5D,QAAO,SAACC,EAAM8lC,GACzC,IAAM/9B,EAAwBqxD,EAAWtzB,GAQzC,OAPI/9B,GACGA,EAAOgtB,IAAIo4B,iBACsB,IAA1BplD,EAAOgtB,IAAIo4B,iBACiB,IAA5BtB,EAAasB,YACpBplD,EAAOgtB,IAAIo4B,aAAetB,EAAasB,YAC1CntD,EAAKnB,KAAKkJ,EAAOgtB,KAEd/0B,IACR,IAfP,IACUo5D,GAiTNzM,yBACI,OAAOD,GAGXG,oBACI,OAAOD,GAIXyM,kBACI,OAAOv8D,QAAQC,QAAQgvD,IAG3BuN,oBACI,OAAOx8D,QAAQC,QAAQynD,IAG3B+U,UAAA,WACI,OAAOz8D,QAAQC,QAAQkvD,IAG3BuN,WAAA,WACI,OAAO18D,QAAQC,QAAQkqC,IAG3B0O,WAAA,SAAWr1C,GACP,OAAOo1C,EAAcp1C,IAIzBm5D,SAAA,SAAS7pB,EAAgBC,GACrB,OAAO4d,EAAW,CAAE7d,QAAOC,YAI/B6pB,OAAA,SAAO5pB,EAActsB,GACjB,OAAOiqC,EAAW,CAAE3d,MAAKtsB,UAGvBm2C,gBAAN,4FAGI,OADMC,EAAc9M,EAAkB+M,+BAI/B7K,GAAYna,KAAK+kB,yBAAa7kC,aAF1BhuB,UAKT+yD,gBAAN,gFAEI,SAAO3+D,OAAO2E,KAAKkvD,GAAYna,MAC1Bp6B,KAAI,SAACxa,GAAQ,OAAA+uD,GAAYna,KAAK50C,GAAK80B,OACnCxvB,QAAO,SAAC4/B,GAEL,OADkBA,EAAEh5B,SAAiB0tD,mBACjB90D,cAyChCg1D,OAAQ9R,OC14BD,eAj5Bf,aAGYtsD,eAA8BiuD,KA44B1C,OA14BIzuD,sBAAW6+D,gCAAX,WACI,OAAOr+D,KAAKs+D,2CAGTD,iBAAP,SACIj4B,EACA93B,GAEAtO,KAAKomC,IAAMA,EACXpmC,KAAKs+D,UAAYhwD,GAGd+vD,kBAAP,SACInO,GADJ,WAGI,OAAO,IAAI/uD,SAAQ,SAACC,EAASC,GACzB8G,EAAK2H,QAAQ,QAAS,CAAEwU,SAAU4rC,EAAa9mD,KAC1CtH,MAAK,WACFV,EAAQ8uD,MAEXl2C,OAAM,SAACtY,GACJL,EAAOK,UAKhB28D,qBAAP,SACInO,EACAsE,GAFJ,WAII,OAAO,IAAIrzD,SAAQ,SAACC,EAASC,GACzB8G,EAAK2H,QAAQ,WAAY,CACrBwU,SAAU4rC,EAAa9mD,GACvBb,QAAS,CACL8nD,IAAKmE,KAGR1yD,MAAK,WACFV,EAAQ8uD,MAEXl2C,OAAM,SAACtY,GACJL,EAAOK,UAMV28D,qBAAb,SACInO,EACAhJ,mIAgCA,OA9BMqX,EAAqC,GACrCC,EAAO,SAAC1rD,GAA0B,OAAAyrD,EAAcr7D,KAAK4P,SAEvC1H,IAAhB87C,EAAM/X,OAAwB+gB,EAAa4E,WAC3C0J,EAAKtO,EAAa/gB,cAID/jC,IAAjB87C,EAAMX,SACA8L,GAAenL,EAAMX,OAC3BiY,EAAKtO,EAAakC,WAAWC,UAGbjnD,IAAhB87C,EAAM0R,OACN4F,EAAKtO,EAAayI,SAASzR,EAAM0R,aAGZxtD,IAArB87C,EAAMuX,iBAA0DrzD,IAA7B87C,EAAcwX,eACjCxX,EAAMuX,WAAhBE,YAA+BzX,EAAcwX,WACnDF,EAAKtO,EAAasK,cAAcmE,KAIhC9K,EAEA3M,WAFUyM,EAEVzM,YAFqB0M,EAErB1M,WAF+BwM,EAE/BxM,YADA0X,EACA1X,aADY2X,EACZ3X,gBAD2B4X,EAC3B5X,kBAD4C6X,EAC5C7X,gBAD2D8X,EAC3D9X,gBAEJsX,EAAKtO,EAAa6I,mBAAmB,CAAElF,WAAUF,YAAWC,WAAUF,eACtE8K,EAAKtO,EAAa2I,aAAa,CAAE+F,aAAYC,gBAAeC,kBAAiBC,gBAAeC,sBAEtF79D,QAAQ4d,IAAIw/C,WAElB,OAFAxwD,YAEOmiD,WAGJmO,+BAAP,SACInO,EACA8I,GAFJ,WAII,OAAO,IAAI73D,SAAQ,SAACC,EAASC,GACzB8G,EAAK2H,QAAQ,qBAAsB,CAC/BwU,SAAU4rC,EAAa9mD,GACvBb,QAASywD,IACVl3D,MAAK,WACJV,EAAQ8uD,MACTl2C,MAAM3Y,OAIJg9D,0BAAb,SAA2B70B,EAA4Bk1B,+FACnD,SAAM1+D,KAAK8P,QAAQ,gBAAiB,CAAEwU,SAAUklB,EAAEpgC,GAAIb,QAAS,CAAEm2D,wBACjE,OADAv3D,YACOqiC,WAGJ60B,yBAAP,SACInO,EACA+O,GAFJ,WAII,OAAO,IAAI99D,SAAQ,SAACC,EAASC,GACzB8G,EAAK2H,QAAQ,eAAgB,CACzBwU,SAAU4rC,EAAa9mD,GACvBb,QAAS02D,IACVn9D,MAAK,WACJV,EAAQ8uD,MACTl2C,MAAM3Y,OAIVg9D,qBAAP,SACInO,EACA0I,GAFJ,WAII,OAAO,IAAIz3D,SAAQ,SAACC,EAASC,GACzB8G,EAAK2H,QAAQ,WAAY,CACrBwU,SAAU4rC,EAAa9mD,GACvBb,QAAS,CAAEqwD,WACZ92D,MAAK,WACJV,EAAQ8uD,MACTl2C,MAAM3Y,OAGVg9D,qBAAP,SACInO,EACAmE,GAFJ,WAII,OAAO,IAAIlzD,SAAQ,SAACC,EAASC,GACzB,IAAMkH,EAAU,CACZ+b,SAAU4rC,EAAa9mD,GACvBb,QAAS,CACL2D,MAAOmoD,IAIflsD,EAAK2H,QAAQ,WAAYvH,GACpBzG,MAAK,WACFV,EAAQ8uD,MAEXl2C,OAAM,SAACtY,GACJL,EAAOK,UAOhB28D,uBAAP,SACInO,EACA6B,GAFJ,WAII,OAAO,IAAI5wD,SAAQ,SAACC,EAASC,GACzB8G,EAAK2H,QAAQ,aAAc,CACvBwU,SAAU4rC,EAAa9mD,GACvBb,QAAS,CACL8mC,OAAQ0iB,KAGXjwD,MAAK,WACFV,EAAQ8uD,MAEXl2C,OAAM,SAACtY,GACJL,EAAOK,UAKhB28D,2BAAP,SACInO,EACAiJ,GAFJ,WAII,OAAO,IAAIh4D,SAAQ,SAACC,EAASC,GACzB8G,EAAK2H,QAAQ,YAAa,CACtBwU,SAAU4rC,EAAa9mD,GACvBb,QAAS4wD,IAERr3D,MAAK,WACFV,EAAQ8uD,MAEXl2C,OAAM,SAACtY,GACJL,EAAOK,UAKhB28D,8BAAP,SACInO,EACAiF,GAFJ,WAII,OAAO,IAAIh0D,SAAQ,SAACC,EAASC,GACzB8G,EAAK2H,QAAQ,eAAgB,CACzBwU,SAAU4rC,EAAa9mD,GACvBb,QAAS4sD,IAERrzD,MAAK,WACFV,EAAQ8uD,MAEXl2C,OAAM,SAACtY,GACJL,EAAOK,UAKhB28D,qBAAP,SACInO,GADJ,WAGI,OAAO,IAAI/uD,SAAQ,SAACC,EAASC,GACzB8G,EAAK2H,QAAQ,WAAY,CAAEwU,SAAU4rC,EAAa9mD,KAC7CtH,MAAK,WACFV,EAAQ8uD,MAEXl2C,OAAM,SAACtY,GACJL,EAAOK,UAKhB28D,kBAAP,SACInO,GADJ,WAGI,OAAO,IAAI/uD,SAAQ,SAACC,EAASC,GACzB8G,EAAK2H,QAAQ,QAAS,CAAEwU,SAAU4rC,EAAa9mD,KAC1CtH,MAAK,WACFV,EAAQ8uD,MAEXl2C,OAAM,SAACtY,GACJL,EAAOK,UAKhB28D,4BAAP,SACInO,GADJ,WAGI,OAAO,IAAI/uD,SAAQ,SAACC,EAASC,GASzB8G,EAAK2H,QAAQ,kBAAmB,CAAEwU,SAAU4rC,EAAa9mD,KACpDtH,MAAK,WACFV,EAAQ8uD,MAEXl2C,OAAM,SAACtY,GACJL,EAAOK,UAKhB28D,qBAAP,SACInO,GADJ,WAGI,OAAO,IAAI/uD,SAAQ,SAACC,EAASC,GACzB8G,EAAK2H,QAAQ,WAAY,CAAEwU,SAAU4rC,EAAa9mD,KAC7CtH,MAAK,WACFV,EAAQ8uD,MAEXl2C,OAAM,SAACtY,GACJL,EAAOK,UAKhB28D,oBAAP,SACInO,GADJ,WAGI,OAAO,IAAI/uD,SAAQ,SAACC,EAASC,GACzB8G,EAAK2H,QAAQ,UAAW,CAAEwU,SAAU4rC,EAAa9mD,KAC5CtH,MAAK,WACFV,EAAQ8uD,MAEXl2C,OAAM,SAACtY,GACJL,EAAOK,UAKhB28D,qBAAP,SACInO,GADJ,WAGI,OAAO,IAAI/uD,SAAQ,SAACC,EAASC,GACzB8G,EAAK2H,QAAQ,WAAY,CAAEwU,SAAU4rC,EAAa9mD,KAC7CtH,MAAK,WACFV,EAAQ8uD,MAEXl2C,OAAM,SAACtY,GACJL,EAAOK,UAKhB28D,qBAAP,SACInO,GADJ,WAGI,OAAO,IAAI/uD,SAAQ,SAACC,EAASC,GACzB8G,EAAK2H,QAAQ,WAAY,CAAEwU,SAAU4rC,EAAa9mD,KAC7CtH,MAAK,WACFV,EAAQ8uD,MAEXl2C,OAAM,SAACtY,GACJL,EAAOK,UAKhB28D,mBAAP,SACInO,GADJ,WAGI,OAAO,IAAI/uD,SAAQ,SAACC,EAASC,GACzB8G,EAAK2H,QAAQ,SAAU,CAAEwU,SAAU4rC,EAAa9mD,KAC3CtH,MAAK,WACFV,EAAQ8uD,MAEXl2C,OAAM,SAACtY,GACJL,EAAOK,UAKhB28D,2BAAP,SACInO,GADJ,WAGI,OAAO,IAAI/uD,SAAQ,SAACC,EAASC,GACzB8G,EAAK2H,QAAQ,iBAAkB,CAAEwU,SAAU4rC,EAAa9mD,KACnDtH,MAAK,WACFV,EAAQ8uD,MAEXl2C,OAAM,SAACtY,GACJL,EAAOK,UAKhB28D,iBAAP,SACInO,EACAtkD,EACAunD,GAHJ,WAKI,OAAO,IAAIhyD,SAAQ,SAACC,EAASC,GACF6uD,EAAa9mD,GAApC,IACIyxD,EACE59B,EACF,6GACAizB,EAAa9mD,GACjB,GAAKwC,EAAL,CAIA,GAAsB,iBAAXA,EACPivD,EAAiBjvD,MACd,CAAA,QAAyB,IAAdA,EAAOxC,GAIrB,YADA/H,EAAO47B,GAFP49B,EAAiBjvD,EAAOxC,GAK5B,IAAM+tB,EAAY,CACd0jC,kBAGA1H,IACAh8B,EAAK+nC,aAAe/L,GAExBhrD,EAAK2H,QAAQ,OAAQ,CACjBwU,SAAU4rC,EAAa9mD,GACvBb,QAAS4uB,IAERr1B,MAAK,WACFV,EAAQ8uD,MAEXl2C,OAAM,SAACtY,GACJL,EAAOK,WA1BXL,EAAO47B,OA+BZohC,sBAAP,SACInO,EACA3nD,GAFJ,WAII,OAAO,IAAIpH,SAAQ,SAACC,EAASC,GACzB8G,EAAK2H,QAAQ,YAAa,CACtBwU,SAAU4rC,EAAa9mD,GACvBb,YAECzG,MAAK,WACFV,EAAQ8uD,MAEXl2C,OAAM,SAACtY,GACJL,EAAOK,UAKhB28D,sBAAP,SACInO,EACA3nD,GAFJ,WAII,OAAO,IAAIpH,SAAQ,SAACC,EAASC,GASzB8G,EAAK2H,QAAQ,YAAa,CACtBwU,SAAU4rC,EAAa9mD,GACvBb,YAECzG,MAAK,WACFV,EAAQ8uD,MAEXl2C,OAAM,SAACtY,GACJL,EAAOK,UAKhB28D,uBAAP,SACInO,EACAmC,GAFJ,WAII,oBAFAA,MAEO,IAAIlxD,SAAQ,SAACC,EAASC,GACzB,IAAI89D,EAEAA,EADA9M,EACU,OAEA,OAGdlqD,EAAK2H,QAAQqvD,EAAS,CAAE76C,SAAU4rC,EAAa9mD,KAC1CtH,MAAK,WACFV,EAAQ8uD,MAEXl2C,OAAM,SAACtY,GACJL,EAAOK,UAKhB28D,uBAAP,SACInO,EACA8J,GAFJ,WAII,OAAO,IAAI74D,SAAQ,SAACC,EAASC,GACzB8G,EAAK2H,QAAQ,uBAAwB,CAAEwU,SAAU4rC,EAAa9mD,GAAIb,QAASyxD,IACtEl4D,MAAK,WACFV,EAAQ8uD,MAEXl2C,OAAM,SAACtY,GACJL,EAAOK,UAKhB28D,uBAAP,SACInO,GADJ,WAGI,OAAO,IAAI/uD,SAAQ,SAACC,EAASC,GACzB8G,EAAK2H,QAAQ,uBAAwB,CAAEwU,SAAU4rC,EAAa9mD,KACzDtH,MAAK,WACFV,EAAQ8uD,MAEXl2C,OAAM,SAACtY,GACJL,EAAOK,UAKhB28D,0BAAP,SACInO,EACAvrD,GAFJ,WAII,OAAO,IAAIxD,SAAQ,SAACC,EAASC,GACzB8G,EAAK2H,QAAQ,gBAAiB,CAC1BwU,SAAU4rC,EAAa9mD,GACvBzE,UACAy6D,UACI5/D,OAAO2E,KAAK+rD,EAAavrD,SAAShE,OAAS,KAE9CmB,MAAK,WACFV,EAAQ8uD,MAEXl2C,OAAM,SAACtY,GACJL,EAAOK,UAKhB28D,iBAAP,SACInO,GADJ,WAGI,OAAO,IAAI/uD,SAAQ,SAACC,EAASC,GACzB8G,EAAK2H,QAAQ,aAAc,CACvBwU,SAAU4rC,EAAa9mD,GACvBb,QAAS,CACL2xD,MAAM,KAGTp4D,MAAK,WACFV,EAAQ8uD,MAEXl2C,OAAM,SAACtY,GACJL,EAAOK,UAKhB28D,mBAAP,SACInO,GADJ,WAGI,OAAO,IAAI/uD,SAAQ,SAACC,EAASC,GACzB8G,EAAK2H,QAAQ,aAAc,CACvBwU,SAAU4rC,EAAa9mD,GACvBb,QAAS,CACL2xD,MAAM,KAGTp4D,MAAK,WACFV,EAAQ8uD,MAEXl2C,OAAM,SAACtY,GACJL,EAAOK,UAKhB28D,oBAAP,SAAenO,GAAf,WACI,OAAO,IAAI/uD,SAAQ,SAACC,EAASC,GACzB8G,EAAK2H,QAAQ,UAAW,CACpBwU,SAAU4rC,EAAa9mD,GACvBb,QAAS,KAERzG,MAAK,SAACF,GACHR,EAASQ,EAAey4D,SAE3BrgD,OAAM,SAACtY,GACJL,EAAOK,UAKhB28D,oBAAP,SACInO,EACAqK,GAFJ,WAII,OAAO,IAAIp5D,SAAQ,SAACC,EAASC,GACzB8G,EAAK2H,QAAQ,UAAW,CACpBwU,SAAU4rC,EAAa9mD,GACvBb,QAAS,CACL82D,QAAS9E,KAGZz4D,MAAK,WACFV,EAAQ8uD,MAEXl2C,OAAM,SAACtY,GACJL,EAAOK,UAKhB28D,0BAAP,SACInO,EACAvlB,GAFJ,WAII,OAAO,IAAIxpC,SAAQ,SAACC,EAASC,GASzB8G,EAAK2H,QAAQ,gBAAiB,CAC1BwU,SAAU4rC,EAAa9mD,GACvBb,QAAS,CACLoiC,gBAGH7oC,MAAK,WACFV,EAAQ8uD,MAEXl2C,OAAM,SAACtY,GACJL,EAAOK,UAKhB28D,gCAAP,SACInO,EACAwL,GAFJ,WAII,OAAO,IAAIv6D,SAAQ,SAACC,EAASC,GASzB8G,EAAK2H,QAAQ,sBAAuB,CAChCwU,SAAU4rC,EAAa9mD,GACvBb,QAAS,CACL+2D,OAAQ5D,KAGX55D,MAAK,WACFV,EAAQ8uD,MAEXl2C,OAAM,SAACtY,GACJL,EAAOK,UAKV28D,sBAAb,SAAuBxE,EAAuCtxD,uGAC1D,OAAKA,IAICg3D,QAAmBh3D,IAERi3D,iBACbD,EAAYC,eAAiB,UAG3BC,WACCF,IACHG,YAAaH,EAAYI,KACzBC,SAAU/F,EAAazwD,GACvBy2D,QAASN,EAAYj7C,cAGnBtkB,KAAK8P,QAAQ,kBAAmB,CAClCwU,SAAUu1C,EAAazwD,GACvBb,QAASk3D,SAlBFt+D,QAAQE,OAAO,4CAqB1B,OALA8F,YAKO0yD,WAGEwE,0BAAb,SAA2B/5C,EAAkB/b,uFACzC,OAAKA,IAICg3D,QAAmBh3D,IAERu3D,mBACbP,EAAYO,iBAAmB,GAG9BP,EAAYQ,iBACbR,EAAYQ,eAAiB,GAG3BC,EAA0HhgE,KAAKigE,uBAAuB37C,EAAUi7C,MAE/Jv/D,KAAK8P,QAAQ,iBAAkB,CAAEwU,WAAU/b,QAASy3D,IAAel+D,MAAK,WAC3E,IAAMo+D,EAAUF,EAAYG,MAAMrhD,KAAI,SAACshD,GAAM,OAAAA,EAAEh3D,MA8B/C,OA5BA42D,EAAYG,MAAM95D,SAAQ,SAAC+5D,GACvB,IAAI5wD,EAA+D,mBAAnB4wD,EAAa,YACzDA,EAAEC,YAAc,WAAM,OAAAD,EAAEC,aAExB93D,EAAQo3D,gBAAgBtU,UAAY+U,EAAEC,cACtC7wD,EAAW,SAAOsC,EAAsCwuD,yGAKhD/3D,EAAQo3D,gBAAgBtU,YACT9iD,EAAQo3D,KAAK7tD,EAAMwuD,iBAAlC1+D,EAASuF,iCAKTi5D,EAAEC,uBAAuBhV,UAAY+U,EAAEC,cAAgB93D,EAAQo3D,QAClDS,EAAEC,YAAYvuD,EAAMwuD,iBAAjC,SAAOn5D,UAAqCvF,UAIhD,SAAOA,GAAUw+D,EAAEC,sBAG3Bl4D,EAAKoL,UAAUnD,SAAY4vD,EAAYJ,aAAYQ,EAAEh3D,IACrDjB,EAAKoL,UAAUhE,IAAOywD,EAAYJ,aAAYQ,EAAEh3D,GAAMoG,MAGnD,CACH+wD,QAAS,WAAM,OAAAp4D,EAAKq4D,iBAAiBR,EAAYJ,SAAUM,IAC3D33D,QAASg3D,WAhDNp+D,QAAQE,OAAO,4CAqDjBg9D,0BAAb,SAA2B/5C,EAAkBw3C,wEACzC,SAAO97D,KAAK8P,QAAQ,gBAAiB,CAAEwU,WAAU/b,QAAS,CAAEuzD,qBAGnDuC,yCAAb,SAA0CuB,EAAkB9tD,6GAStC,OARZ2uD,EAAiB,WAAM,OAAA3uD,EAAKwuD,QAAS,GAErCI,EAA+C,CACjDC,OAAQ7uD,EAAK8uD,UACbC,oBAAqB/uD,EAAK+uD,oBAC1BC,gBAAiBhvD,EAAKgvD,oBAGF3/D,QAAQ4d,IAAI/e,KAAKuT,UAAUzD,QAAW8vD,MAAY9tD,EAAK8uD,UAAaF,EAAcD,YAE1G,OAAyB,KAFnBM,EAAY55D,UAEJxG,QACJqgE,EAAkB,CAAE9sB,OAAQ,EAAGD,MAAO,EAAGE,IAAK,EAAGtsB,KAAM,GACvDqb,EAAqC,iBAAlB69B,EAAU,IAAqBphE,MAAMmG,QAAQi7D,EAAU,IAAqBC,EAAfD,EAAU,eAClDjvD,IAAM+uD,oBAAqB39B,kBAMpEm7B,mBAAb,SAAoBjyD,+FAChB,SAAMpM,KAAK8P,QAAQ,SAAU,CACzBwU,SAAUlY,EAAOhD,aAErB,OAHAjC,YAGOiF,WAGEiyD,oBAAb,SAAqBjyD,+FACjB,SAAMpM,KAAK8P,QAAQ,UAAW,CAC1BwU,SAAUlY,EAAOhD,aAErB,OAHAjC,YAGOiF,WAGEiyD,0BAAb,SAA2BjyD,EAAiCylD,+FACxD,SAAM7xD,KAAK8P,QAAQ,gBAAiB,CAChCwU,SAAUlY,EAAOhD,GACjBb,QAAS,CACLspD,wBAGR,OANA1qD,YAMOiF,WAGEiyD,yBAAb,SAA0BjyD,+FACtB,SAAMpM,KAAK8P,QAAQ,eAAgB,CAC/BwU,SAAUlY,EAAOhD,aAGrB,OAJAjC,YAIOiF,WAGEiyD,oBAAb,SAAqBjyD,EAAiC7D,+FACxB,SAAMvI,KAAK8P,QACjC,oBACA,CAAEwU,SAAUlY,EAAOhD,GAAIb,cAAcA,aAGzC,SAL0BpB,SAGvB2K,cAKMusD,yBAAb,SAA0B3zB,EAAqBniC,+FACT,SAAMvI,KAAK8P,QACzC,yBACA,CAAEwU,SAAUomB,EAAU,GAAIniC,YAAW04D,eAAgBv2B,GAAcniC,aAGvE,SALkCpB,SAG/B2K,cAKMusD,kBAAb,SAAmBnO,EAAuC3nD,+FACtD,SAAMvI,KAAK8P,QACP,QACA,CAAEwU,SAAU4rC,EAAa9mD,GAAIb,cAAcA,aAG/C,OALApB,YAKO+oD,WAGJmO,oBAAP,SACIc,EACA52D,GAFJ,WAII,OAAO,IAAIpH,SAAQ,SAACC,EAASC,GACzB,IAAM81B,WAAiB5uB,IAAS42D,YAChCh3D,EAAKi+B,IACAjjB,OAAO,kBAAmBgU,EAAMhvB,EAAKm2D,WACrCx8D,MAAK,SAACtB,GACCA,EAAEgvB,UAAYhvB,EAAEgvB,SAAS9U,SACzBrZ,EAAOb,GAEPY,EAAQZ,EAAEgvB,aAGjBxV,OAAM,SAACxZ,GACJa,EAAOb,UAMhB69D,kCAAP,SACI/5C,EACAg7C,GAEA,OAAOt/D,KAAK8P,QAAQ,2BAA4B,CAC5CwU,WACA/b,QAAS,CACL+2D,aAKLjB,0BAAP,SAAqB/5C,GACjB,OAAOtkB,KAAK8P,QAAQ,gBAAiB,CACjCwU,WACA/b,QAAS,KACVzG,MAAK,SAACuB,GAAM,OAAAA,EAAE6I,UAGdmyD,0BAAP,SAAqB/5C,EAAkBpY,GACnC,OAAOlM,KAAK8P,QAAQ,gBAAiB,CACjCwU,WACA/b,QAAS,CACL2D,YAKLmyD,sBAAP,SAAiB7uD,EAA4DpG,GACzE,IAAMuD,EAA6B,oBAAXP,QAA2BA,OAAeO,SAClE,GAAIA,EACA,OAAOA,EAASu0D,gBAAgB1xD,EAAUpG,IAI3Ci1D,yBAAP,SAAoB7uD,EAAiFpG,GACjG,IAAMuD,EAA6B,oBAAXP,QAA2BA,OAAeO,SAClE,GAAIA,EACA,OAAOA,EAASwjC,kBAAkB3gC,EAAUpG,IAI5Ci1D,mCAAR,SAA+B/5C,EAAkB/b,GAC7C,IAAM44D,EAA4B,SAACC,EAAkCxvC,GACjE,GAAIrpB,EAAQqpB,UAAyBxmB,IAAfg2D,EAAKxvC,IAAsC,OAAfwvC,EAAKxvC,IAAiB,CACpE,IAAMyvC,EAAmB94D,EAAQqpB,GAChCwvC,EAAKxvC,GAAgByvC,IAIxBlB,EAA2C53D,EAAQ43D,MAAMrhD,KAAI,SAACshD,GAehE,OAdAe,EAA0Bf,EAAG,YAC7Be,EAA0Bf,EAAG,mBAEzB73D,EAAQo3D,WAA2Bv0D,IAAlBg1D,EAAEC,aAA+C,OAAlBD,EAAEC,cAClDD,EAAEC,YAAc93D,EAAQo3D,MAG3BS,EAA4BkB,cAAgBlB,EAAEC,YAC9CD,EAA4BQ,UAAYR,EAAE97C,SAEtC87C,EAAEZ,iBACHY,EAAEZ,eAAiB,UAGhBY,KAGX,gBACO73D,IACH43D,QACAP,SAAUt7C,EACVg9C,cAAe/4D,EAAQo3D,KACvB4B,kBAAmBh5D,EAAQi5D,cAI3BnD,6BAAR,SAAyB/5C,EAAkBm9C,GAA3C,WACI,OAAOzhE,KAAK8P,QAAQ,yBAA0B,CAC1CwU,WACA/b,QAAS,KACVzG,MAAK,WACJ2/D,EAAQp7D,SAAQ,SAAC+C,GACbjB,EAAKoL,UAAUnD,SAAYkU,MAAYlb,yBC94BvCs4D,GAAuBp9C,EAAkBktC,GACrD,IAAMjoB,EAAU8pB,GAAYna,KAC5B,OAAO15C,OAAO2E,KAAKolC,GAASnlC,QAAO,SAACC,EAAwC+E,GACxE,IAAM+gC,EAAMZ,EAAQngC,GAIpB,OAHI+gC,EAAI/Q,IAAIo4B,aAAeA,GAAcrnB,EAAI/Q,IAAIhwB,KAAOkb,IACpDjgB,EAAK+E,GAAM+gC,GAER9lC,IACR,ICaP,kBAUI,WAAY+hC,EAAyB31B,EAA+Bu/C,EAA+C1hD,EAAoCqzD,GAR/I3hE,eAA8BiuD,KAG9BjuD,kBAAuB,IAM3BA,KAAKwrC,KAAOpF,EACZpmC,KAAKwoB,QAAU/X,EAAOsN,UAAU,UAChC/d,KAAKgpD,aAAehpD,KAAK4hE,kBAAkBtzD,GAC3CtO,KAAK6hE,UAAYF,EACjB3hE,KAAK8hE,kBAAoB9R,EAuYjC,OApYW+R,iBAAP,WAAA,WACI,OAAO,IAAI5gE,SAAQ,SAACC,EAASC,QAGQ,IAAtB8G,EAAK6gD,eACZ7gD,EAAK6gD,aAAe,QAGxB7gD,EAAKqjC,KAAKlU,cAAc,+BAA+B,SAACH,EAAM6qC,EAAQ5nD,EAASlK,GAC3E/H,EAAK85D,eAAe9qC,GAAar1B,KAAKsY,GAASJ,MAAM9J,MAGnC,IAAI/O,SAAc,SAAC+gE,EAAeC,GACpDh6D,EAAKqjC,KAAKxhB,UAAU,kBAAmB,CACnC2C,cAAexkB,EAAKi6D,aACpBx2D,OAAQzD,EAAK6gD,aACb/qB,OAAQ,SAACouB,GACLlkD,EAAKk6D,aAAahW,EAAWv6C,KAAM1Q,IAEvCo9B,YAAa,SAAClwB,GACVnG,EAAK6gD,aAAe7gD,EAAKy5D,kBAAkBtzD,GAE3CyhD,GAAStnD,KAAKN,EAAKqjC,KAAMrjC,EAAK6gD,iBAEnChvC,OAAM,SAAC9J,GACN7O,EAAO,sDAAwD6O,aAO/E1Q,sBAAWuiE,4BAAX,WACI,OAAOhS,oCAGJgS,iBAAP,SAAYn9D,EAAcyrD,EAAa9nD,EAAc6R,EAA+B9K,GAEhF,IAAMgzD,QADN/5D,EAAUA,GAAW,SAIR6C,IAATxG,QAK2BwG,IAA3Bk3D,EAAYljB,YAA8D,iBAA3BkjB,EAAYljB,aAC3DkjB,EAAYljB,WAAakjB,EAAYljB,WAAWh2C,IAAM,IAG1Dk5D,EAAY19D,KAAOA,EACnB09D,EAAYjS,IAAMA,EAGlBiS,EAAYC,YAAch6D,EAAQg6D,aAAeh6D,EAAQpC,aAElDm8D,EAAYn8D,MAEnBnG,KAAKwrC,KAAKroB,OAAuB,iBAAkBm/C,EAAatiE,KAAKgpD,cAChElnD,MAAK,SAACiP,GACH,QAAyB3F,IAArB2F,EAAQye,SAAwB,CAChC,IAAMpmB,EAAa2H,EAAQye,SAASpmB,GACpCgR,EAAQhR,QAERkG,EAAM,CAAEyB,QAAS,yDAGxBiJ,MAAM1K,IAzBPA,EAAM,CAAEyB,QAAS,2BA4BlBgxD,0BAAP,SAAqBz9C,EAAkB/b,GACnC,OAAOvI,KAAK+vD,SAAS6L,cAAct3C,EAAU/b,IAGpCw5D,sBAAb,SAAuBz9C,EAAkB/b,qGAErC,OADM6D,EAASinD,GAAYnsD,IAAIod,MACzBtkB,KAAK+vD,SAAS4L,UAAUvvD,EAAOgtB,IAAK7wB,kBAA1CpB,qBAGG46D,wBAAP,SAAmBvyD,GACf,OAAOxP,KAAKuT,UAAUhE,IAAI,eAAgBC,IAGvCuyD,wBAAP,SAAmBvyD,GACf,OAAOxP,KAAKuT,UAAUhE,IAAI,eAAgBC,IAGvCuyD,sCAAP,SAAiCvyD,GAC7B,OAAOxP,KAAKuT,UAAUhE,IAAI,sBAAuBC,IAG9CuyD,oBAAP,SAAevyD,GACX,OAAOxP,KAAKuT,UAAUhE,IAAI,eAAgBC,IAGvCuyD,eAAP,WACI,OAAO/hE,KAAK6hE,WAGTE,oBAAP,SAAkB5C,EAAiB76C,EAAkB/b,GACjD,OAAOvI,KAAKwrC,KAAKroB,OAAU,kBAAmB,CAC1Cg8C,UACA52D,UACA+b,cAKDy9C,kCAAP,SAA6Bz9C,EAAkBg7C,GAC3C,OAAOt/D,KAAKwrC,KAAKroB,OAA6B,gCAAiC,CAC3EmB,WACAg7C,UACDt/D,KAAKgpD,eAGL+Y,iCAAP,SAA4BvyD,GACxB,OAAOxP,KAAKuT,UAAUhE,IAAI,sBAAuBC,IAG9CuyD,2CAAP,SAAsCvyD,GAClC,OAAOxP,KAAKuT,UAAUhE,IAAI,uBAAwBC,IAG/CuyD,6BAAP,SAAwBvyD,GACpB,OAAOxP,KAAKuT,UAAUhE,IAAI,YAAaC,IAGpCuyD,8BAAP,SAAyBvyD,GACrB,OAAOxP,KAAKuT,UAAUhE,IAAI,aAAcC,IAIpCuyD,8BAAR,SAA0BzzD,GACtB,GAAKA,EAGL,MAAO,CACH4G,YAAa5G,EAAS4G,YACtBikB,QAAS7qB,EAAS6qB,QAClBD,KAAM5qB,EAAS4qB,OAGf6oC,2BAAR,SAAuB5qC,GACnB,MAAkB,+BAAdA,EAAKtzB,KACE7D,KAAK+vD,SAASyS,6BAA6BrrC,EAAKrlB,KAAKwS,SAAU6S,EAAKrlB,MAGxE3Q,QAAQE,OAAO,6BAA6B81B,EAAKtzB,OAGpDk+D,yBAAR,SAAqBU,EAAyBC,GAA9C,WACUC,EAAsB3iE,KAAK4iE,uBAAuBH,GAGxD,GAAwB,aAApBA,EAAW5+D,KAQX,OAPiC4+D,EACTl5B,QAAQljC,SAAQ,SAACmjC,GACrC,IAAMW,EAAMhiC,EAAKogC,aAAaiB,EAAEpgC,GAAIogC,GACpC6pB,GAAY7E,gBAAgBrkB,EAAI/Q,IAAIhwB,IACpCjB,EAAKoL,UAAUzD,QAAQ,eAAgB6yD,WAE3CD,EAAa1iE,MAIjB,GAAwB,YAApByiE,EAAW5+D,KAAoB,CAC/B,IAAMg/D,EAA0BJ,EAC1Bt4B,EAAMnqC,KAAKuoC,aAAas6B,EAAuBv+C,SAAUu+C,EAAuB/wD,MAAQ,IAG9F,OAFAuhD,GAAYyP,cAAc34B,EAAI/Q,IAAIhwB,SAClCpJ,KAAKuT,UAAUzD,QAAQ,eAAgB6yD,GAK3C,IAAMI,EAAuC1P,GAAYnsD,IAAKu7D,EAA2Bn+C,UACzF,GAAKy+C,EAAL,CAKA,IAAMC,EAAqCD,EAAsB3pC,IAC3D6pC,EAAgCF,EAAsB3E,OAG5D,GAAwB,kBAApBqE,EAAW5+D,KAA0B,CACrC,IAAMq/D,EAAgCT,EACtCQ,EAAgBrO,oBAAoBsO,EAA6BpxD,MAIrE,GAAwB,eAApB2wD,EAAW5+D,KAAuB,CAClC,IAAMs/D,EAA6BV,EACnCpP,GAAY+P,mBAAmBD,EAA0B7+C,UACzD2+C,EAAgB1O,iBAAiB4O,EAA0BrxD,MAI/D,GAAwB,iBAApB2wD,EAAW5+D,KAAyB,CACpC,IAAMw/D,EAA0BZ,EAChCQ,EAAgB7O,mBAAmBiP,EAAuBvxD,MAyB9D,GArBwB,sBAApB2wD,EAAW5+D,MACXo/D,EAAgB3O,wBAAwBmO,EAAW3wD,MAI/B,mBAApB2wD,EAAW5+D,MACXo/D,EAAgBvO,qBAAqB+N,EAAW3wD,MAI5B,iBAApB2wD,EAAW5+D,MACXo/D,EAAgB9O,wBAAwBsO,EAAW3wD,MAI/B,sBAApB2wD,EAAW5+D,OACXo/D,EAAgBzN,wBAAwBiN,EAAW3wD,MACnD9R,KAAKuT,UAAUzD,QAAQ,sBAAuBkzD,IAI1B,uBAApBP,EAAW5+D,KAA+B,CAC1C,IAAMy/D,EAA+Bb,EACrCQ,EAAgB9M,yBAAyBmN,EAA6BxxD,KAAKyxD,UAAWD,EAA6BxxD,KAAK8+C,SACxH5wD,KAAKuT,UAAUzD,QAAQ,sBAAuBwzD,EAA6BxxD,MAG/E,GAAwB,iCAApB2wD,EAAW5+D,KAAyC,CACpD,IAAM8P,EAAO8uD,EACbQ,EAAgB7M,mCAAmCziD,EAAK7B,KAAK0xD,oBAC7DxjE,KAAKuT,UAAUzD,QAAQ,uBAAwB6D,EAAK7B,MAIxD,GAAwB,iBAApB2wD,EAAW5+D,KAAyB,CACpC,IAAM4/D,EAA0BhB,EAChCziE,KAAK0jE,aAAaT,EAAiBD,EAAWS,EAAuB3xD,MAQzE,GALwB,uBAApB2wD,EAAW5+D,OACXo/D,EAAgBxN,oBAAoBgN,EAAW3wD,KAAK6xD,QAASlB,EAAW3wD,KAAKk/C,oBAC7EhxD,KAAKuT,UAAUzD,QAAQ,kBAGH,qBAApB2yD,EAAW5+D,KAA6B,CACxCo/D,EAAgBtM,eAAe8L,EAAW3wD,KAAK6xD,QAASlB,EAAW3wD,KAAKk/C,oBACxE,IAAM4S,EAAqDlC,GAAuBsB,EAAU55D,GAAIq5D,EAAW3wD,KAAK6xD,SAEhHnkE,OAAO2E,KAAKy/D,GAAkBv9D,SAAQ,SAAC+C,GACvBw6D,EAAiBx6D,GAEzBg1D,OAAOrH,qBAAqBiM,MAEpChjE,KAAKuT,UAAUzD,QAAQ,eAAgBkzD,EAAWP,EAAW3wD,KAAK6xD,QAASlB,EAAW3wD,KAAKk/C,oBAG/F,GAAwB,uBAApByR,EAAW5+D,KAA+B,CAE1C,IAAMggE,EAAgBb,EAAUxR,WAChCyR,EAAgBnM,eAAe2L,EAAW3wD,KAAK6xD,SAC/C,IAAMG,EAAqDpC,GAAuBsB,EAAU55D,GAAIy6D,GAEhGrkE,OAAO2E,KAAK2/D,GAAkBz9D,SAAQ,SAAC+C,GACvB06D,EAAiB16D,GACzBg1D,OAAOpH,qBAAqBgM,MAGpC,IAAMjN,EAAK/1D,KAAKuT,UAAUhE,IAAI,iBAAiB,WAC3CwmD,IACA5tD,EAAKoL,UAAUzD,QAAQ,eAAgBkzD,EAAWP,EAAW3wD,KAAK6xD,QAASX,EAAUxR,eAKrE,+BAApBiR,EAAW5+D,MACXo/D,EAAgB5M,iCAAiCoM,EAAW3wD,KAAKk/C,oBAG7C,0BAApByR,EAAW5+D,MACXo/D,EAAgBvN,4BAA4B+M,EAAW3wD,KAAKiyD,YAAatB,EAAW3wD,KAAKkyD,cAGrE,kBAApBvB,EAAW5+D,MACXo/D,EAAgB1N,yBAAyBkN,EAAW3wD,MAGhC,gBAApB2wD,EAAW5+D,MACXo/D,EAAgBlO,uBAAuB0N,EAAW3wD,MAG9B,kBAApB2wD,EAAW5+D,MACXo/D,EAAgB7N,yBAAyBqN,EAAW3wD,MAEhC,4BAApB2wD,EAAW5+D,MACXo/D,EAAgBhM,wBAAwBwL,EAAW3wD,MAI/B,WAApB2wD,EAAW5+D,OACXwvD,GAAYv8B,OAAOisC,GACnBE,EAAgB/O,qBAGI,yBAApBuO,EAAW5+D,MACXo/D,EAAgBtO,2BAA2B8N,EAAW3wD,MAI1D9R,KAAKuT,UAAUzD,QAAQ,eAAgB6yD,QAvInC3iE,KAAKwoB,QAAQlZ,MAAM,iDAAiDmF,KAAKC,UAAU+tD,EAAY,KAAM,KA0IrGV,yBAAR,SAAqBz9C,EAAkB/b,GACnC,IAAM07D,EAAoCC,GAAc5/C,EAAUtkB,KAAKmkE,8BAA8B57D,GAAUwnD,GAAU/vD,KAAKwoB,QAASxoB,KAAK8hE,kBAAmB9hE,KAAKwrC,MAEpK,OADA6nB,GAAY9jD,IAAI00D,GACTA,GAGHlC,yBAAR,SAAqBkB,EAA+BD,EAAoC7zB,GACpF8zB,EAAgBpO,mBAAmB1lB,GAC/BA,EACAnvC,KAAKuT,UAAUzD,QAAQ,YAAakzD,GAEpChjE,KAAKuT,UAAUzD,QAAQ,aAAckzD,IAIrCjB,0CAAR,SAAsC5qC,GAElC,MAAO,CACHvyB,KAAMuyB,EAAKvyB,KACXD,QAASwyB,EAAKxyB,QACd0qC,OAAQlY,EAAKkY,OACbghB,IAAKl5B,EAAKk5B,IACVnkD,MAAOirB,EAAKjrB,MACZ+iC,UAAW9X,EAAK8X,UAChBE,MAAOhY,EAAK29B,UACZ3uD,MAAOgxB,EAAKhxB,MACZwkC,WAAYxT,EAAKwT,WACjBimB,QAASz5B,EAAKy5B,QACdF,WAAYv5B,EAAKosC,UACjBzO,UAAW39B,EAAK29B,UAChBhE,qBAAsB35B,EAAKqsC,mBAC3BnS,YAAal6B,EAAKk6B,YAClBG,WAAYr6B,EAAKwsC,QACjBjyB,KAAMva,EAAKua,KACXsf,mBAAoB75B,EAAK65B,mBACzBE,cAAe/5B,EAAKitC,YACpB5zD,SAAU2mB,EAAK3mB,SACfo7B,WAAYzU,EAAKyU,WACjBimB,WAAY16B,EAAK06B,WAEjBH,SAAUv6B,EAAKu6B,WAKfqQ,mCAAR,SAA+BsC,GAC3B,IACI,IAAMziE,MACFuE,MAAOk+D,EAAYxgE,KACnBysC,WAAY+iB,GAAYnsD,IAAIm9D,EAAY//C,UAAU8U,IAAIx0B,MACnDy/D,GAmBP,MAhBqB,qBAAjBziE,EAAOuE,QACPvE,EAAOuE,MAAQ,eAGE,iBAAjBvE,EAAOuE,QACPvE,EAAOuE,MAAQvE,EAAOkQ,KAAKwyD,OAAO,GAAGC,cAAgB3iE,EAAOkQ,KAAKtL,MAAM,IAGtD,gBAAjB5E,EAAOuE,QACPvE,EAAOuE,MAAQ,oBAGE,kBAAjBvE,EAAOuE,QACPvE,EAAOuE,MAAQ,sBAGZvE,EACT,MAAO0N,GACL,OAAO+0D,qBCraHj7D,EAAY2mD,GAExB,IAAMx8C,EAA8BixD,KAE9BC,EAAuB,GA+F7B,SAASC,IACL,OAAO,IAAIvjE,SAAQ,SAACC,EAASC,GACzB,IAAMsmD,EAAQgd,GAA0B,SAACjO,GACrC/O,IACAvmD,UASZ,SAAS0O,EAAQqvD,EAAiB52D,EAAkB6R,EAAiD9K,GACjG,OAAO,IAAInO,SAAQ,SAACC,EAASC,GACzB0uD,EAASjgD,QAA8BqvD,EAAS52D,GAC3CzG,MAAK,SAAC0nC,GACoB,mBAAZpvB,GACPA,EAAQwqD,GAEZxjE,EAAQwjE,MAEX5qD,OAAM,SAACtY,GACJL,EAAOK,SAiBvB,SAASmjE,IACL,IAAMC,EAAwC,GAS9C,OAPAL,EAAWp+D,SAAQ,SAAC+sD,GAChB,IAAM2R,EAAeC,EAAmB5R,QACZ,IAAjB2R,GACPD,EAAW5hE,KAAK6hE,MAIjBD,EAGX,SAASE,EAAmB1gD,GACxB,OAAO+uC,GAAYnsD,IAAIod,GAAY+uC,GAAYnsD,IAAIod,GAAU8U,SAAMhuB,EAevE,SAASu5D,EAA0Bn1D,GAC/B,OAAO+D,EAAUhE,IAAI,4BAA6BC,GAetD,IAAMo1D,EAAoC,CACtCx7D,KACAmgC,cACI,OA/IE07B,EAA2CJ,IAC1B,mBAAZzqD,GACPA,EAAQ6qD,GAELA,EALX,IAAiB7qD,EACP6qD,GAiJN5zC,KAnKJ,SAAcjlB,EAA0CgO,GACpD,IAAIg5C,EAEAA,EADkB,iBAAXhnD,EACCA,EAEAA,EAAOhD,GAEnB,IAAMyG,EAAgB40D,EAAW5sD,QAAQu7C,GACzC,IAAe,IAAXvjD,EAAc,CACd,IAAMq1D,EAAwCF,EAAmBP,EAAW50D,IAI5E,MAHuB,mBAAZuK,GACPA,EAAQ8qD,GAELA,IAuJXC,sBACI,YAhCqD/5D,IAD1By5D,IAAsBxzC,MAAK,SAACmY,GAAM,OAACA,EAAEsnB,yBAmCpEsU,WA9IJ,SAAoBhrD,EAAiD9K,GACjE,OAAO,IAAInO,SAAQ,SAACC,EAASC,GACzBF,QAAQ4d,IAAI,CACRgxC,EAASsV,sBAAsBZ,EAAW,IAAI,GAC9CC,MAEC5iE,MAAK,WACqB,mBAAZsY,GACPA,EAAQwqD,GAEZxjE,EAAQwjE,MAEX5qD,OAAM,SAACtY,GACJL,EAAOK,UAkInB4jE,WA7HJ,SAAoBlrD,EAAiD9K,GACjE,OAAO,IAAInO,SAAQ,SAACC,EAASC,GACzBF,QAAQ4d,IAAI,CACRgxC,EAASsV,sBAAsBZ,EAAW,IAAI,GAC9CC,MAEC5iE,MAAK,WACqB,mBAAZsY,GACPA,EAAQwqD,GAEZxjE,EAAQwjE,MAEX5qD,OAAM,SAACtY,WAkHhBi8D,SA5GJ,WACI,OAAO5N,EAASwV,cAAcd,EAAW,KA4GzClM,SAzGJ,SAAkBrsD,GACd,OAAO6jD,EAASyV,cAAcf,EAAW,GAAIv4D,IAyG7CiwD,QAtGJ,SAAiBC,GACb,OAAOrM,EAAS0V,aAAahB,EAAYrI,IAsGzCtE,SAAU,SAAC19C,EAAS9K,GAChB,OAAOQ,EAAQ,WAAY,CAAE8gD,QAASxnD,GAAMgR,IAEhD29C,QAAS,SAAC39C,EAAS9K,GACf,OAAOQ,EAAQ,UAAW,CAAE8gD,QAASxnD,GAAMgR,IAG/CuqD,4BACA7K,cAlCJ,SAAuBtqD,GACnB,OAAO+D,EAAUhE,IAAI,eAAgBC,IAkCrCk2D,gBA/BJ,SAAyBl2D,GACrB,OAAO+D,EAAUhE,IAAI,iBAAkBC,KAuC3C,MAAO,CACHm2D,SAAUf,EACVgB,cARa,CACbC,UA3MJ,SAAmBzS,GACf,IAAmC,IAA/BqR,EAAW5sD,QAAQu7C,GAAe,CAClCqR,EAAWvhE,KAAKkwD,GAChB,IAAM1S,EAAwB2S,GAAYnsD,IAAIksD,GAC9C1S,EAAO0d,OAAO3H,uBAAuBmO,GACrCrxD,EAAUzD,QAAQ,eAAgB80D,EAAalkB,EAAOtnB,OAuM1D0sC,aAnMJ,SAAsB1S,GAClB,IAAMvjD,EAAgB40D,EAAW5sD,QAAQu7C,GACzC,IAAe,IAAXvjD,EAAc,CACd40D,EAAW9tD,OAAO9G,EAAO,GACzB,IAAMk2D,EAAkCf,EAAmB5R,GAC3D7/C,EAAUzD,QAAQ,iBAAkB80D,EAAamB,KA+LrD3P,mCAlFJ,SAA4CqM,GACxClvD,EAAUzD,QAAQ,4BAA6B80D,mBC3HvCpgD,EAA0B/T,GACtC,IAAM+X,EAAU/X,EAAOsN,UAAU,UAC3BxK,EAA8BixD,KAC9BwB,EAA2C,GAC7CC,GAAkC,EAGhC18B,EAAU8pB,GAAYna,KAsD5B,SAASgtB,EAAkB9S,EAAyCh5C,GAChE,IAAIkK,EAUA6hD,EATJ,QAAqB,IAAV/S,EAsBX,OAjBI9uC,EADiB,iBAAV8uC,EACIA,EAEAA,EAAMhqD,GAGrB5J,OAAO2E,KAAK6hE,GAAS3/D,SAAQ,SAACuqD,GAC1B,IAAM8F,EAA8BsP,EAAQpV,GAAS+U,cACxBv6D,IAAzBsrD,EAAMrlC,KAAK/M,KACX6hD,EAAazP,MAKE,mBAAZt8C,GACPA,EAAQ+rD,GAGLA,EArBH11D,EAAO2D,MAAM,8DAkDrB,SAASgyD,EAAaj8B,GAClB3hB,EAAQlH,MAAM,qBAAqB6oB,EAAI/Q,IAAIhwB,0BAAyB+gC,EAAI/Q,IAAIw3B,SAC5E,IAAM8F,EAAQmP,EAAU17B,GACpBusB,IACAluC,EAAQlH,MAAM,0BAA0B6oB,EAAI/Q,IAAIhwB,4BAA2BstD,EAAMiP,SAASv8D,IAC1F+gC,EAAIi0B,OAAO3H,uBAAuBC,EAAMiP,WAIhD,SAASE,EAAU17B,EAAoBymB,GACnC,IAAMyV,EAAwBzV,GAAWzmB,EAAI/Q,IAAIw3B,QAC3CtsC,EAAmB6lB,EAAI/Q,IAAIhwB,GACjC,QAA6B,IAAlBi9D,QAAqD,IAAb/hD,EAAnD,CAKA,IAAMoyC,EAnCV,SAA0B9F,GACtB,GAAKoV,EAAQnmE,eAAe+wD,GAKxB,OAAOoV,EAAQpV,GAJf,IAAM0V,EAA6BC,GAAa3V,EAASpsC,EAAYurC,UAErE,OADAiW,EAAQpV,GAAW0V,EACZA,EA+BGE,CAAiBH,GAE/B,OADA3P,EAAMkP,cAAcC,UAAUvhD,GACvBoyC,EANHluC,EAAQpU,MAAM,iDAAiDkQ,GASvE,SAASwhD,EAAa37B,EAAoBymB,GACtC,IAAMtsC,EAAmB6lB,EAAI/Q,IAAIhwB,GAC3Bi9D,EAAwBzV,GAAWzmB,EAAI/Q,IAAIw3B,aACpB,IAAlByV,IACOL,EAAQK,GAChBT,cAAcE,aAAaxhD,GACjC6lB,EAAIi0B,OAAO3H,4BAAuBrrD,GApC1C,SAAqBwlD,GACboV,EAAQnmE,eAAe+wD,SAAwC,IAArBoV,EAAQpV,IACD,IAA7CoV,EAAQpV,GAAS+U,SAASp8B,QAAQ5oC,eAC3BqlE,EAAQpV,GAkCnB6V,CAAYJ,IAsCpB,OA7KA7mE,OAAO2E,KAAKolC,GAASljC,SAAQ,SAAC/C,GAC1B8iE,EAAa78B,EAAQjmC,OAGzBkhB,EAAYkiD,sBAAqB,SAACjE,IAuIlC,SAAkCA,GAC9B,IAAMkE,EAAqBlE,EAAW7R,QAChCtsC,EAAmBm+C,EAAWn+C,SAC9BkyC,EAAiC0P,EAAkB5hD,GACnDsiD,EAAapQ,EAAWA,EAASptD,QAAKgC,EAE5C,GADAod,EAAQlH,MAAM,wCAAwCqlD,gBAAwBriD,gBAAsBsiD,GAChGA,IAAeD,EAEf,YADAn+C,EAAQlH,MAAM,wCAAwCqlD,gBAAwBriD,gBAAsBsiD,kCAIxG,IAAMz8B,EAAMkpB,GAAYnsD,IAAIod,IAAa+uC,GAAYnsD,IAAIod,GACnDiyC,EAAWsP,EAAU17B,EAAKw8B,GAC5BnQ,IACAsP,EAAa37B,EAAKy8B,GAClBrzD,EAAUzD,QAAQ,eAAgBwU,EAAUkyC,EAAUmQ,IAE1Dx8B,EAAIi0B,OAAO9H,mBAAmBC,EAASoP,SAAUnP,GAvJjDL,CAAyBsM,MAG7Bj+C,EAAYqiD,gCAA+B,SAACpE,GACxC,IACM/L,EAA8BwP,EADnBzD,EAAWn+C,UAE5B,QAAqB,IAAVoyC,EAAuB,CAC9B,IAAMoQ,EAA4Bd,EAAQtP,EAAMttD,KAEhB,IAA5B68D,IACAA,EAAyBvP,EAAMntB,QAAQ5oC,QAIZ,MAD/BslE,IAEIA,GAA0B,EAC1Ba,EAAYlB,cAAcxP,mCAAmCqM,QAKzEpP,GAAY0T,SAAQ,SAAC58B,GACjBi8B,EAAaj8B,MAEjBkpB,GAAY2T,WAAU,SAAC78B,GACnB27B,EAAa37B,MA+IV,CACH88B,UAbW,CACXpkB,SACI,OA/HGqjB,EAAkB1hD,EAAYq+B,OAiIrC3J,KA9HJ,SAAc9+B,GACV,IAAMxY,EAAiCpC,OAAO2E,KAAK6hE,GAASlnD,KAAI,SAAC8xC,GAC7D,GAAIoV,EAAQpV,GACR,OAAOoV,EAAQpV,GAAS+U,YAQhC,MAHuB,mBAAZvrD,GACPA,EAAQxY,GAELA,GAoHPskE,qBASAgB,aAJ2B,CAAEC,cAzFjC,SAAuB33D,GACnB,OAAO+D,EAAUhE,IAAI,eAAgBC,mBCjG7B42B,EAAyB31B,EAA+Bu/C,EAA+ChM,GACnH,IAEIojB,EACA5iD,EAHEjR,EAA8B06C,KAC9BzlC,EAAU/X,EAIhB4iD,GAAY5qD,KAAK+f,GAEjB,IAAM6+C,EAAU,IAAIlmE,SAAQ,SAACC,EAASC,aCZ1B+kC,EAAyB31B,EAA+Bu/C,EAA+ChM,GACnH,IAAMx7B,EAAU/X,EAChB,OAAO,IAAItP,SAAQ,SAACC,EAASC,GACzB,GAAuB,IAAnB2iD,EAGA,MADAx7B,EAAQlH,MAAM,iBACR,IAAIxa,MAAM,qBACb,GAAIk9C,GAAkB,EAAG,CAG5Bx7B,EAAQlH,MAAM,mBACH,IAAIgmD,GAAGlhC,EAAK5d,EAASwnC,OAAkB5kD,EAAWgB,OAAOO,SAAS2X,UAC1E7b,OACE3G,KAAKV,GACL4Y,MAAM3Y,OACR,CAGH,IAAMkmE,EAAY,IAAID,GAAGlhC,EAAK5d,EAASwnC,GAAkBvnD,OAEzDtH,QAAQyuB,KAAK,CAAC23C,GADAp7C,EACgB,IADD,IAAIhrB,SAAQ,SAACge,EAAKqoD,GAAQ,OAAAv0D,YAAW,WAAQu0D,EAAI,iCAAmCr7C,SAE5GrqB,KAAKV,GACL4Y,MAAM3Y,GAHE,IAAC8qB,MDNlBs7C,CAAYrhC,EAAK5d,EAASwnC,EAAkBhM,GACvCliD,MAAK,SAACoiB,GACHM,EAAcN,EACdkjD,EAASM,GAAcxjD,EAAKsE,GAC5BpnB,OAEH4Y,OAAM,SAACtY,GACJ,IAAMwO,EAAM,oCAAoCxO,EAChD8mB,EAAQlZ,MAAMY,GACd7O,EAAO6O,SA2GnB,SAASy3D,EAAYn4D,GACjB,OAAO+D,EAAUhE,IAAI,eAAgBC,GAGzC,SAASo4D,EAAcp4D,GACnB,OAAO+D,EAAUhE,IAAI,iBAAkBC,GAuF3C,OAJA6jD,GAAY3E,eARZ,SAA2BllB,GACvBj2B,EAAUzD,QAAQ,eAAgB05B,EAAEpQ,QAQxCi6B,GAAY2T,WALZ,SAA6Bx9B,GACzBj2B,EAAUzD,QAAQ,iBAAkB05B,EAAEpQ,QAOnC,CACHypB,GAhMJ,WACI,IAAMglB,EAAWxU,GAAYyU,WAAWtjD,EAAYq+B,MACpD,OAAOglB,EAAWA,EAASzuC,SAAMhuB,GA+LjCmG,KA5LJ,SAAc3M,EAAcyrD,EAAa9nD,EAAyC6R,EAAqD9K,GACnI,OAAO,IAAInO,SAAQ,SAACC,EAASC,GAEzB,IAAM0mE,EAAe,SAAC/oC,GACG,mBAAV1vB,GACPA,EAAM0vB,GAEV39B,EAAO29B,IAqBXxa,EAAYjT,KAAK3M,EAAMyrD,EAAK9nD,GAlBL,SAACa,GACpBiqD,GAAY2U,QAAQ5+D,GACftH,MAAK,SAACqoC,GACoB,mBAAZ/vB,GACPA,EAAQ+vB,EAAI/Q,KAEhBh4B,EAAQ+oC,EAAI/Q,KAEe,aAAvB+Q,EAAI/Q,IAAIwS,YAIRzB,EAAIi0B,OAAO7J,iBAAiBpqB,EAAI/Q,IAAIi3B,QAG3Cr2C,MAAM+tD,KAGsCA,OAiKzD12C,KA7JJ,SAAczsB,EAAcwV,EAAqD9K,GAC7E,IAAMi6B,EAA4C8pB,GAAYna,KAExD+uB,EAA+CzoE,OAAO2E,KAAKolC,GAASnlC,QAAO,SAACC,EAAM+uD,GACpF,IAAMhnD,EAAwBm9B,EAAQ6pB,GAItC,OAHIhnD,GAAUA,EAAOgtB,IAAIx0B,OAASA,GAC9BP,EAAKnB,KAAKkJ,EAAOgtB,KAEd/0B,IACR,IAEH,GAAuB,mBAAZ+V,EACP,OAAO6tD,EAAkB,GAGzBA,EAAkBtnE,OAAS,EAC3ByZ,EAAQ6tD,EAAkB,IAEL,mBAAV34D,GACPA,EAAM,gCAAkC1K,IA2IhDsjE,SAtIJ,SAAkB9+D,EAAYgR,EAAqD9K,GAC/E,IAAMi6B,EAA4C8pB,GAAYna,KACxD+uB,EAA+CzoE,OAAO2E,KAAKolC,GAASnlC,QAAO,SAACC,EAAM+uD,GACpF,IAAMhnD,EAAwBm9B,EAAQ6pB,GAItC,YAHsB,IAAXhnD,GAA0BA,EAAOgtB,IAAIhwB,KAAOA,GACnD/E,EAAKnB,KAAKkJ,EAAOgtB,KAEd/0B,IACR,IAEH,GAAuB,mBAAZ+V,EACP,OAAO6tD,EAAkB,GAGzBA,EAAkBtnE,OAAS,EAC3ByZ,EAAQ6tD,EAAkB,IAEL,mBAAV34D,GACPA,EAAM,mCAAqClG,IAqHnD8vC,KAhHJ,SAAc9+B,GACV,IAAMmvB,EAA4C8pB,GAAYna,KAExD+uB,EAA+CzoE,OAAO2E,KAAKolC,GAC5DzqB,KAAI,SAACxb,GACF,OAAOimC,EAAQjmC,GAAG81B,OAG1B,GAAuB,mBAAZhf,EACP,OAAO6tD,EAGX7tD,EAAQ6tD,IAqGRn8C,MAzMJ,WACI,OAAOu7C,GAyMPvN,cAAe6N,EACfA,cACAjC,gBAAiBkC,EACjBA,gBACAO,cA/FJ,SAAqB34D,GACjB,OAAO63D,EAAQvlE,MAAK,WAChB0iB,EAAY4jD,YAAY54D,OA8F5B64D,cA1FJ,SAAqB74D,GACjB,OAAO63D,EAAQvlE,MAAK,WAChB0iB,EAAY8jD,YAAY94D,OAyF5BiqC,0BArFJ,SAAmCjqC,GAC/B,OAAO63D,EAAQvlE,MAAK,WAChB,OAAO0iB,EAAYi1B,0BAA0BjqC,OAqFjD43D,aACI,OAAOA,EAAOH,WAElBsB,iBApFJ,SAA0B/4D,GACtB,IAAI0a,EAKJ,OAJAm9C,EAAQvlE,MAAK,WACTooB,EAAc1F,EAAY+jD,iBAAiB/4D,MAGxC,WACC0a,GACAA,MA6ERs+C,kBAxEJ,SAA2Bh5D,GACvB,IAAI0a,EAMJ,OAJAm9C,EAAQvlE,MAAK,WACTooB,EAAc1F,EAAYgkD,kBAAkBh5D,MAGzC,WACC0a,GACAA,MAgERu+C,QA3DJ,SAAiBj5D,GACb,IAAIk5D,EACAC,GAAe,EAQnB,OAPAtB,EAAQvlE,MAAK,WACL6mE,IAGJD,EAAYlkD,EAAYikD,QAAQj5D,OAG7B,WACHm5D,GAAe,EACXD,GACAA,MA+CR9M,cAzCJ,SAAuBgE,EAAkB7yD,GACrC,OAAOyX,EAAYo3C,cAAcgE,EAAU7yD,IAyC3C4uD,UAtCJ,SAAmBiE,EAAkB7yD,GACjC,OAAOyX,EAAYm3C,UAAUiE,EAAU7yD,SExLhC,eAxBf,aACY/M,aAAmC,GAqB/C,OAnBW4oE,wBAAP,SAAmBC,GACf7oE,KAAK8oE,QAAU9oE,KAAK8oE,QAAQl/D,OAAOi/D,IAGhCD,gBAAP,SAAW1yD,GACPlW,KAAK8oE,QAAQ5lE,KAAKgT,IAGtB1W,sBAAWopE,uBAAX,WACI,OAAO5oE,KAAK8oE,yCAGTF,kBAAP,SAAaC,GACT,OAAO7oE,KAAK8oE,QAAQl/D,OAAOi/D,IAGxBD,kBAAP,SAAaC,GACT,OAAO7oE,KAAK+oE,MAAMF,GAAW,UClBrC,IAAIxzD,GAAO,EAgBX,IChBIC,GACAC,GAEAC,MDaa,CACbE,UAVJ,WAEI,OADAL,IAAe,KAAPA,GAAc,OAAS,gBAU/BA,KANJ,SAAiBM,GACbN,GAAOM,ICdPC,GAAW,mEAMf,SAASC,KACLL,IAAW,EAGf,SAASM,GAAcC,GACnB,GAAKA,GAQL,GAAIA,IAAeT,GAAnB,CAIA,GAAIS,EAAWpV,SAAWiV,GAASjV,OAC/B,MAAM,IAAImG,MAAM,uCAAyC8O,GAASjV,OAAS,qCAAuCoV,EAAWpV,OAAS,gBAAkBoV,GAG5J,IAAIC,EAASD,EAAWE,MAAM,IAAIrM,QAAO,SAASsM,EAAMC,EAAKzQ,GAC1D,OAAOyQ,IAAQzQ,EAAI0Q,YAAYF,MAGlC,GAAIF,EAAOrV,OACP,MAAM,IAAImG,MAAM,uCAAyC8O,GAASjV,OAAS,yDAA2DqV,EAAOjR,KAAK,OAGtJuQ,GAAWS,EACXF,WAxBQP,KAAaM,KACbN,GAAWM,GACXC,MAwDZ,SAASQ,KACL,OAAIb,KAGJA,GAtBJ,WACSF,IACDQ,GAAcF,IAQlB,IALA,IAGIU,EAHAC,EAAcjB,GAASW,MAAM,IAC7BO,EAAc,GACdnT,EAAIoS,GAAeC,YAGhBa,EAAY5V,OAAS,GACxB0C,EAAIoS,GAAeC,YACnBY,EAAiBG,KAAKC,MAAMrT,EAAIkT,EAAY5V,QAC5C6V,EAAYtT,KAAKqT,EAAYI,OAAOL,EAAgB,GAAG,IAE3D,OAAOE,EAAYzR,KAAK,IAOb6R,IAcf,OAAiB,CACbE,WAlDJ,SAAoBf,GAEhB,OADAD,GAAcC,GACPT,IAiDPD,KA9CJ,SAAiBA,GACbI,GAAeJ,KAAKA,GAChBE,KAAiBF,IACjBQ,KACAN,GAAeF,IA2CnB0B,OARJ,SAAgBlH,GAEZ,OADuBwG,KACCxG,IAOxB2F,SAAUa,IC9FVW,GAA2B,iBAAX5K,SAAwBA,OAAO4K,QAAU5K,OAAO6K,UAWpE,OATA,WACI,IAAKD,KAAWA,GAAOG,gBACnB,OAAyC,GAAlCV,KAAKC,MAAsB,IAAhBD,KAAKW,UAE3B,IAAIC,EAAO,IAAIC,WAAW,GAE1B,OADAN,GAAOG,gBAAgBE,GACN,GAAVA,EAAK,ICQhB,OAdA,SAAgBN,EAAQS,GAMpB,IALA,IACI3V,EADA4V,EAAc,EAGdC,EAAM,IAEF7V,GACJ6V,GAAYX,EAAWS,GAAW,EAAIC,EAAgB,GAASuxD,MAC/DnnE,EAAO2V,EAAUf,KAAKkB,IAAI,GAAIF,EAAc,GAC5CA,IAEJ,OAAOC,GCCX,ICDIW,GAGAC,MDVJ,SAAgBlP,GACZ,IAAI0N,EAAaxB,GAASE,WAC1B,MAAO,CACHrD,QAA+C,GAAtC2E,EAAWe,QAAQzO,EAAGkJ,OAAO,EAAG,IACzCZ,OAA8C,GAAtCoF,EAAWe,QAAQzO,EAAGkJ,OAAO,EAAG,MCmChD,OAvBA,SAAeiG,GAEX,IAAIb,EAAM,GAENe,EAAUhC,KAAKC,MAAmC,MAA5B3S,KAAKkB,MApBjB,gBAoCd,OAdIwT,IAAYH,GACZD,MAEAA,GAAU,EACVC,GAAkBG,GAGtBf,GAAYuxD,GAAO3zD,GAASyB,OAzBlB,GA0BVW,GAAYuxD,GAAO3zD,GAASyB,OAAQwB,GAChCF,GAAU,IACVX,GAAYuxD,GAAO3zD,GAASyB,OAAQsB,KAExCX,GAAYuxD,GAAO3zD,GAASyB,OAAQ0B,ICxBxC,OAfA,SAAmBrP,GACf,IAAKA,GAAoB,iBAAPA,GAAmBA,EAAGzI,OAAS,EAC7C,OAAO,EAKX,IAFA,IAAImW,EAAaxB,GAASwB,aACtBiB,EAAM3O,EAAGzI,OACLH,EAAI,EAAGA,EAAIuX,EAAIvX,IACnB,IAAmC,IAA/BsW,EAAWe,QAAQzO,EAAG5I,IACtB,OAAO,EAGf,OAAO,+ECHX,IAAI+X,EAAyD,EAyC7D,SAASC,IACP,OAAO0wD,GAAM3wD,GAIfL,UAAiBM,EACjBN,mBAA0BM,EAC1BN,eAxCA,SAAcQ,GAEV,OADApD,GAASD,KAAKqD,GACPR,EAAOC,SAuClBD,iBA9BA,SAAgBS,GAEZ,OADAJ,EAAkBI,EACXT,EAAOC,SA6BlBD,qBArBA,SAAoBU,GAKhB,YAJsBxN,IAAlBwN,GACAtD,GAASwB,WAAW8B,GAGjBtD,GAASE,YAiBpB0C,iBAAwBW,GACxBX,kBAAyBJ,2EC/DRqxD,kBCab,WAAoB/iC,EAAiCgjC,EAAuDp6D,GAAxFhP,SAAAomC,EAAiCpmC,sBAAAopE,EAAuDppE,eAAAgP,EAFpGhP,gCAA4B,EA8DxC,OAzDWqpE,4BAAP,SAAuB75D,GAKnB,OAJKxP,KAAKspE,4BACNtpE,KAAKupE,yBACLvpE,KAAKspE,2BAA4B,GAE9BtpE,KAAKgP,UAAUO,IAAI,gBAAiBC,IAGvC65D,4BAAR,WAEI,GAA6B,oBAAlBptB,cAA+B,CACtC,IAAMutB,EAAUvtB,cAAc4hB,aAC9B,OAAO2L,GAAWA,EAAQ/gB,MAAQ+gB,EAAQ/gB,KAAKC,gBAInD,IAAMpjB,EAAatlC,KAAKopE,mBACxB,IAAK9jC,EACD,OAAO,EAGX,IAAKA,EAAWue,WACZ,OAAO,EAGX,IAAMgkB,EAAWviC,EAAWud,GAAGz2C,OACzBuuC,EAAarV,EAAWud,GAAGxa,SAEjC,SAAKsS,IAAektB,IAKZltB,EAAWjN,MAActkC,KAAQy+D,EAAiBz+D,IAGtDigE,mCAAR,WAAA,WACIrpE,KAAKomC,IAAIrP,SAlDa,yBAkDmB,SAACI,GACtC,IAAMsyC,EAAoDthE,EAAK6G,UAAUc,QAAQ,gBAAiBqnB,GAAM,GACxG,IAAKsyC,EACD,MAAO,GAGXA,EAAcC,gBAAkBD,EAAcC,iBAAmB,GACjED,EAAcE,cAAgBF,EAAcE,eAAiB,GAG7D,IAAM/nE,EAA6C,CAAE+nE,cAAeF,EAAcE,cAAeD,qBAAiBt+D,GAOlH,OAJIjD,EAAKyhE,oBACLhoE,EAAO8nE,gBAAkBD,EAAcC,iBAGpC9nE,oBCnEKioE,GAAmBC,GACvC,IAAKA,EACD,OAAOA,EAGX,GAAInqE,MAAMmG,QAAQgkE,GACd,OAAOA,EAAUhrD,KAAI,SAAC5I,GAClB,OAAO2zD,GAAmB3zD,MAIlC,GAAyB,iBAAd4zD,GAA+C,iBAAdA,GAA+C,kBAAdA,EACzE,OAAOA,EAIX,OAAOtqE,OAAO2E,KAAK2lE,GAAW1lE,QAAO,SAAC2lE,EAAaj3C,GAC/C,IACMk3C,EAAiBH,GADTC,EAAUh3C,IAGpBxuB,EAAMwuB,EAMV,OALIA,EAAQ,GAAG9mB,gBAAkB8mB,EAAQ,KACrCxuB,EAAMwuB,EAAQ,GAAG9mB,cAAgB8mB,EAAQxgB,OAAO,IAGpDy3D,EAAYzlE,GAAO0lE,EACZD,IAX6B,ICjB5C,OAgBI,SAAYj4D,GACR9R,KAAK4E,KAAOkN,EAAKlN,KACjB5E,KAAK6D,KAAOiO,EAAKjO,KACjB7D,KAAKiqE,WAAan4D,EAAKm4D,WACvBjqE,KAAK2E,QAAUmN,EAAKnN,QACpB3E,KAAKkqE,SAAWp4D,EAAKo4D,wBCRzB,WAAoBn9D,EAA8Cwf,EAA+Bvd,GAA7EhP,YAAA+M,EAA8C/M,YAAAusB,EAA+BvsB,eAAAgP,EAC7FhP,KAAKyrD,WAAa1+C,EAAO0+C,WACzBzrD,KAAKyoE,QAAUl8C,EAAOk8C,QACtBzoE,KAAK0d,SAAW,IAAI2rD,GAAgBt8D,EAAOq5B,IAAKr5B,EAAOo9D,eAAgBn7D,GACvEud,EAAOvC,YA0ff,OAvfiBogD,6BAAb,SAA8BxlE,+FAC1B,SAAM5E,KAAK+M,OAAOq5B,IAAIjjB,OAAO,8BAA+B,CAAEve,iBAC9D,OADAuC,qBAISijE,+BAAb,uGACI,SAAMpqE,KAAK+M,OAAOq5B,IAAIjjB,OAAO,yCAC7B,OADAhc,qBAISijE,6BAAb,+GACmB,SAAMpqE,KAAK+M,OAAOq5B,IAAIjjB,OAAO,oCAE5C,OAFMvhB,EAASuF,UACT6sC,EAASpyC,EAAO4tB,UAIlBxvB,KAAKqqE,gBACEr2B,MAEJh0C,KAAKk5C,OAAO7nB,MAAK,SAACi5C,GAAM,OAAAA,EAAE1lE,OAASovC,EAAOpvC,MAAmB,WAAX0lE,EAAEzmE,iBALhDuH,WAQRg/D,kBAAP,WACI,MAAyB,qBAArBpqE,KAAK+M,OAAO2kC,KACL1xC,KAAKusB,OAAOg+C,YAEhBvqE,KAAKusB,OAAOT,OAGhBs+C,iBAAP,SAAYp2B,GAAZ,WACI,OAAO,IAAI7yC,SAA+B,SAACC,EAASC,GAIhD,GAFA8G,EAAKqiE,qBAEAx2B,EAAOpvC,KACR,MAAMkC,MAAM,oCAGXktC,EAAOnwC,OACRmwC,EAAOnwC,KAAO,UAGdmwC,EAAO1tB,aACP0tB,EAAOnwC,KAAO,iBAGiB,IAAxBmwC,EAAOy2B,eACdz2B,EAAOy2B,cAAe,GAG1B,IAAMC,EAAqC,CACvC9lE,KAAMovC,EAAOpvC,KACb+lE,OAAQ,GACRC,OAAQ,GACR/mE,KAAMmwC,EAAOnwC,KACbc,QAASqvC,EAAOrvC,QAChBulE,SAAUl2B,EAAOk2B,UAAY,GAC7B3hE,QAAS,CAAEsiE,0BAA0B,IAGzC,GAAoB,aAAhB72B,EAAOnwC,KAAqB,CAC5B,IAAI67C,EAAQ1L,EAAO1tB,WACnB,IAAKo5B,EAAO,CACR,IAAKv3C,EAAKsjD,WAAWwB,WAAWpJ,WAC5B,MAAM,IAAI/8C,MAAM,+EAEpB44C,EAAQv3C,EAAKsjD,WAAWwB,WAAW3mC,WAGvCokD,EAAaC,OAAOznE,KAAKw8C,GACzBgrB,EAAaniE,QAAU,CAAEsiE,0BAA0B,OAChD,CAAA,GAAoB,WAAhB72B,EAAOnwC,KAiCd,MAAM,IAAIiD,MAAM,eAAiBktC,EAAOnwC,KAAO,kBAhC/C,GAAmC,IAA/BsE,EAAK4E,OAAOi3C,eAAsB,CAClC,IAAIT,EAAmBp7C,EAAKsjD,WAAWlI,YAEnCvP,EAAOy2B,eACPlnB,EAAYA,EAAU35C,QAAO,SAACpJ,GAAM,OAAA2H,EAAK2iE,gBAAgBtqE,OAGzDwzC,EAAO+2B,kBAAoB5iE,EAAKsjD,WAAWwB,aAC3C1J,EAAYA,EAAU35C,QAAO,SAACpJ,GAAM,OAAAA,EAAE4I,KAAOjB,EAAKsjD,WAAWwB,WAAW7jD,OAG5Em6C,EAAUn/C,QAAO,SAACyuB,EAAMC,GACpB,IAAKA,EAAQ1pB,GACT,OAAOypB,EAGX,GAAIC,EAAQ+wB,WAAY,CACpB,IAAMnE,EAAQ5sB,EAAQxM,YAEc,IAAhCuM,EAAK83C,OAAO9yD,QAAQ6nC,IACpB7sB,EAAK83C,OAAOznE,KAAKw8C,QAGrB7sB,EAAK+3C,OAAO1nE,KAAK4vB,EAAQ1pB,IAG7B,OAAOypB,IACR63C,QAEHA,EAAaM,iBAAkB,EAMvC7iE,EAAK8iE,qBAAqB,qBAAsBP,EAActpE,EAASC,OAIxE+oE,oBAAP,SAAe7hE,GAAf,WACI,OAAO,IAAIpH,SAAc,SAACC,EAASC,GAG/B,GAFA8G,EAAKqiE,yBAEkB,IAAZjiE,EACP,MAAMzB,MAAM,gCAGhB,IAAKyB,EAAQ3D,KACT,MAAMkC,MAAM,qCAGXyB,EAAQ1E,OACT0E,EAAQ1E,KAAO,UAGf0E,EAAQ2iE,mBACR3iE,EAAQ1E,KAAO,iBAGyB,IAAjC0E,EAAQ4iE,uBACf5iE,EAAQ4iE,sBAAuB,QAGc,IAAtC5iE,EAAQ6iE,4BACf7iE,EAAQ6iE,0BAA4B,SAGE,IAA/B7iE,EAAQyjC,qBACfzjC,EAAQyjC,oBAAqB,QAIW,IAAjCzjC,EAAQ8iE,uBACM,WAAjB9iE,EAAQ1E,KACR0E,EAAQ8iE,sBAAuB,EACP,aAAjB9iE,EAAQ1E,OAEf0E,EAAQ8iE,sBAAuB,SAIH,IAAzB9iE,EAAQ+iE,eACf/iE,EAAQ+iE,cAAe,GAG3B/iE,EAAQ5D,QAAU4D,EAAQ5D,SAAW,GAErC,IAAM4mE,EAAgC,CAClCC,eAAgB,CACZC,eAAgBljE,EAAQ2iE,iBACxBl/B,mBAAoBzjC,EAAQyjC,mBAC5Bo/B,0BAA2B7iE,EAAQ6iE,0BACnCD,qBAAsB5iE,EAAQ4iE,qBAC9BO,gBAAiBnjE,EAAQ8iE,qBACzBM,qBAAsBpjE,EAAQ+iE,eAIhClkC,EAAyB,CAC3BvjC,KAAM0E,EAAQ1E,KACde,KAAM2D,EAAQ3D,KACdD,QAAS4D,EAAQ5D,QACjBinE,QAAS,GACTC,OAAQtjE,EAAQsjE,QAKe,IAA/B1jE,EAAK4E,OAAOi3C,gBACRz7C,EAAQ8iE,uBACRjkC,EAAIwkC,QAAUzjE,EAAK2jE,oBAAoBvjE,IAI3CA,EAAQumB,UACRsY,EAAItY,QAAUvmB,EAAQumB,SAG1BsY,EAAIziC,QAAQ8jD,KAAO8iB,EAEnBpjE,EAAK8iE,qBAAqB,wBAAyB7jC,EAAKhmC,EAASC,GAAQ,OAI1E+oE,mBAAP,SAAcvmE,EAAce,GAA5B,WACI,OAAO,IAAIzD,SAAc,SAACC,EAASC,GAG/B,GAFA8G,EAAKqiE,qBAEA5lE,EACD,MAAMkC,MAAM,6BAGhB,IAAKjD,EACD,MAAMiD,MAAM,6BAGhB,IAAMV,EAA8B,CAChCvC,OACAe,QAGJuD,EAAK8iE,qBAAqB,uBAAwB7kE,EAAKhF,EAASC,OAIjE+oE,iBAAP,WAEI,OADApqE,KAAKwqE,oBACEuB,GAAMhtD,KAGVqrD,mBAAP,SAActB,EAAkCp3B,GAAhD,WACI,OAAO,IAAIvwC,SAAc,SAACC,EAASC,GAC/B8G,EAAKqiE,oBAEL,IAAMpkE,EAAwB,CAC1BsrC,KAAMA,GAAQ,UACdo3B,WAGJ3gE,EAAK8iE,qBAAqB,wBAAyB7kE,EAAKhF,EAASC,OAIlE+oE,mBAAP,WAAA,WACI,OAAO,IAAIjpE,SAAiC,SAACC,EAASC,GAMlD8G,EAAK8iE,qBAAqB,wBAAyB,IAL9B,SAACrpE,GAClB,IAAMknE,EAAmC3gE,EAAK6jE,gBAAgBpqE,EAAOqqE,SAASntD,KAAI,SAACxe,GAAM,OAAA,IAAI4rE,GAAWrC,GAAmBvpE,OAC3Hc,EAAQ0nE,KAGyDznE,GAAQ,OAI9E+oE,mBAAP,SAAcp2B,EAA+Bm4B,GAA7C,WACI,OAAO,IAAIhrE,SAAc,SAACC,EAASC,GAG/B,GAFA8G,EAAKqiE,qBAEAx2B,EACD,MAAMltC,MAAM,+BAGhB,IAAKktC,EAAOpvC,KACR,MAAMkC,MAAM,6BAGhB,IAAKktC,EAAOnwC,KACR,MAAMiD,MAAM,6BAGhB,IAAMV,EAAwB,CAAEvC,KAAMmwC,EAAOnwC,KAAMuoE,QAASp4B,EAAOpvC,KAAMunE,WAEzEhkE,EAAK8iE,qBAAqB,uBAAwB7kE,EAAKhF,EAASC,OAIjE+oE,2BAAP,SAAsBp2B,GAAtB,WACI,OAAO,IAAI7yC,SAAQ,SAACC,EAASC,GACzB,IAAK2yC,EACD,MAAMltC,MAAM,+BAGhB,IAAKktC,EAAOpvC,KACR,MAAMkC,MAAM,6BAGhB,IAAKktC,EAAOnwC,KACR,MAAMiD,MAAM,6BAGhB,IAAKktC,EAAOk2B,SACR,MAAMpjE,MAAM,iCAGhB,IAAM4jE,EAAoB,CACtB9lE,KAAMovC,EAAOpvC,KACbf,KAAMmwC,EAAOnwC,KACbqmE,SAAUl2B,EAAOk2B,UAGrB/hE,EAAK8iE,qBAAqB,yBAA0BP,EAActpE,EAASC,GAAQ,OAIpF+oE,sBAAP,SAAiBxlE,EAAc2D,GAA/B,WACI,OAAO,IAAIpH,SAAQ,SAACC,EAASC,GACzB,IAAKuD,EACD,OAAOvD,EAAO,wBAGlB,IAAMmzB,EAAoC,CACtC5vB,OACAf,KAAM,SACNc,SAJJ4D,EAAUA,GAAW,IAIA5D,SAAW,GAC5BulE,SAAU3hE,EAAQ2hE,UAAY,IAElC/hE,EAAK8iE,qBAAqB,0BAA2Bz2C,EAASpzB,EAASC,GAAQ,OAIhF+oE,mBAAP,SAAcxlE,EAAcD,EAAe4D,GAA3C,WACI,OAAO,IAAIpH,SAAQ,SAACC,EAASC,GACzB,IAAKuD,EACD,OAAOvD,EAAO,wBAElB,IAAMmzB,MACF5vB,OACAf,KAAM,SACNc,WACG4D,GAEPJ,EAAK8iE,qBAAqB,uBAAwBz2C,EAASpzB,EAASC,GAAQ,OAIvE+oE,6BAAb,+GACmB,SAAMpqE,KAAK+M,OAAOq5B,IAAIjjB,OAAO,2BAA4B,GAAI,OAAQ,CAAE+L,wBAAyB,eAE/G,OAFMttB,EAASuF,UACX6sC,EAASpyC,EAAO4tB,SAASwkB,SAIxBh0C,KAAKqqE,eAENr2B,EAASh0C,KAAKk5C,OAAO7nB,MAAK,SAACi5C,GAAM,OAAAA,EAAE1lE,OAASovC,EAAOpvC,MAAQ0lE,EAAEzmE,OAASmwC,EAAOnwC,YAE1EmwC,YANI5oC,WASRg/D,oBAAP,SAAe56D,GACX,IAAM5N,EAAS5B,KAAKgP,UAAUO,IAAI,QAASC,GAU3C,OARIu8D,GAAMhtD,IAAIpe,OAAS,GACnBorE,GAAMhtD,IAAI1Y,SAAQ,SAAC2tC,GACf,IACIxkC,EAASwkC,GACX,MAAO9jC,QAIVtO,GAGJwoE,sBAAP,SAAiB56D,GACb,OAAOxP,KAAKgP,UAAUO,IAAI,UAAWC,IAGlC46D,sBAAP,SAAiB56D,GACb,OAAOxP,KAAKgP,UAAUO,IAAI,UAAWC,IAGlC46D,uBAAP,SAAkB56D,GACd,OAAOxP,KAAKgP,UAAUO,IAAI,WAAYC,IAGnC46D,sBAAP,SAAiB56D,GACb,OAAOxP,KAAKgP,UAAUO,IAAI,UAAWC,IAGlC46D,oBAAP,SAAe56D,GACX,OAAOxP,KAAKusB,OAAOk8C,QAAQj5D,IAGxB46D,4BAAP,SAAuB56D,GACnB,OAAOxP,KAAK0d,SAAS2uD,gBAAgB78D,IAGlC46D,sCAAP,SAAiCzlE,GAAjC,WACI,OAAO,IAAIxD,SAAQ,SAACC,EAASC,GACrBsD,GAA8B,iBAAZA,GAClBtD,EAAO,6BAGX,IAAMmzB,EAA+C,CACjD7vB,QAFJA,EAAUA,MAAAA,EAAAA,EAAW,IAIrBwD,EAAK8iE,qBAAqB,uCAAwCz2C,EAASpzB,EAASC,GAAQ,OAI5F+oE,uBAAR,WACI,MAA4B,SAArBpqE,KAAK+M,OAAO2kC,MAGf04B,8BAAR,WACI,GAAIpqE,KAAKqqE,aACL,MAAMvjE,MAAM,0DAIZsjE,4BAAR,SAAwB97D,GAGpB,MAAkC,QAA9BA,EAAS4G,YAAYrR,MAAgD,SAA9ByK,EAAS4G,YAAYrR,OAI9B,aAA9ByK,EAAS4G,YAAYrR,SAIpByK,IAAaA,EAASlC,SAIpBkC,EAASlC,OAAO6iC,YAGnBm7B,iCAAR,SAA6BhyC,EAAoBjB,EAAkB/1B,EAAgCC,EAA4BirE,GAC3H,IACIC,EADAC,EAAsBF,EAGpBtvD,EAAQxE,KACd2e,EAAKna,MAAQA,EAEb,IAAMyvD,EAAe,WACbD,GAAuBD,GACvBnrE,EAAQmrE,IAIXD,GACDtsE,KAAKusB,OAAOy7C,QAAQhrD,GACflb,MAAK,WACF0qE,GAAsB,EACtBC,OAEHzyD,OAAM,SAAC9J,GACJ7O,EAAO6O,MAiBnBlQ,KAAK+M,OAAOq5B,IAAIjjB,OAAOiV,EAAYjB,EAAM,OAAQ,CAAEjI,wBAAyB,OACvEptB,MAdmB,SAACF,GAChBA,EAAO4tB,UACRnuB,EAAO,yBAA2B+2B,GAGlCx2B,EAAO4tB,SAASpa,QAAsC,YAA3BxT,EAAO4tB,SAASpa,QAAmD,mBAA3BxT,EAAO4tB,SAASpa,QACnF/T,EAAOO,EAAO4tB,UAGlB+8C,EAAY3qE,EAAO4tB,SACnBi9C,OAKCzyD,OAAM,SAAC9J,GAAa,OAAA7O,EAAO6O,OAG5Bk6D,gCAAR,SAA4B7hE,GAA5B,WACUg7C,EAA6C,GAC7CmpB,EAAW1sE,KAAKyrD,WAAWI,eAAejiD,QAAO,SAACrG,GAAW,OAAAA,EAAEopE,WAAS,GACxEC,EAAuBF,EAAWA,EAAS9nE,KAAO,aA6BxD,OA3BA5E,KAAKyrD,WAAWlI,YAAYl9C,SAAQ,SAAC7F,GAG7B2H,EAAKsjD,WAAWwB,YAAczsD,EAAE4I,KAAOjB,EAAKsjD,WAAWwB,WAAW7jD,IAKlE5I,EAAE0U,YAAYtQ,OAASgoE,GAKtBzkE,EAAK2iE,gBAAgBtqE,KAML,aAAjB+H,EAAQ1E,MACJrD,EAAE8lB,aAAe/d,EAAQ2iE,kBAIjC3nB,EAAUrgD,KAAK,CAAEgS,YAAa1U,EAAE0U,YAAYtQ,KAAM0J,SAAU9N,EAAE4I,SAG3Dm6C,GAGH6mB,4BAAR,SAAwBljD,GACpB,OAAKA,EAIE1nB,OAAO2E,KAAK+iB,GAAKpI,KAAI,SAACxb,GAAM,OAAA4jB,EAAI5jB,MAH5B,uBCjff,WAAoB8iC,EAAiCp3B,GAArD,WAAoBhP,SAAAomC,EAAiCpmC,eAAAgP,EAEjDhP,KAAK8rB,MAAQ,IAAI3qB,SAAc,SAACC,EAASC,GACrC8G,EAAK0kE,aAAezrE,EACpB+G,EAAK2kE,YAAczrE,KAGvBrB,KAAKuqE,YAAc,IAAIppE,SAAc,SAACC,EAASC,GAC3C8G,EAAK4kE,mBAAqB3rE,EAC1B+G,EAAK6kE,kBAAoB3rE,KAyKrC,OArKW4rE,sBAAP,SAAiBC,GAAjB,WACUC,EAAY,SAACjmD,GACf,OAAO/e,EAAK6jE,gBAAgB9kD,GAAKpI,KAAI,SAACxe,GAAM,OAAAupE,GAAmBvpE,OAI9DN,KAAKotE,4BAWNptE,KAAKomC,IAAIpc,UAAU,wBAAyB,CAAE2C,cAAe,MACxD7qB,MAAK,SAAC2d,GACHA,EAAKwe,QAAO,SAAC9G,GACT,IAAMrlB,EAAOqlB,EAAKrlB,KACdA,EAAKu7D,YACLllE,EAAK4kE,qBAGT5kE,EAAKmlE,WAAWH,EAAUr7D,EAAKy7D,gBAC/BplE,EAAKqlE,cAAcL,EAAUr7D,EAAK27D,kBAClCtlE,EAAKulE,cAAcP,EAAUr7D,EAAK67D,kBAClCxlE,EAAKylE,cAAcT,EAAUr7D,EAAK+7D,kBAClC1lE,EAAK2lE,eAAeX,EAAUr7D,EAAKi8D,mBACnC5lE,EAAK6G,UAAUc,QAAQ,cAAegC,MAG1C2N,EAAK8e,UAAS,SAACruB,GACX,IAAM9J,EAAM,8CAAgD8J,EAC5D/H,EAAK2kE,YAAY1mE,GACjB+B,EAAK6kE,kBAAkB5mE,MAG3B+B,EAAK0kE,kBAER7yD,OAAM,SAAC9J,GACJ,IAAM9J,EAAM,4DAA8D8J,EAC1E/H,EAAK2kE,YAAY1mE,GACjB+B,EAAK6kE,kBAAkB5mE,OApC3B8mE,GACAltE,KAAK6sE,eAIT55D,YAAW,WACP9K,EAAK6hB,WAAU,KAChB,OAkCJijD,oBAAP,SAAez9D,GACX,OAAOxP,KAAKgP,UAAUO,IAAI,cAAeC,IAGtCy9D,oBAAP,SAAejwD,EAAe8R,GAA9B,WAII,OAHKA,IACDA,EAAU,KAEP,IAAI3tB,SAAc,SAACC,EAASC,GAC/B,IAAIQ,GAAO,EACLqoB,EAAc/hB,EAAKsgE,SAAQ,SAACpE,GAC1BA,EAAY2J,QAAUhxD,IACtBnb,GAAO,EACPqoB,IACA9oB,QAIR6R,YAAW,WACFpR,GACDR,EAAO,eAEZytB,OAIHm+C,sCAAR,WACI,IACI,OAG2C,IAHpCjtE,KAAKomC,IACPnjB,UACAnE,KAAI,SAACxY,GAAM,OAAAA,EAAE1B,QACbiT,QAAQ,yBACf,MAAOnW,GACL,OAAO,IAIPurE,uBAAR,SAAmBgB,GAAnB,WACSA,GAILA,EAAY5nE,SAAQ,SAAC6nE,GACjB,IAAMl6B,EAAS,IAAIk4B,GAAWgC,GAC9BnC,GAAMx8D,IAAIykC,GACV7rC,EAAK6G,UAAUc,QAAQ,QAASkkC,OAIhCi5B,0BAAR,SAAsBkB,GAAtB,WACSA,GAGLA,EAAe9nE,SAAQ,SAAC+nE,GACpBrC,GAAMsC,aAAY,SAACC,GAAmB,OAACnmE,EAAKomE,eAAeD,EAAgBF,MAE3EjmE,EAAK6G,UAAUc,QAAQ,UAAWs+D,OAIlCnB,0BAAR,SAAsBuB,GAAtB,WACSA,GAILA,EAAenoE,SAAQ,SAACooE,GAEpB1C,GAAMsC,aAAY,SAACC,GAAmB,OAACnmE,EAAKomE,eAAeD,EAAgBG,MAC3E1C,GAAMx8D,IAAI,IAAI28D,GAAWuC,IAEzBtmE,EAAK6G,UAAUc,QAAQ,UAAW2+D,OAKlCxB,0BAAR,SAAsByB,GAAtB,WACSA,GAILA,EAAeroE,SAAQ,SAACsoE,GACpB,IAAML,EAAiBvC,GAAM6C,OAAM,SAAC97C,GAAY,OAAA3qB,EAAKomE,eAAez7C,EAAS,CAAEjvB,KAAM8qE,EAAc9qE,KAAMe,KAAM+pE,EAAcvC,aAE7H,IAAKkC,EACD,MAAMxnE,MAAM,sDAAwD6nE,EAAc9qE,KAAO,aAAe8qE,EAAcvC,SAG1HkC,EAAe1pE,KAAO+pE,EAAcxC,QAEpChkE,EAAK6G,UAAUc,QAAQ,UAAWw+D,OAIlCrB,2BAAR,SAAuB4B,EAAyCC,GAC5D,OAAOD,EAAQjqE,OAASkqE,EAAQlqE,MAAQiqE,EAAQhrE,OAASirE,EAAQjrE,MAG7DopE,4BAAR,SAAwB/lD,GACpB,OAAKA,EAIE1nB,OAAO2E,KAAK+iB,GAAKpI,KAAI,SAACxb,GAAM,OAAA4jB,EAAI5jB,MAH5B,IAMP2pE,2BAAR,SAAuB8B,GAAvB,WAESA,GAILA,EAAgB1oE,SAAQ,SAACynE,GACrB,IAAMQ,EAAiBvC,GAAM6C,OAAM,SAAC97C,GAAY,OAAA3qB,EAAKomE,eAAez7C,EAAS,CAAEjvB,KAAMiqE,EAAejqE,KAAMe,KAAMkpE,EAAelpE,UAC/HuD,EAAK6G,UAAUc,QAAQ,WAAYw+D,wBC7LvBvhE,GAEpB,IAAKA,EAAOq5B,IACR,MAAMt/B,MAAM,0BAGhB,IAAKiG,EAAO0D,OACR,MAAM3J,MAAM,6BAIhBiG,EAAO2kC,KAAO3kC,EAAO2kC,MAAQ,OAEd3kC,EAAO0D,OAAtB,IAGIu+D,EAFEhgE,EAA8Bw1D,KAUpC,OANIz3D,EAAO2kC,KACPs9B,EAAY,IAAI/B,GAAUlgE,EAAOq5B,IAAKp3B,GAKnC,IAAIi9D,GAAQl/D,EAAQiiE,EAAWhgE,GC7B1C,IAwDKigE,GCzDD7sC,GACA9d,MDGA,SACYknB,EACAhjB,GAFZ,WACYxoB,UAAAwrC,EACAxrC,aAAAwoB,EAKLxoB,SAAM,oGACQ,SAAMA,KAAKkvE,OAAkCD,GAAeE,OAAQ,YACrF,SADiBhoE,SACD2X,IAAI9e,KAAKovE,0BAGtBpvE,SAAM,SAAOoJ,kGACA,SAAMpJ,KAAKkvE,OAAgCD,GAAe5gC,IAAK,CAACjlC,eAChF,OADM4lD,EAAU7nD,YACTnH,KAAKovE,gBAAgBpgB,YAGzBhvD,gBAAa,oGACC,SAAMA,KAAK+e,cAC5B,SADiB5X,SAAkBkqB,MAAK,SAAC/xB,GAAM,OAAAA,EAAE+vE,sBAI9CrvE,aAAU,SAAOuI,4FACD,SAAMvI,KAAKkvE,OAAeD,GAAeK,cAAc/mE,YAC1E,SADmBpB,kBAIhBnH,gBAAa,SAAOuI,4FACH,SAAMvI,KAAKkvE,OAA0BD,GAAeM,iBAAiBhnE,YACzF,SADoBpB,kBAIjBnH,sBAAmB,oGACR,SAAMA,KAAKkvE,OAA8BD,GAAeO,0BACtE,SADcroE,kBAIVnH,YAAS,SAAUm/D,EAAiB52D,4FAEf,SAAMvI,KAAKwrC,KAAKroB,OA1CvB,uBA0CiD,CAAE5a,cAAaA,GAAU42D,oBAC5F,SADyBh4D,SACDqoB,SAAS1d,cAG7B9R,qBAAkB,SAACyvE,GACvB,gBACOA,IACHtT,QAAS,SAACwD,GAAsB,OAAAx3D,EAAKg0D,QAAQ,CAAE/yD,GAAIqmE,EAASrmE,GAAIu2D,uBCJtD+P,GAAcC,EAAkBvmE,+EAClDg5B,GAAQjf,OAAO,wBAAyB,CACpCysD,KAAMxmE,MAAAA,EAAAA,EAAMkb,GACZ66C,QAAS,gBACTrtD,KAAM,CAAE+9D,WAAYF,gBDO5B,SAAKV,GACDA,oBACAA,0BACAA,kBACAA,YACAA,sCALJ,CAAKA,KAAAA,QE1DL,kBAMI,WAAoBtpD,GAAA3lB,cAAA2lB,EAyExB,OAtEWmqD,sBAAP,SAAiBtgE,GACbxP,KAAKwP,SAAWA,GAGbsgE,yBAAP,SAAoBlrE,EAAc4K,GAC9B,IAAKxP,KAAK+vE,UAAUnrE,GAChB,OAAOzD,QAAQE,OAAO,IAAIyF,MAAM,sBAAsBlC,sBAG1D,IAAMqkB,EAAcjpB,KAAKgwE,kBAAkBprE,GAE3C,OAAO5E,KAAK2lB,SAASqE,UAAUf,GAAa,SAACnX,EAAM1P,EAAGrC,EAAIkwE,EAAKxlD,SAC3Djb,EAASsC,EAAKA,KAAMA,YAAM2Y,wBAAWX,eAIhCgmD,0BAAb,SAA2BlrE,8GAGA,OAFvB5E,KAAKkqB,cACCjB,EAAcjpB,KAAKgwE,kBAAkBprE,GAC3CuC,EAAAnH,QAA6BA,KAAK2lB,SAASqE,UAAUf,GAAa,SAACnX,EAAM1P,EAAGrC,EAAIkwE,EAAKxlD,SAC7EtiB,EAAKqH,UACLrH,EAAKqH,SAASsC,EAAKA,KAAMA,YAAM2Y,wBAAWX,6BAFlD3iB,EAAKszB,gBAAkB1sB,qBAOpB+hE,wBAAP,WACQ9vE,KAAKy6B,iBACLz6B,KAAKy6B,mBAINq1C,gBAAP,SAAWlrE,EAAckN,GACrB,IAAMmX,EAAcjpB,KAAKgwE,kBAAkBprE,GAC3C,OAAO5E,KAAK2lB,SAAS8B,IAAIwB,EAAanX,IAGnCg+D,gBAAP,WAII,OAHqB9vE,KAAK2lB,SAAS5G,MACMnV,QAAO,SAACqf,GAAgB,OAAAA,EAAYinD,WAhD9D,oBAiD0BpxD,KAAI,SAACqxD,GAAuB,OAAAA,EAAmB79D,OAjDzE,gBAiD+F3R,YAI3GmvE,2BAAP,SAAsBlrE,GAAtB,WACI,OAAO,IAAIzD,SAAQ,SAACC,EAASC,GACzB,IAAK8G,EAAK4nE,UAAUnrE,GAChB,OAAOvD,EAAO,IAAIyF,MAAM,wBAAwBlC,sBAGpD,IAAMqkB,EAAc9gB,EAAK6nE,kBAAkBprE,GAE3CuD,EAAKwd,SAASqE,UAAUf,GAAa,SAACnX,GAClC1Q,EAAQ0Q,MACThQ,MAAK,SAAC24B,GAAoB,OAAAA,WAI9Bq1C,mBAAP,SAAclrE,EAAckN,GACxB,IAAMmX,EAAcjpB,KAAKgwE,kBAAkBprE,GAC3C,OAAO5E,KAAK2lB,SAASpe,OAAO0hB,EAAanX,IAGrCg+D,8BAAR,SAA0BlrE,GACtB,MAzEe,gBAyESA,GAGpBkrE,sBAAR,SAAkBlrE,GACd,OAAO5E,KAAK+e,MAAM0X,MAAK,SAAC25C,GAAgB,OAAAA,IAAgBxrE,yBCnE5D,WAAoByrE,GAAArwE,YAAAqwE,EANZrwE,aAAU,OACVA,gBAAa,UAEbA,cAA6B4kD,KAIjC5kD,KAAKqwE,OAAOrmD,UAAUhqB,KAAK6hB,QAAQZ,KAAKjhB,OAiMhD,OA9LWswE,sBAAP,SAAiB9gE,GACb,GAAwB,mBAAbA,EACP,MAAM,IAAI1I,MAAM,8CAEpB,OAAO9G,KAAK0Q,SAASnB,IAAIvP,KAAKuwE,QAAS/gE,IAG9B8gE,yBAAb,SAA0B1rE,EAAc4K,+FACpC,GAAoB,iBAAT5K,EACP,MAAM,IAAIkC,MAAM,wCAEpB,GAAwB,mBAAb0I,EACP,MAAM,IAAI1I,MAAM,8CAEI,SAAM9G,KAAKqwE,OAAOG,aAAa5rE,EAAM4K,WAC7D,SADwBrI,kBAIfmpE,oBAAb,SAAqBx+D,EAAclN,qGAC/B,GAAoB,iBAATkN,EACP,MAAM,IAAIhL,MAAM,6CAGhBlC,EAAA,YACA,GAAoB,iBAATA,EACP,MAAM,IAAIkC,MAAM,wCAGJ,SAAM9G,KAAKkH,IAAItC,WAE/B,OAFM4kE,EAAUriE,YAETnH,KAAKqwE,OAAO9oE,OAAOiiE,EAAQ5kE,KAAM,CAAEkN,iBAG9C,IAAK9R,KAAKypB,eACN,MAAM,IAAI3iB,MAAM,8BAEpB,SAAO9G,KAAKqwE,OAAO9oE,OAAOvH,KAAKypB,eAAgB,CAAE3X,kBAG9Cw+D,gBAAP,WACI,IAAMG,EAAezwE,KAAKqwE,OAAOtxD,MACjC,OAAO5d,QAAQC,QAAQqvE,IAGdH,iBAAb,oHACyB,SAAMtwE,KAAK+e,cACR,OADlB0xD,EAAetpE,YACShG,QAAQ4d,IAAI0xD,EAAa3xD,KAAI,SAACsxD,GAAgB,OAAAjoE,EAAKjB,IAAIkpE,eACrF,SADwBjpE,kBAIrBmpE,gBAAP,SAAW1rE,GACP,MAAoB,iBAATA,EACAzD,QAAQE,OAAO,IAAIyF,MAAM,iDAG7B9G,KAAKqwE,OAAOK,eAAe9rE,IAGzB0rE,iBAAb,SAAkB1rE,wEACd,SAAO5E,KAAK2wE,SAAS/rE,WAGZ0rE,iCAAb,SAAkC1rE,wEAC9B,SAAO5E,KAAK2wE,SAAS/rE,GAAM,WAGxB0rE,kBAAP,WACI,OAAOtwE,KAAK4wE,aAGTN,kCAAP,WACI,OAAOtwE,KAAK4wE,WAAU,IAGnBN,oBAAP,WACI,OAAOtwE,KAAKypB,gBAGT6mD,eAAP,WACI,OAAOtwE,KAAK8yB,WAGTw9C,oBAAP,SAAe9gE,GACX,GAAwB,mBAAbA,EACP,MAAM,IAAI1I,MAAM,8CAGpB,OAAO9G,KAAK0Q,SAASnB,IAAIvP,KAAK6wE,WAAYrhE,IAGvC8gE,sBAAP,SAAiB9gE,GACb,OAAOxP,KAAK8wE,QAAQthE,IAGX8gE,gBAAb,SAAiB38D,qGACb,GAAoB,iBAATA,EACP,MAAM,IAAI7M,MAAM,yCAEpB,QAAyB,IAAd6M,EAAK/O,KACZ,MAAM,IAAIkC,MAAM,yBAEpB,GAAyB,iBAAd6M,EAAK/O,KACZ,MAAM,IAAIkC,MAAM,6CAEpB,QAAyB,IAAd6M,EAAKiuB,KACZ,MAAM,IAAI96B,MAAM,yBAEpB,GAAyB,iBAAd6M,EAAKiuB,KACZ,MAAM,IAAI96B,MAAM,8CAEpB,QAA+B,IAApB6M,EAAKiuB,KAAKuL,MACjB,MAAM,IAAIrmC,MAAM,+BAEpB,GAA+B,iBAApB6M,EAAKiuB,KAAKuL,MACjB,MAAM,IAAIrmC,MAAM,mDAUpB,OAPMnC,EAA0C,CAC5CC,KAAM+O,EAAK/O,KACXg9B,KAAMjuB,EAAKiuB,MAAQ,GACnB9vB,KAAM6B,EAAK7B,MAAQ,OAIjB9R,KAAKqwE,OAAO9oE,OAAOoM,EAAK/O,KAAMD,WAEpC,OAFAwC,YAEOxC,WAGH2rE,oBAAR,SAAgBx+D,EAAcnN,EAAyCmlB,GACnE9pB,KAAK0Q,SAASZ,QAAQ9P,KAAKuwE,QAASz+D,EAAMnN,EAASmlB,IAGzCwmD,qBAAd,SAAuB1rE,EAAcmsE,uBAAAA,wGACjC,GAAoB,iBAATnsE,EACP,MAAM,IAAIkC,MAAM,gDAGpB,OAAIlC,IAAS5E,KAAKypB,oBAMZunD,EAAmB,SAACZ,GAEtB,OADqBjoE,EAAKkoE,OAAOtxD,MACbkyD,SAASb,KAIXxrE,YACW,IAAIzD,SAAQ,SAACC,EAASC,GAC/C,IAAI89B,EAGE+xC,EAAargD,aAAY,WACvBmgD,EAAiBpsE,KACjBia,aAAasgB,GACbrO,cAAcogD,GACd9vE,OAEL,KAEH+9B,EAAYlsB,YAAW,WAGnB,OAFA6d,cAAcogD,GAEP7vE,EAAO,IAAIyF,MAAM,wBAAwBlC,wBACjD,gBAGPuC,0BAGJ,SAAMnH,KAAKqwE,OAAOX,cAAc9qE,kBAAhCuC,SACI4pE,GACArB,GAAc9qE,GAElB5E,KAAKypB,eAAiB7kB,EACtB5E,KAAK0Q,SAASZ,QAAQ9P,KAAK6wE,WAAYjsE,eAGnC0rE,sBAAR,SAAkBS,GAOd,oBAPcA,MACd/wE,KAAKypB,oBAAiBre,EACtBpL,KAAK0Q,SAASZ,QAAQ9P,KAAK6wE,gBAAYzlE,GACvCpL,KAAKqwE,OAAOnmD,cACR6mD,GACArB,KAEGvuE,QAAQC,yBCvMPmxC,GAAQ5sB,EAA+BygB,GACnD,IAAM+qC,EAAiB,IAAIrB,GAAwBnqD,GAC7CyrD,EAAW,IAAId,GAAaa,GAIlC,gBHL2BE,EAAgCD,wFAS3D,OARAhvC,GAAUivC,EAEY,oBAAXjlE,QACHA,OAAOO,WACP2X,GAAWlY,OAAOO,SAAS2X,UAI9BA,MAKC8d,GAAQrL,SAAS,wBAAwB,SAACI,GAC5C,IAAMgoC,EAAUhoC,EAAKgoC,QACrB,IAAKA,EACD,MAAM,IAAIr4D,MAAM,4BAEpB,GAAgB,SAAZq4D,EAAJ,CASA,GAAgB,UAAZA,EAAJ,CAIA,GAAgB,QAAZA,EAEA,MAAO,CAAE/1D,GADHA,EAAKgoE,EAASt+C,WAGxB,MAAM,IAAIhsB,MAAM,mBAAmBq4D,GAP/BiS,EAASE,4BAVb,CACI,IAAMloE,EACN,KADMA,EAAK+tB,EAAKw4C,SAEZ,MAAM,IAAI7oE,MAAM,uBAGpBsqE,EAASG,qBAAqBnoE,0BAXtCjC,SA0BAi7B,GAAQjf,OAAO,wBAAyB,CAAEysD,KAAMtrD,GAAUhW,SAAU8zB,GAAQ9zB,SAASA,sBGrCrFkjE,CAASprC,EAAKgrC,GAEP,CACHpnD,UAAWonD,EAASpnD,UAAU/I,KAAKmwD,GACnCZ,aAAcY,EAASZ,aAAavvD,KAAKmwD,GACzC3rD,QAAS2rD,EAAS3rD,QAAQxE,KAAKmwD,GAC/BryD,IAAKqyD,EAASryD,IAAIkC,KAAKmwD,GACvBl4B,KAAMk4B,EAASl4B,KAAKj4B,KAAKmwD,GACzBlqE,IAAKkqE,EAASlqE,IAAI+Z,KAAKmwD,GACvBrsE,KAAMqsE,EAASrsE,KAAKkc,KAAKmwD,GACzBx2D,MAAOw2D,EAASx2D,MAAMqG,KAAKmwD,GAE3Bt+C,QAASs+C,EAASt+C,QAAQ7R,KAAKmwD,GAC/BvuB,GAAIuuB,EAASvuB,GAAG5hC,KAAKmwD,GAErBN,QAASM,EAASN,QAAQ7vD,KAAKmwD,GAC/BK,UAAWL,EAASK,UAAUxwD,KAAKmwD,GAEnC7hE,IAAK6hE,EAAS7hE,IAAI0R,KAAKmwD,GAEvBtlD,MAAO,WAAM,OAACnG,EAAiBmG,UC1BvC,kBAaI,WAAoBsa,GAAApmC,SAAAomC,EAJZpmC,cAA6B4kD,KAC7B5kD,kBAAc,EACdA,aAAU,IAAI0xE,IAyF1B,OApFiBC,qBAAb,SAAsBh+D,EAA0CnE,qGAC5D,QAAoB,IAATmE,EACP,MAAM,IAAI7M,MAAM,4BAGpB,GAAoB,iBAAT6M,EACPA,EAAO,CACHi+D,OAAQj+D,OAET,CACH,IAAKA,EAAKi+D,OACN,MAAM,IAAI9qE,MAAM,mCAGpB6M,EAAO,CACHi+D,OAAQj+D,EAAKi+D,OACbltE,YAAaiP,EAAKjP,aAK1B,GADMmtE,EAAY7xE,KAAK8xE,aAAan+D,EAAKi+D,QACrC5xE,KAAK+xE,QAAQl9D,IAAIg9D,GACjB,MAAM,IAAI/qE,MAAM,gBAAgB+qE,gCAIhC7xE,KAAKgyE,aACLhyE,KAAKgyE,aAAc,KACbhyE,KAAKiyE,yCAAX9qE,0BAMJ,OAHAnH,KAAK0Q,SAASnB,IAAIsiE,EAAWriE,MAGvBxP,KAAKomC,IAAIjjB,OAlDD,sBAkDuB,CAAEg8C,QA/CvB,WA+CiDyS,OAAQC,EAAWntE,YAAaiP,EAAKjP,6BAAtGyC,SAEAnH,KAAK+xE,QAAQtqD,IAAIoqD,EAAWl+D,eAGnBg+D,uBAAb,SAAwBC,qGACpB,QAAsB,IAAXA,EACP,MAAM,IAAI9qE,MAAM,4BAGpB,GAAsB,iBAAX8qE,EACP,MAAM,IAAI9qE,MAAM,mCAIpB,OADM+qE,EAAY7xE,KAAK8xE,aAAaF,MAC9B5xE,KAAKomC,IAAIjjB,OAjED,sBAiEuB,CAAEg8C,QA7DrB,aA6DiDyS,OAAQC,mBAA3E1qE,SACAnH,KAAK+xE,QAAQG,OAAOL,GACpB7xE,KAAK0Q,SAASN,SAASyhE,eAGdF,0BAAb,uGACI,SAAM3xE,KAAKomC,IAAIjjB,OAvED,sBAuEuB,CAAEg8C,QAlElB,iCAkErBh4D,SACAnH,KAAK+xE,QAAQ5hE,QACbnQ,KAAK0Q,SAASP,oBAOXwhE,yBAAP,SAAoBC,GAChB,IAAMC,EAAY7xE,KAAK8xE,aAAaF,GACpC,OAAO5xE,KAAK+xE,QAAQl9D,IAAIg9D,IAGpBF,oCAAR,WAAA,WACI3xE,KAAKomC,IAAIrP,SArFI,sBAqFmB,SAACI,GAG7B,IAAM06C,EAAY16C,EAAK7yB,IAAI0H,cACrB2H,EAAOxL,EAAK4pE,QAAQ7qE,IAAI2qE,GAC9B1pE,EAAKuI,SAASZ,QAAQ+hE,EAAWl+D,OAIjCg+D,yBAAR,SAAqBC,GACjB,GAAIA,EACA,OAAOA,EAAOxS,QAAQ,MAAO,IAAIpzD,wBC/FzCo6B,GAEC+rC,eCCW5pE,GAyBZ,SAAS6pE,EAAwC7wE,EAAuB8wE,EAA+BC,GAGnG,GAAqB,kBAAV/wE,GAAwBA,EAAnC,CAKA,IAAMmwC,EAqBV,SAAS6gC,EAAgBhxE,EAAuB8wE,EAA+BC,GAE3E,GAAqB,iBAAV/wE,EAEP,OAAOgxE,EAAgBhxE,EAAMmwC,KAAM2gC,EAAaC,GAAY,GACzD,QAAqB,IAAV/wE,EAEd,MAA2B,kBAAhB8wE,GAA8BA,EAI9BA,EAAc,QAFrB,EAID,GAAqB,kBAAV9wE,EAEd,OAAIA,QAEsB6J,IAAbknE,EAA0BD,EAAcC,GAAY,QAG7D,EAIR,OAAO/wE,EAAQ,GA7CFgxE,CAAgBhxE,EAAO8wE,EAAaC,GAIjD,MAAqB,iBAAV/wE,GACPA,EAAMmwC,KAAOA,EACNnwC,GAGJ,CACHmwC,SA6CR,MAAO,CACHo3B,QAASsJ,EAA8B7pE,EAAQugE,QAHxB,QAIvBxjC,WAAY8sC,EAAwC7pE,EAAQ+8B,WANlC,iCAO1BmmB,WAAY2mB,EAA8B7pE,EAAQkjD,YAV/B,EACI,aAUvBliB,QAAS6oC,EAA8B7pE,EAAQghC,SAAS,GACxD6nC,SAAUgB,EAA8B7pE,EAAQ6oE,WAAY,GAAO,GACnExiB,SAAUwjB,EAA8B7pE,EAAQqmD,UAAU,MD/FlE,SAAKujB,GACDA,cACAA,gCACAA,eACAA,gBAJJ,CAAKA,KAAAA,QAYL,IAkEKK,GAlECC,GAAmD,GAEzD,SAAeC,GAAMl+C,wEAKjB,MAJuB,iBAAZA,IACPA,EAAU,CAAEm+C,OAAQn+C,OAGjBo+C,GAAwCT,GAAcU,MAAOr+C,UAGxE,SAAenD,GAAKyhD,wEAMhB,MAL4B,iBAAjBA,IACPA,EAAe,CAAEluE,KAAMkuE,OAIpBF,GAAkCT,GAAcY,KAAM,CAAED,wBAGnE,SAAeE,GAAcC,wEACzB,OAAKA,GAAsC,iBAAhBA,KAIpBL,GAAoCT,GAAce,cAAe,CAAED,oBAH/D9xE,QAAQE,OAAOyF,MAAM,kDAAkDmsE,WAMtF,SAAel0D,0EACX,SAAO6zD,GAAoCT,GAAchD,eAG7D,SAASgE,GAAkBR,EAAgB9wD,GAClC4wD,GAAgBE,KACjBF,GAAgBE,GAAU,IAG9B,IAAMS,EAAkB56D,KAGxB,OAFAi6D,GAAgBE,GAAQzvE,KAAK,CAAEkwE,UAAS5jE,SAAUqS,IAE3C,WACH4wD,GAAgBE,GAAUF,GAAgBE,GACrC/oE,QAAO,SAACssC,GAAM,OAAAA,EAAEk9B,UAAYA,MAIzC,SAAeR,GAAczT,EAAiB52D,+FAEjB,SAAM69B,GAAIjjB,OA/DX,sBA+DuC,CAAE5a,cAAcA,GAAW42D,oBAC1F,SADyBh4D,SACDqoB,SAAS5tB,eA6BrC,SAASyxE,GAAYl8C,SACTtzB,SAAM8uE,WAAQhuE,YAEtB,OAAQd,GACJ,KAAK2uE,GAAac,qBACd,IAAMtkE,YAAYyjE,GAAgBE,yBAAS7zD,KAAI,SAAC+C,GAAY,OAAAA,EAAQrS,YAEhER,GAAaA,EAAUrO,OAAS,GAChCqO,EAAU3I,SAAQ,SAAC0kC,GAAO,OAAAA,EAAGpmC,QAnB7C,SAAK6tE,GACDA,8CADJ,CAAKA,KAAAA,QElFL,kBAyBI,WAA0BjqE,GAAAvI,aAAAuI,EAFlBvI,eAA8BwkE,KAGlCxkE,KAAKuzE,QAAUhrE,EAAQgrE,QACvBvzE,KAAKgC,KAAOuG,EAAQvG,KACpBhC,KAAKwzE,MAAQjrE,EAAQirE,MACrBxzE,KAAK8R,KAAOvJ,EAAQuJ,KACpB9R,KAAKyzE,IAAMlrE,EAAQkrE,IACnBzzE,KAAKq6D,KAAO9xD,EAAQ8xD,KACpBr6D,KAAK0zE,MAAQnrE,EAAQmrE,MACrB1zE,KAAK2zE,KAAOprE,EAAQorE,KACpB3zE,KAAK4zE,SAAWrrE,EAAQqrE,SACxB5zE,KAAK6zE,mBAAqBtrE,EAAQsrE,mBAClC7zE,KAAK8zE,OAASvrE,EAAQurE,OACtB9zE,KAAKsa,IAAM/R,EAAQ+R,IACnBta,KAAK6L,UAAYtD,EAAQsD,UACzB7L,KAAKkM,MAAQ3D,EAAQ2D,MAoB7B,OAjBW6nE,kBAAP,WACI,MAAM,IAAIjtE,MAAM,4BAIbitE,6BAAP,SAAwBlwE,EAAW24C,EAAej0C,GAC9CvI,KAAKgP,UAAUO,IAAI1L,EAAM24C,IAItBu3B,gCAAP,SAA2BlwE,EAAW24C,EAAej0C,KAG9CwrE,0BAAP,SAAqBpkC,GAEjB,OADA3vC,KAAKgP,UAAUc,QAAQ6/B,EAAM9rC,KAAM8rC,IAC5B,sBCjDX,WAAoBvN,GAAApiC,aAAAoiC,EALZpiC,uBAA4B,EACnBA,gBAAa,6BAA+B8Y,KACrD9Y,YAAS,EACTA,mBAAsD,GAmHlE,OA9GiBg0E,kBAAb,SAAmBzrE,2HACf,IAAKA,EACD,MAAM,IAAIzB,MAAM,yCAEpB,IAAKyB,EAAQ2D,MACT,MAAM,IAAIpF,MAAM,8CAEf9G,KAAKi0E,0BACAj0E,KAAKoiC,QAAQrL,SAAS/2B,KAAKo4B,WAAYp4B,KAAKk0E,yBAAyBjzD,KAAKjhB,eAAhF+jB,SACA/jB,KAAKi0E,kBAAmB,mBAc5B,GAVM7qE,EAAKopB,OAAOxyB,KAAKk7B,UACjBi5C,EAAwC,CAC1CjoE,MAAO3D,EAAQ2D,MACfkoE,SAAU,SACV1vE,YAAa6D,EAAQvG,KACrBqyE,4BAA6Br0E,KAAKo4B,WAClCm7C,QAAS,GACThsD,OAAQne,GAGRb,EAAQgrE,QACR,eAAWtuC,GACP,IAAM9N,EAAqC,CACvCm9C,kBAAmBlrE,EACnBmrE,UAAWtvC,EAAOA,OAClBuvC,2BAAkBvvC,EAAO7C,8BAAS5kB,OAClCi3D,2BAAkBxvC,EAAO7C,8BAASx2B,QAGhCw+B,EAAa5qC,OAAO2E,KAAKgzB,GAAMrY,KAAI,SAACxa,GAEtC,MAAO,CACHM,KAAMN,EACN/C,MAAO,CACHmzE,YAJOv9C,EAAa7yB,QAS1BqwE,EAA4C,CAC9C/vE,KAAMob,EAAKoY,WACX1zB,YAAaugC,EAAO/4B,MACpBupB,YAAawP,EAAO/4B,MACpBk+B,cAGJ+pC,EAAaZ,QAAQrwE,KAAKyxE,eAzBTz3D,EAAA3U,EAAQgrE,QAARvjE,WAAAA,IAAVi1B,SAAAA,GA6Bf,SAAMjlC,KAAKoiC,QAAQjf,OAAO,oCAAqC,CAAEgxD,yBAIjE,OAJApwD,SAEM6wD,EAAkB,IAAIb,GAAmBxrE,GAC/CvI,KAAK60E,cAAczrE,GAAMwrE,KAClBA,WAGHZ,qCAAR,SAAiC78C,GAC7B,GAAIA,EAAKm9C,kBAAmB,CAExB,IAAMQ,EAAwC39C,EACxC/tB,EAAK0rE,EAAQR,kBAEnB,KADMH,EAAen0E,KAAK60E,cAAczrE,IAEpC,OAIJ,IAAM2rE,EAAQ,IAAIC,MAAM,YACvBD,EAA2C9vC,OAAS6vC,EAAQP,UACzDJ,EAAac,UACbd,EAAac,SAASF,GAI1B,IACMG,GADoBf,EAAaZ,SAAW,IAAIliD,MAAK,SAACnb,GAAS,OAAAA,EAAK+uB,SAAW6vC,EAAQP,aACtDnyC,QACnC8yC,GACAl1E,KAAKoiC,QAAQjf,OAAO+xD,EAAc13D,OAAQ03D,EAAcx0E,WAAa,GAAIw0E,EAActpE,QAAU,QAIrGuoE,EAAagB,cAAcJ,QACxB,GAAI59C,EAAKg9C,cAAgBh9C,EAAKg9C,aAAa5sD,OAAQ,CAEtD,IACM4sD,EADA/qE,EAAK+tB,EAAKg9C,aAAa5sD,OAE7B,KADM4sD,EAAen0E,KAAK60E,cAAczrE,IAEpC,OAIJ,IAAMgsE,EAAQ,IAAIJ,MAAM,WACpBb,EAAakB,SACblB,EAAakB,QAAQD,GAIzB,IAAME,EAAenB,EAAa5rE,QAAQ+sE,aACtCA,GACAt1E,KAAKoiC,QAAQjf,OAAOmyD,EAAa93D,OAAQ83D,EAAa50E,WAAa,GAAI40E,EAAa1pE,QAAU,QAIlGuoE,EAAagB,cAAcC,wBCpGnC,WAAoBG,GAAAv1E,UAAAu1E,EALZv1E,cAA6B4kD,KAMjC5kD,KAAKw1E,mBA6Db,OA1DiBC,iBAAb,uGACI,SAAMz1E,KAAKw1E,2BACX,GADAruE,UACKnH,KAAK01E,cACN,MAAM,IAAI5uE,MAAM,iBAEZ,SAAM9G,KAAK21E,iBAAnB,SAAQxuE,SAAqBqoB,SAASzQ,aAG7B02D,uBAAb,6GACI,SAAMz1E,KAAKw1E,2BACX,GADAruE,UACKnH,KAAK01E,cACN,MAAM,IAAI5uE,MAAM,iBAER,SAAM9G,KAAK21E,iBACvB,UADM52D,EAAM5X,UACDqoB,SAASzQ,IAAIsS,MAAK,SAAC/wB,GAAM,OAAAA,EAAEsE,OAASma,EAAIyQ,SAASomD,qBAGnDH,mBAAb,SAAoBI,+FAChB,SAAM71E,KAAKw1E,2BACX,GADAruE,UACKnH,KAAK81E,cACN,MAAM,IAAIhvE,MAAM,iBAGpB,SAAM9G,KAAKu1E,KAAKnzC,QAAQjf,OAAOnjB,KAAK81E,cAAe,CAAED,yBAArD1uE,qBAGGsuE,sBAAP,SAAiBjmE,GAEb,OADAxP,KAAKgqB,YACEhqB,KAAK0Q,SAASnB,IAAI,UAAWC,IAG1BimE,6BAAd,6GAEQ,6BAAIz1E,KAAK+1E,yBAGY/1E,KAAKu1E,KAAKnzC,QAAQjf,OAzDb,2CAyDpBpW,EAAS5F,SACfnH,KAAK+1E,kBAAoBhpE,EAAOyiB,SAASumD,kBACzC/1E,KAAK01E,cAAgB3oE,EAAOyiB,SAASwmD,oBACrCh2E,KAAK81E,cAAgB/oE,EAAOyiB,SAASymD,iCAErC,6CAIMR,mBAAd,uGACI,SAAMz1E,KAAKw1E,2BACJ,OADPruE,YACanH,KAAKu1E,KAAKnzC,QAAQjf,OAAkBnjB,KAAK01E,uBAAtD,SAAOvuE,kBAGGsuE,sBAAd,kHACI,SAAMz1E,KAAKw1E,kCAAXruE,SACAnH,KAAKu1E,KAAK5vD,SAASqE,UAAUhqB,KAAK+1E,mBAAmB,SAACjkE,GAC9CA,GAAQA,EAAKiN,KAAOjN,EAAK8jE,UACzBztE,EAAKuI,SAASZ,QAAQ,UAAWgC,EAAKiN,IAAIsS,MAAK,SAAC/wB,GAAM,OAAAA,EAAEsE,OAASkN,EAAK8jE,iCC3DtF,IAAMrjC,GAAU,SAAChqC,GACb,IASIo8C,EACAzb,EACAqU,EACA24B,EAZElyB,EAAiBhyC,GAAMC,oBAMvBs0B,EAAa3iB,GADnBrb,EAAUA,GAAW,IA8JrB,SAAS4tE,EAAapzD,EAAoBtS,EAA+B1D,GACrE,IAAMqpE,EAAY3lE,EAAOsN,UAAUgF,GAEnC,GAAIhW,GAAUA,EAAO0D,OAAQ,CACzB,IAAM4lE,EAAetpE,EAAO0D,OACxB4lE,EAAahnE,SACb+mE,EAAU1zD,aAAa2zD,EAAahnE,SAEpCgnE,EAAa5wD,SACb2wD,EAAU7zD,aAAa8zD,EAAa5wD,SAQ5C,OAAO2wD,EA7KX7tE,EAAQoc,QAAUpc,EAAQoc,SAAW,GAgLrC,IAAMb,EAA4B,CAE9B8B,KAAM,CACF,CAAEhhB,KAAM,UAAWzE,OAvK3B,SAAuBo1E,GACnB,GAAIhvC,EAAWgD,QAAS,CAEpB,IAAM+sC,EAAgBH,EAAa,UAAWZ,EAAK9kE,OAAQ81B,EAAWgD,SAUtE,OADAgtC,EAPAh5B,EAAWi5B,GACPjB,EAAKnvC,IACLkwC,GACA,WACI,OAAO3xB,IAEXX,IAEGzG,KA2JP,CAAE34C,KAAM,aAAczE,OAvJ9B,SAA0Bo1E,GACtB,GAAIhvC,EAAWjB,YACP4e,GAAeC,+BAAiCD,GAAeC,8BAA8BoxB,EAAKzoE,YAAa,CAE/G,IAAM2pE,EAAiBN,EAAa,WAAYZ,EAAK9kE,OAAQ81B,EAAWjB,YAqBxE,OADAixC,EAlBArtC,EAAY,IAAIgb,GAAe,CAC3Bp3C,WAAYyoE,EAAKzoE,WACjB6Y,SAAU4vD,EAAK5vD,SACfygB,IAAKmvC,EAAKnvC,IACV31B,OAAQgmE,EACR3yB,SAAU,OACVO,qBAAqB,EACrB7S,uBAAwB,SACxBiD,iBAAkB,KAClBlL,QAASgU,EACTyS,iBAAkB,WACd,OAAOrL,GAEXjT,KAAMnL,EAAWjB,WAAWoM,KAC5BE,aAAcrL,EAAWjB,WAAWsM,aACpCtrB,WAA8B,oBAAXla,QAA0BA,OAAOO,UAAYP,OAAOO,SAASinC,cAAgBxnC,OAAOO,SAASinC,aAAattB,WAC7H09B,mBACD7+B,KAEI+jB,KA+HX,CAAEtkC,KAAM,aAAczE,OA1H9B,SAA0Bo1E,GACtB,GAAKhvC,EAAWklB,WAAhB,CAIA,IAAMh7C,EAAS0lE,EAAa,aAAcZ,EAAK9kE,OAAQ81B,EAAWklB,YAYlE,OADA8qB,EARA5xB,EAAc+xB,GAAkB,CAC5BtwC,IAAKmvC,EAAKnvC,IACVmD,QAASgU,EACT9sC,SACA60B,WAAY4D,EACZwI,KAAMnL,EAAWklB,WAAW/Z,KAC5BsS,oBAGGW,KA0GH,CAAE//C,KAAM,UAAWzE,OAvG3B,SAAuBo1E,GACnB,GAAKhvC,EAAWuiC,QAAhB,CAIA,IAAMr4D,EAAS0lE,EAAa,UAAWZ,EAAK9kE,OAAQ81B,EAAWuiC,SACzD6N,EAAMC,GAAe,CACvBxwC,IAAKmvC,EAAKnvC,IACVqlB,WAAY9G,EACZwlB,eAAgB,WAAM,OAAAjhC,GACtBz4B,SACAihC,KAAMnL,EAAWuiC,QAAQp3B,KACzBsS,mBAGJ,OADAuyB,EAASI,GACFA,KAyFH,CAAE/xE,KAAM,WAAYzE,OAtF5B,SAAwBo1E,GACpB,GAAKhvC,EAAW6qC,UAIXmE,EAAK5vD,SAAV,CAMA,IAAMkxD,EAAczF,GAASmE,EAAK5vD,SAAU4vD,EAAKnvC,KAGjD,OADAmwC,EAASM,GACFA,KAyEH,CAAEjyE,KAAM,UAAWzE,OAtE3B,SAAuBo1E,GACnB,IAAMuB,WC5IU1wC,GACpB,IAAM2rC,EAAU,IAAIJ,GAAYvrC,GAEhC,MAAO,CACHrP,SAAUg7C,EAAQh7C,SAAS9V,KAAK8wD,GAChCp8C,WAAYo8C,EAAQp8C,WAAW1U,KAAK8wD,GACpCgF,cAAehF,EAAQgF,cAAc91D,KAAK8wD,GAC1CiF,aAAcjF,EAAQiF,aAAa/1D,KAAK8wD,GAExCjmD,MAAO,WAAM,OAAA3qB,QAAQC,YDmIF2wE,CAAQwD,EAAKnvC,KAGhC,OADAmwC,EAASO,GACFA,IAmEH,CAAElyE,KAAM,WAAYzE,OAlD5B,SAA2Bo1E,GACvB,GAAIhvC,EAAWqoB,SAAU,CACrB,IAAMqoB,EAAiBd,EAAa,WAAYZ,EAAK9kE,OAAQ81B,EAAWqoB,UAIxE,OADA2nB,EADAL,EAAY,IAAIgB,GAAe3B,EAAKnvC,IAAK6wC,IAElCf,KA6CP,CAAEtxE,KAAM,UAAWzE,OAjE3B,SAAuBo1E,GACnB,ILhFgB4B,EKgFVC,GLhFUD,EKgFW5B,EAAKnvC,KL/EpCA,GAAM+wC,GAEFpgD,SArEmB,qBAqEUs8C,IAE1B,CACHX,SACArhD,QACA2hD,iBACAj0D,OACAo0D,qBACArnD,MAAO,WAAM,OAAA3qB,QAAQC,aKwErB,OADAm1E,EAASa,GACFA,IA8DH,CAAExyE,KAAM,gBAAiBzE,OA3DjC,SAA6Bo1E,GACzB,IAAM8B,EAAmB,IAAIrD,GAAcuB,EAAKnzC,SAGhD,OADAm0C,EAASc,GACFA,IAwDH,CAAEzyE,KAAM,SAAUzE,OA3C1B,SAAsBo1E,GAClB,GAAKA,EAAK5vD,SAAV,CAIA,IAAM2xD,WE9KU/B,GACpB,IAAMgC,EAAS,IAAI9B,GAAWF,GAE9B,MAAO,CACHr8B,KAAMq+B,EAAOr+B,KAAKj4B,KAAKs2D,GACvBC,WAAYD,EAAOC,WAAWv2D,KAAKs2D,GACnCE,OAAQF,EAAOE,OAAOx2D,KAAKs2D,GAC3B9F,UAAW8F,EAAO9F,UAAUxwD,KAAKs2D,GACjCzrD,MAAO,WAAM,OAAA3qB,QAAQC,YFsKHm2E,CAAOhC,GAGzB,OADAgB,EAASe,GACFA,MAsCPnlE,gBAEA00B,WAAY,SAACZ,GAETA,EAAKl5B,OAAOu4B,WAAaiB,EAAWjB,WACpCW,EAAKl5B,OAAOw8B,QAAUhD,EAAWgD,QACjCtD,EAAKl5B,OAAO0+C,WAAallB,EAAWklB,WACpCxlB,EAAKl5B,OAAO+7D,QAAUviC,EAAWuiC,QACjC7iC,EAAKl5B,OAAOqkE,SAAW7qC,EAAW6qC,SAClCnrC,EAAKl5B,OAAO6hD,SAAWroB,EAAWqoB,WAIpC8oB,EAAoB,GAQ1B,SAASnB,EAASp8D,GACdu9D,EAAWx0E,KAAKiX,GAGpB,MAXsB,oBAAX/N,SACDA,OAAeurE,iBAChBvrE,OAAeurE,eAAiB,IAEpCvrE,OAAeurE,eAAez0E,KAAKw0E,IAOjCE,GAAYrvE,EAASub,OAGxBkiB,YAAe4xC,GAAoBzlE,WACnCA,gBGtPR,IAAI0lE,GAAeC,GACfC,IAAoB,EAExB,GAAsB,oBAAX3rE,OAAwB,CAE/B,IAAMO,GAAYP,OAAeO,SAC7BA,IAAYA,GAASqrE,eACrBH,GAAgBzrE,OAAe6rE,KAE/BF,IAAoB,GAGpBA,KACC3rE,OAAe6rE,KAAOJ,WAInBzrE,OAAes3B,gBAG1Bm0C,GAAqBxnE,QAAUwnE,GAEjBA"}